  I1109 12:12:00.748811      20 e2e.go:109] Starting e2e run "98b365e4-63ab-42b6-b105-558bed033cc2" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1731154320 - will randomize all specs

Will run 404 of 6605 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:154
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I1109 12:12:00.877851 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  I1109 12:12:00.878658 20 helper.go:48] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I1109 12:12:00.907411 20 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I1109 12:12:00.910924 20 e2e.go:153] 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  I1109 12:12:00.910959 20 e2e.go:245] e2e test version: v1.31.2
  I1109 12:12:00.911755 20 e2e.go:254] kube-apiserver version: v1.31.2
  I1109 12:12:00.911871 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  I1109 12:12:00.915762 20 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.038 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 11/09/24 12:12:01.031
  I1109 12:12:01.031986 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename webhook @ 11/09/24 12:12:01.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:12:01.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:12:01.055
  STEP: Setting up server cert @ 11/09/24 12:12:01.08
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/09/24 12:12:01.374
  STEP: Deploying the webhook pod @ 11/09/24 12:12:01.383
  STEP: Wait for the deployment to be ready @ 11/09/24 12:12:01.402
  I1109 12:12:01.410833 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I1109 12:12:03.422416 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 9, 12, 12, 1, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 9, 12, 12, 1, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 9, 12, 12, 1, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 9, 12, 12, 1, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 11/09/24 12:12:05.427
  STEP: Verifying the service has paired with the endpoint @ 11/09/24 12:12:05.447
  I1109 12:12:06.448277 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 11/09/24 12:12:06.455
  STEP: Creating a custom resource definition that should be denied by the webhook @ 11/09/24 12:12:06.469
  I1109 12:12:06.469558 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  I1109 12:12:06.528417 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9235" for this suite. @ 11/09/24 12:12:06.533
  STEP: Destroying namespace "webhook-markers-5705" for this suite. @ 11/09/24 12:12:06.541
â€¢ [5.521 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:393
  STEP: Creating a kubernetes client @ 11/09/24 12:12:06.552
  I1109 12:12:06.552630 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename kubectl @ 11/09/24 12:12:06.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:12:06.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:12:06.574
  STEP: creating all guestbook components @ 11/09/24 12:12:06.578
  I1109 12:12:06.578245 20 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I1109 12:12:06.578375 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-5825 create -f -'
  I1109 12:12:06.673862 20 builder.go:146] stderr: ""
  I1109 12:12:06.673902 20 builder.go:147] stdout: "service/agnhost-replica created\n"
  I1109 12:12:06.673946 20 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I1109 12:12:06.674002 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-5825 create -f -'
  I1109 12:12:06.763687 20 builder.go:146] stderr: ""
  I1109 12:12:06.763742 20 builder.go:147] stdout: "service/agnhost-primary created\n"
  I1109 12:12:06.763787 20 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I1109 12:12:06.763849 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-5825 create -f -'
  I1109 12:12:06.862273 20 builder.go:146] stderr: ""
  I1109 12:12:06.862318 20 builder.go:147] stdout: "service/frontend created\n"
  I1109 12:12:06.862387 20 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I1109 12:12:06.862510 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-5825 create -f -'
  I1109 12:12:06.939076 20 builder.go:146] stderr: ""
  I1109 12:12:06.939112 20 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I1109 12:12:06.939181 20 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I1109 12:12:06.939370 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-5825 create -f -'
  I1109 12:12:07.014383 20 builder.go:146] stderr: ""
  I1109 12:12:07.014426 20 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I1109 12:12:07.014492 20 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I1109 12:12:07.014574 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-5825 create -f -'
  I1109 12:12:07.096833 20 builder.go:146] stderr: ""
  I1109 12:12:07.096881 20 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 11/09/24 12:12:07.096
  I1109 12:12:07.096922 20 kubectl.go:2272] Waiting for all frontend pods to be Running.
  I1109 12:12:17.149728 20 kubectl.go:2276] Waiting for frontend to serve content.
  I1109 12:12:17.161997 20 kubectl.go:2281] Trying to add a new entry to the guestbook.
  I1109 12:12:17.171503 20 kubectl.go:2286] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 11/09/24 12:12:17.177
  I1109 12:12:17.177970 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-5825 delete --grace-period=0 --force -f -'
  I1109 12:12:17.240691 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1109 12:12:17.240738 20 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 11/09/24 12:12:17.24
  I1109 12:12:17.240844 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-5825 delete --grace-period=0 --force -f -'
  I1109 12:12:17.300935 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1109 12:12:17.300969 20 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 11/09/24 12:12:17.301
  I1109 12:12:17.301081 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-5825 delete --grace-period=0 --force -f -'
  I1109 12:12:17.359868 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1109 12:12:17.359905 20 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 11/09/24 12:12:17.359
  I1109 12:12:17.360025 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-5825 delete --grace-period=0 --force -f -'
  I1109 12:12:17.407090 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1109 12:12:17.407126 20 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 11/09/24 12:12:17.407
  I1109 12:12:17.407263 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-5825 delete --grace-period=0 --force -f -'
  I1109 12:12:17.476978 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1109 12:12:17.477014 20 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 11/09/24 12:12:17.477
  I1109 12:12:17.477220 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-5825 delete --grace-period=0 --force -f -'
  I1109 12:12:17.526463 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1109 12:12:17.526513 20 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I1109 12:12:17.526650 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5825" for this suite. @ 11/09/24 12:12:17.53
â€¢ [10.983 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 11/09/24 12:12:17.536
  I1109 12:12:17.536363 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename configmap @ 11/09/24 12:12:17.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:12:17.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:12:17.56
  STEP: Creating configMap with name configmap-test-upd-7b1d4d58-e570-4f47-be87-c72d65b24c5a @ 11/09/24 12:12:17.565
  STEP: Creating the pod @ 11/09/24 12:12:17.569
  STEP: Waiting for pod with text data @ 11/09/24 12:12:25.599
  STEP: Waiting for pod with binary data @ 11/09/24 12:12:25.616
  I1109 12:12:25.622038 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8101" for this suite. @ 11/09/24 12:12:25.625
â€¢ [8.095 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 11/09/24 12:12:25.631
  I1109 12:12:25.631925 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename cronjob @ 11/09/24 12:12:25.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:12:25.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:12:25.649
  STEP: Creating a ReplaceConcurrent cronjob @ 11/09/24 12:12:25.651
  STEP: Ensuring a job is scheduled @ 11/09/24 12:12:25.658
  STEP: Ensuring exactly one is scheduled @ 11/09/24 12:13:01.662
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 11/09/24 12:13:01.665
  STEP: Ensuring the job is replaced with a new one @ 11/09/24 12:13:01.668
  STEP: Removing cronjob @ 11/09/24 12:14:01.673
  I1109 12:14:01.682755 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6293" for this suite. @ 11/09/24 12:14:01.686
â€¢ [96.067 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 11/09/24 12:14:01.698
  I1109 12:14:01.698689 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename secrets @ 11/09/24 12:14:01.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:14:01.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:14:01.72
  I1109 12:14:01.759154 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-251" for this suite. @ 11/09/24 12:14:01.762
â€¢ [0.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 11/09/24 12:14:01.768
  I1109 12:14:01.768495 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename projected @ 11/09/24 12:14:01.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:14:01.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:14:01.784
  STEP: Creating configMap with name projected-configmap-test-volume-6df1611b-6afa-498f-860f-07a0897f5c1a @ 11/09/24 12:14:01.786
  STEP: Creating a pod to test consume configMaps @ 11/09/24 12:14:01.791
  STEP: Saw pod success @ 11/09/24 12:14:05.813
  I1109 12:14:05.816690 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-projected-configmaps-9801c3a2-d32a-44bc-826f-3d0c5feeb3ef container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 11/09/24 12:14:05.835
  I1109 12:14:05.853366 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9896" for this suite. @ 11/09/24 12:14:05.857
â€¢ [4.095 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 11/09/24 12:14:05.864
  I1109 12:14:05.864027 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename runtimeclass @ 11/09/24 12:14:05.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:14:05.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:14:05.888
  I1109 12:14:05.900431 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2642" for this suite. @ 11/09/24 12:14:05.904
â€¢ [0.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 11/09/24 12:14:05.911
  I1109 12:14:05.911085 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename watch @ 11/09/24 12:14:05.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:14:05.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:14:05.943
  STEP: creating a watch on configmaps with a certain label @ 11/09/24 12:14:05.946
  STEP: creating a new configmap @ 11/09/24 12:14:05.947
  STEP: modifying the configmap once @ 11/09/24 12:14:05.953
  STEP: changing the label value of the configmap @ 11/09/24 12:14:05.961
  STEP: Expecting to observe a delete notification for the watched object @ 11/09/24 12:14:05.969
  I1109 12:14:05.970070 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7287  a5534f3c-afdc-445d-806b-a74ade0659ac 4727 0 2024-11-09 12:14:05 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-11-09 12:14:05 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1109 12:14:05.970343 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7287  a5534f3c-afdc-445d-806b-a74ade0659ac 4728 0 2024-11-09 12:14:05 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-11-09 12:14:05 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1109 12:14:05.970424 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7287  a5534f3c-afdc-445d-806b-a74ade0659ac 4729 0 2024-11-09 12:14:05 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-11-09 12:14:05 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 11/09/24 12:14:05.97
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 11/09/24 12:14:05.978
  STEP: changing the label value of the configmap back @ 11/09/24 12:14:15.978
  STEP: modifying the configmap a third time @ 11/09/24 12:14:15.987
  STEP: deleting the configmap @ 11/09/24 12:14:15.995
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 11/09/24 12:14:16.002
  I1109 12:14:16.002109 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7287  a5534f3c-afdc-445d-806b-a74ade0659ac 4792 0 2024-11-09 12:14:05 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-11-09 12:14:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1109 12:14:16.002215 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7287  a5534f3c-afdc-445d-806b-a74ade0659ac 4793 0 2024-11-09 12:14:05 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-11-09 12:14:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1109 12:14:16.002298 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7287  a5534f3c-afdc-445d-806b-a74ade0659ac 4794 0 2024-11-09 12:14:05 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-11-09 12:14:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1109 12:14:16.002420 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7287" for this suite. @ 11/09/24 12:14:16.005
â€¢ [10.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 11/09/24 12:14:16.013
  I1109 12:14:16.013775 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename pods @ 11/09/24 12:14:16.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:14:16.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:14:16.033
  STEP: Saw pod success @ 11/09/24 12:14:22.088
  I1109 12:14:22.092347 20 output.go:196] Trying to get logs from node ip-172-31-94-169 pod client-envvars-04e59051-5b99-4f4b-b777-90e050fee08b container env3cont: <nil>
  STEP: delete the pod @ 11/09/24 12:14:22.102
  I1109 12:14:22.114801 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2557" for this suite. @ 11/09/24 12:14:22.117
â€¢ [6.110 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 11/09/24 12:14:22.124
  I1109 12:14:22.124467 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename configmap @ 11/09/24 12:14:22.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:14:22.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:14:22.14
  I1109 12:14:22.177940 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7370" for this suite. @ 11/09/24 12:14:22.18
â€¢ [0.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:814
  STEP: Creating a kubernetes client @ 11/09/24 12:14:22.186
  I1109 12:14:22.186253 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename webhook @ 11/09/24 12:14:22.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:14:22.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:14:22.203
  STEP: Setting up server cert @ 11/09/24 12:14:22.225
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/09/24 12:14:22.397
  STEP: Deploying the webhook pod @ 11/09/24 12:14:22.407
  STEP: Wait for the deployment to be ready @ 11/09/24 12:14:22.419
  I1109 12:14:22.427666 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/09/24 12:14:24.439
  STEP: Verifying the service has paired with the endpoint @ 11/09/24 12:14:24.45
  I1109 12:14:25.450804 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 11/09/24 12:14:25.458
  I1109 12:14:25.502452 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7912" for this suite. @ 11/09/24 12:14:25.505
  STEP: Destroying namespace "webhook-markers-2249" for this suite. @ 11/09/24 12:14:25.514
â€¢ [3.335 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 11/09/24 12:14:25.521
  I1109 12:14:25.521293 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename daemonsets @ 11/09/24 12:14:25.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:14:25.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:14:25.536
  STEP: Creating simple DaemonSet "daemon-set" @ 11/09/24 12:14:25.557
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/09/24 12:14:25.562
  I1109 12:14:25.566492 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-177 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 12:14:25.566540 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-95-130 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 12:14:25.569458 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1109 12:14:25.569487 20 fixtures.go:130] Node ip-172-31-26-237 is running 0 daemon pod, expected 1
  I1109 12:14:26.568092 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-177 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 12:14:26.568150 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-95-130 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 12:14:26.573103 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1109 12:14:26.573196 20 fixtures.go:130] Node ip-172-31-26-237 is running 0 daemon pod, expected 1
  I1109 12:14:27.567036 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-177 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 12:14:27.567116 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-95-130 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 12:14:27.570456 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1109 12:14:27.570595 20 fixtures.go:130] Node ip-172-31-26-237 is running 0 daemon pod, expected 1
  I1109 12:14:28.567408 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-177 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 12:14:28.567454 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-95-130 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 12:14:28.570374 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1109 12:14:28.570395 20 fixtures.go:130] Node ip-172-31-26-237 is running 0 daemon pod, expected 1
  I1109 12:14:29.566974 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-177 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 12:14:29.567040 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-95-130 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 12:14:29.569771 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1109 12:14:29.569794 20 fixtures.go:130] Node ip-172-31-94-169 is running 0 daemon pod, expected 1
  I1109 12:14:30.567998 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-177 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 12:14:30.568054 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-95-130 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 12:14:30.570665 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1109 12:14:30.570687 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 11/09/24 12:14:30.574
  I1109 12:14:30.591850 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-177 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 12:14:30.591892 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-95-130 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 12:14:30.595549 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1109 12:14:30.595565 20 fixtures.go:130] Node ip-172-31-65-76 is running 0 daemon pod, expected 1
  I1109 12:14:31.595103 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-177 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 12:14:31.595151 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-95-130 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 12:14:31.599103 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1109 12:14:31.599130 20 fixtures.go:130] Node ip-172-31-65-76 is running 0 daemon pod, expected 1
  I1109 12:14:32.590823 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-177 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 12:14:32.590899 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-95-130 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 12:14:32.594767 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1109 12:14:32.594789 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 11/09/24 12:14:32.597
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1842, will wait for the garbage collector to delete the pods @ 11/09/24 12:14:32.597
  I1109 12:14:32.657122 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 6.422785ms
  I1109 12:14:32.757263 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.134949ms
  I1109 12:14:36.861969 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1109 12:14:36.862004 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1109 12:14:36.865754 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"5106"},"items":null}

  I1109 12:14:36.869749 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"5106"},"items":null}

  I1109 12:14:36.882089 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1842" for this suite. @ 11/09/24 12:14:36.885
â€¢ [11.371 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 11/09/24 12:14:36.892
  I1109 12:14:36.892214 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename webhook @ 11/09/24 12:14:36.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:14:36.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:14:36.907
  STEP: Setting up server cert @ 11/09/24 12:14:36.928
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/09/24 12:14:37.319
  STEP: Deploying the webhook pod @ 11/09/24 12:14:37.325
  STEP: Wait for the deployment to be ready @ 11/09/24 12:14:37.337
  I1109 12:14:37.347000 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/09/24 12:14:39.357
  STEP: Verifying the service has paired with the endpoint @ 11/09/24 12:14:39.37
  I1109 12:14:40.370882 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1109 12:14:40.379289 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4762-crds.webhook.example.com via the AdmissionRegistration API @ 11/09/24 12:14:40.888
  STEP: Creating a custom resource that should be mutated by the webhook @ 11/09/24 12:14:40.909
  I1109 12:14:43.487501 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9007" for this suite. @ 11/09/24 12:14:43.492
  STEP: Destroying namespace "webhook-markers-5961" for this suite. @ 11/09/24 12:14:43.5
â€¢ [6.615 seconds]
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 11/09/24 12:14:43.507
  I1109 12:14:43.507245 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename deployment @ 11/09/24 12:14:43.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:14:43.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:14:43.526
  I1109 12:14:43.537810 20 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  I1109 12:14:48.543679 20 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/09/24 12:14:48.543
  I1109 12:14:48.543752 20 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  I1109 12:14:50.548730 20 deployment.go:921] Creating deployment "test-rollover-deployment"
  I1109 12:14:50.557557 20 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  I1109 12:14:52.563324 20 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I1109 12:14:52.571282 20 deployment.go:943] Ensure that both replica sets have 1 created replica
  I1109 12:14:52.577922 20 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I1109 12:14:52.586996 20 deployment.go:313] Updating deployment test-rollover-deployment
  I1109 12:14:52.587025 20 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  I1109 12:14:54.594409 20 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I1109 12:14:54.600880 20 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I1109 12:14:54.607268 20 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1109 12:14:54.607317 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.November, 9, 12, 14, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 9, 12, 14, 50, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 9, 12, 14, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 9, 12, 14, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1109 12:14:56.616122 20 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1109 12:14:56.616183 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.November, 9, 12, 14, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 9, 12, 14, 50, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 9, 12, 14, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 9, 12, 14, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1109 12:14:58.615766 20 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1109 12:14:58.615826 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.November, 9, 12, 14, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 9, 12, 14, 50, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 9, 12, 14, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 9, 12, 14, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1109 12:15:00.616368 20 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1109 12:15:00.616452 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.November, 9, 12, 14, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 9, 12, 14, 50, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 9, 12, 14, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 9, 12, 14, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1109 12:15:02.616479 20 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1109 12:15:02.616530 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.November, 9, 12, 14, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 9, 12, 14, 50, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 9, 12, 14, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 9, 12, 14, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1109 12:15:04.616157 20 deployment.go:94] 
  I1109 12:15:04.616200 20 deployment.go:974] Ensure that both old replica sets have no replicas
  I1109 12:15:04.626217 20 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1412",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9f64c8b3-d792-4bc2-afbd-627ecd043ca5",
      ResourceVersion: (string) (len=4) "5374",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866751290,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751292,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751290,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751290,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751290,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5f974d7468\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1109 12:15:04.630645 20 deployment.go:39] New ReplicaSet "test-rollover-deployment-5f974d7468" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1412",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a5e9d9c7-7c2b-4955-919d-1819d6bcd6dc",
      ResourceVersion: (string) (len=4) "5364",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866751292,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "9f64c8b3-d792-4bc2-afbd-627ecd043ca5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751292,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 66 36 34 63 38  62 33 2d 64 37 39 32 2d  |\"9f64c8b3-d792-|
              00000120  34 62 63 32 2d 61 66 62  64 2d 36 32 37 65 63 64  |4bc2-afbd-627ecd|
              00000130  30 34 33 63 61 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |043ca5\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1109 12:15:04.631153 20 deployment.go:44] All old ReplicaSets of Deployment "test-rollover-deployment":
  I1109 12:15:04.631453 20 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1412",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9beeba61-0638-43fb-87c9-87f3788fef44",
      ResourceVersion: (string) (len=4) "5373",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866751283,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "9f64c8b3-d792-4bc2-afbd-627ecd043ca5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751283,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  39 66 36 34 63 38 62 33  2d 64 37 39 32 2d 34 62  |9f64c8b3-d792-4b|
              000000c0  63 32 2d 61 66 62 64 2d  36 32 37 65 63 64 30 34  |c2-afbd-627ecd04|
              000000d0  33 63 61 35 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |3ca5\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1109 12:15:04.632501 20 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-55f4dbffff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1412",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "599e38d3-959b-42bb-b34a-2fd68a764867",
      ResourceVersion: (string) (len=4) "5326",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866751290,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "9f64c8b3-d792-4bc2-afbd-627ecd043ca5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751292,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 66 36 34 63 38  62 33 2d 64 37 39 32 2d  |\"9f64c8b3-d792-|
              00000120  34 62 63 32 2d 61 66 62  64 2d 36 32 37 65 63 64  |4bc2-afbd-627ecd|
              00000130  30 34 33 63 61 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |043ca5\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751292,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1109 12:15:04.637331 20 deployment.go:67] Pod "test-rollover-deployment-5f974d7468-8vz7k" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5f974d7468-8vz7k",
      GenerateName: (string) (len=36) "test-rollover-deployment-5f974d7468-",
      Namespace: (string) (len=15) "deployment-1412",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "077cfa52-3b46-476e-9be4-067d2f77f237",
      ResourceVersion: (string) (len=4) "5342",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866751292,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
          UID: (types.UID) (len=36) "a5e9d9c7-7c2b-4955-919d-1819d6bcd6dc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751292,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 35  65 39 64 39 63 37 2d 37  |d\":\"a5e9d9c7-7|
              00000090  63 32 62 2d 34 39 35 35  2d 39 31 39 64 2d 31 38  |c2b-4955-919d-18|
              000000a0  31 39 64 36 62 63 64 36  64 63 5c 22 7d 22 3a 7b  |19d6bcd6dc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751293,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 38  37 2e 31 31 5c 22 7d 22  |2.168.187.11\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-znxwf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-znxwf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-94-169",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751293,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751292,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751293,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751293,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751292,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.94.169",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.94.169"
        }
      },
      PodIP: (string) (len=14) "192.168.187.11",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.187.11"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866751292,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63866751293,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://957c0d6aef894d08dcb955a6b0ab78a274ba5dd71fe9e7d45167cdef60c1b6d9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-znxwf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1109 12:15:04.638442 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1412" for this suite. @ 11/09/24 12:15:04.641
â€¢ [21.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:139
  STEP: Creating a kubernetes client @ 11/09/24 12:15:04.65
  I1109 12:15:04.650303 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename dns @ 11/09/24 12:15:04.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:15:04.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:15:04.667
  STEP: Creating a test headless service @ 11/09/24 12:15:04.672
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5808.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-5808.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5808.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-5808.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5808.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-5808.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5808.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-5808.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5808.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-5808.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5808.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-5808.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 172.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.172_udp@PTR;check="$$(dig +tcp +noall +answer +search 172.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.172_tcp@PTR;sleep 1; done
   @ 11/09/24 12:15:04.693
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5808.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5808.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5808.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5808.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5808.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-5808.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5808.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-5808.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5808.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-5808.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5808.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-5808.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 172.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.172_udp@PTR;check="$$(dig +tcp +noall +answer +search 172.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.172_tcp@PTR;sleep 1; done
   @ 11/09/24 12:15:04.693
  STEP: creating a pod to probe DNS @ 11/09/24 12:15:04.693
  STEP: submitting the pod to kubernetes @ 11/09/24 12:15:04.693
  STEP: retrieving the pod @ 11/09/24 12:15:10.744
  STEP: looking for the results for each expected name from probers @ 11/09/24 12:15:10.746
  I1109 12:15:10.751409 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-5808.svc.cluster.local from pod dns-5808/dns-test-4562b7a0-3800-4322-a261-7e142b781743: the server could not find the requested resource (get pods dns-test-4562b7a0-3800-4322-a261-7e142b781743)
  I1109 12:15:10.755468 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-5808.svc.cluster.local from pod dns-5808/dns-test-4562b7a0-3800-4322-a261-7e142b781743: the server could not find the requested resource (get pods dns-test-4562b7a0-3800-4322-a261-7e142b781743)
  I1109 12:15:10.758819 20 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-5808.svc.cluster.local from pod dns-5808/dns-test-4562b7a0-3800-4322-a261-7e142b781743: the server could not find the requested resource (get pods dns-test-4562b7a0-3800-4322-a261-7e142b781743)
  I1109 12:15:10.762574 20 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5808.svc.cluster.local from pod dns-5808/dns-test-4562b7a0-3800-4322-a261-7e142b781743: the server could not find the requested resource (get pods dns-test-4562b7a0-3800-4322-a261-7e142b781743)
  I1109 12:15:10.781311 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-5808.svc.cluster.local from pod dns-5808/dns-test-4562b7a0-3800-4322-a261-7e142b781743: the server could not find the requested resource (get pods dns-test-4562b7a0-3800-4322-a261-7e142b781743)
  I1109 12:15:10.784262 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-5808.svc.cluster.local from pod dns-5808/dns-test-4562b7a0-3800-4322-a261-7e142b781743: the server could not find the requested resource (get pods dns-test-4562b7a0-3800-4322-a261-7e142b781743)
  I1109 12:15:10.788167 20 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5808.svc.cluster.local from pod dns-5808/dns-test-4562b7a0-3800-4322-a261-7e142b781743: the server could not find the requested resource (get pods dns-test-4562b7a0-3800-4322-a261-7e142b781743)
  I1109 12:15:10.791407 20 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5808.svc.cluster.local from pod dns-5808/dns-test-4562b7a0-3800-4322-a261-7e142b781743: the server could not find the requested resource (get pods dns-test-4562b7a0-3800-4322-a261-7e142b781743)
  I1109 12:15:10.805107 20 dns_common.go:489] Lookups using dns-5808/dns-test-4562b7a0-3800-4322-a261-7e142b781743 failed for: [wheezy_udp@dns-test-service.dns-5808.svc.cluster.local wheezy_tcp@dns-test-service.dns-5808.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-5808.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-5808.svc.cluster.local jessie_udp@dns-test-service.dns-5808.svc.cluster.local jessie_tcp@dns-test-service.dns-5808.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-5808.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-5808.svc.cluster.local]

  I1109 12:15:10.811533 20 dns_common.go:495] Pod client logs for webserver: 
  I1109 12:15:10.817260 20 dns_common.go:495] Pod client logs for querier: 
  I1109 12:15:10.822111 20 dns_common.go:495] Pod client logs for jessie-querier: 
  I1109 12:15:15.819099 20 dns_common.go:527] DNS probes using dns-5808/dns-test-4562b7a0-3800-4322-a261-7e142b781743 succeeded

  STEP: deleting the pod @ 11/09/24 12:15:15.819
  STEP: deleting the test service @ 11/09/24 12:15:15.835
  STEP: deleting the test headless service @ 11/09/24 12:15:15.866
  I1109 12:15:15.879302 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5808" for this suite. @ 11/09/24 12:15:15.883
â€¢ [11.239 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:905
  STEP: Creating a kubernetes client @ 11/09/24 12:15:15.89
  I1109 12:15:15.890118 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename statefulset @ 11/09/24 12:15:15.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:15:15.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:15:15.907
  STEP: Creating service test in namespace statefulset-700 @ 11/09/24 12:15:15.91
  STEP: Creating statefulset ss in namespace statefulset-700 @ 11/09/24 12:15:15.914
  I1109 12:15:15.925263 20 wait.go:40] Found 0 stateful pods, waiting for 1
  I1109 12:15:25.926993 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 11/09/24 12:15:25.933
  STEP: updating a scale subresource @ 11/09/24 12:15:25.936
  STEP: verifying the statefulset Spec.Replicas was modified @ 11/09/24 12:15:25.943
  STEP: Patch a scale subresource @ 11/09/24 12:15:25.946
  STEP: verifying the statefulset Spec.Replicas was modified @ 11/09/24 12:15:25.954
  I1109 12:15:25.960482 20 statefulset.go:138] Deleting all statefulset in ns statefulset-700
  I1109 12:15:25.965585 20 rest.go:150] Scaling statefulset ss to 0
  I1109 12:15:35.979010 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1109 12:15:35.981577 20 rest.go:88] Deleting statefulset ss
  I1109 12:15:36.000811 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-700" for this suite. @ 11/09/24 12:15:36.004
â€¢ [20.120 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 11/09/24 12:15:36.011
  I1109 12:15:36.011300 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename daemonsets @ 11/09/24 12:15:36.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:15:36.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:15:36.029
  STEP: Creating simple DaemonSet "daemon-set" @ 11/09/24 12:15:36.053
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/09/24 12:15:36.057
  I1109 12:15:36.060898 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-177 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 12:15:36.060938 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-95-130 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 12:15:36.063363 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1109 12:15:36.063378 20 fixtures.go:130] Node ip-172-31-26-237 is running 0 daemon pod, expected 1
  I1109 12:15:37.062384 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-177 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 12:15:37.062436 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-95-130 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 12:15:37.066284 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1109 12:15:37.066303 20 fixtures.go:130] Node ip-172-31-65-76 is running 0 daemon pod, expected 1
  I1109 12:15:38.062589 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-177 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 12:15:38.062646 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-95-130 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 12:15:38.065723 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1109 12:15:38.065755 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 11/09/24 12:15:38.069
  I1109 12:15:38.072981 20 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 11/09/24 12:15:38.073
  I1109 12:15:38.082427 20 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 11/09/24 12:15:38.082
  I1109 12:15:38.083875 20 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I1109 12:15:38.083948 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1109 12:15:38.084024 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1109 12:15:38.084081 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1109 12:15:38.084141 20 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1109 12:15:38.084256 20 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-1606 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1109 12:15:38.084335 20 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 11/09/24 12:15:38.084
  STEP: watching for the daemon set status to be patched @ 11/09/24 12:15:38.09
  I1109 12:15:38.091347 20 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I1109 12:15:38.091510 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1109 12:15:38.091594 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1109 12:15:38.091675 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1109 12:15:38.091831 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1109 12:15:38.091860 20 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-1606 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1109 12:15:38.091937 20 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1109 12:15:38.091956 20 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-1606 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I1109 12:15:38.091965 20 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 11/09/24 12:15:38.097
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1606, will wait for the garbage collector to delete the pods @ 11/09/24 12:15:38.097
  I1109 12:15:38.157960 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.737893ms
  I1109 12:15:38.258369 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.403975ms
  I1109 12:15:39.562699 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1109 12:15:39.562749 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1109 12:15:39.565060 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"5704"},"items":null}

  I1109 12:15:39.568337 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"5704"},"items":null}

  I1109 12:15:39.580479 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1606" for this suite. @ 11/09/24 12:15:39.583
â€¢ [3.577 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 11/09/24 12:15:39.588
  I1109 12:15:39.588409 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename init-container @ 11/09/24 12:15:39.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:15:39.601
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:15:39.604
  STEP: creating the pod @ 11/09/24 12:15:39.607
  I1109 12:15:39.607817 20 init_container.go:374] PodSpec: initContainers in spec.initContainers
  I1109 12:16:16.607407 20 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-39ee8ce7-55c4-4f31-afdb-64b466cb03c1", GenerateName:"", Namespace:"init-container-9689", SelfLink:"", UID:"9066d663-5411-46ca-9cd4-399aef0093e0", ResourceVersion:"5852", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 12, 15, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"607807616"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 12, 15, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005e5e90), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 12, 16, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005e5ef0), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-m2vsj", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0004e1380), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-m2vsj", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-m2vsj", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-m2vsj", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc002b5a828), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-65-76", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc005162e80), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc002b5a8b0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc002b5a8d0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc002b5a8d8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc002b5a8dc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0007bb810), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.November, 9, 12, 15, 40, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.November, 9, 12, 15, 39, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.November, 9, 12, 15, 39, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.November, 9, 12, 15, 39, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.November, 9, 12, 15, 39, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.65.76", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.65.76"}}, PodIP:"192.168.35.81", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.35.81"}}, StartTime:time.Date(2024, time.November, 9, 12, 15, 39, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0005760e0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000576150)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://58dbc09bb15b9b7b33fd4e212b2b6136ba0ab3b54c4587783234c04d66a7e978", Started:(*bool)(0xc002b5a98a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-m2vsj", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc0007bb830)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0004e1440), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc002b5a99d), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-m2vsj", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc0007bb840)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0004e1400), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc002b5a95f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-m2vsj", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc0007bb820)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I1109 12:16:16.607563 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9689" for this suite. @ 11/09/24 12:16:16.614
â€¢ [37.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:337
  STEP: Creating a kubernetes client @ 11/09/24 12:16:16.624
  I1109 12:16:16.624695 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename kubectl @ 11/09/24 12:16:16.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:16:16.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:16:16.653
  STEP: creating a replication controller @ 11/09/24 12:16:16.656
  I1109 12:16:16.656903 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-894 create -f -'
  I1109 12:16:16.742975 20 builder.go:146] stderr: ""
  I1109 12:16:16.743029 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 11/09/24 12:16:16.743
  I1109 12:16:16.743284 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-894 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1109 12:16:16.791414 20 builder.go:146] stderr: ""
  I1109 12:16:16.791467 20 builder.go:147] stdout: "update-demo-nautilus-crvhb update-demo-nautilus-m822r "
  I1109 12:16:16.791518 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-894 get pods update-demo-nautilus-crvhb -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1109 12:16:16.835327 20 builder.go:146] stderr: ""
  I1109 12:16:16.835372 20 builder.go:147] stdout: ""
  I1109 12:16:16.835382 20 kubectl.go:2502] update-demo-nautilus-crvhb is created but not running
  I1109 12:16:21.836414 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-894 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1109 12:16:21.882179 20 builder.go:146] stderr: ""
  I1109 12:16:21.882278 20 builder.go:147] stdout: "update-demo-nautilus-crvhb update-demo-nautilus-m822r "
  I1109 12:16:21.882399 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-894 get pods update-demo-nautilus-crvhb -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1109 12:16:21.927850 20 builder.go:146] stderr: ""
  I1109 12:16:21.927888 20 builder.go:147] stdout: "true"
  I1109 12:16:21.927938 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-894 get pods update-demo-nautilus-crvhb -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1109 12:16:21.972123 20 builder.go:146] stderr: ""
  I1109 12:16:21.972160 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1109 12:16:21.972172 20 kubectl.go:2393] validating pod update-demo-nautilus-crvhb
  I1109 12:16:21.976247 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1109 12:16:21.976299 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1109 12:16:21.976312 20 kubectl.go:2520] update-demo-nautilus-crvhb is verified up and running
  I1109 12:16:21.976358 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-894 get pods update-demo-nautilus-m822r -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1109 12:16:22.020152 20 builder.go:146] stderr: ""
  I1109 12:16:22.020191 20 builder.go:147] stdout: "true"
  I1109 12:16:22.020250 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-894 get pods update-demo-nautilus-m822r -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1109 12:16:22.065086 20 builder.go:146] stderr: ""
  I1109 12:16:22.065134 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1109 12:16:22.065146 20 kubectl.go:2393] validating pod update-demo-nautilus-m822r
  I1109 12:16:22.070129 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1109 12:16:22.070185 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1109 12:16:22.070200 20 kubectl.go:2520] update-demo-nautilus-m822r is verified up and running
  STEP: using delete to clean up resources @ 11/09/24 12:16:22.07
  I1109 12:16:22.070411 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-894 delete --grace-period=0 --force -f -'
  I1109 12:16:22.121675 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1109 12:16:22.121722 20 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I1109 12:16:22.121807 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-894 get rc,svc -l name=update-demo --no-headers'
  I1109 12:16:22.172602 20 builder.go:146] stderr: "No resources found in kubectl-894 namespace.\n"
  I1109 12:16:22.172642 20 builder.go:147] stdout: ""
  I1109 12:16:22.172698 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-894 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1109 12:16:22.219504 20 builder.go:146] stderr: ""
  I1109 12:16:22.219545 20 builder.go:147] stdout: ""
  I1109 12:16:22.219659 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-894" for this suite. @ 11/09/24 12:16:22.224
â€¢ [5.609 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 11/09/24 12:16:22.233
  I1109 12:16:22.233510 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename emptydir @ 11/09/24 12:16:22.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:16:22.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:16:22.254
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 11/09/24 12:16:22.256
  STEP: Saw pod success @ 11/09/24 12:16:28.289
  I1109 12:16:28.293075 20 output.go:196] Trying to get logs from node ip-172-31-94-169 pod pod-6dc37d17-4b4a-4730-ba1a-0b6bad5ac663 container test-container: <nil>
  STEP: delete the pod @ 11/09/24 12:16:28.301
  I1109 12:16:28.317785 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5251" for this suite. @ 11/09/24 12:16:28.321
â€¢ [6.094 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 11/09/24 12:16:28.327
  I1109 12:16:28.327732 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename emptydir @ 11/09/24 12:16:28.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:16:28.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:16:28.344
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 11/09/24 12:16:28.346
  STEP: Saw pod success @ 11/09/24 12:16:32.367
  I1109 12:16:32.371183 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-44a3266c-e2f2-4bc6-a415-39e57f037ee4 container test-container: <nil>
  STEP: delete the pod @ 11/09/24 12:16:32.378
  I1109 12:16:32.393591 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2338" for this suite. @ 11/09/24 12:16:32.396
â€¢ [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:104
  STEP: Creating a kubernetes client @ 11/09/24 12:16:32.403
  I1109 12:16:32.403585 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename resourcequota @ 11/09/24 12:16:32.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:16:32.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:16:32.422
  STEP: Counting existing ResourceQuota @ 11/09/24 12:16:32.424
  STEP: Creating a ResourceQuota @ 11/09/24 12:16:37.428
  STEP: Ensuring resource quota status is calculated @ 11/09/24 12:16:37.436
  STEP: Creating a Service @ 11/09/24 12:16:39.441
  STEP: Creating a NodePort Service @ 11/09/24 12:16:39.458
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 11/09/24 12:16:39.483
  STEP: Ensuring resource quota status captures service creation @ 11/09/24 12:16:39.501
  STEP: Deleting Services @ 11/09/24 12:16:41.504
  STEP: Ensuring resource quota status released usage @ 11/09/24 12:16:41.541
  I1109 12:16:43.546477 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1902" for this suite. @ 11/09/24 12:16:43.549
â€¢ [11.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 11/09/24 12:16:43.556
  I1109 12:16:43.556411 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename replication-controller @ 11/09/24 12:16:43.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:16:43.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:16:43.575
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 11/09/24 12:16:43.577
  STEP: When a replication controller with a matching selector is created @ 11/09/24 12:16:45.597
  STEP: Then the orphan pod is adopted @ 11/09/24 12:16:45.603
  I1109 12:16:46.612280 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1239" for this suite. @ 11/09/24 12:16:46.615
â€¢ [3.066 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 11/09/24 12:16:46.622
  I1109 12:16:46.622732 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename limitrange @ 11/09/24 12:16:46.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:16:46.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:16:46.638
  STEP: Creating LimitRange "e2e-limitrange-cq42p" in namespace "limitrange-5650" @ 11/09/24 12:16:46.641
  STEP: Creating another limitRange in another namespace @ 11/09/24 12:16:46.645
  I1109 12:16:46.659137 20 limit_range.go:299] Namespace "e2e-limitrange-cq42p-2286" created
  I1109 12:16:46.659161 20 limit_range.go:300] Creating LimitRange "e2e-limitrange-cq42p" in namespace "e2e-limitrange-cq42p-2286"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-cq42p" @ 11/09/24 12:16:46.665
  I1109 12:16:46.668543 20 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-cq42p" in "limitrange-5650" namespace @ 11/09/24 12:16:46.668
  I1109 12:16:46.675066 20 limit_range.go:335] LimitRange "e2e-limitrange-cq42p" has been patched
  STEP: Delete LimitRange "e2e-limitrange-cq42p" by Collection with labelSelector: "e2e-limitrange-cq42p=patched" @ 11/09/24 12:16:46.675
  STEP: Confirm that the limitRange "e2e-limitrange-cq42p" has been deleted @ 11/09/24 12:16:46.683
  I1109 12:16:46.683545 20 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I1109 12:16:46.687242 20 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-cq42p=patched"
  I1109 12:16:46.687261 20 limit_range.go:344] LimitRange "e2e-limitrange-cq42p" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-cq42p" @ 11/09/24 12:16:46.687
  I1109 12:16:46.690393 20 limit_range.go:350] Found 1 limitRange
  I1109 12:16:46.690553 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-5650" for this suite. @ 11/09/24 12:16:46.694
  STEP: Destroying namespace "e2e-limitrange-cq42p-2286" for this suite. @ 11/09/24 12:16:46.699
â€¢ [0.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 11/09/24 12:16:46.706
  I1109 12:16:46.706791 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename downward-api @ 11/09/24 12:16:46.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:16:46.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:16:46.722
  STEP: Creating a pod to test downward API volume plugin @ 11/09/24 12:16:46.725
  STEP: Saw pod success @ 11/09/24 12:16:50.759
  I1109 12:16:50.765828 20 output.go:196] Trying to get logs from node ip-172-31-94-169 pod downwardapi-volume-9d95eb74-8ad9-47c0-bd1a-65e1975f2ce8 container client-container: <nil>
  STEP: delete the pod @ 11/09/24 12:16:50.782
  I1109 12:16:50.803922 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6962" for this suite. @ 11/09/24 12:16:50.813
â€¢ [4.116 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 11/09/24 12:16:50.822
  I1109 12:16:50.822660 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename emptydir @ 11/09/24 12:16:50.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:16:50.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:16:50.844
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 11/09/24 12:16:50.848
  STEP: Saw pod success @ 11/09/24 12:16:54.873
  I1109 12:16:54.876131 20 output.go:196] Trying to get logs from node ip-172-31-94-169 pod pod-95a4779e-2ecf-4db4-b022-e09bcfc28846 container test-container: <nil>
  STEP: delete the pod @ 11/09/24 12:16:54.882
  I1109 12:16:54.903983 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2688" for this suite. @ 11/09/24 12:16:54.907
â€¢ [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:796
  STEP: Creating a kubernetes client @ 11/09/24 12:16:54.914
  I1109 12:16:54.915006 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename statefulset @ 11/09/24 12:16:54.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:16:54.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:16:54.932
  STEP: Creating service test in namespace statefulset-9812 @ 11/09/24 12:16:54.934
  STEP: Looking for a node to schedule stateful set and pod @ 11/09/24 12:16:54.94
  STEP: Creating pod with conflicting port in namespace statefulset-9812 @ 11/09/24 12:16:54.945
  STEP: Waiting until pod test-pod will start running in namespace statefulset-9812 @ 11/09/24 12:16:54.953
  STEP: Creating statefulset with conflicting port in namespace statefulset-9812 @ 11/09/24 12:16:56.959
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-9812 @ 11/09/24 12:16:56.964
  I1109 12:16:56.974769 20 statefulset.go:869] Observed stateful pod in namespace: statefulset-9812, name: ss-0, uid: af70eaf8-1b3b-4611-9c66-f33daee0d693, status phase: Pending. Waiting for statefulset controller to delete.
  I1109 12:16:56.995935 20 statefulset.go:869] Observed stateful pod in namespace: statefulset-9812, name: ss-0, uid: af70eaf8-1b3b-4611-9c66-f33daee0d693, status phase: Failed. Waiting for statefulset controller to delete.
  I1109 12:16:57.005204 20 statefulset.go:869] Observed stateful pod in namespace: statefulset-9812, name: ss-0, uid: af70eaf8-1b3b-4611-9c66-f33daee0d693, status phase: Failed. Waiting for statefulset controller to delete.
  I1109 12:16:57.007006 20 statefulset.go:863] Observed delete event for stateful pod ss-0 in namespace statefulset-9812
  STEP: Removing pod with conflicting port in namespace statefulset-9812 @ 11/09/24 12:16:57.007
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-9812 and will be in running state @ 11/09/24 12:16:57.025
  I1109 12:16:59.034445 20 statefulset.go:138] Deleting all statefulset in ns statefulset-9812
  I1109 12:16:59.038044 20 rest.go:150] Scaling statefulset ss to 0
  I1109 12:17:09.054357 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1109 12:17:09.058896 20 rest.go:88] Deleting statefulset ss
  I1109 12:17:09.071684 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9812" for this suite. @ 11/09/24 12:17:09.075
â€¢ [14.166 seconds]
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 11/09/24 12:17:09.08
  I1109 12:17:09.080995 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename container-runtime @ 11/09/24 12:17:09.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:17:09.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:17:09.1
  STEP: create the container @ 11/09/24 12:17:09.102
  W1109 12:17:09.111126      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 11/09/24 12:17:09.111
  STEP: get the container status @ 11/09/24 12:17:11.126
  STEP: the container should be terminated @ 11/09/24 12:17:11.13
  STEP: the termination message should be set @ 11/09/24 12:17:11.13
  I1109 12:17:11.130498 20 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 11/09/24 12:17:11.13
  I1109 12:17:11.148074 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-10" for this suite. @ 11/09/24 12:17:11.151
â€¢ [2.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 11/09/24 12:17:11.157
  I1109 12:17:11.157835 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 11/09/24 12:17:11.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:17:11.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:17:11.179
  STEP: creating a target pod @ 11/09/24 12:17:11.181
  STEP: adding an ephemeral container @ 11/09/24 12:17:13.203
  STEP: checking pod container endpoints @ 11/09/24 12:17:17.227
  I1109 12:17:17.227890 20 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-9242 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1109 12:17:17.227907 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  I1109 12:17:17.228415 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1109 12:17:17.228466 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-9242/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I1109 12:17:17.280716 20 exec_util.go:111] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 11/09/24 12:17:17.287
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 11/09/24 12:17:17.29
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 11/09/24 12:17:17.301
  I1109 12:17:17.304300 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-9242" for this suite. @ 11/09/24 12:17:17.307
â€¢ [6.158 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:57
  STEP: Creating a kubernetes client @ 11/09/24 12:17:17.315
  I1109 12:17:17.315668 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename volumeattachment @ 11/09/24 12:17:17.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:17:17.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:17:17.333
  STEP: Create VolumeAttachment "va-e2e-m7cvj" on node "ip-172-31-94-169" @ 11/09/24 12:17:17.339
  STEP: Get VolumeAttachment "va-e2e-m7cvj" on node "ip-172-31-94-169" @ 11/09/24 12:17:17.345
  STEP: Patch VolumeAttachment "va-e2e-m7cvj" on node "ip-172-31-94-169" @ 11/09/24 12:17:17.348
  STEP: List VolumeAttachments with "va-e2e-m7cvj=patched" label @ 11/09/24 12:17:17.352
  STEP: Delete VolumeAttachment "va-e2e-m7cvj" on node "ip-172-31-94-169" @ 11/09/24 12:17:17.354
  STEP: Confirm deletion of VolumeAttachment "va-e2e-m7cvj" on node "ip-172-31-94-169" @ 11/09/24 12:17:17.36
  STEP: Create VolumeAttachment "va-e2e-6w9w9" on node "ip-172-31-26-237" @ 11/09/24 12:17:17.364
  STEP: Update the VolumeAttachment "va-e2e-6w9w9" on node "ip-172-31-26-237" with label "va-e2e=updated" @ 11/09/24 12:17:17.37
  STEP: Create VolumeAttachment "va-e2e-mkdgn" on node "ip-172-31-94-169" @ 11/09/24 12:17:17.378
  STEP: Update the VolumeAttachment "va-e2e-mkdgn" on node "ip-172-31-94-169" with label "va-e2e=updated" @ 11/09/24 12:17:17.383
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 11/09/24 12:17:17.39
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 11/09/24 12:17:17.401
  I1109 12:17:17.404622 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-5184" for this suite. @ 11/09/24 12:17:17.407
â€¢ [0.101 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 11/09/24 12:17:17.416
  I1109 12:17:17.416918 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename crd-webhook @ 11/09/24 12:17:17.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:17:17.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:17:17.431
  STEP: Setting up server cert @ 11/09/24 12:17:17.433
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 11/09/24 12:17:17.736
  STEP: Deploying the custom resource conversion webhook pod @ 11/09/24 12:17:17.742
  STEP: Wait for the deployment to be ready @ 11/09/24 12:17:17.754
  I1109 12:17:17.767649 20 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/09/24 12:17:19.779
  STEP: Verifying the service has paired with the endpoint @ 11/09/24 12:17:19.795
  I1109 12:17:20.795988 20 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I1109 12:17:20.804024 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Creating a v1 custom resource @ 11/09/24 12:17:23.384
  STEP: v2 custom resource should be converted @ 11/09/24 12:17:23.388
  I1109 12:17:23.944741 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-5856" for this suite. @ 11/09/24 12:17:23.948
â€¢ [6.539 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 11/09/24 12:17:23.956
  I1109 12:17:23.956132 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename ingressclass @ 11/09/24 12:17:23.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:17:23.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:17:23.975
  STEP: getting /apis @ 11/09/24 12:17:23.978
  STEP: getting /apis/networking.k8s.io @ 11/09/24 12:17:23.981
  STEP: getting /apis/networking.k8s.iov1 @ 11/09/24 12:17:23.982
  STEP: creating @ 11/09/24 12:17:23.982
  STEP: getting @ 11/09/24 12:17:23.995
  STEP: listing @ 11/09/24 12:17:23.998
  STEP: watching @ 11/09/24 12:17:24.001
  I1109 12:17:24.001971 20 ingressclass.go:348] starting watch
  STEP: patching @ 11/09/24 12:17:24.002
  STEP: updating @ 11/09/24 12:17:24.006
  I1109 12:17:24.010561 20 ingressclass.go:364] waiting for watch events with expected annotations
  I1109 12:17:24.010597 20 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 11/09/24 12:17:24.01
  STEP: deleting a collection @ 11/09/24 12:17:24.024
  I1109 12:17:24.040659 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-532" for this suite. @ 11/09/24 12:17:24.044
â€¢ [0.094 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:754
  STEP: Creating a kubernetes client @ 11/09/24 12:17:24.05
  I1109 12:17:24.050353 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename statefulset @ 11/09/24 12:17:24.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:17:24.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:17:24.064
  STEP: Creating service test in namespace statefulset-6221 @ 11/09/24 12:17:24.066
  STEP: Creating stateful set ss in namespace statefulset-6221 @ 11/09/24 12:17:24.074
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-6221 @ 11/09/24 12:17:24.081
  I1109 12:17:24.085741 20 wait.go:40] Found 0 stateful pods, waiting for 1
  I1109 12:17:34.085876 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 11/09/24 12:17:34.085
  I1109 12:17:34.090297 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=statefulset-6221 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1109 12:17:34.179281 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1109 12:17:34.179329 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1109 12:17:34.179338 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1109 12:17:34.183147 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I1109 12:17:44.186295 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1109 12:17:44.186340 20 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1109 12:17:44.203467 20 resource.go:168] POD   NODE              PHASE    GRACE  CONDITIONS
  I1109 12:17:44.203544 20 resource.go:175] ss-0  ip-172-31-94-169  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-11-09 12:17:25 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-11-09 12:17:24 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-11-09 12:17:34 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-11-09 12:17:34 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-11-09 12:17:24 +0000 UTC  }]
  I1109 12:17:44.203551 20 resource.go:178] 
  I1109 12:17:44.203557 20 statefulset.go:2413] StatefulSet ss has not reached scale 3, at 1
  I1109 12:17:45.208648 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.996504505s
  I1109 12:17:46.213405 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.990834236s
  I1109 12:17:47.218461 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.986640005s
  I1109 12:17:48.223534 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.981376725s
  I1109 12:17:49.227847 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.976500443s
  I1109 12:17:50.233525 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.971828073s
  I1109 12:17:51.237677 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.966559027s
  I1109 12:17:52.242589 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.961835686s
  I1109 12:17:53.246569 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 957.450058ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-6221 @ 11/09/24 12:17:54.247
  I1109 12:17:54.252665 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=statefulset-6221 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1109 12:17:54.327841 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1109 12:17:54.327882 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1109 12:17:54.327894 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1109 12:17:54.327947 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=statefulset-6221 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1109 12:17:54.403372 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I1109 12:17:54.403415 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1109 12:17:54.403425 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1109 12:17:54.403476 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=statefulset-6221 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1109 12:17:54.500254 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I1109 12:17:54.500301 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1109 12:17:54.500312 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1109 12:17:54.505344 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1109 12:17:54.505372 20 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I1109 12:17:54.505389 20 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 11/09/24 12:17:54.505
  I1109 12:17:54.509838 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=statefulset-6221 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1109 12:17:54.600828 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1109 12:17:54.600935 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1109 12:17:54.600947 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1109 12:17:54.601064 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=statefulset-6221 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1109 12:17:54.685876 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1109 12:17:54.685923 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1109 12:17:54.685933 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1109 12:17:54.685987 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=statefulset-6221 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1109 12:17:54.773992 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1109 12:17:54.774045 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1109 12:17:54.774055 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1109 12:17:54.774064 20 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1109 12:17:54.777459 20 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I1109 12:18:04.783306 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1109 12:18:04.783340 20 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I1109 12:18:04.783347 20 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I1109 12:18:04.795854 20 resource.go:168] POD   NODE              PHASE    GRACE  CONDITIONS
  I1109 12:18:04.795909 20 resource.go:175] ss-0  ip-172-31-94-169  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-11-09 12:17:25 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-11-09 12:17:24 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-11-09 12:17:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-11-09 12:17:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-11-09 12:17:24 +0000 UTC  }]
  I1109 12:18:04.795926 20 resource.go:175] ss-1  ip-172-31-65-76   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-11-09 12:17:44 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-11-09 12:17:44 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-11-09 12:17:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-11-09 12:17:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-11-09 12:17:44 +0000 UTC  }]
  I1109 12:18:04.795943 20 resource.go:175] ss-2  ip-172-31-26-237  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-11-09 12:17:44 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-11-09 12:17:44 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-11-09 12:17:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-11-09 12:17:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-11-09 12:17:44 +0000 UTC  }]
  I1109 12:18:04.795948 20 resource.go:178] 
  I1109 12:18:04.795954 20 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 3
  I1109 12:18:05.800423 20 resource.go:168] POD   NODE              PHASE      GRACE  CONDITIONS
  I1109 12:18:05.800482 20 resource.go:175] ss-1  ip-172-31-65-76   Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-11-09 12:18:05 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-11-09 12:17:44 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-11-09 12:17:55 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-11-09 12:17:55 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-11-09 12:17:44 +0000 UTC  }]
  I1109 12:18:05.800500 20 resource.go:175] ss-2  ip-172-31-26-237  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-11-09 12:18:05 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-11-09 12:17:44 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-11-09 12:17:55 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-11-09 12:17:55 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-11-09 12:17:44 +0000 UTC  }]
  I1109 12:18:05.800505 20 resource.go:178] 
  I1109 12:18:05.800511 20 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 2
  I1109 12:18:06.805165 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 7.992181046s
  I1109 12:18:07.809287 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 6.987431745s
  I1109 12:18:08.814128 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 5.983433829s
  I1109 12:18:09.817777 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 4.978543035s
  I1109 12:18:10.823104 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 3.974396545s
  I1109 12:18:11.827761 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 2.969558446s
  I1109 12:18:12.832059 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 1.964490563s
  I1109 12:18:13.838217 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 959.655445ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-6221 @ 11/09/24 12:18:14.839
  I1109 12:18:14.844469 20 rest.go:150] Scaling statefulset ss to 0
  I1109 12:18:14.850321 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1109 12:18:14.853473 20 statefulset.go:138] Deleting all statefulset in ns statefulset-6221
  I1109 12:18:14.856377 20 rest.go:150] Scaling statefulset ss to 0
  I1109 12:18:14.861297 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1109 12:18:14.864741 20 rest.go:88] Deleting statefulset ss
  I1109 12:18:14.878551 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6221" for this suite. @ 11/09/24 12:18:14.881
â€¢ [50.836 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 11/09/24 12:18:14.886
  I1109 12:18:14.886800 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename container-probe @ 11/09/24 12:18:14.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:18:14.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:18:14.904
  STEP: Creating pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637 @ 11/09/24 12:18:14.907
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/09/24 12:18:16.926
  I1109 12:18:16.930685 20 container_probe.go:1749] Initial restart count of pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d is 0
  I1109 12:18:16.934700 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:18:18.939882 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:18:20.946011 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:18:22.951566 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:18:24.957039 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:18:26.961857 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:18:28.967525 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:18:30.973277 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:18:32.979019 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:18:34.983572 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:18:36.987834 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:18:38.992909 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:18:40.998605 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:18:43.003243 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:18:45.007833 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:18:47.012342 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:18:49.016147 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:18:51.021648 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:18:53.026384 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:18:55.031871 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:18:57.036422 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:18:59.042278 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:19:01.046500 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:19:03.052039 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:19:05.057886 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:19:07.062748 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:19:09.067477 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:19:11.072723 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:19:13.078157 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:19:15.083421 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:19:17.088485 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:19:19.093649 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:19:21.098788 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:19:23.103343 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:19:25.108056 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:19:27.112897 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:19:29.117521 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:19:31.122385 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:19:33.127382 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:19:35.132917 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:19:37.137399 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:19:39.143087 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:19:41.147854 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:19:43.152554 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:19:45.157717 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:19:47.162932 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:19:49.168390 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:19:51.172791 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:19:53.177515 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:19:55.183005 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:19:57.187348 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:19:59.192063 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:20:01.197573 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:20:03.201903 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:20:05.206519 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:20:07.210713 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:20:09.216442 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:20:11.220481 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:20:13.226474 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:20:15.232075 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:20:17.237317 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:20:19.242219 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:20:21.248193 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:20:23.254252 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:20:25.258459 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:20:27.263895 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:20:29.267844 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:20:31.273153 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:20:33.277530 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:20:35.282673 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:20:37.287602 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:20:39.292484 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:20:41.296616 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:20:43.301074 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:20:45.305485 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:20:47.311418 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:20:49.317290 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:20:51.321491 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:20:53.326077 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:20:55.331069 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:20:57.336600 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:20:59.341392 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:21:01.346485 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:21:03.351427 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:21:05.355593 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:21:07.361302 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:21:09.365438 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:21:11.369855 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:21:13.374496 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:21:15.378329 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:21:17.383173 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:21:19.388479 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:21:21.393498 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:21:23.398753 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:21:25.403834 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:21:27.408993 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:21:29.414755 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:21:31.419514 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:21:33.425611 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:21:35.430395 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:21:37.436249 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:21:39.442073 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:21:41.447488 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:21:43.452910 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:21:45.458078 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:21:47.461934 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:21:49.468062 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:21:51.473508 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:21:53.478653 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:21:55.483034 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:21:57.487933 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:21:59.492911 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:22:01.498099 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:22:03.502726 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:22:05.508292 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:22:07.513601 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:22:09.518453 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:22:11.523955 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:22:13.529252 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  I1109 12:22:15.533310 20 container_probe.go:1759] Get pod test-grpc-94b9bc4e-adcd-4c35-99ad-9f7fab6e948d in namespace container-probe-637
  STEP: deleting the pod @ 11/09/24 12:22:17.534
  I1109 12:22:17.547894 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-637" for this suite. @ 11/09/24 12:22:17.55
â€¢ [242.672 seconds]
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:331
  STEP: Creating a kubernetes client @ 11/09/24 12:22:17.558
  I1109 12:22:17.558541 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename dns @ 11/09/24 12:22:17.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:22:17.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:22:17.578
  STEP: Creating a test externalName service @ 11/09/24 12:22:17.58
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2676.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-2676.svc.cluster.local; sleep 1; done
   @ 11/09/24 12:22:17.585
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2676.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-2676.svc.cluster.local; sleep 1; done
   @ 11/09/24 12:22:17.585
  STEP: creating a pod to probe DNS @ 11/09/24 12:22:17.585
  STEP: submitting the pod to kubernetes @ 11/09/24 12:22:17.585
  STEP: retrieving the pod @ 11/09/24 12:22:19.606
  STEP: looking for the results for each expected name from probers @ 11/09/24 12:22:19.609
  I1109 12:22:19.617968 20 dns_common.go:552] DNS probes using dns-test-50ef24c5-bfff-479b-a997-a70df592449e succeeded

  STEP: changing the externalName to bar.example.com @ 11/09/24 12:22:19.617
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2676.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-2676.svc.cluster.local; sleep 1; done
   @ 11/09/24 12:22:19.625
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2676.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-2676.svc.cluster.local; sleep 1; done
   @ 11/09/24 12:22:19.625
  STEP: creating a second pod to probe DNS @ 11/09/24 12:22:19.625
  STEP: submitting the pod to kubernetes @ 11/09/24 12:22:19.625
  STEP: retrieving the pod @ 11/09/24 12:22:27.653
  STEP: looking for the results for each expected name from probers @ 11/09/24 12:22:27.656
  I1109 12:22:27.664643 20 dns_common.go:552] DNS probes using dns-test-89613a0a-76e3-400e-af61-cf16cd282bbd succeeded

  STEP: changing the service to type=ClusterIP @ 11/09/24 12:22:27.664
  W1109 12:22:27.675900      20 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2676.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-2676.svc.cluster.local; sleep 1; done
   @ 11/09/24 12:22:27.675
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2676.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-2676.svc.cluster.local; sleep 1; done
   @ 11/09/24 12:22:27.675
  STEP: creating a third pod to probe DNS @ 11/09/24 12:22:27.675
  STEP: submitting the pod to kubernetes @ 11/09/24 12:22:27.68
  STEP: retrieving the pod @ 11/09/24 12:22:33.71
  STEP: looking for the results for each expected name from probers @ 11/09/24 12:22:33.714
  I1109 12:22:33.721309 20 dns_common.go:552] DNS probes using dns-test-acf4e5d2-d8a9-432e-a83f-0921c08daa25 succeeded

  STEP: deleting the pod @ 11/09/24 12:22:33.721
  STEP: deleting the pod @ 11/09/24 12:22:33.735
  STEP: deleting the pod @ 11/09/24 12:22:33.746
  STEP: deleting the test externalName service @ 11/09/24 12:22:33.757
  I1109 12:22:33.771568 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2676" for this suite. @ 11/09/24 12:22:33.774
â€¢ [16.224 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 11/09/24 12:22:33.782
  I1109 12:22:33.782524 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename kubectl-logs @ 11/09/24 12:22:33.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:22:33.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:22:33.801
  STEP: creating a pod @ 11/09/24 12:22:33.803
  I1109 12:22:33.803747 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-logs-4982 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.52 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I1109 12:22:33.853063 20 builder.go:146] stderr: ""
  I1109 12:22:33.853092 20 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 11/09/24 12:22:33.853
  I1109 12:22:33.853180 20 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I1109 12:22:35.862011 20 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 11/09/24 12:22:35.862
  I1109 12:22:35.862116 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-logs-4982 logs logs-generator logs-generator'
  I1109 12:22:35.925835 20 builder.go:146] stderr: ""
  I1109 12:22:35.925881 20 builder.go:147] stdout: "I1109 12:22:34.380130       1 logs_generator.go:76] 0 GET /api/v1/namespaces/ns/pods/mc95 398\nI1109 12:22:34.580221       1 logs_generator.go:76] 1 POST /api/v1/namespaces/kube-system/pods/bb7 267\nI1109 12:22:34.780788       1 logs_generator.go:76] 2 GET /api/v1/namespaces/default/pods/h5c 413\nI1109 12:22:34.981072       1 logs_generator.go:76] 3 POST /api/v1/namespaces/default/pods/wsk 434\nI1109 12:22:35.180281       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/6pn 263\nI1109 12:22:35.380891       1 logs_generator.go:76] 5 POST /api/v1/namespaces/kube-system/pods/6k9 597\nI1109 12:22:35.580553       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/29kl 538\nI1109 12:22:35.780686       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/tvx 292\n"
  STEP: limiting log lines @ 11/09/24 12:22:35.925
  I1109 12:22:35.926034 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-logs-4982 logs logs-generator logs-generator --tail=1'
  I1109 12:22:35.976201 20 builder.go:146] stderr: ""
  I1109 12:22:35.976331 20 builder.go:147] stdout: "I1109 12:22:35.780686       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/tvx 292\n"
  I1109 12:22:35.976351 20 logs.go:180] got output "I1109 12:22:35.780686       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/tvx 292\n"
  STEP: limiting log bytes @ 11/09/24 12:22:35.976
  I1109 12:22:35.976435 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-logs-4982 logs logs-generator logs-generator --limit-bytes=1'
  I1109 12:22:36.026271 20 builder.go:146] stderr: ""
  I1109 12:22:36.026309 20 builder.go:147] stdout: "I"
  I1109 12:22:36.026342 20 logs.go:186] got output "I"
  STEP: exposing timestamps @ 11/09/24 12:22:36.026
  I1109 12:22:36.026421 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-logs-4982 logs logs-generator logs-generator --tail=1 --timestamps'
  I1109 12:22:36.081177 20 builder.go:146] stderr: ""
  I1109 12:22:36.081214 20 builder.go:147] stdout: "2024-11-09T12:22:35.981105423Z I1109 12:22:35.981042       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/dm6t 540\n"
  I1109 12:22:36.081224 20 logs.go:192] got output "2024-11-09T12:22:35.981105423Z I1109 12:22:35.981042       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/dm6t 540\n"
  STEP: restricting to a time range @ 11/09/24 12:22:36.081
  I1109 12:22:38.582971 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-logs-4982 logs logs-generator logs-generator --since=1s'
  I1109 12:22:38.634754 20 builder.go:146] stderr: ""
  I1109 12:22:38.634804 20 builder.go:147] stdout: "I1109 12:22:37.780755       1 logs_generator.go:76] 17 POST /api/v1/namespaces/default/pods/6r2 301\nI1109 12:22:37.981133       1 logs_generator.go:76] 18 POST /api/v1/namespaces/kube-system/pods/txw 546\nI1109 12:22:38.180440       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/gdt 234\nI1109 12:22:38.380843       1 logs_generator.go:76] 20 POST /api/v1/namespaces/ns/pods/ml4 489\nI1109 12:22:38.581077       1 logs_generator.go:76] 21 GET /api/v1/namespaces/default/pods/rcx 569\n"
  I1109 12:22:38.634847 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-logs-4982 logs logs-generator logs-generator --since=24h'
  I1109 12:22:38.686094 20 builder.go:146] stderr: ""
  I1109 12:22:38.686158 20 builder.go:147] stdout: "I1109 12:22:34.380130       1 logs_generator.go:76] 0 GET /api/v1/namespaces/ns/pods/mc95 398\nI1109 12:22:34.580221       1 logs_generator.go:76] 1 POST /api/v1/namespaces/kube-system/pods/bb7 267\nI1109 12:22:34.780788       1 logs_generator.go:76] 2 GET /api/v1/namespaces/default/pods/h5c 413\nI1109 12:22:34.981072       1 logs_generator.go:76] 3 POST /api/v1/namespaces/default/pods/wsk 434\nI1109 12:22:35.180281       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/6pn 263\nI1109 12:22:35.380891       1 logs_generator.go:76] 5 POST /api/v1/namespaces/kube-system/pods/6k9 597\nI1109 12:22:35.580553       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/29kl 538\nI1109 12:22:35.780686       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/tvx 292\nI1109 12:22:35.981042       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/dm6t 540\nI1109 12:22:36.180325       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/default/pods/xcgc 420\nI1109 12:22:36.380642       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/ns/pods/nwh 238\nI1109 12:22:36.581069       1 logs_generator.go:76] 11 GET /api/v1/namespaces/kube-system/pods/fhb 338\nI1109 12:22:36.780244       1 logs_generator.go:76] 12 GET /api/v1/namespaces/kube-system/pods/wts5 447\nI1109 12:22:36.980551       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/kube-system/pods/4w7p 527\nI1109 12:22:37.180890       1 logs_generator.go:76] 14 POST /api/v1/namespaces/default/pods/gkh 353\nI1109 12:22:37.380144       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/default/pods/8h4 593\nI1109 12:22:37.580438       1 logs_generator.go:76] 16 POST /api/v1/namespaces/ns/pods/5ltb 482\nI1109 12:22:37.780755       1 logs_generator.go:76] 17 POST /api/v1/namespaces/default/pods/6r2 301\nI1109 12:22:37.981133       1 logs_generator.go:76] 18 POST /api/v1/namespaces/kube-system/pods/txw 546\nI1109 12:22:38.180440       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/gdt 234\nI1109 12:22:38.380843       1 logs_generator.go:76] 20 POST /api/v1/namespaces/ns/pods/ml4 489\nI1109 12:22:38.581077       1 logs_generator.go:76] 21 GET /api/v1/namespaces/default/pods/rcx 569\n"
  I1109 12:22:38.686351 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-logs-4982 delete pod logs-generator'
  I1109 12:22:39.247964 20 builder.go:146] stderr: ""
  I1109 12:22:39.248001 20 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I1109 12:22:39.248118 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-4982" for this suite. @ 11/09/24 12:22:39.251
â€¢ [5.476 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 11/09/24 12:22:39.258
  I1109 12:22:39.258627 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename field-validation @ 11/09/24 12:22:39.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:22:39.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:22:39.277
  I1109 12:22:39.279957 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  I1109 12:22:42.354075 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3793" for this suite. @ 11/09/24 12:22:42.357
â€¢ [3.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 11/09/24 12:22:42.364
  I1109 12:22:42.364186 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename pods @ 11/09/24 12:22:42.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:22:42.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:22:42.38
  STEP: creating the pod @ 11/09/24 12:22:42.382
  STEP: submitting the pod to kubernetes @ 11/09/24 12:22:42.382
  W1109 12:22:42.391472      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 11/09/24 12:22:44.404
  STEP: updating the pod @ 11/09/24 12:22:44.408
  I1109 12:22:44.919599 20 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-ba2c5748-9c3f-470f-a043-c8b91dbaf74f"
  I1109 12:22:48.934129 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-682" for this suite. @ 11/09/24 12:22:48.937
â€¢ [6.582 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:52
  STEP: Creating a kubernetes client @ 11/09/24 12:22:48.946
  I1109 12:22:48.946824 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename dns @ 11/09/24 12:22:48.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:22:48.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:22:48.963
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 11/09/24 12:22:48.965
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 11/09/24 12:22:48.965
  STEP: creating a pod to probe DNS @ 11/09/24 12:22:48.965
  STEP: submitting the pod to kubernetes @ 11/09/24 12:22:48.965
  STEP: retrieving the pod @ 11/09/24 12:22:50.984
  STEP: looking for the results for each expected name from probers @ 11/09/24 12:22:50.987
  I1109 12:22:51.004026 20 dns_common.go:527] DNS probes using dns-7023/dns-test-98ddbe12-ef9f-4074-987b-8d2c065426c5 succeeded

  STEP: deleting the pod @ 11/09/24 12:22:51.004
  I1109 12:22:51.019149 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7023" for this suite. @ 11/09/24 12:22:51.022
â€¢ [2.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1530
  STEP: Creating a kubernetes client @ 11/09/24 12:22:51.028
  I1109 12:22:51.028440 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename kubectl @ 11/09/24 12:22:51.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:22:51.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:22:51.041
  STEP: creating Agnhost RC @ 11/09/24 12:22:51.044
  I1109 12:22:51.044426 20 kubectl.go:1537] namespace kubectl-5901
  I1109 12:22:51.044474 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-5901 create -f -'
  I1109 12:22:51.135249 20 builder.go:146] stderr: ""
  I1109 12:22:51.135286 20 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 11/09/24 12:22:51.135
  I1109 12:22:52.141158 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1109 12:22:52.141187 20 framework.go:733] Found 0 / 1
  I1109 12:22:53.139759 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1109 12:22:53.139793 20 framework.go:733] Found 1 / 1
  I1109 12:22:53.139807 20 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I1109 12:22:53.143719 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1109 12:22:53.143739 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1109 12:22:53.143746 20 kubectl.go:1544] wait on agnhost-primary startup in kubectl-5901 
  I1109 12:22:53.143794 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-5901 logs agnhost-primary-gvt27 agnhost-primary'
  I1109 12:22:53.195992 20 builder.go:146] stderr: ""
  I1109 12:22:53.196034 20 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 11/09/24 12:22:53.196
  I1109 12:22:53.196111 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-5901 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I1109 12:22:53.250856 20 builder.go:146] stderr: ""
  I1109 12:22:53.250902 20 builder.go:147] stdout: "service/rm2 exposed\n"
  I1109 12:22:53.255067 20 utils.go:1203] Service rm2 in namespace kubectl-5901 found.
  STEP: exposing service @ 11/09/24 12:22:55.262
  I1109 12:22:55.262703 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-5901 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I1109 12:22:55.319890 20 builder.go:146] stderr: ""
  I1109 12:22:55.319933 20 builder.go:147] stdout: "service/rm3 exposed\n"
  I1109 12:22:55.324664 20 utils.go:1203] Service rm3 in namespace kubectl-5901 found.
  I1109 12:22:57.332993 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5901" for this suite. @ 11/09/24 12:22:57.336
â€¢ [6.314 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 11/09/24 12:22:57.342
  I1109 12:22:57.342468 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename downward-api @ 11/09/24 12:22:57.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:22:57.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:22:57.36
  STEP: Creating a pod to test downward API volume plugin @ 11/09/24 12:22:57.364
  STEP: Saw pod success @ 11/09/24 12:23:01.387
  I1109 12:23:01.391404 20 output.go:196] Trying to get logs from node ip-172-31-94-169 pod downwardapi-volume-c2222d11-97c9-4bb8-b1ca-7a8f6f968dc7 container client-container: <nil>
  STEP: delete the pod @ 11/09/24 12:23:01.409
  I1109 12:23:01.426899 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7333" for this suite. @ 11/09/24 12:23:01.43
â€¢ [4.094 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:329
  STEP: Creating a kubernetes client @ 11/09/24 12:23:01.436
  I1109 12:23:01.436597 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename sched-preemption @ 11/09/24 12:23:01.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:23:01.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:23:01.454
  I1109 12:23:01.470147 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1109 12:24:01.475742 20 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 11/09/24 12:24:01.479
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 11/09/24 12:24:01.487
  I1109 12:24:01.497624 20 preemption.go:367] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 11/09/24 12:24:01.497
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 11/09/24 12:24:03.507
  I1109 12:24:03.512950 20 preemption.go:385] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 11/09/24 12:24:03.512
  STEP: Verifying the pod has the pod disruption condition @ 11/09/24 12:24:05.522
  I1109 12:24:05.525440 20 pod_client.go:378] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I1109 12:24:06.039362 20 pod_client.go:173] Successfully updated pod "victim-pod"
  I1109 12:24:06.071620 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9927" for this suite. @ 11/09/24 12:24:06.075
â€¢ [64.645 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 11/09/24 12:24:06.081
  I1109 12:24:06.081780 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename downward-api @ 11/09/24 12:24:06.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:24:06.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:24:06.099
  STEP: Creating a pod to test downward API volume plugin @ 11/09/24 12:24:06.101
  STEP: Saw pod success @ 11/09/24 12:24:10.125
  I1109 12:24:10.128676 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod downwardapi-volume-b4ac5d7e-5ba3-4a45-80e2-631142e33ba8 container client-container: <nil>
  STEP: delete the pod @ 11/09/24 12:24:10.138
  I1109 12:24:10.156614 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3448" for this suite. @ 11/09/24 12:24:10.159
â€¢ [4.084 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 11/09/24 12:24:10.165
  I1109 12:24:10.165567 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename subpath @ 11/09/24 12:24:10.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:24:10.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:24:10.189
  STEP: Setting up data @ 11/09/24 12:24:10.194
  STEP: Creating pod pod-subpath-test-configmap-glbl @ 11/09/24 12:24:10.203
  STEP: Creating a pod to test atomic-volume-subpath @ 11/09/24 12:24:10.203
  STEP: Saw pod success @ 11/09/24 12:24:34.277
  I1109 12:24:34.281084 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-subpath-test-configmap-glbl container test-container-subpath-configmap-glbl: <nil>
  STEP: delete the pod @ 11/09/24 12:24:34.289
  STEP: Deleting pod pod-subpath-test-configmap-glbl @ 11/09/24 12:24:34.306
  I1109 12:24:34.306391 20 delete.go:62] Deleting pod "pod-subpath-test-configmap-glbl" in namespace "subpath-3522"
  I1109 12:24:34.309788 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3522" for this suite. @ 11/09/24 12:24:34.313
â€¢ [24.154 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 11/09/24 12:24:34.319
  I1109 12:24:34.319709 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename secrets @ 11/09/24 12:24:34.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:24:34.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:24:34.338
  STEP: Creating secret with name secret-test-5feef5f4-7728-4847-b945-d01aab2c6b05 @ 11/09/24 12:24:34.341
  STEP: Creating a pod to test consume secrets @ 11/09/24 12:24:34.346
  STEP: Saw pod success @ 11/09/24 12:24:38.368
  I1109 12:24:38.371114 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-secrets-eb95b7d4-40a7-4ed6-94fa-dba795807bae container secret-volume-test: <nil>
  STEP: delete the pod @ 11/09/24 12:24:38.377
  I1109 12:24:38.392452 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4169" for this suite. @ 11/09/24 12:24:38.395
â€¢ [4.085 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1723
  STEP: Creating a kubernetes client @ 11/09/24 12:24:38.405
  I1109 12:24:38.405025 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename kubectl @ 11/09/24 12:24:38.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:24:38.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:24:38.419
  I1109 12:24:38.422487 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-4955 version'
  I1109 12:24:38.461115 20 builder.go:146] stderr: ""
  I1109 12:24:38.461155 20 builder.go:147] stdout: "Client Version: v1.31.2\nKustomize Version: v5.4.2\nServer Version: v1.31.2\n"
  I1109 12:24:38.461451 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4955" for this suite. @ 11/09/24 12:24:38.464
â€¢ [0.067 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 11/09/24 12:24:38.472
  I1109 12:24:38.472360 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename deployment @ 11/09/24 12:24:38.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:24:38.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:24:38.489
  STEP: creating a Deployment @ 11/09/24 12:24:38.498
  STEP: waiting for Deployment to be created @ 11/09/24 12:24:38.503
  STEP: waiting for all Replicas to be Ready @ 11/09/24 12:24:38.504
  I1109 12:24:38.505427 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1109 12:24:38.505444 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1109 12:24:38.514584 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1109 12:24:38.514611 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1109 12:24:38.526736 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1109 12:24:38.526767 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1109 12:24:38.564248 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1109 12:24:38.564293 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1109 12:24:39.457371 20 deployment.go:246] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I1109 12:24:39.457405 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I1109 12:24:39.703039 20 deployment.go:248] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 11/09/24 12:24:39.703
  I1109 12:24:39.711471 20 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 11/09/24 12:24:39.711
  I1109 12:24:39.712767 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 0
  I1109 12:24:39.712788 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 0
  I1109 12:24:39.712798 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 0
  I1109 12:24:39.712804 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 0
  I1109 12:24:39.712812 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 0
  I1109 12:24:39.712819 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 0
  I1109 12:24:39.712902 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 0
  I1109 12:24:39.712910 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 0
  I1109 12:24:39.712918 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 1
  I1109 12:24:39.712924 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 1
  I1109 12:24:39.712949 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 2
  I1109 12:24:39.712957 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 2
  I1109 12:24:39.712980 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 2
  I1109 12:24:39.712987 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 2
  I1109 12:24:39.722293 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 2
  I1109 12:24:39.722331 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 2
  I1109 12:24:39.738716 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 2
  I1109 12:24:39.738749 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 2
  I1109 12:24:39.763529 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 1
  I1109 12:24:39.763566 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 1
  I1109 12:24:39.771037 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 1
  I1109 12:24:39.771070 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 1
  I1109 12:24:40.479415 20 deployment.go:309] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 2
  I1109 12:24:40.479787 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 2
  I1109 12:24:40.503398 20 deployment.go:311] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 1
  STEP: listing Deployments @ 11/09/24 12:24:40.503
  I1109 12:24:40.507852 20 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 11/09/24 12:24:40.507
  I1109 12:24:40.515172 20 deployment.go:360] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 11/09/24 12:24:40.515
  I1109 12:24:40.522294 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1109 12:24:40.525799 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1109 12:24:40.545843 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1109 12:24:40.561647 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1109 12:24:40.578200 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1109 12:24:41.598958 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1109 12:24:41.615067 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1109 12:24:41.624914 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1109 12:24:41.641387 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1109 12:24:41.646729 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1109 12:24:42.477722 20 deployment.go:389] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 11/09/24 12:24:42.504
  STEP: fetching the DeploymentStatus @ 11/09/24 12:24:42.512
  I1109 12:24:42.517721 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 1
  I1109 12:24:42.517753 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 1
  I1109 12:24:42.517762 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 1
  I1109 12:24:42.517840 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 1
  I1109 12:24:42.517850 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 1
  I1109 12:24:42.517860 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 2
  I1109 12:24:42.517892 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 2
  I1109 12:24:42.518035 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 2
  I1109 12:24:42.518047 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 2
  I1109 12:24:42.518056 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 2
  I1109 12:24:42.518106 20 deployment.go:449] observed Deployment test-deployment in namespace deployment-797 with ReadyReplicas 3
  STEP: deleting the Deployment @ 11/09/24 12:24:42.518
  I1109 12:24:42.527327 20 deployment.go:475] observed event type MODIFIED
  I1109 12:24:42.527356 20 deployment.go:475] observed event type MODIFIED
  I1109 12:24:42.527365 20 deployment.go:475] observed event type MODIFIED
  I1109 12:24:42.527451 20 deployment.go:475] observed event type MODIFIED
  I1109 12:24:42.527461 20 deployment.go:475] observed event type MODIFIED
  I1109 12:24:42.527468 20 deployment.go:475] observed event type MODIFIED
  I1109 12:24:42.527557 20 deployment.go:475] observed event type MODIFIED
  I1109 12:24:42.527565 20 deployment.go:475] observed event type MODIFIED
  I1109 12:24:42.527647 20 deployment.go:475] observed event type MODIFIED
  I1109 12:24:42.527685 20 deployment.go:475] observed event type MODIFIED
  I1109 12:24:42.527694 20 deployment.go:475] observed event type MODIFIED
  I1109 12:24:42.527814 20 deployment.go:475] observed event type MODIFIED
  I1109 12:24:42.527832 20 deployment.go:475] observed event type MODIFIED
  I1109 12:24:42.527840 20 deployment.go:475] observed event type MODIFIED
  I1109 12:24:42.532073 20 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I1109 12:24:42.535078 20 deployment.go:657] ReplicaSet "test-deployment-6c86c7f765":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-6c86c7f765",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-797",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1c7eac8d-c169-4bff-aea0-dfe9fb43cce2",
      ResourceVersion: (string) (len=4) "8398",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866751880,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "168ce40b-9e3d-4975-8358-ed4ba6564124",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751881,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 31 36 38 63  65 34 30 62 2d 39 65 33  |":\"168ce40b-9e3|
              00000130  64 2d 34 39 37 35 2d 38  33 35 38 2d 65 64 34 62  |d-4975-8358-ed4b|
              00000140  61 36 35 36 34 31 32 34  5c 22 7d 22 3a 7b 7d 7d  |a6564124\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751882,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I1109 12:24:42.539664 20 deployment.go:669] pod: "test-deployment-6c86c7f765-7l5b8":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6c86c7f765-7l5b8",
      GenerateName: (string) (len=27) "test-deployment-6c86c7f765-",
      Namespace: (string) (len=14) "deployment-797",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "258107c3-c152-4d11-84cf-8e733eac77d6",
      ResourceVersion: (string) (len=4) "8397",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866751881,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6c86c7f765",
          UID: (types.UID) (len=36) "1c7eac8d-c169-4bff-aea0-dfe9fb43cce2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751881,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  31 63 37 65 61 63 38 64  |uid\":\"1c7eac8d|
              000000a0  2d 63 31 36 39 2d 34 62  66 66 2d 61 65 61 30 2d  |-c169-4bff-aea0-|
              000000b0  64 66 65 39 66 62 34 33  63 63 65 32 5c 22 7d 22  |dfe9fb43cce2\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751882,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 33 35  2e 39 39 5c 22 7d 22 3a  |2.168.35.99\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qktzf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qktzf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-65-76",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751882,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751881,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751882,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751882,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751881,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.65.76",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.65.76"
        }
      },
      PodIP: (string) (len=13) "192.168.35.99",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.35.99"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866751881,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63866751882,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d13677c1847d02f5ad22a0b07cdedfa4f874e9cf50af56c2d433859dfb289e2b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qktzf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I1109 12:24:42.541098 20 deployment.go:669] pod: "test-deployment-6c86c7f765-dx2mc":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6c86c7f765-dx2mc",
      GenerateName: (string) (len=27) "test-deployment-6c86c7f765-",
      Namespace: (string) (len=14) "deployment-797",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5e76730e-bd2c-4377-9ecf-9cff8e0f638d",
      ResourceVersion: (string) (len=4) "8360",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866751880,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6c86c7f765",
          UID: (types.UID) (len=36) "1c7eac8d-c169-4bff-aea0-dfe9fb43cce2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751880,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  31 63 37 65 61 63 38 64  |uid\":\"1c7eac8d|
              000000a0  2d 63 31 36 39 2d 34 62  66 66 2d 61 65 61 30 2d  |-c169-4bff-aea0-|
              000000b0  64 66 65 39 66 62 34 33  63 63 65 32 5c 22 7d 22  |dfe9fb43cce2\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751881,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  32 2e 31 33 5c 22 7d 22  |2.168.122.13\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xx58s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xx58s",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-26-237",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751881,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751880,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751881,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751881,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751880,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.26.237",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.26.237"
        }
      },
      PodIP: (string) (len=14) "192.168.122.13",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.122.13"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866751880,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63866751881,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9b31b1a4be15b3c715f43bedb02b950abb2c582f457e89e711164247d811710d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xx58s",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I1109 12:24:42.542405 20 deployment.go:657] ReplicaSet "test-deployment-6ccdbb4d8c":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-6ccdbb4d8c",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-797",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dda61268-d366-4ef8-9ac8-1e7075341c74",
      ResourceVersion: (string) (len=4) "8406",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866751879,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "168ce40b-9e3d-4975-8358-ed4ba6564124",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751882,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 31 36 38 63  65 34 30 62 2d 39 65 33  |":\"168ce40b-9e3|
              00000130  64 2d 34 39 37 35 2d 38  33 35 38 2d 65 64 34 62  |d-4975-8358-ed4b|
              00000140  61 36 35 36 34 31 32 34  5c 22 7d 22 3a 7b 7d 7d  |a6564124\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751882,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=26) "registry.k8s.io/pause:3.10",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I1109 12:24:42.552045 20 deployment.go:669] pod: "test-deployment-6ccdbb4d8c-b6nwz":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6ccdbb4d8c-b6nwz",
      GenerateName: (string) (len=27) "test-deployment-6ccdbb4d8c-",
      Namespace: (string) (len=14) "deployment-797",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9456899d-2792-49c4-a5fa-ff85f03f2778",
      ResourceVersion: (string) (len=4) "8402",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866751879,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866751884,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6ccdbb4d8c",
          UID: (types.UID) (len=36) "dda61268-d366-4ef8-9ac8-1e7075341c74",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751879,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  64 64 61 36 31 32 36 38  |uid\":\"dda61268|
              000000a0  2d 64 33 36 36 2d 34 65  66 38 2d 39 61 63 38 2d  |-d366-4ef8-9ac8-|
              000000b0  31 65 37 30 37 35 33 34  31 63 37 34 5c 22 7d 22  |1e7075341c74\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751880,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 33 35  2e 39 38 5c 22 7d 22 3a  |2.168.35.98\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ds6vj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ds6vj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-65-76",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751880,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751879,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751880,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751880,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751879,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.65.76",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.65.76"
        }
      },
      PodIP: (string) (len=13) "192.168.35.98",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.35.98"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866751879,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63866751880,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://58de493140919bcc4205d4337c95d3b77d581d6fa0a734e84a30e47e572479a5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ds6vj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I1109 12:24:42.555096 20 deployment.go:669] pod: "test-deployment-6ccdbb4d8c-p978k":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6ccdbb4d8c-p978k",
      GenerateName: (string) (len=27) "test-deployment-6ccdbb4d8c-",
      Namespace: (string) (len=14) "deployment-797",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9f2aefec-0ae9-4a01-819c-f7cfbc5bd870",
      ResourceVersion: (string) (len=4) "8390",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866751880,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866751883,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6ccdbb4d8c",
          UID: (types.UID) (len=36) "dda61268-d366-4ef8-9ac8-1e7075341c74",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751880,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  64 64 61 36 31 32 36 38  |uid\":\"dda61268|
              000000a0  2d 64 33 36 36 2d 34 65  66 38 2d 39 61 63 38 2d  |-d366-4ef8-9ac8-|
              000000b0  31 65 37 30 37 35 33 34  31 63 37 34 5c 22 7d 22  |1e7075341c74\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751881,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 72 65 61 73 6f 6e  |me":{},"f:reason|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000090  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000000a0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 49  |"k:{\"type\":\"I|
              000000b0  6e 69 74 69 61 6c 69 7a  65 64 5c 22 7d 22 3a 7b  |nitialized\"}":{|
              000000c0  22 2e 22 3a 7b 7d 2c 22  66 3a 6c 61 73 74 50 72  |".":{},"f:lastPr|
              000000d0  6f 62 65 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |obeTime":{},"f:l|
              000000e0  61 73 74 54 72 61 6e 73  69 74 69 6f 6e 54 69 6d  |astTransitionTim|
              000000f0  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000100  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000110  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              00000120  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 50 6f  |k:{\"type\":\"Po|
              00000130  64 52 65 61 64 79 54 6f  53 74 61 72 74 43 6f 6e  |dReadyToStartCon|
              00000140  74 61 69 6e 65 72 73 5c  22 7d 22 3a 7b 22 2e 22  |tainers\"}":{"."|
              00000150  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000160  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000170  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000180  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000190  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 2c 22 6b  |,"f:type":{}},"k|
              000001a0  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 52 65 61  |:{\"type\":\"Rea|
              000001b0  64 79 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |dy\"}":{".":{},"|
              000001c0  66 3a 6c 61 73 74 50 72  6f 62 65 54 69 6d 65 22  |f:lastProbeTime"|
              000001d0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 54 72 61 6e 73  |:{},"f:lastTrans|
              000001e0  69 74 69 6f 6e 54 69 6d  65 22 3a 7b 7d 2c 22 66  |itionTime":{},"f|
              000001f0  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000200  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000210  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000220  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000230  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000240  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000250  3a 70 68 61 73 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |:phase":{},"f:po|
              00000260  64 49 50 22 3a 7b 7d 2c  22 66 3a 70 6f 64 49 50  |dIP":{},"f:podIP|
              00000270  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000280  22 69 70 5c 22 3a 5c 22  31 39 32 2e 31 36 38 2e  |"ip\":\"192.168.|
              00000290  31 38 37 2e 32 32 5c 22  7d 22 3a 7b 22 2e 22 3a  |187.22\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gchd5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gchd5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-94-169",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=9) "Succeeded",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751881,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751880,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751881,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751881,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751880,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.94.169",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.94.169"
        }
      },
      PodIP: (string) (len=14) "192.168.187.22",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.187.22"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866751880,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)({
              ExitCode: (int32) 0,
              Signal: (int32) 0,
              Reason: (string) (len=9) "Completed",
              Message: (string) "",
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63866751881,
                  loc: (*time.Location)(<already shown>)
                }
              },
              FinishedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63866751881,
                  loc: (*time.Location)(<already shown>)
                }
              },
              ContainerID: (string) (len=77) "containerd://f40c409912fe4e6d33b6bd587e617000e76afd98c7a5b431d6ec17b2b2e827d4"
            })
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://f40c409912fe4e6d33b6bd587e617000e76afd98c7a5b431d6ec17b2b2e827d4",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gchd5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I1109 12:24:42.556375 20 deployment.go:657] ReplicaSet "test-deployment-77bdf6fb4b":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-77bdf6fb4b",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-797",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f3223cb6-3e63-41e5-9c43-175a3ff005cd",
      ResourceVersion: (string) (len=4) "8309",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866751878,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "168ce40b-9e3d-4975-8358-ed4ba6564124",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751880,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 31 36 38 63  65 34 30 62 2d 39 65 33  |":\"168ce40b-9e3|
              00000130  64 2d 34 39 37 35 2d 38  33 35 38 2d 65 64 34 62  |d-4975-8358-ed4b|
              00000140  61 36 35 36 34 31 32 34  5c 22 7d 22 3a 7b 7d 7d  |a6564124\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866751880,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I1109 12:24:42.561418 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-797" for this suite. @ 11/09/24 12:24:42.564
â€¢ [4.098 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 11/09/24 12:24:42.57
  I1109 12:24:42.570651 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename projected @ 11/09/24 12:24:42.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:24:42.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:24:42.585
  STEP: Creating a pod to test downward API volume plugin @ 11/09/24 12:24:42.588
  STEP: Saw pod success @ 11/09/24 12:24:46.615
  I1109 12:24:46.619075 20 output.go:196] Trying to get logs from node ip-172-31-94-169 pod downwardapi-volume-e0d91470-f0b5-41e9-b899-ef7336906e9e container client-container: <nil>
  STEP: delete the pod @ 11/09/24 12:24:46.629
  I1109 12:24:46.646222 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5492" for this suite. @ 11/09/24 12:24:46.649
â€¢ [4.085 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 11/09/24 12:24:46.656
  I1109 12:24:46.656113 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename configmap @ 11/09/24 12:24:46.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:24:46.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:24:46.673
  STEP: Creating configMap with name configmap-test-volume-c6b5aede-a4b4-4225-94a7-5fe75066b9d7 @ 11/09/24 12:24:46.675
  STEP: Creating a pod to test consume configMaps @ 11/09/24 12:24:46.68
  STEP: Saw pod success @ 11/09/24 12:24:48.698
  I1109 12:24:48.701893 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-configmaps-c5abf200-216f-4fa5-bcbf-a98f0bbeee00 container agnhost-container: <nil>
  STEP: delete the pod @ 11/09/24 12:24:48.708
  I1109 12:24:48.732178 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3920" for this suite. @ 11/09/24 12:24:48.738
â€¢ [2.087 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:965
  STEP: Creating a kubernetes client @ 11/09/24 12:24:48.743
  I1109 12:24:48.743706 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename statefulset @ 11/09/24 12:24:48.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:24:48.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:24:48.761
  STEP: Creating service test in namespace statefulset-4850 @ 11/09/24 12:24:48.763
  I1109 12:24:48.780988 20 wait.go:40] Found 0 stateful pods, waiting for 1
  I1109 12:24:58.782560 20 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 11/09/24 12:24:58.789
  I1109 12:24:58.804360 20 wait.go:40] Found 1 stateful pods, waiting for 2
  I1109 12:25:08.804787 20 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1109 12:25:08.804822 20 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 11/09/24 12:25:08.811
  STEP: Delete all of the StatefulSets @ 11/09/24 12:25:08.815
  STEP: Verify that StatefulSets have been deleted @ 11/09/24 12:25:08.827
  I1109 12:25:08.832580 20 statefulset.go:138] Deleting all statefulset in ns statefulset-4850
  I1109 12:25:08.847421 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4850" for this suite. @ 11/09/24 12:25:08.857
â€¢ [20.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 11/09/24 12:25:08.868
  I1109 12:25:08.868543 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename subpath @ 11/09/24 12:25:08.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:25:08.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:25:08.898
  STEP: Setting up data @ 11/09/24 12:25:08.902
  STEP: Creating pod pod-subpath-test-secret-pcnf @ 11/09/24 12:25:08.912
  STEP: Creating a pod to test atomic-volume-subpath @ 11/09/24 12:25:08.912
  STEP: Saw pod success @ 11/09/24 12:25:30.978
  I1109 12:25:30.981570 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-subpath-test-secret-pcnf container test-container-subpath-secret-pcnf: <nil>
  STEP: delete the pod @ 11/09/24 12:25:30.989
  STEP: Deleting pod pod-subpath-test-secret-pcnf @ 11/09/24 12:25:31.006
  I1109 12:25:31.006330 20 delete.go:62] Deleting pod "pod-subpath-test-secret-pcnf" in namespace "subpath-203"
  I1109 12:25:31.008935 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-203" for this suite. @ 11/09/24 12:25:31.011
â€¢ [22.149 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 11/09/24 12:25:31.018
  I1109 12:25:31.018268 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename configmap @ 11/09/24 12:25:31.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:25:31.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:25:31.037
  STEP: creating a ConfigMap @ 11/09/24 12:25:31.039
  STEP: fetching the ConfigMap @ 11/09/24 12:25:31.042
  STEP: patching the ConfigMap @ 11/09/24 12:25:31.045
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 11/09/24 12:25:31.051
  STEP: deleting the ConfigMap by collection with a label selector @ 11/09/24 12:25:31.054
  STEP: listing all ConfigMaps in test namespace @ 11/09/24 12:25:31.062
  I1109 12:25:31.064486 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9723" for this suite. @ 11/09/24 12:25:31.067
â€¢ [0.055 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 11/09/24 12:25:31.073
  I1109 12:25:31.073072 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename projected @ 11/09/24 12:25:31.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:25:31.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:25:31.09
  STEP: Creating configMap with name cm-test-opt-del-6c57869f-c07a-413b-8835-ea31c010734a @ 11/09/24 12:25:31.095
  STEP: Creating configMap with name cm-test-opt-upd-169d6f54-fa27-4bdc-a053-da5cbd65128e @ 11/09/24 12:25:31.099
  STEP: Creating the pod @ 11/09/24 12:25:31.103
  STEP: Deleting configmap cm-test-opt-del-6c57869f-c07a-413b-8835-ea31c010734a @ 11/09/24 12:25:33.141
  STEP: Updating configmap cm-test-opt-upd-169d6f54-fa27-4bdc-a053-da5cbd65128e @ 11/09/24 12:25:33.147
  STEP: Creating configMap with name cm-test-opt-create-1fa0ba3d-a73c-4687-ae7e-a979d8638190 @ 11/09/24 12:25:33.151
  STEP: waiting to observe update in volume @ 11/09/24 12:25:33.156
  I1109 12:27:03.549470 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2378" for this suite. @ 11/09/24 12:27:03.552
â€¢ [92.485 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 11/09/24 12:27:03.558
  I1109 12:27:03.558985 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename replicaset @ 11/09/24 12:27:03.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:27:03.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:27:03.577
  I1109 12:27:03.590268 20 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I1109 12:27:08.594917 20 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/09/24 12:27:08.594
  STEP: Scaling up "test-rs" replicaset @ 11/09/24 12:27:08.594
  I1109 12:27:08.603288 20 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 11/09/24 12:27:08.603
  I1109 12:27:08.617685 20 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-797 with ReadyReplicas 1, AvailableReplicas 1
  I1109 12:27:08.628121 20 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-797 with ReadyReplicas 1, AvailableReplicas 1
  I1109 12:27:08.647022 20 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-797 with ReadyReplicas 1, AvailableReplicas 1
  I1109 12:27:08.653405 20 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-797 with ReadyReplicas 1, AvailableReplicas 1
  I1109 12:27:09.738093 20 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-797 with ReadyReplicas 2, AvailableReplicas 2
  I1109 12:27:09.817753 20 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-797 with ReadyReplicas 3 found true
  I1109 12:27:09.817900 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-797" for this suite. @ 11/09/24 12:27:09.821
â€¢ [6.326 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3393
  STEP: Creating a kubernetes client @ 11/09/24 12:27:09.885
  I1109 12:27:09.885400 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename services @ 11/09/24 12:27:09.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:27:09.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:27:09.901
  STEP: creating a Service @ 11/09/24 12:27:09.907
  STEP: watching for the Service to be added @ 11/09/24 12:27:09.921
  I1109 12:27:09.922854 20 service.go:3445] Found Service test-service-b569n in namespace services-2306 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 32305}]
  I1109 12:27:09.923137 20 service.go:3452] Service test-service-b569n created
  STEP: Getting /status @ 11/09/24 12:27:09.923
  I1109 12:27:09.927705 20 service.go:3463] Service test-service-b569n has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 11/09/24 12:27:09.927
  STEP: watching for the Service to be patched @ 11/09/24 12:27:09.932
  I1109 12:27:09.933540 20 service.go:3486] observed Service test-service-b569n in namespace services-2306 with annotations: map[] & LoadBalancer: {[]}
  I1109 12:27:09.933684 20 service.go:3489] Found Service test-service-b569n in namespace services-2306 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc000a81df0 []}]}
  I1109 12:27:09.933706 20 service.go:3496] Service test-service-b569n has service status patched
  STEP: updating the ServiceStatus @ 11/09/24 12:27:09.933
  I1109 12:27:09.944183 20 service.go:3516] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 11/09/24 12:27:09.944
  I1109 12:27:09.945512 20 service.go:3527] Observed Service test-service-b569n in namespace services-2306 with annotations: map[] & Conditions: []
  I1109 12:27:09.945551 20 service.go:3538] Observed Service test-service-b569n in namespace services-2306 with annotations: map[patchedstatus:true] & Conditions: []
  I1109 12:27:09.945573 20 service.go:3534] Found Service test-service-b569n in namespace services-2306 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1109 12:27:09.945586 20 service.go:3545] Service test-service-b569n has service status updated
  STEP: patching the service @ 11/09/24 12:27:09.945
  STEP: watching for the Service to be patched @ 11/09/24 12:27:09.954
  I1109 12:27:09.955409 20 service.go:3568] observed Service test-service-b569n in namespace services-2306 with labels: map[test-service-static:true]
  I1109 12:27:09.955430 20 service.go:3568] observed Service test-service-b569n in namespace services-2306 with labels: map[test-service-static:true]
  I1109 12:27:09.955438 20 service.go:3568] observed Service test-service-b569n in namespace services-2306 with labels: map[test-service-static:true]
  I1109 12:27:09.955460 20 service.go:3571] Found Service test-service-b569n in namespace services-2306 with labels: map[test-service:patched test-service-static:true]
  I1109 12:27:09.955473 20 service.go:3578] Service test-service-b569n patched
  STEP: deleting the service @ 11/09/24 12:27:09.955
  STEP: watching for the Service to be deleted @ 11/09/24 12:27:09.97
  I1109 12:27:09.971760 20 service.go:3602] Observed event: ADDED
  I1109 12:27:09.971785 20 service.go:3602] Observed event: MODIFIED
  I1109 12:27:09.971792 20 service.go:3602] Observed event: MODIFIED
  I1109 12:27:09.971891 20 service.go:3602] Observed event: MODIFIED
  I1109 12:27:09.971919 20 service.go:3598] Found Service test-service-b569n in namespace services-2306 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I1109 12:27:09.971928 20 service.go:3607] Service test-service-b569n deleted
  I1109 12:27:09.972015 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2306" for this suite. @ 11/09/24 12:27:09.975
â€¢ [0.096 seconds]
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2179
  STEP: Creating a kubernetes client @ 11/09/24 12:27:09.981
  I1109 12:27:09.981316 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename services @ 11/09/24 12:27:09.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:27:09.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:27:09.996
  STEP: creating service in namespace services-3229 @ 11/09/24 12:27:09.998
  STEP: creating service affinity-clusterip-transition in namespace services-3229 @ 11/09/24 12:27:09.998
  STEP: creating replication controller affinity-clusterip-transition in namespace services-3229 @ 11/09/24 12:27:10.005
  I1109 12:27:10.012931      20 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-3229, replica count: 3
  I1109 12:27:13.064298      20 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1109 12:27:13.071111 20 resource.go:361] Creating new exec pod
  I1109 12:27:16.084683 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-3229 exec execpod-affinitywpxmj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I1109 12:27:16.174754 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  I1109 12:27:16.174799 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1109 12:27:16.174963 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-3229 exec execpod-affinitywpxmj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.238 80'
  I1109 12:27:16.253136 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.238 80\nConnection to 10.152.183.238 80 port [tcp/http] succeeded!\n"
  I1109 12:27:16.253179 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1109 12:27:16.264025 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-3229 exec execpod-affinitywpxmj -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.238:80/ ; done'
  I1109 12:27:16.395720 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.238:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.238:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.238:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.238:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.238:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.238:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.238:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.238:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.238:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.238:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.238:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.238:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.238:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.238:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.238:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.238:80/\n"
  I1109 12:27:16.395788 20 builder.go:147] stdout: "\naffinity-clusterip-transition-v55mx\naffinity-clusterip-transition-zvdbc\naffinity-clusterip-transition-v55mx\naffinity-clusterip-transition-98kkd\naffinity-clusterip-transition-zvdbc\naffinity-clusterip-transition-v55mx\naffinity-clusterip-transition-v55mx\naffinity-clusterip-transition-zvdbc\naffinity-clusterip-transition-98kkd\naffinity-clusterip-transition-zvdbc\naffinity-clusterip-transition-zvdbc\naffinity-clusterip-transition-98kkd\naffinity-clusterip-transition-zvdbc\naffinity-clusterip-transition-v55mx\naffinity-clusterip-transition-98kkd\naffinity-clusterip-transition-zvdbc"
  I1109 12:27:16.395809 20 service.go:242] Received response from host: affinity-clusterip-transition-v55mx
  I1109 12:27:16.395819 20 service.go:242] Received response from host: affinity-clusterip-transition-zvdbc
  I1109 12:27:16.395827 20 service.go:242] Received response from host: affinity-clusterip-transition-v55mx
  I1109 12:27:16.395841 20 service.go:242] Received response from host: affinity-clusterip-transition-98kkd
  I1109 12:27:16.395853 20 service.go:242] Received response from host: affinity-clusterip-transition-zvdbc
  I1109 12:27:16.395859 20 service.go:242] Received response from host: affinity-clusterip-transition-v55mx
  I1109 12:27:16.395865 20 service.go:242] Received response from host: affinity-clusterip-transition-v55mx
  I1109 12:27:16.395872 20 service.go:242] Received response from host: affinity-clusterip-transition-zvdbc
  I1109 12:27:16.395880 20 service.go:242] Received response from host: affinity-clusterip-transition-98kkd
  I1109 12:27:16.395887 20 service.go:242] Received response from host: affinity-clusterip-transition-zvdbc
  I1109 12:27:16.396057 20 service.go:242] Received response from host: affinity-clusterip-transition-zvdbc
  I1109 12:27:16.396094 20 service.go:242] Received response from host: affinity-clusterip-transition-98kkd
  I1109 12:27:16.396103 20 service.go:242] Received response from host: affinity-clusterip-transition-zvdbc
  I1109 12:27:16.396109 20 service.go:242] Received response from host: affinity-clusterip-transition-v55mx
  I1109 12:27:16.396116 20 service.go:242] Received response from host: affinity-clusterip-transition-98kkd
  I1109 12:27:16.396123 20 service.go:242] Received response from host: affinity-clusterip-transition-zvdbc
  I1109 12:27:16.404868 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-3229 exec execpod-affinitywpxmj -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.238:80/ ; done'
  I1109 12:27:16.551081 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.238:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.238:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.238:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.238:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.238:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.238:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.238:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.238:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.238:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.238:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.238:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.238:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.238:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.238:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.238:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.238:80/\n"
  I1109 12:27:16.551134 20 builder.go:147] stdout: "\naffinity-clusterip-transition-zvdbc\naffinity-clusterip-transition-zvdbc\naffinity-clusterip-transition-zvdbc\naffinity-clusterip-transition-zvdbc\naffinity-clusterip-transition-zvdbc\naffinity-clusterip-transition-zvdbc\naffinity-clusterip-transition-zvdbc\naffinity-clusterip-transition-zvdbc\naffinity-clusterip-transition-zvdbc\naffinity-clusterip-transition-zvdbc\naffinity-clusterip-transition-zvdbc\naffinity-clusterip-transition-zvdbc\naffinity-clusterip-transition-zvdbc\naffinity-clusterip-transition-zvdbc\naffinity-clusterip-transition-zvdbc\naffinity-clusterip-transition-zvdbc"
  I1109 12:27:16.551146 20 service.go:242] Received response from host: affinity-clusterip-transition-zvdbc
  I1109 12:27:16.551160 20 service.go:242] Received response from host: affinity-clusterip-transition-zvdbc
  I1109 12:27:16.551166 20 service.go:242] Received response from host: affinity-clusterip-transition-zvdbc
  I1109 12:27:16.551173 20 service.go:242] Received response from host: affinity-clusterip-transition-zvdbc
  I1109 12:27:16.551181 20 service.go:242] Received response from host: affinity-clusterip-transition-zvdbc
  I1109 12:27:16.551186 20 service.go:242] Received response from host: affinity-clusterip-transition-zvdbc
  I1109 12:27:16.551192 20 service.go:242] Received response from host: affinity-clusterip-transition-zvdbc
  I1109 12:27:16.551200 20 service.go:242] Received response from host: affinity-clusterip-transition-zvdbc
  I1109 12:27:16.551208 20 service.go:242] Received response from host: affinity-clusterip-transition-zvdbc
  I1109 12:27:16.551218 20 service.go:242] Received response from host: affinity-clusterip-transition-zvdbc
  I1109 12:27:16.551223 20 service.go:242] Received response from host: affinity-clusterip-transition-zvdbc
  I1109 12:27:16.551260 20 service.go:242] Received response from host: affinity-clusterip-transition-zvdbc
  I1109 12:27:16.551267 20 service.go:242] Received response from host: affinity-clusterip-transition-zvdbc
  I1109 12:27:16.551273 20 service.go:242] Received response from host: affinity-clusterip-transition-zvdbc
  I1109 12:27:16.551280 20 service.go:242] Received response from host: affinity-clusterip-transition-zvdbc
  I1109 12:27:16.551287 20 service.go:242] Received response from host: affinity-clusterip-transition-zvdbc
  I1109 12:27:16.551391 20 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-3229, will wait for the garbage collector to delete the pods @ 11/09/24 12:27:16.566
  I1109 12:27:16.628711 20 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 6.501766ms
  I1109 12:27:16.729055 20 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 100.322787ms
  I1109 12:27:19.948115 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3229" for this suite. @ 11/09/24 12:27:19.951
â€¢ [9.978 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 11/09/24 12:27:19.959
  I1109 12:27:19.959525 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename configmap @ 11/09/24 12:27:19.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:27:19.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:27:19.976
  STEP: Creating configMap with name cm-test-opt-del-935a45d3-de51-4eee-b4a5-148d8daf69f6 @ 11/09/24 12:27:19.981
  STEP: Creating configMap with name cm-test-opt-upd-39915262-543d-458a-b392-0df2f8817aaa @ 11/09/24 12:27:19.985
  STEP: Creating the pod @ 11/09/24 12:27:19.989
  STEP: Deleting configmap cm-test-opt-del-935a45d3-de51-4eee-b4a5-148d8daf69f6 @ 11/09/24 12:27:22.026
  STEP: Updating configmap cm-test-opt-upd-39915262-543d-458a-b392-0df2f8817aaa @ 11/09/24 12:27:22.033
  STEP: Creating configMap with name cm-test-opt-create-ddd8903a-d670-4e06-896d-4ea6bde9655e @ 11/09/24 12:27:22.039
  STEP: waiting to observe update in volume @ 11/09/24 12:27:22.043
  I1109 12:28:28.351690 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2444" for this suite. @ 11/09/24 12:28:28.355
â€¢ [68.403 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1690
  STEP: Creating a kubernetes client @ 11/09/24 12:28:28.362
  I1109 12:28:28.362551 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename kubectl @ 11/09/24 12:28:28.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:28:28.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:28:28.381
  STEP: creating Agnhost RC @ 11/09/24 12:28:28.384
  I1109 12:28:28.384879 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-7307 create -f -'
  I1109 12:28:28.467512 20 builder.go:146] stderr: ""
  I1109 12:28:28.467551 20 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 11/09/24 12:28:28.467
  I1109 12:28:29.473720 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1109 12:28:29.473753 20 framework.go:733] Found 1 / 1
  I1109 12:28:29.473768 20 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 11/09/24 12:28:29.473
  I1109 12:28:29.477154 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1109 12:28:29.477174 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1109 12:28:29.477275 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-7307 patch pod agnhost-primary-8gkp6 -p {"metadata":{"annotations":{"x":"y"}}}'
  I1109 12:28:29.536367 20 builder.go:146] stderr: ""
  I1109 12:28:29.536408 20 builder.go:147] stdout: "pod/agnhost-primary-8gkp6 patched\n"
  STEP: checking annotations @ 11/09/24 12:28:29.536
  I1109 12:28:29.540008 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1109 12:28:29.540030 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1109 12:28:29.540155 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7307" for this suite. @ 11/09/24 12:28:29.543
â€¢ [1.187 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 11/09/24 12:28:29.549
  I1109 12:28:29.549948 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename gc @ 11/09/24 12:28:29.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:28:29.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:28:29.569
  STEP: create the deployment @ 11/09/24 12:28:29.571
  W1109 12:28:29.576084      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 11/09/24 12:28:29.576
  STEP: delete the deployment @ 11/09/24 12:28:30.084
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 11/09/24 12:28:30.091
  STEP: Gathering metrics @ 11/09/24 12:28:30.608
  W1109 12:28:30.613436      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1109 12:28:30.613467 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1109 12:28:30.613590 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8985" for this suite. @ 11/09/24 12:28:30.616
â€¢ [1.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 11/09/24 12:28:30.623
  I1109 12:28:30.623115 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename podtemplate @ 11/09/24 12:28:30.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:28:30.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:28:30.64
  STEP: Create set of pod templates @ 11/09/24 12:28:30.643
  I1109 12:28:30.648685 20 podtemplates.go:143] created test-podtemplate-1
  I1109 12:28:30.655300 20 podtemplates.go:143] created test-podtemplate-2
  I1109 12:28:30.660085 20 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 11/09/24 12:28:30.66
  STEP: delete collection of pod templates @ 11/09/24 12:28:30.662
  I1109 12:28:30.663014 20 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 11/09/24 12:28:30.676
  I1109 12:28:30.677131 20 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I1109 12:28:30.679893 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-8183" for this suite. @ 11/09/24 12:28:30.682
â€¢ [0.065 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 11/09/24 12:28:30.688
  I1109 12:28:30.688027 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename svcaccounts @ 11/09/24 12:28:30.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:28:30.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:28:30.705
  STEP: Creating ServiceAccount "e2e-sa-cqf5w"  @ 11/09/24 12:28:30.708
  I1109 12:28:30.712880 20 service_accounts.go:825] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-cqf5w"  @ 11/09/24 12:28:30.713
  I1109 12:28:30.722222 20 service_accounts.go:839] AutomountServiceAccountToken: true
  I1109 12:28:30.722372 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2499" for this suite. @ 11/09/24 12:28:30.725
â€¢ [0.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 11/09/24 12:28:30.731
  I1109 12:28:30.731613 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename pv @ 11/09/24 12:28:30.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:28:30.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:28:30.751
  STEP: Creating initial PV and PVC @ 11/09/24 12:28:30.754
  I1109 12:28:30.754514 20 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-3622" @ 11/09/24 12:28:30.767
  STEP: Listing PVCs in namespace "pv-3622" @ 11/09/24 12:28:30.772
  STEP: Reading "pvc-cjd9r" Status @ 11/09/24 12:28:30.774
  STEP: Reading "pv-3622-rz5kl" Status @ 11/09/24 12:28:30.778
  STEP: Patching "pvc-cjd9r" Status @ 11/09/24 12:28:30.784
  STEP: Patching "pv-3622-rz5kl" Status @ 11/09/24 12:28:30.789
  STEP: Updating "pvc-cjd9r" Status @ 11/09/24 12:28:30.808
  STEP: Updating "pv-3622-rz5kl" Status @ 11/09/24 12:28:30.835
  I1109 12:28:30.844657 20 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I1109 12:28:30.844688 20 pv.go:205] Deleting PersistentVolumeClaim "pvc-cjd9r"
  I1109 12:28:30.852114 20 pv.go:193] Deleting PersistentVolume "pv-3622-rz5kl"
  I1109 12:28:30.858094 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-3622" for this suite. @ 11/09/24 12:28:30.862
â€¢ [0.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 11/09/24 12:28:30.871
  I1109 12:28:30.871078 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename svcaccounts @ 11/09/24 12:28:30.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:28:30.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:28:30.889
  I1109 12:28:30.897169 20 service_accounts.go:754] Got root ca configmap in namespace "svcaccounts-2145"
  I1109 12:28:30.903208 20 service_accounts.go:757] Deleted root ca configmap in namespace "svcaccounts-2145"
  STEP: waiting for a new root ca configmap created @ 11/09/24 12:28:31.403
  I1109 12:28:31.408434 20 service_accounts.go:771] Recreated root ca configmap in namespace "svcaccounts-2145"
  I1109 12:28:31.412799 20 service_accounts.go:782] Updated root ca configmap in namespace "svcaccounts-2145"
  STEP: waiting for the root ca configmap reconciled @ 11/09/24 12:28:31.913
  I1109 12:28:31.918927 20 service_accounts.go:800] Reconciled root ca configmap in namespace "svcaccounts-2145"
  I1109 12:28:31.919122 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2145" for this suite. @ 11/09/24 12:28:31.922
â€¢ [1.058 seconds]
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:750
  STEP: Creating a kubernetes client @ 11/09/24 12:28:31.929
  I1109 12:28:31.929068 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename services @ 11/09/24 12:28:31.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:28:31.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:28:31.947
  I1109 12:28:31.958178 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6512" for this suite. @ 11/09/24 12:28:31.965
â€¢ [0.042 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 11/09/24 12:28:31.971
  I1109 12:28:31.971516 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename subpath @ 11/09/24 12:28:31.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:28:31.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:28:31.989
  STEP: Setting up data @ 11/09/24 12:28:31.991
  STEP: Creating pod pod-subpath-test-projected-8q4h @ 11/09/24 12:28:32
  STEP: Creating a pod to test atomic-volume-subpath @ 11/09/24 12:28:32
  STEP: Saw pod success @ 11/09/24 12:28:56.07
  I1109 12:28:56.076184 20 output.go:196] Trying to get logs from node ip-172-31-94-169 pod pod-subpath-test-projected-8q4h container test-container-subpath-projected-8q4h: <nil>
  STEP: delete the pod @ 11/09/24 12:28:56.098
  STEP: Deleting pod pod-subpath-test-projected-8q4h @ 11/09/24 12:28:56.112
  I1109 12:28:56.112439 20 delete.go:62] Deleting pod "pod-subpath-test-projected-8q4h" in namespace "subpath-1286"
  I1109 12:28:56.116083 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1286" for this suite. @ 11/09/24 12:28:56.119
â€¢ [24.154 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 11/09/24 12:28:56.125
  I1109 12:28:56.125666 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename webhook @ 11/09/24 12:28:56.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:28:56.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:28:56.143
  STEP: Setting up server cert @ 11/09/24 12:28:56.163
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/09/24 12:28:56.364
  STEP: Deploying the webhook pod @ 11/09/24 12:28:56.371
  STEP: Wait for the deployment to be ready @ 11/09/24 12:28:56.384
  I1109 12:28:56.390786 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/09/24 12:28:58.403
  STEP: Verifying the service has paired with the endpoint @ 11/09/24 12:28:58.415
  I1109 12:28:59.415284 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 11/09/24 12:28:59.423
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 11/09/24 12:28:59.436
  STEP: Creating a dummy validating-webhook-configuration object @ 11/09/24 12:28:59.447
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 11/09/24 12:28:59.456
  STEP: Creating a dummy mutating-webhook-configuration object @ 11/09/24 12:28:59.461
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 11/09/24 12:28:59.47
  I1109 12:28:59.523002 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6103" for this suite. @ 11/09/24 12:28:59.527
  STEP: Destroying namespace "webhook-markers-9789" for this suite. @ 11/09/24 12:28:59.533
â€¢ [3.414 seconds]
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 11/09/24 12:28:59.539
  I1109 12:28:59.539334 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename security-context-test @ 11/09/24 12:28:59.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:28:59.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:28:59.555
  I1109 12:29:03.586285 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-625" for this suite. @ 11/09/24 12:29:03.59
â€¢ [4.057 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 11/09/24 12:29:03.596
  I1109 12:29:03.596764 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename container-probe @ 11/09/24 12:29:03.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:29:03.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:29:03.614
  STEP: Creating pod busybox-1c38de49-9503-4cda-8d21-1d0844c86ccf in namespace container-probe-4105 @ 11/09/24 12:29:03.617
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/09/24 12:29:05.633
  I1109 12:29:05.637436 20 container_probe.go:1749] Initial restart count of pod busybox-1c38de49-9503-4cda-8d21-1d0844c86ccf is 0
  I1109 12:29:05.640402 20 container_probe.go:1759] Get pod busybox-1c38de49-9503-4cda-8d21-1d0844c86ccf in namespace container-probe-4105
  I1109 12:29:07.645845 20 container_probe.go:1759] Get pod busybox-1c38de49-9503-4cda-8d21-1d0844c86ccf in namespace container-probe-4105
  I1109 12:29:09.650701 20 container_probe.go:1759] Get pod busybox-1c38de49-9503-4cda-8d21-1d0844c86ccf in namespace container-probe-4105
  I1109 12:29:11.655072 20 container_probe.go:1759] Get pod busybox-1c38de49-9503-4cda-8d21-1d0844c86ccf in namespace container-probe-4105
  I1109 12:29:13.660035 20 container_probe.go:1759] Get pod busybox-1c38de49-9503-4cda-8d21-1d0844c86ccf in namespace container-probe-4105
  I1109 12:29:15.664493 20 container_probe.go:1759] Get pod busybox-1c38de49-9503-4cda-8d21-1d0844c86ccf in namespace container-probe-4105
  I1109 12:29:17.669245 20 container_probe.go:1759] Get pod busybox-1c38de49-9503-4cda-8d21-1d0844c86ccf in namespace container-probe-4105
  I1109 12:29:19.673307 20 container_probe.go:1759] Get pod busybox-1c38de49-9503-4cda-8d21-1d0844c86ccf in namespace container-probe-4105
  I1109 12:29:21.678555 20 container_probe.go:1759] Get pod busybox-1c38de49-9503-4cda-8d21-1d0844c86ccf in namespace container-probe-4105
  I1109 12:29:23.684704 20 container_probe.go:1759] Get pod busybox-1c38de49-9503-4cda-8d21-1d0844c86ccf in namespace container-probe-4105
  I1109 12:29:25.688745 20 container_probe.go:1759] Get pod busybox-1c38de49-9503-4cda-8d21-1d0844c86ccf in namespace container-probe-4105
  I1109 12:29:27.693522 20 container_probe.go:1759] Get pod busybox-1c38de49-9503-4cda-8d21-1d0844c86ccf in namespace container-probe-4105
  I1109 12:29:29.699411 20 container_probe.go:1759] Get pod busybox-1c38de49-9503-4cda-8d21-1d0844c86ccf in namespace container-probe-4105
  I1109 12:29:31.703876 20 container_probe.go:1759] Get pod busybox-1c38de49-9503-4cda-8d21-1d0844c86ccf in namespace container-probe-4105
  I1109 12:29:33.709568 20 container_probe.go:1759] Get pod busybox-1c38de49-9503-4cda-8d21-1d0844c86ccf in namespace container-probe-4105
  I1109 12:29:35.713363 20 container_probe.go:1759] Get pod busybox-1c38de49-9503-4cda-8d21-1d0844c86ccf in namespace container-probe-4105
  I1109 12:29:37.718923 20 container_probe.go:1759] Get pod busybox-1c38de49-9503-4cda-8d21-1d0844c86ccf in namespace container-probe-4105
  I1109 12:29:39.724675 20 container_probe.go:1759] Get pod busybox-1c38de49-9503-4cda-8d21-1d0844c86ccf in namespace container-probe-4105
  I1109 12:29:41.730733 20 container_probe.go:1759] Get pod busybox-1c38de49-9503-4cda-8d21-1d0844c86ccf in namespace container-probe-4105
  I1109 12:29:43.736067 20 container_probe.go:1759] Get pod busybox-1c38de49-9503-4cda-8d21-1d0844c86ccf in namespace container-probe-4105
  I1109 12:29:45.740950 20 container_probe.go:1759] Get pod busybox-1c38de49-9503-4cda-8d21-1d0844c86ccf in namespace container-probe-4105
  I1109 12:29:47.745950 20 container_probe.go:1759] Get pod busybox-1c38de49-9503-4cda-8d21-1d0844c86ccf in namespace container-probe-4105
  I1109 12:29:49.749921 20 container_probe.go:1759] Get pod busybox-1c38de49-9503-4cda-8d21-1d0844c86ccf in namespace container-probe-4105
  I1109 12:29:51.755348 20 container_probe.go:1759] Get pod busybox-1c38de49-9503-4cda-8d21-1d0844c86ccf in namespace container-probe-4105
  I1109 12:29:53.761095 20 container_probe.go:1759] Get pod busybox-1c38de49-9503-4cda-8d21-1d0844c86ccf in namespace container-probe-4105
  I1109 12:29:55.769486 20 container_probe.go:1759] Get pod busybox-1c38de49-9503-4cda-8d21-1d0844c86ccf in namespace container-probe-4105
  I1109 12:29:55.769523 20 container_probe.go:1763] Restart count of pod container-probe-4105/busybox-1c38de49-9503-4cda-8d21-1d0844c86ccf is now 1 (50.132060504s elapsed)
  STEP: deleting the pod @ 11/09/24 12:29:55.769
  I1109 12:29:55.782879 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4105" for this suite. @ 11/09/24 12:29:55.785
â€¢ [52.196 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:341
  STEP: Creating a kubernetes client @ 11/09/24 12:29:55.792
  I1109 12:29:55.792809 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename cronjob @ 11/09/24 12:29:55.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:29:55.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:29:55.807
  STEP: Creating a cronjob @ 11/09/24 12:29:55.811
  STEP: creating @ 11/09/24 12:29:55.811
  STEP: getting @ 11/09/24 12:29:55.816
  STEP: listing @ 11/09/24 12:29:55.819
  STEP: watching @ 11/09/24 12:29:55.822
  I1109 12:29:55.822558 20 cronjob.go:370] starting watch
  STEP: cluster-wide listing @ 11/09/24 12:29:55.823
  STEP: cluster-wide watching @ 11/09/24 12:29:55.826
  I1109 12:29:55.826404 20 cronjob.go:382] starting watch
  STEP: patching @ 11/09/24 12:29:55.827
  STEP: updating @ 11/09/24 12:29:55.832
  I1109 12:29:55.844605 20 cronjob.go:406] waiting for watch events with expected annotations
  I1109 12:29:55.844643 20 cronjob.go:420] saw patched and updated annotations
  STEP: patching /status @ 11/09/24 12:29:55.844
  STEP: updating /status @ 11/09/24 12:29:55.849
  STEP: get /status @ 11/09/24 12:29:55.856
  STEP: deleting @ 11/09/24 12:29:55.859
  STEP: deleting a collection @ 11/09/24 12:29:55.874
  I1109 12:29:55.884947 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5125" for this suite. @ 11/09/24 12:29:55.888
â€¢ [0.103 seconds]
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 11/09/24 12:29:55.895
  I1109 12:29:55.895694 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename proxy @ 11/09/24 12:29:55.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:29:55.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:29:55.909
  I1109 12:29:55.911897 20 proxy.go:387] Creating pod...
  I1109 12:29:57.929359 20 proxy.go:411] Creating service...
  I1109 12:29:57.940867 20 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1172/pods/agnhost/proxy?method=DELETE
  I1109 12:29:57.949567 20 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1109 12:29:57.949599 20 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1172/pods/agnhost/proxy?method=OPTIONS
  I1109 12:29:57.952718 20 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1109 12:29:57.952736 20 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1172/pods/agnhost/proxy?method=PATCH
  I1109 12:29:57.955601 20 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1109 12:29:57.955636 20 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1172/pods/agnhost/proxy?method=POST
  I1109 12:29:57.959085 20 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1109 12:29:57.959115 20 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1172/pods/agnhost/proxy?method=PUT
  I1109 12:29:57.963410 20 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1109 12:29:57.963445 20 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1172/services/e2e-proxy-test-service/proxy?method=DELETE
  I1109 12:29:57.968718 20 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1109 12:29:57.968742 20 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1172/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I1109 12:29:57.972988 20 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1109 12:29:57.973030 20 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1172/services/e2e-proxy-test-service/proxy?method=PATCH
  I1109 12:29:57.977408 20 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1109 12:29:57.977427 20 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1172/services/e2e-proxy-test-service/proxy?method=POST
  I1109 12:29:57.981947 20 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1109 12:29:57.981968 20 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1172/services/e2e-proxy-test-service/proxy?method=PUT
  I1109 12:29:57.986144 20 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1109 12:29:57.986170 20 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1172/pods/agnhost/proxy?method=GET
  I1109 12:29:57.989194 20 proxy.go:487] http.Client request:GET StatusCode:301
  I1109 12:29:57.989258 20 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1172/services/e2e-proxy-test-service/proxy?method=GET
  I1109 12:29:57.993399 20 proxy.go:487] http.Client request:GET StatusCode:301
  I1109 12:29:57.993437 20 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1172/pods/agnhost/proxy?method=HEAD
  I1109 12:29:57.995738 20 proxy.go:487] http.Client request:HEAD StatusCode:301
  I1109 12:29:57.995759 20 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1172/services/e2e-proxy-test-service/proxy?method=HEAD
  I1109 12:29:58.000487 20 proxy.go:487] http.Client request:HEAD StatusCode:301
  I1109 12:29:58.000652 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1172" for this suite. @ 11/09/24 12:29:58.004
â€¢ [2.116 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 11/09/24 12:29:58.012
  I1109 12:29:58.012157 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename configmap @ 11/09/24 12:29:58.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:29:58.023
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:29:58.026
  STEP: Creating configMap with name configmap-test-volume-fbb214c2-e358-4d0e-a8ed-f1eb464da05e @ 11/09/24 12:29:58.029
  STEP: Creating a pod to test consume configMaps @ 11/09/24 12:29:58.033
  STEP: Saw pod success @ 11/09/24 12:30:02.056
  I1109 12:30:02.059015 20 output.go:196] Trying to get logs from node ip-172-31-94-169 pod pod-configmaps-217b03db-d868-46bf-a254-4a5c159b970c container configmap-volume-test: <nil>
  STEP: delete the pod @ 11/09/24 12:30:02.067
  I1109 12:30:02.086372 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7676" for this suite. @ 11/09/24 12:30:02.089
â€¢ [4.084 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:644
  STEP: Creating a kubernetes client @ 11/09/24 12:30:02.096
  I1109 12:30:02.096762 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename statefulset @ 11/09/24 12:30:02.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:30:02.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:30:02.116
  STEP: Creating service test in namespace statefulset-6617 @ 11/09/24 12:30:02.118
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 11/09/24 12:30:02.125
  STEP: Creating stateful set ss in namespace statefulset-6617 @ 11/09/24 12:30:02.129
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-6617 @ 11/09/24 12:30:02.135
  I1109 12:30:02.140813 20 wait.go:40] Found 0 stateful pods, waiting for 1
  I1109 12:30:12.141450 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 11/09/24 12:30:12.141
  I1109 12:30:12.145323 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=statefulset-6617 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1109 12:30:12.223941 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1109 12:30:12.223980 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1109 12:30:12.223991 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1109 12:30:12.228330 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I1109 12:30:22.228577 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1109 12:30:22.228617 20 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1109 12:30:22.248336 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 9.99999975s
  I1109 12:30:23.253623 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 8.994628003s
  I1109 12:30:24.258329 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 7.990168018s
  I1109 12:30:25.263656 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 6.98542538s
  I1109 12:30:26.267502 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 5.980243427s
  I1109 12:30:27.272088 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 4.97562929s
  I1109 12:30:28.276894 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 3.971615004s
  I1109 12:30:29.281922 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 2.965974585s
  I1109 12:30:30.286483 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 1.961861025s
  I1109 12:30:31.291906 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 956.400001ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-6617 @ 11/09/24 12:30:32.292
  I1109 12:30:32.296722 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=statefulset-6617 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1109 12:30:32.379698 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1109 12:30:32.379742 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1109 12:30:32.379751 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1109 12:30:32.383422 20 wait.go:40] Found 1 stateful pods, waiting for 3
  I1109 12:30:42.384975 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1109 12:30:42.385028 20 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I1109 12:30:42.385036 20 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 11/09/24 12:30:42.385
  STEP: Scale down will halt with unhealthy stateful pod @ 11/09/24 12:30:42.385
  I1109 12:30:42.392736 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=statefulset-6617 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1109 12:30:42.472672 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1109 12:30:42.472712 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1109 12:30:42.472731 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1109 12:30:42.472787 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=statefulset-6617 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1109 12:30:42.559451 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1109 12:30:42.559497 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1109 12:30:42.559506 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1109 12:30:42.559699 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=statefulset-6617 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1109 12:30:42.645819 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1109 12:30:42.645865 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1109 12:30:42.645875 20 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1109 12:30:42.645884 20 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1109 12:30:42.649600 20 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I1109 12:30:52.656417 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1109 12:30:52.656452 20 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I1109 12:30:52.656460 20 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I1109 12:30:52.667787 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 9.999999743s
  I1109 12:30:53.672717 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.996338577s
  I1109 12:30:54.676603 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.991815618s
  I1109 12:30:55.681356 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.98765028s
  I1109 12:30:56.686045 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.983164709s
  I1109 12:30:57.691027 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.978350612s
  I1109 12:30:58.695618 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.973332632s
  I1109 12:30:59.700188 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.968961457s
  I1109 12:31:00.705160 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.964243452s
  I1109 12:31:01.709419 20 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 959.358998ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-6617 @ 11/09/24 12:31:02.709
  I1109 12:31:02.714410 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=statefulset-6617 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1109 12:31:02.789201 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1109 12:31:02.789258 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1109 12:31:02.789269 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1109 12:31:02.789327 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=statefulset-6617 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1109 12:31:02.864300 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1109 12:31:02.864340 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1109 12:31:02.864352 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1109 12:31:02.864406 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=statefulset-6617 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1109 12:31:02.943667 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1109 12:31:02.943712 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1109 12:31:02.943722 20 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1109 12:31:02.943738 20 rest.go:150] Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 11/09/24 12:31:12.953
  I1109 12:31:12.953465 20 statefulset.go:138] Deleting all statefulset in ns statefulset-6617
  I1109 12:31:12.956799 20 rest.go:150] Scaling statefulset ss to 0
  I1109 12:31:12.963925 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1109 12:31:12.966223 20 rest.go:88] Deleting statefulset ss
  I1109 12:31:12.979097 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6617" for this suite. @ 11/09/24 12:31:12.982
â€¢ [70.892 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 11/09/24 12:31:12.988
  I1109 12:31:12.988564 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename taint-multiple-pods @ 11/09/24 12:31:12.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:31:13.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:31:13.009
  I1109 12:31:13.011312 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1109 12:32:13.012385 20 util.go:393] Waiting for terminating namespaces to be deleted...
  I1109 12:32:13.016607 20 taints.go:144] Starting informer...
  STEP: Starting pods... @ 11/09/24 12:32:13.016
  I1109 12:32:13.234509 20 taints.go:463] Pod1 is running on ip-172-31-65-76. Tainting Node
  I1109 12:32:15.455952 20 taints.go:471] Pod2 is running on ip-172-31-65-76. Tainting Node
  STEP: Trying to apply a taint on the Node @ 11/09/24 12:32:15.455
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 11/09/24 12:32:15.465
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 11/09/24 12:32:15.468
  I1109 12:32:21.259942 20 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  I1109 12:32:41.295285 20 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 11/09/24 12:32:41.305
  I1109 12:32:41.309706 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-2881" for this suite. @ 11/09/24 12:32:41.313
â€¢ [88.334 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 11/09/24 12:32:41.322
  I1109 12:32:41.322881 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename kubelet-test @ 11/09/24 12:32:41.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:32:41.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:32:41.347
  STEP: Waiting for pod completion @ 11/09/24 12:32:41.358
  I1109 12:32:45.385371 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5431" for this suite. @ 11/09/24 12:32:45.389
â€¢ [4.073 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 11/09/24 12:32:45.395
  I1109 12:32:45.395606 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename projected @ 11/09/24 12:32:45.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:32:45.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:32:45.411
  STEP: Creating a pod to test downward API volume plugin @ 11/09/24 12:32:45.414
  STEP: Saw pod success @ 11/09/24 12:32:47.431
  I1109 12:32:47.434559 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod downwardapi-volume-a0ae5bdf-7da7-4845-a6fd-fd3a48a23bd4 container client-container: <nil>
  STEP: delete the pod @ 11/09/24 12:32:47.441
  I1109 12:32:47.458436 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2634" for this suite. @ 11/09/24 12:32:47.461
â€¢ [2.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 11/09/24 12:32:47.467
  I1109 12:32:47.467277 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename webhook @ 11/09/24 12:32:47.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:32:47.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:32:47.483
  STEP: Setting up server cert @ 11/09/24 12:32:47.504
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/09/24 12:32:47.868
  STEP: Deploying the webhook pod @ 11/09/24 12:32:47.877
  STEP: Wait for the deployment to be ready @ 11/09/24 12:32:47.89
  I1109 12:32:47.896784 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/09/24 12:32:49.907
  STEP: Verifying the service has paired with the endpoint @ 11/09/24 12:32:49.918
  I1109 12:32:50.919035 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 11/09/24 12:32:50.927
  STEP: Registering slow webhook via the AdmissionRegistration API @ 11/09/24 12:32:50.927
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 11/09/24 12:32:50.94
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 11/09/24 12:32:51.951
  STEP: Registering slow webhook via the AdmissionRegistration API @ 11/09/24 12:32:51.951
  STEP: Having no error when timeout is longer than webhook latency @ 11/09/24 12:32:52.98
  STEP: Registering slow webhook via the AdmissionRegistration API @ 11/09/24 12:32:52.98
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 11/09/24 12:32:58.013
  STEP: Registering slow webhook via the AdmissionRegistration API @ 11/09/24 12:32:58.013
  I1109 12:33:03.095854 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9625" for this suite. @ 11/09/24 12:33:03.099
  STEP: Destroying namespace "webhook-markers-9957" for this suite. @ 11/09/24 12:33:03.105
â€¢ [15.645 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 11/09/24 12:33:03.112
  I1109 12:33:03.112846 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 11/09/24 12:33:03.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:33:03.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:33:03.13
  STEP: create the container to handle the HTTPGet hook request. @ 11/09/24 12:33:03.136
  STEP: create the pod with lifecycle hook @ 11/09/24 12:33:05.16
  STEP: delete the pod with lifecycle hook @ 11/09/24 12:33:07.179
  STEP: check prestop hook @ 11/09/24 12:33:09.198
  I1109 12:33:09.216004 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4911" for this suite. @ 11/09/24 12:33:09.22
â€¢ [6.115 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 11/09/24 12:33:09.227
  I1109 12:33:09.227620 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/09/24 12:33:09.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:33:09.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:33:09.246
  I1109 12:33:09.249075 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 11/09/24 12:33:10.716
  I1109 12:33:10.716634 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=crd-publish-openapi-5291 --namespace=crd-publish-openapi-5291 create -f -'
  I1109 12:33:12.783509 20 builder.go:146] stderr: ""
  I1109 12:33:12.783550 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5605-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I1109 12:33:12.783676 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=crd-publish-openapi-5291 --namespace=crd-publish-openapi-5291 delete e2e-test-crd-publish-openapi-5605-crds test-cr'
  I1109 12:33:12.841217 20 builder.go:146] stderr: ""
  I1109 12:33:12.841275 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5605-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I1109 12:33:12.841324 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=crd-publish-openapi-5291 --namespace=crd-publish-openapi-5291 apply -f -'
  I1109 12:33:12.899167 20 builder.go:146] stderr: ""
  I1109 12:33:12.899204 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5605-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I1109 12:33:12.899264 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=crd-publish-openapi-5291 --namespace=crd-publish-openapi-5291 delete e2e-test-crd-publish-openapi-5605-crds test-cr'
  I1109 12:33:12.951112 20 builder.go:146] stderr: ""
  I1109 12:33:12.951156 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5605-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 11/09/24 12:33:12.951
  I1109 12:33:12.951245 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=crd-publish-openapi-5291 explain e2e-test-crd-publish-openapi-5605-crds'
  I1109 12:33:12.994912 20 builder.go:146] stderr: ""
  I1109 12:33:12.994977 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-5605-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I1109 12:33:14.204573 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5291" for this suite. @ 11/09/24 12:33:14.211
â€¢ [4.991 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 11/09/24 12:33:14.218
  I1109 12:33:14.218915 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 11/09/24 12:33:14.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:33:14.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:33:14.238
  STEP: create the container to handle the HTTPGet hook request. @ 11/09/24 12:33:14.245
  STEP: create the pod with lifecycle hook @ 11/09/24 12:33:16.272
  STEP: check poststart hook @ 11/09/24 12:33:18.292
  STEP: delete the pod with lifecycle hook @ 11/09/24 12:33:18.302
  I1109 12:33:20.317214 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1785" for this suite. @ 11/09/24 12:33:20.321
â€¢ [6.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 11/09/24 12:33:20.329
  I1109 12:33:20.329022 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename configmap @ 11/09/24 12:33:20.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:33:20.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:33:20.35
  STEP: Creating configMap with name configmap-test-volume-1526c01f-f419-4d3b-9aa7-1ed736ce1c95 @ 11/09/24 12:33:20.353
  STEP: Creating a pod to test consume configMaps @ 11/09/24 12:33:20.357
  STEP: Saw pod success @ 11/09/24 12:33:24.378
  I1109 12:33:24.382651 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-configmaps-1df3c854-51bb-4d07-89fc-f68fb918eef0 container agnhost-container: <nil>
  STEP: delete the pod @ 11/09/24 12:33:24.393
  I1109 12:33:24.411349 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6470" for this suite. @ 11/09/24 12:33:24.415
â€¢ [4.093 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 11/09/24 12:33:24.421
  I1109 12:33:24.421991 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename projected @ 11/09/24 12:33:24.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:33:24.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:33:24.447
  STEP: Creating configMap with name projected-configmap-test-volume-c8d39a9d-bd4e-4896-a661-84d06b2b78d8 @ 11/09/24 12:33:24.45
  STEP: Creating a pod to test consume configMaps @ 11/09/24 12:33:24.453
  STEP: Saw pod success @ 11/09/24 12:33:28.476
  I1109 12:33:28.481165 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-projected-configmaps-7c8da1a8-1c6c-409c-968b-6ce785893de6 container agnhost-container: <nil>
  STEP: delete the pod @ 11/09/24 12:33:28.487
  I1109 12:33:28.505448 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7510" for this suite. @ 11/09/24 12:33:28.508
â€¢ [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 11/09/24 12:33:28.514
  I1109 12:33:28.514900 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename events @ 11/09/24 12:33:28.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:33:28.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:33:28.532
  STEP: creating a test event @ 11/09/24 12:33:28.535
  STEP: listing events in all namespaces @ 11/09/24 12:33:28.543
  STEP: listing events in test namespace @ 11/09/24 12:33:28.554
  STEP: listing events with field selection filtering on source @ 11/09/24 12:33:28.557
  STEP: listing events with field selection filtering on reportingController @ 11/09/24 12:33:28.561
  STEP: getting the test event @ 11/09/24 12:33:28.564
  STEP: patching the test event @ 11/09/24 12:33:28.567
  STEP: getting the test event @ 11/09/24 12:33:28.575
  STEP: updating the test event @ 11/09/24 12:33:28.578
  STEP: getting the test event @ 11/09/24 12:33:28.587
  STEP: deleting the test event @ 11/09/24 12:33:28.589
  STEP: listing events in all namespaces @ 11/09/24 12:33:28.598
  STEP: listing events in test namespace @ 11/09/24 12:33:28.609
  I1109 12:33:28.614554 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8150" for this suite. @ 11/09/24 12:33:28.618
â€¢ [0.110 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 11/09/24 12:33:28.624
  I1109 12:33:28.624645 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename emptydir @ 11/09/24 12:33:28.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:33:28.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:33:28.646
  STEP: Creating Pod @ 11/09/24 12:33:28.65
  STEP: Reading file content from the nginx-container @ 11/09/24 12:33:30.667
  I1109 12:33:30.667942 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-1393 PodName:pod-sharedvolume-b579f460-8ecf-426f-a110-b58d5f638481 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1109 12:33:30.667962 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  I1109 12:33:30.668510 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1109 12:33:30.668583 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-1393/pods/pod-sharedvolume-b579f460-8ecf-426f-a110-b58d5f638481/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  I1109 12:33:30.707057 20 exec_util.go:111] Exec stderr: ""
  I1109 12:33:30.707198 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1393" for this suite. @ 11/09/24 12:33:30.711
â€¢ [2.093 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 11/09/24 12:33:30.718
  I1109 12:33:30.718175 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename container-probe @ 11/09/24 12:33:30.718
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:33:30.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:33:30.74
  I1109 12:33:52.814477 20 container_probe.go:92] Container started at 2024-11-09 12:33:31 +0000 UTC, pod became ready at 2024-11-09 12:33:51 +0000 UTC
  I1109 12:33:52.814605 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-764" for this suite. @ 11/09/24 12:33:52.818
â€¢ [22.108 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 11/09/24 12:33:52.826
  I1109 12:33:52.826298 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename var-expansion @ 11/09/24 12:33:52.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:33:52.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:33:52.849
  I1109 12:33:54.871586 20 delete.go:62] Deleting pod "var-expansion-5a473712-c598-4825-a7e2-6010b1699130" in namespace "var-expansion-626"
  I1109 12:33:54.881079 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-5a473712-c598-4825-a7e2-6010b1699130" to be fully deleted
  I1109 12:33:56.888660 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-626" for this suite. @ 11/09/24 12:33:56.893
â€¢ [4.073 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 11/09/24 12:33:56.899
  I1109 12:33:56.899748 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/09/24 12:33:56.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:33:56.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:33:56.919
  I1109 12:33:56.921824 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 11/09/24 12:33:58.192
  I1109 12:33:58.192620 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=crd-publish-openapi-410 --namespace=crd-publish-openapi-410 create -f -'
  I1109 12:33:58.261446 20 builder.go:146] stderr: ""
  I1109 12:33:58.261493 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1126-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I1109 12:33:58.261538 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=crd-publish-openapi-410 --namespace=crd-publish-openapi-410 delete e2e-test-crd-publish-openapi-1126-crds test-cr'
  I1109 12:33:58.313876 20 builder.go:146] stderr: ""
  I1109 12:33:58.313914 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1126-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I1109 12:33:58.313956 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=crd-publish-openapi-410 --namespace=crd-publish-openapi-410 apply -f -'
  I1109 12:33:58.368984 20 builder.go:146] stderr: ""
  I1109 12:33:58.369021 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1126-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I1109 12:33:58.369080 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=crd-publish-openapi-410 --namespace=crd-publish-openapi-410 delete e2e-test-crd-publish-openapi-1126-crds test-cr'
  I1109 12:33:58.421016 20 builder.go:146] stderr: ""
  I1109 12:33:58.421054 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1126-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 11/09/24 12:33:58.421
  I1109 12:33:58.421135 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=crd-publish-openapi-410 explain e2e-test-crd-publish-openapi-1126-crds'
  I1109 12:33:58.465264 20 builder.go:146] stderr: ""
  I1109 12:33:58.465336 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-1126-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I1109 12:33:59.738060 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-410" for this suite. @ 11/09/24 12:33:59.744
â€¢ [2.851 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 11/09/24 12:33:59.75
  I1109 12:33:59.750550 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename watch @ 11/09/24 12:33:59.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:33:59.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:33:59.768
  STEP: creating a watch on configmaps @ 11/09/24 12:33:59.771
  STEP: creating a new configmap @ 11/09/24 12:33:59.772
  STEP: modifying the configmap once @ 11/09/24 12:33:59.775
  STEP: closing the watch once it receives two notifications @ 11/09/24 12:33:59.783
  I1109 12:33:59.783306 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3355  95945520-fe71-46b6-8e8c-0c69981a607b 11631 0 2024-11-09 12:33:59 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-11-09 12:33:59 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1109 12:33:59.783467 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3355  95945520-fe71-46b6-8e8c-0c69981a607b 11632 0 2024-11-09 12:33:59 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-11-09 12:33:59 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 11/09/24 12:33:59.783
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 11/09/24 12:33:59.79
  STEP: deleting the configmap @ 11/09/24 12:33:59.791
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 11/09/24 12:33:59.797
  I1109 12:33:59.797513 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3355  95945520-fe71-46b6-8e8c-0c69981a607b 11633 0 2024-11-09 12:33:59 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-11-09 12:33:59 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1109 12:33:59.797676 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3355  95945520-fe71-46b6-8e8c-0c69981a607b 11634 0 2024-11-09 12:33:59 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-11-09 12:33:59 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1109 12:33:59.797898 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3355" for this suite. @ 11/09/24 12:33:59.8
â€¢ [0.056 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 11/09/24 12:33:59.806
  I1109 12:33:59.806399 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename projected @ 11/09/24 12:33:59.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:33:59.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:33:59.822
  STEP: Creating the pod @ 11/09/24 12:33:59.825
  I1109 12:34:02.364916 20 pod_client.go:173] Successfully updated pod "annotationupdatee4d0eb51-58f8-4ccb-8ae1-e3827b05be45"
  I1109 12:34:04.381130 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6838" for this suite. @ 11/09/24 12:34:04.385
â€¢ [4.586 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 11/09/24 12:34:04.392
  I1109 12:34:04.392570 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename chunking @ 11/09/24 12:34:04.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:34:04.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:34:04.41
  STEP: creating a large number of resources @ 11/09/24 12:34:04.413
  STEP: retrieving those results in paged fashion several times @ 11/09/24 12:34:22.1
  I1109 12:34:22.147971 20 chunking.go:98] Retrieved 17/17 results with rv 12142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I1109 12:34:22.198599 20 chunking.go:98] Retrieved 17/17 results with rv 12142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1109 12:34:22.248551 20 chunking.go:98] Retrieved 17/17 results with rv 12142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1109 12:34:22.297969 20 chunking.go:98] Retrieved 17/17 results with rv 12142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1109 12:34:22.348402 20 chunking.go:98] Retrieved 17/17 results with rv 12142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1109 12:34:22.398168 20 chunking.go:98] Retrieved 17/17 results with rv 12142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1109 12:34:22.446884 20 chunking.go:98] Retrieved 17/17 results with rv 12142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1109 12:34:22.498114 20 chunking.go:98] Retrieved 17/17 results with rv 12142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1109 12:34:22.548411 20 chunking.go:98] Retrieved 17/17 results with rv 12142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1109 12:34:22.597796 20 chunking.go:98] Retrieved 17/17 results with rv 12142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1109 12:34:22.648611 20 chunking.go:98] Retrieved 17/17 results with rv 12142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1109 12:34:22.698702 20 chunking.go:98] Retrieved 17/17 results with rv 12142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1109 12:34:22.747999 20 chunking.go:98] Retrieved 17/17 results with rv 12142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1109 12:34:22.797096 20 chunking.go:98] Retrieved 17/17 results with rv 12142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1109 12:34:22.847953 20 chunking.go:98] Retrieved 17/17 results with rv 12142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1109 12:34:22.897931 20 chunking.go:98] Retrieved 17/17 results with rv 12142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1109 12:34:22.948685 20 chunking.go:98] Retrieved 17/17 results with rv 12142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1109 12:34:22.998615 20 chunking.go:98] Retrieved 17/17 results with rv 12142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1109 12:34:23.047862 20 chunking.go:98] Retrieved 17/17 results with rv 12142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1109 12:34:23.098491 20 chunking.go:98] Retrieved 17/17 results with rv 12142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1109 12:34:23.147910 20 chunking.go:98] Retrieved 17/17 results with rv 12142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1109 12:34:23.197547 20 chunking.go:98] Retrieved 17/17 results with rv 12142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I1109 12:34:23.247811 20 chunking.go:98] Retrieved 17/17 results with rv 12142 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDIsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1109 12:34:23.298316 20 chunking.go:98] Retrieved 9/17 results with rv 12142 and continue 
  I1109 12:34:23.347361 20 chunking.go:98] Retrieved 17/17 results with rv 12144 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDQsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I1109 12:34:23.397686 20 chunking.go:98] Retrieved 17/17 results with rv 12144 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1109 12:34:23.448556 20 chunking.go:98] Retrieved 17/17 results with rv 12144 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDQsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1109 12:34:23.497646 20 chunking.go:98] Retrieved 17/17 results with rv 12144 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDQsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1109 12:34:23.548166 20 chunking.go:98] Retrieved 17/17 results with rv 12144 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDQsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1109 12:34:23.598327 20 chunking.go:98] Retrieved 17/17 results with rv 12144 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDQsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1109 12:34:23.647286 20 chunking.go:98] Retrieved 17/17 results with rv 12144 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDQsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1109 12:34:23.697698 20 chunking.go:98] Retrieved 17/17 results with rv 12144 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDQsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1109 12:34:23.748494 20 chunking.go:98] Retrieved 17/17 results with rv 12144 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDQsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1109 12:34:23.797404 20 chunking.go:98] Retrieved 17/17 results with rv 12144 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDQsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1109 12:34:23.847852 20 chunking.go:98] Retrieved 17/17 results with rv 12144 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDQsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1109 12:34:23.897950 20 chunking.go:98] Retrieved 17/17 results with rv 12144 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDQsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1109 12:34:23.947904 20 chunking.go:98] Retrieved 17/17 results with rv 12144 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDQsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1109 12:34:23.998292 20 chunking.go:98] Retrieved 17/17 results with rv 12144 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDQsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1109 12:34:24.048505 20 chunking.go:98] Retrieved 17/17 results with rv 12144 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDQsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1109 12:34:24.097127 20 chunking.go:98] Retrieved 17/17 results with rv 12144 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDQsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1109 12:34:24.147681 20 chunking.go:98] Retrieved 17/17 results with rv 12144 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDQsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1109 12:34:24.198500 20 chunking.go:98] Retrieved 17/17 results with rv 12144 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDQsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1109 12:34:24.247095 20 chunking.go:98] Retrieved 17/17 results with rv 12144 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDQsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1109 12:34:24.297010 20 chunking.go:98] Retrieved 17/17 results with rv 12144 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDQsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1109 12:34:24.348091 20 chunking.go:98] Retrieved 17/17 results with rv 12144 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDQsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1109 12:34:24.396811 20 chunking.go:98] Retrieved 17/17 results with rv 12144 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDQsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I1109 12:34:24.448335 20 chunking.go:98] Retrieved 17/17 results with rv 12144 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDQsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1109 12:34:24.497606 20 chunking.go:98] Retrieved 9/17 results with rv 12144 and continue 
  I1109 12:34:24.547972 20 chunking.go:98] Retrieved 17/17 results with rv 12147 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDcsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I1109 12:34:24.598170 20 chunking.go:98] Retrieved 17/17 results with rv 12147 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDcsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1109 12:34:24.648072 20 chunking.go:98] Retrieved 17/17 results with rv 12147 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDcsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1109 12:34:24.696754 20 chunking.go:98] Retrieved 17/17 results with rv 12147 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDcsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1109 12:34:24.748151 20 chunking.go:98] Retrieved 17/17 results with rv 12147 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDcsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1109 12:34:24.797725 20 chunking.go:98] Retrieved 17/17 results with rv 12147 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDcsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1109 12:34:24.847756 20 chunking.go:98] Retrieved 17/17 results with rv 12147 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDcsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1109 12:34:24.898300 20 chunking.go:98] Retrieved 17/17 results with rv 12147 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDcsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1109 12:34:24.948420 20 chunking.go:98] Retrieved 17/17 results with rv 12147 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDcsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1109 12:34:24.997483 20 chunking.go:98] Retrieved 17/17 results with rv 12147 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDcsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1109 12:34:25.047702 20 chunking.go:98] Retrieved 17/17 results with rv 12147 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDcsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1109 12:34:25.098517 20 chunking.go:98] Retrieved 17/17 results with rv 12147 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDcsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1109 12:34:25.147536 20 chunking.go:98] Retrieved 17/17 results with rv 12147 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDcsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1109 12:34:25.197791 20 chunking.go:98] Retrieved 17/17 results with rv 12147 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDcsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1109 12:34:25.248156 20 chunking.go:98] Retrieved 17/17 results with rv 12147 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDcsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1109 12:34:25.296816 20 chunking.go:98] Retrieved 17/17 results with rv 12147 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDcsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1109 12:34:25.348426 20 chunking.go:98] Retrieved 17/17 results with rv 12147 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDcsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1109 12:34:25.398166 20 chunking.go:98] Retrieved 17/17 results with rv 12147 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDcsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1109 12:34:25.447255 20 chunking.go:98] Retrieved 17/17 results with rv 12147 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDcsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1109 12:34:25.497427 20 chunking.go:98] Retrieved 17/17 results with rv 12147 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDcsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1109 12:34:25.548799 20 chunking.go:98] Retrieved 17/17 results with rv 12147 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDcsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1109 12:34:25.597903 20 chunking.go:98] Retrieved 17/17 results with rv 12147 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDcsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I1109 12:34:25.647948 20 chunking.go:98] Retrieved 17/17 results with rv 12147 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTIxNDcsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1109 12:34:25.698768 20 chunking.go:98] Retrieved 9/17 results with rv 12147 and continue 
  STEP: retrieving those results all at once @ 11/09/24 12:34:25.698
  I1109 12:34:25.753649 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-4718" for this suite. @ 11/09/24 12:34:25.798
â€¢ [21.458 seconds]
------------------------------
SSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 11/09/24 12:34:25.85
  I1109 12:34:25.850899 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename endpointslice @ 11/09/24 12:34:25.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:34:25.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:34:25.87
  STEP: referencing a single matching pod @ 11/09/24 12:34:27.941
  STEP: referencing matching pods with named port @ 11/09/24 12:34:27.948
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 11/09/24 12:34:27.954
  STEP: recreating EndpointSlices after they've been deleted @ 11/09/24 12:34:27.961
  I1109 12:34:27.977648 20 endpointslice.go:938] EndpointSlice for Service endpointslice-4142/example-named-port not found
  I1109 12:34:29.983967 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4142" for this suite. @ 11/09/24 12:34:29.987
â€¢ [4.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:788
  STEP: Creating a kubernetes client @ 11/09/24 12:34:29.993
  I1109 12:34:29.993251 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename job @ 11/09/24 12:34:29.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:34:30.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:34:30.01
  STEP: Creating a job @ 11/09/24 12:34:30.013
  STEP: Ensuring job reaches completions @ 11/09/24 12:34:30.018
  I1109 12:34:42.027985 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5032" for this suite. @ 11/09/24 12:34:42.032
â€¢ [12.047 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:940
  STEP: Creating a kubernetes client @ 11/09/24 12:34:42.04
  I1109 12:34:42.040688 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename resourcequota @ 11/09/24 12:34:42.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:34:42.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:34:42.059
  STEP: Creating a ResourceQuota @ 11/09/24 12:34:42.062
  STEP: Getting a ResourceQuota @ 11/09/24 12:34:42.065
  STEP: Updating a ResourceQuota @ 11/09/24 12:34:42.068
  STEP: Verifying a ResourceQuota was modified @ 11/09/24 12:34:42.074
  STEP: Deleting a ResourceQuota @ 11/09/24 12:34:42.079
  STEP: Verifying the deleted ResourceQuota @ 11/09/24 12:34:42.085
  I1109 12:34:42.088405 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3840" for this suite. @ 11/09/24 12:34:42.091
â€¢ [0.056 seconds]
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 11/09/24 12:34:42.097
  I1109 12:34:42.097120 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename disruption @ 11/09/24 12:34:42.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:34:42.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:34:42.113
  STEP: Waiting for the pdb to be processed @ 11/09/24 12:34:42.121
  STEP: Updating PodDisruptionBudget status @ 11/09/24 12:34:44.125
  STEP: Waiting for all pods to be running @ 11/09/24 12:34:44.134
  I1109 12:34:44.142601 20 disruption.go:691] running pods: 0 < 1
  STEP: locating a running pod @ 11/09/24 12:34:46.14
  STEP: Waiting for the pdb to be processed @ 11/09/24 12:34:46.151
  STEP: Patching PodDisruptionBudget status @ 11/09/24 12:34:46.156
  STEP: Waiting for the pdb to be processed @ 11/09/24 12:34:46.166
  I1109 12:34:46.169081 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5790" for this suite. @ 11/09/24 12:34:46.172
â€¢ [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 11/09/24 12:34:46.177
  I1109 12:34:46.177987 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/09/24 12:34:46.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:34:46.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:34:46.196
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 11/09/24 12:34:46.198
  I1109 12:34:46.199069 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  I1109 12:34:47.561747 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  I1109 12:34:52.467088 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5486" for this suite. @ 11/09/24 12:34:52.473
â€¢ [6.304 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 11/09/24 12:34:52.482
  I1109 12:34:52.482322 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename replication-controller @ 11/09/24 12:34:52.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:34:52.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:34:52.5
  STEP: Creating replication controller my-hostname-basic-06e9b0df-118e-4581-905c-b88907815530 @ 11/09/24 12:34:52.502
  I1109 12:34:52.511751 20 resource.go:87] Pod name my-hostname-basic-06e9b0df-118e-4581-905c-b88907815530: Found 0 pods out of 1
  I1109 12:34:57.516325 20 resource.go:87] Pod name my-hostname-basic-06e9b0df-118e-4581-905c-b88907815530: Found 1 pods out of 1
  I1109 12:34:57.516361 20 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-06e9b0df-118e-4581-905c-b88907815530" are running
  I1109 12:34:57.519905 20 rc.go:523] Pod "my-hostname-basic-06e9b0df-118e-4581-905c-b88907815530-hr248" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-11-09 12:34:53 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-11-09 12:34:52 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-11-09 12:34:53 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-11-09 12:34:53 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-11-09 12:34:52 +0000 UTC Reason: Message:}])
  I1109 12:34:57.519931 20 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 11/09/24 12:34:57.519
  I1109 12:34:57.529186 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7238" for this suite. @ 11/09/24 12:34:57.532
â€¢ [5.056 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 11/09/24 12:34:57.538
  I1109 12:34:57.538524 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename cronjob @ 11/09/24 12:34:57.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:34:57.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:34:57.555
  STEP: Creating a cronjob @ 11/09/24 12:34:57.558
  STEP: Ensuring more than one job is running at a time @ 11/09/24 12:34:57.564
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 11/09/24 12:36:01.568
  STEP: Removing cronjob @ 11/09/24 12:36:01.572
  I1109 12:36:01.579278 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2229" for this suite. @ 11/09/24 12:36:01.583
â€¢ [64.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 11/09/24 12:36:01.591
  I1109 12:36:01.591956 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename container-probe @ 11/09/24 12:36:01.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:36:01.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:36:01.617
  I1109 12:37:01.633557 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1921" for this suite. @ 11/09/24 12:37:01.637
â€¢ [60.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 11/09/24 12:37:01.644
  I1109 12:37:01.644811 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename sched-pred @ 11/09/24 12:37:01.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:37:01.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:37:01.661
  I1109 12:37:01.664089 20 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1109 12:37:01.669970 20 util.go:393] Waiting for terminating namespaces to be deleted...
  I1109 12:37:01.673467 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-26-237 before test
  I1109 12:37:01.677865 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-mmmtf from ingress-nginx-kubernetes-worker started at 2024-11-09 12:02:20 +0000 UTC (1 container statuses recorded)
  I1109 12:37:01.677889 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1109 12:37:01.677897 20 predicates.go:957] calico-node-qlwl6 from kube-system started at 2024-11-09 12:09:00 +0000 UTC (1 container statuses recorded)
  I1109 12:37:01.677902 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1109 12:37:01.677909 20 predicates.go:957] kube-state-metrics-5d7bdccd49-tvgwt from kube-system started at 2024-11-09 12:02:20 +0000 UTC (1 container statuses recorded)
  I1109 12:37:01.677914 20 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I1109 12:37:01.677921 20 predicates.go:957] sonobuoy from sonobuoy started at 2024-11-09 12:11:47 +0000 UTC (1 container statuses recorded)
  I1109 12:37:01.677926 20 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1109 12:37:01.677971 20 predicates.go:957] sonobuoy-e2e-job-f9da5545554d47d7 from sonobuoy started at 2024-11-09 12:11:49 +0000 UTC (2 container statuses recorded)
  I1109 12:37:01.677977 20 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1109 12:37:01.677983 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1109 12:37:01.677989 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-5b9d25a256a64056-v4478 from sonobuoy started at 2024-11-09 12:11:49 +0000 UTC (2 container statuses recorded)
  I1109 12:37:01.677998 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1109 12:37:01.678055 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1109 12:37:01.678062 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-65-76 before test
  I1109 12:37:01.682853 20 predicates.go:957] test-webserver-0d8b426c-a74a-4613-b306-4bea3fcccc4b from container-probe-1921 started at 2024-11-09 12:36:01 +0000 UTC (1 container statuses recorded)
  I1109 12:37:01.682892 20 predicates.go:959] 	Container test-webserver ready: false, restart count 0
  I1109 12:37:01.682901 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-5v6q4 from ingress-nginx-kubernetes-worker started at 2024-11-09 12:32:41 +0000 UTC (1 container statuses recorded)
  I1109 12:37:01.682907 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1109 12:37:01.682913 20 predicates.go:957] calico-node-xl75z from kube-system started at 2024-11-09 12:09:10 +0000 UTC (1 container statuses recorded)
  I1109 12:37:01.682918 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1109 12:37:01.682934 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-5b9d25a256a64056-qmqv9 from sonobuoy started at 2024-11-09 12:11:49 +0000 UTC (2 container statuses recorded)
  I1109 12:37:01.682941 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1109 12:37:01.682946 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1109 12:37:01.682958 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-94-169 before test
  I1109 12:37:01.687896 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-6rvrg from ingress-nginx-kubernetes-worker started at 2024-11-09 12:02:11 +0000 UTC (1 container statuses recorded)
  I1109 12:37:01.687914 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 3
  I1109 12:37:01.687921 20 predicates.go:957] calico-node-79dj5 from kube-system started at 2024-11-09 12:08:39 +0000 UTC (1 container statuses recorded)
  I1109 12:37:01.687926 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1109 12:37:01.687933 20 predicates.go:957] coredns-5b4857d7c8-9wnbb from kube-system started at 2024-11-09 12:02:11 +0000 UTC (1 container statuses recorded)
  I1109 12:37:01.687938 20 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1109 12:37:01.687945 20 predicates.go:957] metrics-server-v0.7.1-6c77d69467-hr9gn from kube-system started at 2024-11-09 12:32:15 +0000 UTC (2 container statuses recorded)
  I1109 12:37:01.687950 20 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I1109 12:37:01.687956 20 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I1109 12:37:01.687962 20 predicates.go:957] dashboard-metrics-scraper-64757cf48d-c25b9 from kubernetes-dashboard started at 2024-11-09 12:32:15 +0000 UTC (1 container statuses recorded)
  I1109 12:37:01.687966 20 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1109 12:37:01.687973 20 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-s2k4w from kubernetes-dashboard started at 2024-11-09 12:02:11 +0000 UTC (1 container statuses recorded)
  I1109 12:37:01.687983 20 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I1109 12:37:01.687988 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-5b9d25a256a64056-4mx4d from sonobuoy started at 2024-11-09 12:11:49 +0000 UTC (2 container statuses recorded)
  I1109 12:37:01.687992 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1109 12:37:01.687997 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 11/09/24 12:37:01.688
  STEP: Explicitly delete pod here to free the resource it takes. @ 11/09/24 12:37:03.71
  STEP: Trying to apply a random label on the found node. @ 11/09/24 12:37:03.727
  STEP: verifying the node has the label kubernetes.io/e2e-d6af78a2-9713-4249-89f1-efecc3820f41 95 @ 11/09/24 12:37:03.735
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 11/09/24 12:37:03.739
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.65.76 on the node which pod4 resides and expect not scheduled @ 11/09/24 12:37:05.758
  STEP: removing the label kubernetes.io/e2e-d6af78a2-9713-4249-89f1-efecc3820f41 off the node ip-172-31-65-76 @ 11/09/24 12:42:05.764
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-d6af78a2-9713-4249-89f1-efecc3820f41 @ 11/09/24 12:42:05.776
  I1109 12:42:05.783193 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1253" for this suite. @ 11/09/24 12:42:05.788
â€¢ [304.150 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 11/09/24 12:42:05.794
  I1109 12:42:05.794644 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename discovery @ 11/09/24 12:42:05.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:42:05.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:42:05.809
  STEP: Setting up server cert @ 11/09/24 12:42:05.813
  STEP: Requesting APIResourceList from "/api/v1" @ 11/09/24 12:42:06.107
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 11/09/24 12:42:06.108
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 11/09/24 12:42:06.109
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 11/09/24 12:42:06.11
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 11/09/24 12:42:06.111
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 11/09/24 12:42:06.112
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 11/09/24 12:42:06.113
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 11/09/24 12:42:06.114
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 11/09/24 12:42:06.115
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 11/09/24 12:42:06.116
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 11/09/24 12:42:06.117
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 11/09/24 12:42:06.117
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 11/09/24 12:42:06.118
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 11/09/24 12:42:06.12
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 11/09/24 12:42:06.121
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 11/09/24 12:42:06.122
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 11/09/24 12:42:06.123
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 11/09/24 12:42:06.123
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 11/09/24 12:42:06.124
  I1109 12:42:06.125632 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-391" for this suite. @ 11/09/24 12:42:06.129
â€¢ [0.342 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:821
  STEP: Creating a kubernetes client @ 11/09/24 12:42:06.136
  I1109 12:42:06.136726 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename services @ 11/09/24 12:42:06.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:42:06.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:42:06.157
  STEP: creating service multi-endpoint-test in namespace services-5795 @ 11/09/24 12:42:06.159
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5795 to expose endpoints map[] @ 11/09/24 12:42:06.169
  I1109 12:42:06.181714 20 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-5795 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-5795 @ 11/09/24 12:42:06.181
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5795 to expose endpoints map[pod1:[100]] @ 11/09/24 12:42:08.202
  I1109 12:42:08.212433 20 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-5795 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-5795 @ 11/09/24 12:42:08.212
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5795 to expose endpoints map[pod1:[100] pod2:[101]] @ 11/09/24 12:42:10.228
  I1109 12:42:10.242760 20 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-5795 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 11/09/24 12:42:10.242
  I1109 12:42:10.242832 20 resource.go:361] Creating new exec pod
  I1109 12:42:13.255685 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-5795 exec execpodtz4ft -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I1109 12:42:13.341672 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  I1109 12:42:13.341718 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1109 12:42:13.341801 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-5795 exec execpodtz4ft -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.185 80'
  I1109 12:42:13.419537 20 builder.go:146] stderr: "+ echo+ nc -v -t -w 2 10.152.183.185 80\n hostName\nConnection to 10.152.183.185 80 port [tcp/http] succeeded!\n"
  I1109 12:42:13.419595 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1109 12:42:13.419712 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-5795 exec execpodtz4ft -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I1109 12:42:13.499114 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  I1109 12:42:13.499159 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1109 12:42:13.499272 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-5795 exec execpodtz4ft -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.185 81'
  I1109 12:42:13.582849 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.185 81\nConnection to 10.152.183.185 81 port [tcp/*] succeeded!\n"
  I1109 12:42:13.582895 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-5795 @ 11/09/24 12:42:13.582
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5795 to expose endpoints map[pod2:[101]] @ 11/09/24 12:42:13.594
  I1109 12:42:13.607758 20 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-5795 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-5795 @ 11/09/24 12:42:13.607
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5795 to expose endpoints map[] @ 11/09/24 12:42:13.628
  I1109 12:42:13.639450 20 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-5795 exposes endpoints map[]
  I1109 12:42:13.653001 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5795" for this suite. @ 11/09/24 12:42:13.657
â€¢ [7.526 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 11/09/24 12:42:13.663
  I1109 12:42:13.663712 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename emptydir @ 11/09/24 12:42:13.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:42:13.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:42:13.683
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 11/09/24 12:42:13.689
  STEP: Saw pod success @ 11/09/24 12:42:17.714
  I1109 12:42:17.718248 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-5500aa6d-cfba-427c-aad0-cd014a1c8caa container test-container: <nil>
  STEP: delete the pod @ 11/09/24 12:42:17.734
  I1109 12:42:17.749089 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1903" for this suite. @ 11/09/24 12:42:17.753
â€¢ [4.096 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1756
  STEP: Creating a kubernetes client @ 11/09/24 12:42:17.759
  I1109 12:42:17.759920 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename kubectl @ 11/09/24 12:42:17.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:42:17.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:42:17.777
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 11/09/24 12:42:17.78
  I1109 12:42:17.780248 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-7504 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I1109 12:42:17.836619 20 builder.go:146] stderr: ""
  I1109 12:42:17.836656 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 11/09/24 12:42:17.836
  I1109 12:42:17.839931 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-7504 delete pods e2e-test-httpd-pod'
  I1109 12:42:19.293182 20 builder.go:146] stderr: ""
  I1109 12:42:19.293218 20 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1109 12:42:19.293359 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7504" for this suite. @ 11/09/24 12:42:19.296
â€¢ [1.542 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 11/09/24 12:42:19.302
  I1109 12:42:19.302532 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename var-expansion @ 11/09/24 12:42:19.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:42:19.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:42:19.32
  STEP: Creating a pod to test substitution in volume subpath @ 11/09/24 12:42:19.322
  STEP: Saw pod success @ 11/09/24 12:42:23.344
  I1109 12:42:23.348111 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod var-expansion-4b5064f0-71fa-4e15-bc0e-a8172aad3535 container dapi-container: <nil>
  STEP: delete the pod @ 11/09/24 12:42:23.355
  I1109 12:42:23.370026 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7435" for this suite. @ 11/09/24 12:42:23.373
â€¢ [4.077 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 11/09/24 12:42:23.379
  I1109 12:42:23.379883 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename replication-controller @ 11/09/24 12:42:23.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:42:23.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:42:23.395
  I1109 12:42:23.401635 20 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 11/09/24 12:42:23.41
  STEP: Checking rc "condition-test" has the desired failure condition set @ 11/09/24 12:42:23.416
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 11/09/24 12:42:24.423
  I1109 12:42:24.431368 20 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 11/09/24 12:42:24.431
  I1109 12:42:25.441320 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7647" for this suite. @ 11/09/24 12:42:25.444
â€¢ [2.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 11/09/24 12:42:25.453
  I1109 12:42:25.453876 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename webhook @ 11/09/24 12:42:25.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:42:25.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:42:25.471
  STEP: Setting up server cert @ 11/09/24 12:42:25.49
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/09/24 12:42:25.867
  STEP: Deploying the webhook pod @ 11/09/24 12:42:25.875
  STEP: Wait for the deployment to be ready @ 11/09/24 12:42:25.885
  I1109 12:42:25.892350 20 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 11/09/24 12:42:27.904
  STEP: Verifying the service has paired with the endpoint @ 11/09/24 12:42:27.913
  I1109 12:42:28.914347 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 11/09/24 12:42:28.922
  STEP: create a pod that should be updated by the webhook @ 11/09/24 12:42:28.934
  I1109 12:42:28.998151 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9801" for this suite. @ 11/09/24 12:42:29.001
  STEP: Destroying namespace "webhook-markers-9875" for this suite. @ 11/09/24 12:42:29.007
â€¢ [3.559 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 11/09/24 12:42:29.013
  I1109 12:42:29.013533 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/09/24 12:42:29.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:42:29.027
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:42:29.031
  STEP: set up a multi version CRD @ 11/09/24 12:42:29.033
  I1109 12:42:29.034250 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: rename a version @ 11/09/24 12:42:32.093
  STEP: check the new version name is served @ 11/09/24 12:42:32.104
  STEP: check the old version name is removed @ 11/09/24 12:42:32.802
  STEP: check the other version is not changed @ 11/09/24 12:42:33.404
  I1109 12:42:35.824476 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2205" for this suite. @ 11/09/24 12:42:35.831
â€¢ [6.826 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 11/09/24 12:42:35.84
  I1109 12:42:35.840044 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename downward-api @ 11/09/24 12:42:35.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:42:35.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:42:35.855
  STEP: Creating a pod to test downward api env vars @ 11/09/24 12:42:35.858
  STEP: Saw pod success @ 11/09/24 12:42:39.876
  I1109 12:42:39.880915 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod downward-api-3a40f1f8-0ad0-4212-9a85-372e4d04af69 container dapi-container: <nil>
  STEP: delete the pod @ 11/09/24 12:42:39.887
  I1109 12:42:39.900000 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8568" for this suite. @ 11/09/24 12:42:39.903
â€¢ [4.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 11/09/24 12:42:39.909
  I1109 12:42:39.909540 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename downward-api @ 11/09/24 12:42:39.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:42:39.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:42:39.924
  STEP: Creating the pod @ 11/09/24 12:42:39.928
  I1109 12:42:42.473679 20 pod_client.go:173] Successfully updated pod "annotationupdate91162105-5ac5-481e-a65b-cb34bcc17065"
  I1109 12:42:44.487970 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2000" for this suite. @ 11/09/24 12:42:44.491
â€¢ [4.590 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 11/09/24 12:42:44.5
  I1109 12:42:44.500753 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename replicaset @ 11/09/24 12:42:44.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:42:44.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:42:44.518
  STEP: Create a Replicaset @ 11/09/24 12:42:44.524
  STEP: Verify that the required pods have come up. @ 11/09/24 12:42:44.53
  I1109 12:42:44.533691 20 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I1109 12:42:49.540381 20 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/09/24 12:42:49.54
  STEP: Getting /status @ 11/09/24 12:42:49.54
  I1109 12:42:49.543675 20 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 11/09/24 12:42:49.543
  I1109 12:42:49.550544 20 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 11/09/24 12:42:49.55
  I1109 12:42:49.552119 20 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I1109 12:42:49.552189 20 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1109 12:42:49.552255 20 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1109 12:42:49.552360 20 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1109 12:42:49.552383 20 replica_set.go:682] Found replicaset test-rs in namespace replicaset-1715 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1109 12:42:49.552393 20 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 11/09/24 12:42:49.552
  I1109 12:42:49.552416 20 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1109 12:42:49.558772 20 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 11/09/24 12:42:49.558
  I1109 12:42:49.560311 20 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I1109 12:42:49.560378 20 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1109 12:42:49.560430 20 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1109 12:42:49.560625 20 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1109 12:42:49.560649 20 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-1715 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1109 12:42:49.560732 20 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1109 12:42:49.560753 20 replica_set.go:718] Found replicaset test-rs in namespace replicaset-1715 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I1109 12:42:49.560764 20 replica_set.go:729] Replicaset test-rs has a patched status
  I1109 12:42:49.560854 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1715" for this suite. @ 11/09/24 12:42:49.563
â€¢ [5.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 11/09/24 12:42:49.571
  I1109 12:42:49.571691 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename projected @ 11/09/24 12:42:49.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:42:49.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:42:49.588
  STEP: Creating a pod to test downward API volume plugin @ 11/09/24 12:42:49.591
  STEP: Saw pod success @ 11/09/24 12:42:51.613
  I1109 12:42:51.615878 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod downwardapi-volume-fb897722-4b30-4f8f-9f80-e59954359cf4 container client-container: <nil>
  STEP: delete the pod @ 11/09/24 12:42:51.621
  I1109 12:42:51.635823 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1206" for this suite. @ 11/09/24 12:42:51.638
â€¢ [2.074 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 11/09/24 12:42:51.645
  I1109 12:42:51.645734 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename replicaset @ 11/09/24 12:42:51.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:42:51.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:42:51.663
  STEP: Create a ReplicaSet @ 11/09/24 12:42:51.666
  STEP: Verify that the required pods have come up @ 11/09/24 12:42:51.671
  I1109 12:42:51.674894 20 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  I1109 12:42:56.679275 20 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 11/09/24 12:42:56.679
  I1109 12:42:56.682801 20 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 11/09/24 12:42:56.682
  STEP: DeleteCollection of the ReplicaSets @ 11/09/24 12:42:56.686
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 11/09/24 12:42:56.695
  I1109 12:42:56.698811 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9935" for this suite. @ 11/09/24 12:42:56.702
â€¢ [5.067 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 11/09/24 12:42:56.713
  I1109 12:42:56.713667 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename endpointslice @ 11/09/24 12:42:56.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:42:56.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:42:56.736
  I1109 12:43:00.792312 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8550" for this suite. @ 11/09/24 12:43:00.795
â€¢ [4.089 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 11/09/24 12:43:00.802
  I1109 12:43:00.802433 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename projected @ 11/09/24 12:43:00.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:43:00.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:43:00.82
  STEP: Creating a pod to test downward API volume plugin @ 11/09/24 12:43:00.822
  STEP: Saw pod success @ 11/09/24 12:43:04.844
  I1109 12:43:04.847933 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod downwardapi-volume-2c3611f1-cec7-4c96-a900-8a52a00fca5d container client-container: <nil>
  STEP: delete the pod @ 11/09/24 12:43:04.855
  I1109 12:43:04.868838 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4359" for this suite. @ 11/09/24 12:43:04.873
â€¢ [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 11/09/24 12:43:04.88
  I1109 12:43:04.880721 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename secrets @ 11/09/24 12:43:04.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:43:04.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:43:04.898
  STEP: creating secret secrets-4401/secret-test-1250c1e0-10ca-41e8-9d54-f0df63ada3cc @ 11/09/24 12:43:04.901
  STEP: Creating a pod to test consume secrets @ 11/09/24 12:43:04.905
  STEP: Saw pod success @ 11/09/24 12:43:08.927
  I1109 12:43:08.931037 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-configmaps-e3a555bf-6a8b-4a97-a1fa-ce0d0f755722 container env-test: <nil>
  STEP: delete the pod @ 11/09/24 12:43:08.937
  I1109 12:43:08.950834 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4401" for this suite. @ 11/09/24 12:43:08.954
â€¢ [4.081 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 11/09/24 12:43:08.961
  I1109 12:43:08.961845 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename var-expansion @ 11/09/24 12:43:08.962
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:43:08.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:43:08.978
  STEP: Creating a pod to test substitution in container's command @ 11/09/24 12:43:08.98
  STEP: Saw pod success @ 11/09/24 12:43:13.003
  I1109 12:43:13.006119 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod var-expansion-816bb6bb-cd25-40b9-8366-293fa4dab5c7 container dapi-container: <nil>
  STEP: delete the pod @ 11/09/24 12:43:13.012
  I1109 12:43:13.030056 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4642" for this suite. @ 11/09/24 12:43:13.033
â€¢ [4.078 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 11/09/24 12:43:13.039
  I1109 12:43:13.039577 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename namespaces @ 11/09/24 12:43:13.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:43:13.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:43:13.059
  STEP: Updating Namespace "namespaces-929" @ 11/09/24 12:43:13.062
  I1109 12:43:13.070085 20 namespace.go:389] Namespace "namespaces-929" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"98b365e4-63ab-42b6-b105-558bed033cc2", "kubernetes.io/metadata.name":"namespaces-929", "namespaces-929":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I1109 12:43:13.070206 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-929" for this suite. @ 11/09/24 12:43:13.077
â€¢ [0.044 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:235
  STEP: Creating a kubernetes client @ 11/09/24 12:43:13.083
  I1109 12:43:13.083643 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename resourcequota @ 11/09/24 12:43:13.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:43:13.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:43:13.1
  STEP: Counting existing ResourceQuota @ 11/09/24 12:43:13.103
  STEP: Creating a ResourceQuota @ 11/09/24 12:43:18.107
  STEP: Ensuring resource quota status is calculated @ 11/09/24 12:43:18.111
  STEP: Creating a Pod that fits quota @ 11/09/24 12:43:20.117
  STEP: Ensuring ResourceQuota status captures the pod usage @ 11/09/24 12:43:20.133
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 11/09/24 12:43:22.137
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 11/09/24 12:43:22.139
  STEP: Ensuring a pod cannot update its resource requirements @ 11/09/24 12:43:22.141
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 11/09/24 12:43:22.146
  STEP: Deleting the pod @ 11/09/24 12:43:24.15
  STEP: Ensuring resource quota status released the pod usage @ 11/09/24 12:43:24.163
  I1109 12:43:26.167053 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6172" for this suite. @ 11/09/24 12:43:26.17
â€¢ [13.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 11/09/24 12:43:26.176
  I1109 12:43:26.176863 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename var-expansion @ 11/09/24 12:43:26.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:43:26.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:43:26.197
  STEP: creating the pod with failed condition @ 11/09/24 12:43:26.199
  STEP: updating the pod @ 11/09/24 12:45:26.211
  I1109 12:45:26.723574 20 pod_client.go:173] Successfully updated pod "var-expansion-c1336370-32d2-446c-96a6-c923b393ad2c"
  STEP: waiting for pod running @ 11/09/24 12:45:26.723
  STEP: deleting the pod gracefully @ 11/09/24 12:45:28.733
  I1109 12:45:28.733695 20 delete.go:62] Deleting pod "var-expansion-c1336370-32d2-446c-96a6-c923b393ad2c" in namespace "var-expansion-4435"
  I1109 12:45:28.741377 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-c1336370-32d2-446c-96a6-c923b393ad2c" to be fully deleted
  I1109 12:46:00.828853 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4435" for this suite. @ 11/09/24 12:46:00.833
â€¢ [154.664 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3209
  STEP: Creating a kubernetes client @ 11/09/24 12:46:00.842
  I1109 12:46:00.842019 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename services @ 11/09/24 12:46:00.842
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:46:00.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:46:00.861
  STEP: creating an Endpoint @ 11/09/24 12:46:00.866
  STEP: waiting for available Endpoint @ 11/09/24 12:46:00.871
  STEP: listing all Endpoints @ 11/09/24 12:46:00.873
  STEP: updating the Endpoint @ 11/09/24 12:46:00.875
  STEP: fetching the Endpoint @ 11/09/24 12:46:00.881
  STEP: patching the Endpoint @ 11/09/24 12:46:00.884
  STEP: fetching the Endpoint @ 11/09/24 12:46:00.89
  STEP: deleting the Endpoint by Collection @ 11/09/24 12:46:00.892
  STEP: waiting for Endpoint deletion @ 11/09/24 12:46:00.899
  STEP: fetching the Endpoint @ 11/09/24 12:46:00.9
  I1109 12:46:00.902867 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4012" for this suite. @ 11/09/24 12:46:00.905
â€¢ [0.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 11/09/24 12:46:00.913
  I1109 12:46:00.913458 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename projected @ 11/09/24 12:46:00.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:46:00.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:46:00.931
  STEP: Creating a pod to test downward API volume plugin @ 11/09/24 12:46:00.933
  STEP: Saw pod success @ 11/09/24 12:46:02.952
  I1109 12:46:02.955782 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod downwardapi-volume-75384a1f-d35d-41a3-8285-9c1e8a00d489 container client-container: <nil>
  STEP: delete the pod @ 11/09/24 12:46:02.966
  I1109 12:46:02.982290 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-682" for this suite. @ 11/09/24 12:46:02.986
â€¢ [2.079 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 11/09/24 12:46:02.993
  I1109 12:46:02.993249 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename aggregateddiscovery @ 11/09/24 12:46:02.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:46:03.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:46:03.012
  I1109 12:46:03.017936 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-338" for this suite. @ 11/09/24 12:46:03.02
â€¢ [0.036 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 11/09/24 12:46:03.029
  I1109 12:46:03.029470 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename init-container @ 11/09/24 12:46:03.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:46:03.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:46:03.047
  STEP: creating the pod @ 11/09/24 12:46:03.049
  I1109 12:46:03.049561 20 init_container.go:213] PodSpec: initContainers in spec.initContainers
  I1109 12:46:06.814120 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5903" for this suite. @ 11/09/24 12:46:06.818
â€¢ [3.795 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 11/09/24 12:46:06.824
  I1109 12:46:06.824828 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename webhook @ 11/09/24 12:46:06.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:46:06.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:46:06.842
  STEP: Setting up server cert @ 11/09/24 12:46:06.862
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/09/24 12:46:07.092
  STEP: Deploying the webhook pod @ 11/09/24 12:46:07.1
  STEP: Wait for the deployment to be ready @ 11/09/24 12:46:07.114
  I1109 12:46:07.121195 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/09/24 12:46:09.131
  STEP: Verifying the service has paired with the endpoint @ 11/09/24 12:46:09.139
  I1109 12:46:10.140346 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1109 12:46:10.146149 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 11/09/24 12:46:10.656
  STEP: Creating a custom resource that should be denied by the webhook @ 11/09/24 12:46:10.671
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 11/09/24 12:46:12.687
  STEP: Updating the custom resource with disallowed data should be denied @ 11/09/24 12:46:12.693
  STEP: Deleting the custom resource should be denied @ 11/09/24 12:46:12.702
  STEP: Remove the offending key and value from the custom resource data @ 11/09/24 12:46:12.709
  STEP: Deleting the updated custom resource should be successful @ 11/09/24 12:46:12.718
  I1109 12:46:13.287645 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7257" for this suite. @ 11/09/24 12:46:13.292
  STEP: Destroying namespace "webhook-markers-3007" for this suite. @ 11/09/24 12:46:13.299
â€¢ [6.481 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 11/09/24 12:46:13.306
  I1109 12:46:13.306476 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename secrets @ 11/09/24 12:46:13.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:46:13.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:46:13.328
  STEP: Creating secret with name secret-test-7b08ac98-32e5-45f9-adf6-aeace3ebe451 @ 11/09/24 12:46:13.33
  STEP: Creating a pod to test consume secrets @ 11/09/24 12:46:13.335
  STEP: Saw pod success @ 11/09/24 12:46:17.359
  I1109 12:46:17.364135 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-secrets-c854b180-a1b7-43c4-a78f-3cb672123f4e container secret-env-test: <nil>
  STEP: delete the pod @ 11/09/24 12:46:17.37
  I1109 12:46:17.384595 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1389" for this suite. @ 11/09/24 12:46:17.388
â€¢ [4.088 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 11/09/24 12:46:17.394
  I1109 12:46:17.394832 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename field-validation @ 11/09/24 12:46:17.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:46:17.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:46:17.411
  I1109 12:46:17.414460 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  W1109 12:46:17.415028      20 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0049344e0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W1109 12:46:19.947134      20 warnings.go:70] unknown field "alpha"
  W1109 12:46:19.947156      20 warnings.go:70] unknown field "beta"
  W1109 12:46:19.947167      20 warnings.go:70] unknown field "delta"
  W1109 12:46:19.947171      20 warnings.go:70] unknown field "epsilon"
  W1109 12:46:19.947174      20 warnings.go:70] unknown field "gamma"
  I1109 12:46:20.506144 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5376" for this suite. @ 11/09/24 12:46:20.51
â€¢ [3.124 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 11/09/24 12:46:20.518
  I1109 12:46:20.518948 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename containers @ 11/09/24 12:46:20.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:46:20.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:46:20.532
  STEP: Creating a pod to test override all @ 11/09/24 12:46:20.534
  STEP: Saw pod success @ 11/09/24 12:46:24.555
  I1109 12:46:24.559440 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod client-containers-010eed40-f013-4b56-8db5-e184c5bca668 container agnhost-container: <nil>
  STEP: delete the pod @ 11/09/24 12:46:24.565
  I1109 12:46:24.578855 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3865" for this suite. @ 11/09/24 12:46:24.582
â€¢ [4.071 seconds]
------------------------------
SSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 11/09/24 12:46:24.589
  I1109 12:46:24.589498 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename runtimeclass @ 11/09/24 12:46:24.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:46:24.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:46:24.608
  I1109 12:46:26.637662 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3389" for this suite. @ 11/09/24 12:46:26.642
â€¢ [2.059 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 11/09/24 12:46:26.648
  I1109 12:46:26.648466 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename pods @ 11/09/24 12:46:26.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:46:26.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:46:26.669
  STEP: creating a Pod with a static label @ 11/09/24 12:46:26.675
  STEP: watching for Pod to be ready @ 11/09/24 12:46:26.685
  I1109 12:46:26.686265 20 pods.go:945] observed Pod pod-test in namespace pods-121 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I1109 12:46:26.687948 20 pods.go:945] observed Pod pod-test in namespace pods-121 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-11-09 12:46:26 +0000 UTC  }]
  I1109 12:46:26.710021 20 pods.go:945] observed Pod pod-test in namespace pods-121 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-11-09 12:46:26 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-11-09 12:46:26 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-11-09 12:46:26 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-11-09 12:46:26 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-11-09 12:46:26 +0000 UTC  }]
  I1109 12:46:27.727269 20 pods.go:948] Found Pod pod-test in namespace pods-121 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-11-09 12:46:27 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-11-09 12:46:26 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-11-09 12:46:27 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-11-09 12:46:27 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-11-09 12:46:26 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 11/09/24 12:46:27.73
  STEP: getting the Pod and ensuring that it's patched @ 11/09/24 12:46:27.738
  STEP: replacing the Pod's status Ready condition to False @ 11/09/24 12:46:27.744
  STEP: check the Pod again to ensure its Ready conditions are False @ 11/09/24 12:46:27.753
  STEP: deleting the Pod via a Collection with a LabelSelector @ 11/09/24 12:46:27.753
  STEP: watching for the Pod to be deleted @ 11/09/24 12:46:27.763
  I1109 12:46:27.764990 20 pods.go:1058] observed event type MODIFIED
  I1109 12:46:29.732760 20 pods.go:1058] observed event type MODIFIED
  I1109 12:46:29.863181 20 pods.go:1058] observed event type MODIFIED
  I1109 12:46:30.740882 20 pods.go:1058] observed event type MODIFIED
  I1109 12:46:30.747484 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-121" for this suite. @ 11/09/24 12:46:30.75
â€¢ [4.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 11/09/24 12:46:30.756
  I1109 12:46:30.756900 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename aggregator @ 11/09/24 12:46:30.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:46:30.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:46:30.774
  I1109 12:46:30.777137 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Registering the sample API server. @ 11/09/24 12:46:30.777
  I1109 12:46:30.955249 20 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I1109 12:46:30.986778 20 deployment.go:222] deployment "sample-apiserver-deployment" doesn't have the required revision set
  I1109 12:46:33.033958 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 9, 12, 46, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 9, 12, 46, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 9, 12, 46, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 9, 12, 46, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1109 12:46:35.038830 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 9, 12, 46, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 9, 12, 46, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 9, 12, 46, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 9, 12, 46, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1109 12:46:37.040019 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 9, 12, 46, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 9, 12, 46, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 9, 12, 46, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 9, 12, 46, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1109 12:46:39.040351 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 9, 12, 46, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 9, 12, 46, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 9, 12, 46, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 9, 12, 46, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1109 12:46:41.039183 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 9, 12, 46, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 9, 12, 46, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 9, 12, 46, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 9, 12, 46, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1109 12:46:43.038616 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 9, 12, 46, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 9, 12, 46, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 9, 12, 46, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 9, 12, 46, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1109 12:46:45.039657 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 9, 12, 46, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 9, 12, 46, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 9, 12, 46, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 9, 12, 46, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1109 12:46:47.038505 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 9, 12, 46, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 9, 12, 46, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 9, 12, 46, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 9, 12, 46, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1109 12:46:49.039335 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 9, 12, 46, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 9, 12, 46, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 9, 12, 46, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 9, 12, 46, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1109 12:46:51.039222 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 9, 12, 46, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 9, 12, 46, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 9, 12, 46, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 9, 12, 46, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1109 12:46:53.039481 20 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.November, 9, 12, 46, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 9, 12, 46, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 9, 12, 46, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 9, 12, 46, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1109 12:46:55.157903 20 aggregator.go:755] Waited 112.255804ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 11/09/24 12:46:55.189
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 11/09/24 12:46:55.193
  STEP: List APIServices @ 11/09/24 12:46:55.199
  I1109 12:46:55.204186 20 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 11/09/24 12:46:55.204
  I1109 12:46:55.215513 20 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 11/09/24 12:46:55.215
  I1109 12:46:55.225792 20 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.November, 9, 12, 46, 55, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 11/09/24 12:46:55.225
  I1109 12:46:55.229218 20 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-11-09 12:46:55 +0000 UTC Passed all checks passed}
  I1109 12:46:55.229262 20 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1109 12:46:55.229273 20 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 11/09/24 12:46:55.229
  I1109 12:46:55.239488 20 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1090610753" @ 11/09/24 12:46:55.239
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 11/09/24 12:46:55.248
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 11/09/24 12:46:55.254
  STEP: Patch APIService Status @ 11/09/24 12:46:55.257
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 11/09/24 12:46:55.264
  I1109 12:46:55.267982 20 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-11-09 12:46:55 +0000 UTC Passed all checks passed}
  I1109 12:46:55.268010 20 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1109 12:46:55.268023 20 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I1109 12:46:55.268035 20 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 11/09/24 12:46:55.268
  STEP: Confirm that the generated APIService has been deleted @ 11/09/24 12:46:55.276
  I1109 12:46:55.276888 20 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I1109 12:46:55.280671 20 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I1109 12:46:55.280698 20 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  I1109 12:46:55.377026 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-5278" for this suite. @ 11/09/24 12:46:55.38
â€¢ [24.632 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 11/09/24 12:46:55.388
  I1109 12:46:55.388935 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename downward-api @ 11/09/24 12:46:55.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:46:55.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:46:55.407
  STEP: Creating a pod to test downward api env vars @ 11/09/24 12:46:55.409
  STEP: Saw pod success @ 11/09/24 12:46:59.433
  I1109 12:46:59.436667 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod downward-api-c3f7bdf0-b11a-4f8c-adfa-818de088d14b container dapi-container: <nil>
  STEP: delete the pod @ 11/09/24 12:46:59.444
  I1109 12:46:59.461580 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3801" for this suite. @ 11/09/24 12:46:59.464
â€¢ [4.082 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:746
  STEP: Creating a kubernetes client @ 11/09/24 12:46:59.47
  I1109 12:46:59.470653 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename resourcequota @ 11/09/24 12:46:59.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:46:59.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:46:59.488
  STEP: Creating a ResourceQuota with terminating scope @ 11/09/24 12:46:59.491
  STEP: Ensuring ResourceQuota status is calculated @ 11/09/24 12:46:59.495
  STEP: Creating a ResourceQuota with not terminating scope @ 11/09/24 12:47:01.5
  STEP: Ensuring ResourceQuota status is calculated @ 11/09/24 12:47:01.505
  STEP: Creating a long running pod @ 11/09/24 12:47:03.51
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 11/09/24 12:47:03.523
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 11/09/24 12:47:05.528
  STEP: Deleting the pod @ 11/09/24 12:47:07.532
  STEP: Ensuring resource quota status released the pod usage @ 11/09/24 12:47:07.547
  STEP: Creating a terminating pod @ 11/09/24 12:47:09.552
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 11/09/24 12:47:09.566
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 11/09/24 12:47:11.571
  STEP: Deleting the pod @ 11/09/24 12:47:13.575
  STEP: Ensuring resource quota status released the pod usage @ 11/09/24 12:47:13.587
  I1109 12:47:15.592366 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7372" for this suite. @ 11/09/24 12:47:15.596
â€¢ [16.133 seconds]
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3703
  STEP: Creating a kubernetes client @ 11/09/24 12:47:15.603
  I1109 12:47:15.603805 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename services @ 11/09/24 12:47:15.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:47:15.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:47:15.623
  STEP: creating service multiprotocol-test in namespace services-9872 @ 11/09/24 12:47:15.625
  STEP: creating pod pod1 in namespace services-9872 @ 11/09/24 12:47:15.635
  STEP: Creating pod pod1 in namespace services-9872 @ 11/09/24 12:47:15.635
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-9872 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 11/09/24 12:47:17.669
  I1109 12:47:17.680748 20 service.go:4392] successfully validated that service multiprotocol-test in namespace services-9872 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 11/09/24 12:47:17.68
  I1109 12:47:17.680813 20 resource.go:361] Creating new exec pod
  I1109 12:47:19.696113 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-9872 exec execpoddvn27 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.40 80'
  I1109 12:47:19.780152 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.40 80\nConnection to 10.152.183.40 80 port [tcp/http] succeeded!\n"
  I1109 12:47:19.780196 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1109 12:47:19.780358 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-9872 exec execpoddvn27 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.40 80'
  I1109 12:47:23.859933 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.40 80\nConnection to 10.152.183.40 80 port [udp/*] succeeded!\n"
  I1109 12:47:23.859973 20 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 11/09/24 12:47:23.86
  I1109 12:47:23.873655 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-9872 exec execpoddvn27 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.40 80'
  I1109 12:47:23.965652 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.40 80\nConnection to 10.152.183.40 80 port [tcp/http] succeeded!\n"
  I1109 12:47:23.965706 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1109 12:47:23.965912 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-9872 exec execpoddvn27 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.40 80'
  I1109 12:47:28.045203 20 builder.go:146] stderr: "+ + echonc -v hostName -u\n -w 2 10.152.183.40 80\nConnection to 10.152.183.40 80 port [udp/*] succeeded!\n"
  I1109 12:47:28.045273 20 builder.go:147] stdout: ""
  I1109 12:47:28.045335 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-9872 exec execpoddvn27 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.40 80'
  I1109 12:47:32.126420 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.40 80\nConnection to 10.152.183.40 80 port [udp/*] succeeded!\n"
  I1109 12:47:32.126483 20 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 11/09/24 12:47:32.126
  I1109 12:47:32.139062 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-9872 exec execpoddvn27 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.40 80'
  I1109 12:47:36.229042 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.40 80\nConnection to 10.152.183.40 80 port [udp/*] succeeded!\n"
  I1109 12:47:36.229099 20 builder.go:147] stdout: "pod1"
  I1109 12:47:36.229213 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-9872 exec execpoddvn27 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.40 80'
  I1109 12:47:38.309794 20 builder.go:135] rc: 1
  I1109 12:47:38.309865 20 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-9872 exec execpoddvn27 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.40 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.40 80
  nc: connect to 10.152.183.40 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1109 12:47:38.309938 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-9872 exec execpoddvn27 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.40 80'
  I1109 12:47:40.394926 20 builder.go:135] rc: 1
  I1109 12:47:40.394987 20 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-9872 exec execpoddvn27 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.40 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.40 80
  nc: connect to 10.152.183.40 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1109 12:47:40.395056 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-9872 exec execpoddvn27 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.40 80'
  I1109 12:47:42.491374 20 builder.go:135] rc: 1
  I1109 12:47:42.491437 20 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-9872 exec execpoddvn27 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.40 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.40 80
  nc: connect to 10.152.183.40 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1109 12:47:42.491709 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9872" for this suite. @ 11/09/24 12:47:42.496
â€¢ [26.900 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:409
  STEP: Creating a kubernetes client @ 11/09/24 12:47:42.504
  I1109 12:47:42.504137 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename dns @ 11/09/24 12:47:42.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:47:42.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:47:42.523
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 11/09/24 12:47:42.525
  I1109 12:47:42.534047 20 dns.go:421] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-3459  065c4fbf-c721-4fe3-a4a6-372480cd884f 16048 0 2024-11-09 12:47:42 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-11-09 12:47:42 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-9vkcv,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.52,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9vkcv,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 11/09/24 12:47:44.544
  I1109 12:47:44.544631 20 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-3459 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1109 12:47:44.544652 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  I1109 12:47:44.545150 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1109 12:47:44.545204 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-3459/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 11/09/24 12:47:44.59
  I1109 12:47:44.590696 20 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-3459 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1109 12:47:44.590939 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  I1109 12:47:44.591730 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1109 12:47:44.591932 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-3459/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1109 12:47:44.638605 20 dns.go:423] Deleting pod test-dns-nameservers...
  I1109 12:47:44.653494 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3459" for this suite. @ 11/09/24 12:47:44.657
â€¢ [2.160 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 11/09/24 12:47:44.667
  I1109 12:47:44.667340 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename pods @ 11/09/24 12:47:44.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:47:44.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:47:44.684
  STEP: creating the pod @ 11/09/24 12:47:44.687
  STEP: submitting the pod to kubernetes @ 11/09/24 12:47:44.687
  STEP: verifying QOS class is set on the pod @ 11/09/24 12:47:44.696
  I1109 12:47:44.700169 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1635" for this suite. @ 11/09/24 12:47:44.704
â€¢ [0.044 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 11/09/24 12:47:44.712
  I1109 12:47:44.712479 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename gc @ 11/09/24 12:47:44.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:47:44.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:47:44.733
  STEP: create the rc @ 11/09/24 12:47:44.739
  W1109 12:47:44.743607      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 11/09/24 12:47:50.781
  STEP: wait for the rc to be deleted @ 11/09/24 12:47:50.847
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 11/09/24 12:47:55.854
  STEP: Gathering metrics @ 11/09/24 12:48:25.864
  W1109 12:48:25.870395      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1109 12:48:25.870426 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1109 12:48:25.870477 20 delete.go:95] Deleting pod "simpletest.rc-4c9hs" in namespace "gc-6481"
  I1109 12:48:25.885168 20 delete.go:95] Deleting pod "simpletest.rc-4f65z" in namespace "gc-6481"
  I1109 12:48:25.960195 20 delete.go:95] Deleting pod "simpletest.rc-4g7f5" in namespace "gc-6481"
  I1109 12:48:25.975980 20 delete.go:95] Deleting pod "simpletest.rc-4pz4x" in namespace "gc-6481"
  I1109 12:48:25.991914 20 delete.go:95] Deleting pod "simpletest.rc-546cs" in namespace "gc-6481"
  I1109 12:48:26.008250 20 delete.go:95] Deleting pod "simpletest.rc-5dmtg" in namespace "gc-6481"
  I1109 12:48:26.020907 20 delete.go:95] Deleting pod "simpletest.rc-5kxz9" in namespace "gc-6481"
  I1109 12:48:26.047662 20 delete.go:95] Deleting pod "simpletest.rc-5l5pb" in namespace "gc-6481"
  I1109 12:48:26.063738 20 delete.go:95] Deleting pod "simpletest.rc-5q8md" in namespace "gc-6481"
  I1109 12:48:26.079217 20 delete.go:95] Deleting pod "simpletest.rc-66tzw" in namespace "gc-6481"
  I1109 12:48:26.095555 20 delete.go:95] Deleting pod "simpletest.rc-6c8s4" in namespace "gc-6481"
  I1109 12:48:26.114778 20 delete.go:95] Deleting pod "simpletest.rc-6k2jj" in namespace "gc-6481"
  I1109 12:48:26.131573 20 delete.go:95] Deleting pod "simpletest.rc-6lpkp" in namespace "gc-6481"
  I1109 12:48:26.152490 20 delete.go:95] Deleting pod "simpletest.rc-7ch2j" in namespace "gc-6481"
  I1109 12:48:26.173797 20 delete.go:95] Deleting pod "simpletest.rc-7hqs5" in namespace "gc-6481"
  I1109 12:48:26.186413 20 delete.go:95] Deleting pod "simpletest.rc-7mtqp" in namespace "gc-6481"
  I1109 12:48:26.200023 20 delete.go:95] Deleting pod "simpletest.rc-7p45m" in namespace "gc-6481"
  I1109 12:48:26.219772 20 delete.go:95] Deleting pod "simpletest.rc-8j2s2" in namespace "gc-6481"
  I1109 12:48:26.238454 20 delete.go:95] Deleting pod "simpletest.rc-8lmzj" in namespace "gc-6481"
  I1109 12:48:26.258319 20 delete.go:95] Deleting pod "simpletest.rc-8s8w9" in namespace "gc-6481"
  I1109 12:48:26.272199 20 delete.go:95] Deleting pod "simpletest.rc-8t8dr" in namespace "gc-6481"
  I1109 12:48:26.292464 20 delete.go:95] Deleting pod "simpletest.rc-8tnqx" in namespace "gc-6481"
  I1109 12:48:26.321739 20 delete.go:95] Deleting pod "simpletest.rc-9596l" in namespace "gc-6481"
  I1109 12:48:26.359839 20 delete.go:95] Deleting pod "simpletest.rc-9627f" in namespace "gc-6481"
  I1109 12:48:26.369994 20 delete.go:95] Deleting pod "simpletest.rc-9d58j" in namespace "gc-6481"
  I1109 12:48:26.384759 20 delete.go:95] Deleting pod "simpletest.rc-9d5mk" in namespace "gc-6481"
  I1109 12:48:26.400423 20 delete.go:95] Deleting pod "simpletest.rc-9x5sk" in namespace "gc-6481"
  I1109 12:48:26.423390 20 delete.go:95] Deleting pod "simpletest.rc-bdlhk" in namespace "gc-6481"
  I1109 12:48:26.440536 20 delete.go:95] Deleting pod "simpletest.rc-blf82" in namespace "gc-6481"
  I1109 12:48:26.460286 20 delete.go:95] Deleting pod "simpletest.rc-cjpll" in namespace "gc-6481"
  I1109 12:48:26.475276 20 delete.go:95] Deleting pod "simpletest.rc-ckh5q" in namespace "gc-6481"
  I1109 12:48:26.503612 20 delete.go:95] Deleting pod "simpletest.rc-cqqf8" in namespace "gc-6481"
  I1109 12:48:26.516084 20 delete.go:95] Deleting pod "simpletest.rc-cv2r9" in namespace "gc-6481"
  I1109 12:48:26.533855 20 delete.go:95] Deleting pod "simpletest.rc-d2psw" in namespace "gc-6481"
  I1109 12:48:26.553421 20 delete.go:95] Deleting pod "simpletest.rc-db4dr" in namespace "gc-6481"
  I1109 12:48:26.568699 20 delete.go:95] Deleting pod "simpletest.rc-ddvc4" in namespace "gc-6481"
  I1109 12:48:26.586165 20 delete.go:95] Deleting pod "simpletest.rc-djpfb" in namespace "gc-6481"
  I1109 12:48:26.599641 20 delete.go:95] Deleting pod "simpletest.rc-dsbf5" in namespace "gc-6481"
  I1109 12:48:26.613191 20 delete.go:95] Deleting pod "simpletest.rc-dtb9k" in namespace "gc-6481"
  I1109 12:48:26.625549 20 delete.go:95] Deleting pod "simpletest.rc-f9j6s" in namespace "gc-6481"
  I1109 12:48:26.639826 20 delete.go:95] Deleting pod "simpletest.rc-fws9m" in namespace "gc-6481"
  I1109 12:48:26.656998 20 delete.go:95] Deleting pod "simpletest.rc-g825b" in namespace "gc-6481"
  I1109 12:48:26.674313 20 delete.go:95] Deleting pod "simpletest.rc-gcqbs" in namespace "gc-6481"
  I1109 12:48:26.698130 20 delete.go:95] Deleting pod "simpletest.rc-gcvlz" in namespace "gc-6481"
  I1109 12:48:26.720402 20 delete.go:95] Deleting pod "simpletest.rc-gssxv" in namespace "gc-6481"
  I1109 12:48:26.745042 20 delete.go:95] Deleting pod "simpletest.rc-hrsj2" in namespace "gc-6481"
  I1109 12:48:26.768255 20 delete.go:95] Deleting pod "simpletest.rc-jk54x" in namespace "gc-6481"
  I1109 12:48:26.786864 20 delete.go:95] Deleting pod "simpletest.rc-jtq5r" in namespace "gc-6481"
  I1109 12:48:26.802765 20 delete.go:95] Deleting pod "simpletest.rc-jws7t" in namespace "gc-6481"
  I1109 12:48:26.819061 20 delete.go:95] Deleting pod "simpletest.rc-kdtql" in namespace "gc-6481"
  I1109 12:48:26.839435 20 delete.go:95] Deleting pod "simpletest.rc-kf5cb" in namespace "gc-6481"
  I1109 12:48:26.857843 20 delete.go:95] Deleting pod "simpletest.rc-kpjbv" in namespace "gc-6481"
  I1109 12:48:26.911784 20 delete.go:95] Deleting pod "simpletest.rc-kqzj2" in namespace "gc-6481"
  I1109 12:48:26.944565 20 delete.go:95] Deleting pod "simpletest.rc-l9fn7" in namespace "gc-6481"
  I1109 12:48:26.963616 20 delete.go:95] Deleting pod "simpletest.rc-lcw5v" in namespace "gc-6481"
  I1109 12:48:26.976482 20 delete.go:95] Deleting pod "simpletest.rc-ldph9" in namespace "gc-6481"
  I1109 12:48:26.994528 20 delete.go:95] Deleting pod "simpletest.rc-lrtl7" in namespace "gc-6481"
  I1109 12:48:27.009110 20 delete.go:95] Deleting pod "simpletest.rc-lwxck" in namespace "gc-6481"
  I1109 12:48:27.024888 20 delete.go:95] Deleting pod "simpletest.rc-lzksd" in namespace "gc-6481"
  I1109 12:48:27.042065 20 delete.go:95] Deleting pod "simpletest.rc-mgf2z" in namespace "gc-6481"
  I1109 12:48:27.052809 20 delete.go:95] Deleting pod "simpletest.rc-mjmzw" in namespace "gc-6481"
  I1109 12:48:27.068885 20 delete.go:95] Deleting pod "simpletest.rc-mnz2k" in namespace "gc-6481"
  I1109 12:48:27.083106 20 delete.go:95] Deleting pod "simpletest.rc-mrc9h" in namespace "gc-6481"
  I1109 12:48:27.095312 20 delete.go:95] Deleting pod "simpletest.rc-n7twn" in namespace "gc-6481"
  I1109 12:48:27.115003 20 delete.go:95] Deleting pod "simpletest.rc-n9rm5" in namespace "gc-6481"
  I1109 12:48:27.128369 20 delete.go:95] Deleting pod "simpletest.rc-nkflv" in namespace "gc-6481"
  I1109 12:48:27.147314 20 delete.go:95] Deleting pod "simpletest.rc-nnllr" in namespace "gc-6481"
  I1109 12:48:27.161505 20 delete.go:95] Deleting pod "simpletest.rc-pcbbb" in namespace "gc-6481"
  I1109 12:48:27.174178 20 delete.go:95] Deleting pod "simpletest.rc-q85wf" in namespace "gc-6481"
  I1109 12:48:27.182840 20 delete.go:95] Deleting pod "simpletest.rc-q8csl" in namespace "gc-6481"
  I1109 12:48:27.195131 20 delete.go:95] Deleting pod "simpletest.rc-qt9qn" in namespace "gc-6481"
  I1109 12:48:27.237599 20 delete.go:95] Deleting pod "simpletest.rc-r6fsx" in namespace "gc-6481"
  I1109 12:48:27.256175 20 delete.go:95] Deleting pod "simpletest.rc-rhbv9" in namespace "gc-6481"
  I1109 12:48:27.268710 20 delete.go:95] Deleting pod "simpletest.rc-rtcx2" in namespace "gc-6481"
  I1109 12:48:27.280995 20 delete.go:95] Deleting pod "simpletest.rc-s4chv" in namespace "gc-6481"
  I1109 12:48:27.294668 20 delete.go:95] Deleting pod "simpletest.rc-spnpj" in namespace "gc-6481"
  I1109 12:48:27.329056 20 delete.go:95] Deleting pod "simpletest.rc-srzsd" in namespace "gc-6481"
  I1109 12:48:27.343476 20 delete.go:95] Deleting pod "simpletest.rc-stl4g" in namespace "gc-6481"
  I1109 12:48:27.373084 20 delete.go:95] Deleting pod "simpletest.rc-t52sx" in namespace "gc-6481"
  I1109 12:48:27.419509 20 delete.go:95] Deleting pod "simpletest.rc-t8lcs" in namespace "gc-6481"
  I1109 12:48:27.468958 20 delete.go:95] Deleting pod "simpletest.rc-tg8wj" in namespace "gc-6481"
  I1109 12:48:27.514087 20 delete.go:95] Deleting pod "simpletest.rc-thj89" in namespace "gc-6481"
  I1109 12:48:27.566300 20 delete.go:95] Deleting pod "simpletest.rc-tmwgx" in namespace "gc-6481"
  I1109 12:48:27.618582 20 delete.go:95] Deleting pod "simpletest.rc-tspqn" in namespace "gc-6481"
  I1109 12:48:27.667097 20 delete.go:95] Deleting pod "simpletest.rc-tzx56" in namespace "gc-6481"
  I1109 12:48:27.721279 20 delete.go:95] Deleting pod "simpletest.rc-v2nq8" in namespace "gc-6481"
  I1109 12:48:27.868666 20 delete.go:95] Deleting pod "simpletest.rc-v6xbw" in namespace "gc-6481"
  I1109 12:48:27.881335 20 delete.go:95] Deleting pod "simpletest.rc-vbb4x" in namespace "gc-6481"
  I1109 12:48:27.892365 20 delete.go:95] Deleting pod "simpletest.rc-vd2sd" in namespace "gc-6481"
  I1109 12:48:27.914066 20 delete.go:95] Deleting pod "simpletest.rc-vq29x" in namespace "gc-6481"
  I1109 12:48:27.990270 20 delete.go:95] Deleting pod "simpletest.rc-w28rw" in namespace "gc-6481"
  I1109 12:48:28.021451 20 delete.go:95] Deleting pod "simpletest.rc-w8djr" in namespace "gc-6481"
  I1109 12:48:28.066556 20 delete.go:95] Deleting pod "simpletest.rc-wwjrh" in namespace "gc-6481"
  I1109 12:48:28.116371 20 delete.go:95] Deleting pod "simpletest.rc-x7jx7" in namespace "gc-6481"
  I1109 12:48:28.181599 20 delete.go:95] Deleting pod "simpletest.rc-x9q9m" in namespace "gc-6481"
  I1109 12:48:28.216948 20 delete.go:95] Deleting pod "simpletest.rc-z2pfn" in namespace "gc-6481"
  I1109 12:48:28.268624 20 delete.go:95] Deleting pod "simpletest.rc-z5gsz" in namespace "gc-6481"
  I1109 12:48:28.314844 20 delete.go:95] Deleting pod "simpletest.rc-zc8wb" in namespace "gc-6481"
  I1109 12:48:28.377707 20 delete.go:95] Deleting pod "simpletest.rc-zcvmq" in namespace "gc-6481"
  I1109 12:48:28.415687 20 delete.go:95] Deleting pod "simpletest.rc-zlgmq" in namespace "gc-6481"
  I1109 12:48:28.465518 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6481" for this suite. @ 11/09/24 12:48:28.519
â€¢ [43.850 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 11/09/24 12:48:28.561
  I1109 12:48:28.562004 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename daemonsets @ 11/09/24 12:48:28.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:48:28.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:48:28.604
  I1109 12:48:28.649772 20 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 11/09/24 12:48:28.656
  I1109 12:48:28.659256 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1109 12:48:28.659290 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 11/09/24 12:48:28.659
  I1109 12:48:28.679288 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1109 12:48:28.679321 20 fixtures.go:130] Node ip-172-31-26-237 is running 0 daemon pod, expected 1
  I1109 12:48:29.680048 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1109 12:48:29.680099 20 fixtures.go:130] Node ip-172-31-26-237 is running 0 daemon pod, expected 1
  I1109 12:48:30.680505 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1109 12:48:30.680547 20 fixtures.go:130] Node ip-172-31-26-237 is running 0 daemon pod, expected 1
  I1109 12:48:31.681256 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1109 12:48:31.681302 20 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 11/09/24 12:48:31.685
  I1109 12:48:31.701559 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1109 12:48:31.701594 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  I1109 12:48:32.704096 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1109 12:48:32.704139 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 11/09/24 12:48:32.704
  I1109 12:48:32.717118 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1109 12:48:32.717562 20 fixtures.go:130] Node ip-172-31-26-237 is running 0 daemon pod, expected 1
  I1109 12:48:33.715674 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1109 12:48:33.715711 20 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 11/09/24 12:48:33.722
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7590, will wait for the garbage collector to delete the pods @ 11/09/24 12:48:33.722
  I1109 12:48:33.780876 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 5.588473ms
  I1109 12:48:33.881578 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.698614ms
  I1109 12:48:35.585714 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1109 12:48:35.585753 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1109 12:48:35.588578 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"18504"},"items":null}

  I1109 12:48:35.593415 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"18505"},"items":null}

  I1109 12:48:35.622401 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7590" for this suite. @ 11/09/24 12:48:35.628
â€¢ [7.074 seconds]
------------------------------
S
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2157
  STEP: Creating a kubernetes client @ 11/09/24 12:48:35.636
  I1109 12:48:35.636380 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename services @ 11/09/24 12:48:35.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:48:35.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:48:35.655
  STEP: creating service in namespace services-7777 @ 11/09/24 12:48:35.658
  STEP: creating service affinity-clusterip in namespace services-7777 @ 11/09/24 12:48:35.658
  STEP: creating replication controller affinity-clusterip in namespace services-7777 @ 11/09/24 12:48:35.668
  I1109 12:48:35.676359      20 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-7777, replica count: 3
  I1109 12:48:38.726978      20 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1109 12:48:38.736793 20 resource.go:361] Creating new exec pod
  I1109 12:48:41.754619 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-7777 exec execpod-affinitylz2p8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I1109 12:48:41.844551 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  I1109 12:48:41.844597 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1109 12:48:41.844680 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-7777 exec execpod-affinitylz2p8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.68 80'
  I1109 12:48:41.941058 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.68 80\nConnection to 10.152.183.68 80 port [tcp/http] succeeded!\n"
  I1109 12:48:41.941104 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1109 12:48:41.941178 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-7777 exec execpod-affinitylz2p8 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.68:80/ ; done'
  I1109 12:48:42.091984 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.68:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.68:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.68:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.68:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.68:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.68:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.68:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.68:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.68:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.68:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.68:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.68:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.68:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.68:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.68:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.68:80/\n"
  I1109 12:48:42.092038 20 builder.go:147] stdout: "\naffinity-clusterip-df7s6\naffinity-clusterip-df7s6\naffinity-clusterip-df7s6\naffinity-clusterip-df7s6\naffinity-clusterip-df7s6\naffinity-clusterip-df7s6\naffinity-clusterip-df7s6\naffinity-clusterip-df7s6\naffinity-clusterip-df7s6\naffinity-clusterip-df7s6\naffinity-clusterip-df7s6\naffinity-clusterip-df7s6\naffinity-clusterip-df7s6\naffinity-clusterip-df7s6\naffinity-clusterip-df7s6\naffinity-clusterip-df7s6"
  I1109 12:48:42.092051 20 service.go:242] Received response from host: affinity-clusterip-df7s6
  I1109 12:48:42.092060 20 service.go:242] Received response from host: affinity-clusterip-df7s6
  I1109 12:48:42.092067 20 service.go:242] Received response from host: affinity-clusterip-df7s6
  I1109 12:48:42.092072 20 service.go:242] Received response from host: affinity-clusterip-df7s6
  I1109 12:48:42.092079 20 service.go:242] Received response from host: affinity-clusterip-df7s6
  I1109 12:48:42.092085 20 service.go:242] Received response from host: affinity-clusterip-df7s6
  I1109 12:48:42.092091 20 service.go:242] Received response from host: affinity-clusterip-df7s6
  I1109 12:48:42.092099 20 service.go:242] Received response from host: affinity-clusterip-df7s6
  I1109 12:48:42.092105 20 service.go:242] Received response from host: affinity-clusterip-df7s6
  I1109 12:48:42.092112 20 service.go:242] Received response from host: affinity-clusterip-df7s6
  I1109 12:48:42.092118 20 service.go:242] Received response from host: affinity-clusterip-df7s6
  I1109 12:48:42.092124 20 service.go:242] Received response from host: affinity-clusterip-df7s6
  I1109 12:48:42.092130 20 service.go:242] Received response from host: affinity-clusterip-df7s6
  I1109 12:48:42.092208 20 service.go:242] Received response from host: affinity-clusterip-df7s6
  I1109 12:48:42.092214 20 service.go:242] Received response from host: affinity-clusterip-df7s6
  I1109 12:48:42.092220 20 service.go:242] Received response from host: affinity-clusterip-df7s6
  I1109 12:48:42.092314 20 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-7777, will wait for the garbage collector to delete the pods @ 11/09/24 12:48:42.106
  I1109 12:48:42.166066 20 resources.go:139] Deleting ReplicationController affinity-clusterip took: 6.484548ms
  I1109 12:48:42.266919 20 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 100.848942ms
  I1109 12:48:45.084618 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7777" for this suite. @ 11/09/24 12:48:45.088
â€¢ [9.459 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 11/09/24 12:48:45.096
  I1109 12:48:45.096073 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename configmap @ 11/09/24 12:48:45.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:48:45.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:48:45.113
  STEP: Creating configMap with name configmap-test-volume-map-f75ef35d-a4af-4e7c-87ea-cf0c9c3db48d @ 11/09/24 12:48:45.116
  STEP: Creating a pod to test consume configMaps @ 11/09/24 12:48:45.12
  STEP: Saw pod success @ 11/09/24 12:48:49.141
  I1109 12:48:49.145517 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-configmaps-27a24fdb-64dd-4d8b-87b7-fdd4a6cd5989 container agnhost-container: <nil>
  STEP: delete the pod @ 11/09/24 12:48:49.164
  I1109 12:48:49.187453 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9900" for this suite. @ 11/09/24 12:48:49.191
â€¢ [4.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 11/09/24 12:48:49.201
  I1109 12:48:49.201974 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename sched-pred @ 11/09/24 12:48:49.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:48:49.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:48:49.223
  I1109 12:48:49.227310 20 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1109 12:48:49.235716 20 util.go:393] Waiting for terminating namespaces to be deleted...
  I1109 12:48:49.239257 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-26-237 before test
  I1109 12:48:49.245767 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-mmmtf from ingress-nginx-kubernetes-worker started at 2024-11-09 12:02:20 +0000 UTC (1 container statuses recorded)
  I1109 12:48:49.245789 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1109 12:48:49.245797 20 predicates.go:957] calico-node-qlwl6 from kube-system started at 2024-11-09 12:09:00 +0000 UTC (1 container statuses recorded)
  I1109 12:48:49.245802 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1109 12:48:49.245808 20 predicates.go:957] kube-state-metrics-5d7bdccd49-tvgwt from kube-system started at 2024-11-09 12:02:20 +0000 UTC (1 container statuses recorded)
  I1109 12:48:49.245813 20 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I1109 12:48:49.245819 20 predicates.go:957] sonobuoy from sonobuoy started at 2024-11-09 12:11:47 +0000 UTC (1 container statuses recorded)
  I1109 12:48:49.245825 20 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1109 12:48:49.245830 20 predicates.go:957] sonobuoy-e2e-job-f9da5545554d47d7 from sonobuoy started at 2024-11-09 12:11:49 +0000 UTC (2 container statuses recorded)
  I1109 12:48:49.245835 20 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1109 12:48:49.245840 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1109 12:48:49.245845 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-5b9d25a256a64056-v4478 from sonobuoy started at 2024-11-09 12:11:49 +0000 UTC (2 container statuses recorded)
  I1109 12:48:49.245850 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1109 12:48:49.245855 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1109 12:48:49.245862 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-65-76 before test
  I1109 12:48:49.250457 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-5v6q4 from ingress-nginx-kubernetes-worker started at 2024-11-09 12:32:41 +0000 UTC (1 container statuses recorded)
  I1109 12:48:49.250484 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1109 12:48:49.250510 20 predicates.go:957] calico-node-xl75z from kube-system started at 2024-11-09 12:09:10 +0000 UTC (1 container statuses recorded)
  I1109 12:48:49.250515 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1109 12:48:49.250521 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-5b9d25a256a64056-qmqv9 from sonobuoy started at 2024-11-09 12:11:49 +0000 UTC (2 container statuses recorded)
  I1109 12:48:49.250526 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1109 12:48:49.250531 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1109 12:48:49.250538 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-94-169 before test
  I1109 12:48:49.254557 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-6rvrg from ingress-nginx-kubernetes-worker started at 2024-11-09 12:02:11 +0000 UTC (1 container statuses recorded)
  I1109 12:48:49.254579 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 3
  I1109 12:48:49.254587 20 predicates.go:957] calico-node-79dj5 from kube-system started at 2024-11-09 12:08:39 +0000 UTC (1 container statuses recorded)
  I1109 12:48:49.254592 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1109 12:48:49.254599 20 predicates.go:957] coredns-5b4857d7c8-9wnbb from kube-system started at 2024-11-09 12:02:11 +0000 UTC (1 container statuses recorded)
  I1109 12:48:49.254604 20 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1109 12:48:49.254610 20 predicates.go:957] metrics-server-v0.7.1-6c77d69467-hr9gn from kube-system started at 2024-11-09 12:32:15 +0000 UTC (2 container statuses recorded)
  I1109 12:48:49.254615 20 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I1109 12:48:49.254620 20 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I1109 12:48:49.254627 20 predicates.go:957] dashboard-metrics-scraper-64757cf48d-c25b9 from kubernetes-dashboard started at 2024-11-09 12:32:15 +0000 UTC (1 container statuses recorded)
  I1109 12:48:49.254631 20 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1109 12:48:49.254637 20 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-s2k4w from kubernetes-dashboard started at 2024-11-09 12:02:11 +0000 UTC (1 container statuses recorded)
  I1109 12:48:49.254642 20 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I1109 12:48:49.254648 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-5b9d25a256a64056-4mx4d from sonobuoy started at 2024-11-09 12:11:49 +0000 UTC (2 container statuses recorded)
  I1109 12:48:49.254656 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1109 12:48:49.254661 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 11/09/24 12:48:49.254
  STEP: Explicitly delete pod here to free the resource it takes. @ 11/09/24 12:48:51.277
  STEP: Trying to apply a random label on the found node. @ 11/09/24 12:48:51.291
  STEP: verifying the node has the label kubernetes.io/e2e-3184208d-59b7-437c-a46d-d19aaafc3f7d 42 @ 11/09/24 12:48:51.302
  STEP: Trying to relaunch the pod, now with labels. @ 11/09/24 12:48:51.306
  STEP: removing the label kubernetes.io/e2e-3184208d-59b7-437c-a46d-d19aaafc3f7d off the node ip-172-31-65-76 @ 11/09/24 12:48:53.327
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-3184208d-59b7-437c-a46d-d19aaafc3f7d @ 11/09/24 12:48:53.339
  I1109 12:48:53.343739 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3842" for this suite. @ 11/09/24 12:48:53.349
â€¢ [4.157 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 11/09/24 12:48:53.358
  I1109 12:48:53.358841 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename init-container @ 11/09/24 12:48:53.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:48:53.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:48:53.374
  STEP: creating the pod @ 11/09/24 12:48:53.377
  I1109 12:48:53.377616 20 init_container.go:499] PodSpec: initContainers in spec.initContainers
  I1109 12:48:56.172655 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-798" for this suite. @ 11/09/24 12:48:56.178
â€¢ [2.826 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 11/09/24 12:48:56.185
  I1109 12:48:56.185372 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename webhook @ 11/09/24 12:48:56.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:48:56.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:48:56.202
  STEP: Setting up server cert @ 11/09/24 12:48:56.226
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/09/24 12:48:56.402
  STEP: Deploying the webhook pod @ 11/09/24 12:48:56.41
  STEP: Wait for the deployment to be ready @ 11/09/24 12:48:56.422
  I1109 12:48:56.429432 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 11/09/24 12:48:58.44
  STEP: Verifying the service has paired with the endpoint @ 11/09/24 12:48:58.449
  I1109 12:48:59.450930 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 11/09/24 12:48:59.46
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 11/09/24 12:48:59.461
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 11/09/24 12:48:59.461
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 11/09/24 12:48:59.461
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 11/09/24 12:48:59.462
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 11/09/24 12:48:59.462
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 11/09/24 12:48:59.462
  I1109 12:48:59.494662 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7961" for this suite. @ 11/09/24 12:48:59.497
  STEP: Destroying namespace "webhook-markers-6920" for this suite. @ 11/09/24 12:48:59.504
â€¢ [3.327 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 11/09/24 12:48:59.512
  I1109 12:48:59.512819 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename namespaces @ 11/09/24 12:48:59.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:48:59.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:48:59.53
  STEP: Read namespace status @ 11/09/24 12:48:59.532
  I1109 12:48:59.538696 20 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 11/09/24 12:48:59.538
  I1109 12:48:59.543378 20 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 11/09/24 12:48:59.543
  I1109 12:48:59.552108 20 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I1109 12:48:59.552212 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8342" for this suite. @ 11/09/24 12:48:59.555
â€¢ [0.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 11/09/24 12:48:59.561
  I1109 12:48:59.561788 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename containers @ 11/09/24 12:48:59.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:48:59.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:48:59.577
  STEP: Creating a pod to test override arguments @ 11/09/24 12:48:59.58
  STEP: Saw pod success @ 11/09/24 12:49:03.601
  I1109 12:49:03.605653 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod client-containers-c45681e4-c68c-4334-a095-abbcf8d79b49 container agnhost-container: <nil>
  STEP: delete the pod @ 11/09/24 12:49:03.612
  I1109 12:49:03.624864 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2307" for this suite. @ 11/09/24 12:49:03.628
â€¢ [4.074 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 11/09/24 12:49:03.636
  I1109 12:49:03.636302 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/09/24 12:49:03.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:49:03.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:49:03.653
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 11/09/24 12:49:03.655
  I1109 12:49:03.656149 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  I1109 12:49:04.937513 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  I1109 12:49:09.858346 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1792" for this suite. @ 11/09/24 12:49:09.864
â€¢ [6.234 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 11/09/24 12:49:09.87
  I1109 12:49:09.870387 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename security-context-test @ 11/09/24 12:49:09.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:49:09.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:49:09.888
  I1109 12:49:13.914609 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2843" for this suite. @ 11/09/24 12:49:13.919
â€¢ [4.058 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 11/09/24 12:49:13.928
  I1109 12:49:13.929031 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename svcaccounts @ 11/09/24 12:49:13.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:49:13.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:49:13.958
  I1109 12:49:13.996879 20 service_accounts.go:253] created pod pod-service-account-defaultsa
  I1109 12:49:13.996920 20 service_accounts.go:267] pod pod-service-account-defaultsa service account token volume mount: true
  I1109 12:49:14.005732 20 service_accounts.go:253] created pod pod-service-account-mountsa
  I1109 12:49:14.005770 20 service_accounts.go:267] pod pod-service-account-mountsa service account token volume mount: true
  I1109 12:49:14.013913 20 service_accounts.go:253] created pod pod-service-account-nomountsa
  I1109 12:49:14.013942 20 service_accounts.go:267] pod pod-service-account-nomountsa service account token volume mount: false
  I1109 12:49:14.022069 20 service_accounts.go:253] created pod pod-service-account-defaultsa-mountspec
  I1109 12:49:14.022104 20 service_accounts.go:267] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I1109 12:49:14.029897 20 service_accounts.go:253] created pod pod-service-account-mountsa-mountspec
  I1109 12:49:14.029934 20 service_accounts.go:267] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I1109 12:49:14.037181 20 service_accounts.go:253] created pod pod-service-account-nomountsa-mountspec
  I1109 12:49:14.037205 20 service_accounts.go:267] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I1109 12:49:14.048358 20 service_accounts.go:253] created pod pod-service-account-defaultsa-nomountspec
  I1109 12:49:14.048404 20 service_accounts.go:267] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I1109 12:49:14.054569 20 service_accounts.go:253] created pod pod-service-account-mountsa-nomountspec
  I1109 12:49:14.054589 20 service_accounts.go:267] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I1109 12:49:14.061985 20 service_accounts.go:253] created pod pod-service-account-nomountsa-nomountspec
  I1109 12:49:14.062012 20 service_accounts.go:267] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I1109 12:49:14.062113 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6683" for this suite. @ 11/09/24 12:49:14.067
â€¢ [0.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 11/09/24 12:49:14.081
  I1109 12:49:14.081482 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename pod-network-test @ 11/09/24 12:49:14.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:49:14.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:49:14.106
  STEP: Performing setup for networking test in namespace pod-network-test-5341 @ 11/09/24 12:49:14.111
  STEP: creating a selector @ 11/09/24 12:49:14.112
  STEP: Creating the service pods in kubernetes @ 11/09/24 12:49:14.112
  I1109 12:49:14.112027 20 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 11/09/24 12:49:26.204
  I1109 12:49:28.223968 20 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1109 12:49:28.224006 20 networking.go:42] Breadth first check of 192.168.122.60 on host 172.31.26.237...
  I1109 12:49:28.226962 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.35.86:9080/dial?request=hostname&protocol=udp&host=192.168.122.60&port=8081&tries=1'] Namespace:pod-network-test-5341 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1109 12:49:28.226984 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  I1109 12:49:28.227435 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1109 12:49:28.227480 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5341/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.35.86%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.122.60%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1109 12:49:28.264703 20 utils.go:356] Waiting for responses: map[]
  I1109 12:49:28.264744 20 utils.go:360] reached 192.168.122.60 after 0/1 tries
  I1109 12:49:28.264756 20 networking.go:42] Breadth first check of 192.168.35.84 on host 172.31.65.76...
  I1109 12:49:28.267443 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.35.86:9080/dial?request=hostname&protocol=udp&host=192.168.35.84&port=8081&tries=1'] Namespace:pod-network-test-5341 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1109 12:49:28.267462 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  I1109 12:49:28.267867 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1109 12:49:28.267911 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5341/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.35.86%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.35.84%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1109 12:49:28.301938 20 utils.go:356] Waiting for responses: map[]
  I1109 12:49:28.301974 20 utils.go:360] reached 192.168.35.84 after 0/1 tries
  I1109 12:49:28.301984 20 networking.go:42] Breadth first check of 192.168.187.12 on host 172.31.94.169...
  I1109 12:49:28.306108 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.35.86:9080/dial?request=hostname&protocol=udp&host=192.168.187.12&port=8081&tries=1'] Namespace:pod-network-test-5341 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1109 12:49:28.306127 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  I1109 12:49:28.306552 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1109 12:49:28.306596 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5341/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.35.86%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.187.12%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1109 12:49:28.343537 20 utils.go:356] Waiting for responses: map[]
  I1109 12:49:28.343571 20 utils.go:360] reached 192.168.187.12 after 0/1 tries
  I1109 12:49:28.343581 20 networking.go:53] Going to retry 0 out of 3 pods....
  I1109 12:49:28.343674 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5341" for this suite. @ 11/09/24 12:49:28.348
â€¢ [14.274 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 11/09/24 12:49:28.355
  I1109 12:49:28.355619 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename cronjob @ 11/09/24 12:49:28.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:49:28.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:49:28.375
  STEP: Creating a ForbidConcurrent cronjob @ 11/09/24 12:49:28.377
  STEP: Ensuring a job is scheduled @ 11/09/24 12:49:28.383
  STEP: Ensuring exactly one is scheduled @ 11/09/24 12:50:00.388
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 11/09/24 12:50:00.392
  STEP: Ensuring no more jobs are scheduled @ 11/09/24 12:50:00.395
  STEP: Removing cronjob @ 11/09/24 12:50:00.398
  I1109 12:50:00.404208 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8563" for this suite. @ 11/09/24 12:50:00.407
â€¢ [32.058 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 11/09/24 12:50:00.414
  I1109 12:50:00.414069 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename pods @ 11/09/24 12:50:00.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:50:00.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:50:00.432
  STEP: creating the pod @ 11/09/24 12:50:00.435
  STEP: setting up watch @ 11/09/24 12:50:00.435
  STEP: submitting the pod to kubernetes @ 11/09/24 12:50:00.539
  STEP: verifying the pod is in kubernetes @ 11/09/24 12:50:00.549
  STEP: verifying pod creation was observed @ 11/09/24 12:50:00.553
  STEP: deleting the pod gracefully @ 11/09/24 12:50:02.565
  STEP: verifying pod deletion was observed @ 11/09/24 12:50:02.573
  I1109 12:50:03.201441 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1585" for this suite. @ 11/09/24 12:50:03.205
â€¢ [2.797 seconds]
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 11/09/24 12:50:03.211
  I1109 12:50:03.211208 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename events @ 11/09/24 12:50:03.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:50:03.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:50:03.231
  STEP: creating a test event @ 11/09/24 12:50:03.233
  STEP: listing all events in all namespaces @ 11/09/24 12:50:03.237
  STEP: patching the test event @ 11/09/24 12:50:03.246
  STEP: fetching the test event @ 11/09/24 12:50:03.253
  STEP: updating the test event @ 11/09/24 12:50:03.255
  STEP: getting the test event @ 11/09/24 12:50:03.27
  STEP: deleting the test event @ 11/09/24 12:50:03.274
  STEP: listing all events in all namespaces @ 11/09/24 12:50:03.284
  I1109 12:50:03.306273 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4541" for this suite. @ 11/09/24 12:50:03.311
â€¢ [0.107 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 11/09/24 12:50:03.318
  I1109 12:50:03.318323 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename tables @ 11/09/24 12:50:03.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:50:03.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:50:03.341
  I1109 12:50:03.346864 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-8550" for this suite. @ 11/09/24 12:50:03.35
â€¢ [0.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 11/09/24 12:50:03.356
  I1109 12:50:03.356301 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename aggregateddiscovery @ 11/09/24 12:50:03.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:50:03.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:50:03.372
  I1109 12:50:03.377687 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-1324" for this suite. @ 11/09/24 12:50:03.381
â€¢ [0.032 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 11/09/24 12:50:03.388
  I1109 12:50:03.388718 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename namespaces @ 11/09/24 12:50:03.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:50:03.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:50:03.406
  STEP: Creating a test namespace @ 11/09/24 12:50:03.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:50:03.421
  STEP: Creating a service in the namespace @ 11/09/24 12:50:03.424
  STEP: Deleting the namespace @ 11/09/24 12:50:03.437
  STEP: Waiting for the namespace to be removed. @ 11/09/24 12:50:03.444
  STEP: Recreating the namespace @ 11/09/24 12:50:09.448
  STEP: Verifying there is no service in the namespace @ 11/09/24 12:50:09.462
  I1109 12:50:09.467512 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5308" for this suite. @ 11/09/24 12:50:09.47
  STEP: Destroying namespace "nsdeletetest-7288" for this suite. @ 11/09/24 12:50:09.476
  I1109 12:50:09.479275 20 framework.go:370] Namespace nsdeletetest-7288 was already deleted
  STEP: Destroying namespace "nsdeletetest-2849" for this suite. @ 11/09/24 12:50:09.479
â€¢ [6.096 seconds]
------------------------------
S
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 11/09/24 12:50:09.484
  I1109 12:50:09.484495 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename runtimeclass @ 11/09/24 12:50:09.485
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:50:09.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:50:09.501
  I1109 12:50:09.525933 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-618" for this suite. @ 11/09/24 12:50:09.528
â€¢ [0.053 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 11/09/24 12:50:09.537
  I1109 12:50:09.537466 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename endpointslice @ 11/09/24 12:50:09.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:50:09.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:50:09.554
  STEP: getting /apis @ 11/09/24 12:50:09.556
  STEP: getting /apis/discovery.k8s.io @ 11/09/24 12:50:09.559
  STEP: getting /apis/discovery.k8s.iov1 @ 11/09/24 12:50:09.56
  STEP: creating @ 11/09/24 12:50:09.56
  STEP: getting @ 11/09/24 12:50:09.572
  STEP: listing @ 11/09/24 12:50:09.574
  STEP: watching @ 11/09/24 12:50:09.577
  I1109 12:50:09.577327 20 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 11/09/24 12:50:09.578
  STEP: cluster-wide watching @ 11/09/24 12:50:09.581
  I1109 12:50:09.581422 20 endpointslice.go:459] starting watch
  STEP: patching @ 11/09/24 12:50:09.582
  STEP: updating @ 11/09/24 12:50:09.586
  I1109 12:50:09.593192 20 endpointslice.go:482] waiting for watch events with expected annotations
  I1109 12:50:09.593254 20 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 11/09/24 12:50:09.593
  STEP: deleting a collection @ 11/09/24 12:50:09.605
  I1109 12:50:09.617521 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6941" for this suite. @ 11/09/24 12:50:09.62
â€¢ [0.090 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 11/09/24 12:50:09.627
  I1109 12:50:09.627747 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename disruption @ 11/09/24 12:50:09.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:50:09.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:50:09.644
  STEP: Waiting for the pdb to be processed @ 11/09/24 12:50:09.652
  STEP: Waiting for all pods to be running @ 11/09/24 12:50:11.681
  I1109 12:50:11.686397 20 disruption.go:691] running pods: 0 < 3
  I1109 12:50:13.690129 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1426" for this suite. @ 11/09/24 12:50:13.694
â€¢ [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 11/09/24 12:50:13.702
  I1109 12:50:13.702769 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename projected @ 11/09/24 12:50:13.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:50:13.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:50:13.722
  STEP: Creating a pod to test downward API volume plugin @ 11/09/24 12:50:13.725
  STEP: Saw pod success @ 11/09/24 12:50:17.746
  I1109 12:50:17.750088 20 output.go:196] Trying to get logs from node ip-172-31-26-237 pod downwardapi-volume-b890b6b3-7497-416c-80fc-aef5efed223f container client-container: <nil>
  STEP: delete the pod @ 11/09/24 12:50:17.766
  I1109 12:50:17.783692 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9403" for this suite. @ 11/09/24 12:50:17.786
â€¢ [4.090 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1260
  STEP: Creating a kubernetes client @ 11/09/24 12:50:17.792
  I1109 12:50:17.792410 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename services @ 11/09/24 12:50:17.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:50:17.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:50:17.811
  STEP: creating service nodeport-test with type=NodePort in namespace services-7391 @ 11/09/24 12:50:17.814
  STEP: creating replication controller nodeport-test in namespace services-7391 @ 11/09/24 12:50:17.829
  I1109 12:50:17.836657      20 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-7391, replica count: 2
  I1109 12:50:20.887556      20 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1109 12:50:20.887595 20 resource.go:361] Creating new exec pod
  I1109 12:50:23.911068 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-7391 exec execpod6dnkc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I1109 12:50:23.991271 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I1109 12:50:23.991315 20 builder.go:147] stdout: "nodeport-test-kzpkv"
  I1109 12:50:23.991396 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-7391 exec execpod6dnkc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.236 80'
  I1109 12:50:24.071538 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.236 80\nConnection to 10.152.183.236 80 port [tcp/http] succeeded!\n"
  I1109 12:50:24.071581 20 builder.go:147] stdout: ""
  I1109 12:50:24.991757 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-7391 exec execpod6dnkc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.236 80'
  I1109 12:50:25.071461 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.236 80\nConnection to 10.152.183.236 80 port [tcp/http] succeeded!\n"
  I1109 12:50:25.071502 20 builder.go:147] stdout: "nodeport-test-kzpkv"
  I1109 12:50:25.071593 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-7391 exec execpod6dnkc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.94.169 31013'
  I1109 12:50:25.151773 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.94.169 31013\nConnection to 172.31.94.169 31013 port [tcp/*] succeeded!\n"
  I1109 12:50:25.151835 20 builder.go:147] stdout: "nodeport-test-kzpkv"
  I1109 12:50:25.151919 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-7391 exec execpod6dnkc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.26.237 31013'
  I1109 12:50:25.232307 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.26.237 31013\nConnection to 172.31.26.237 31013 port [tcp/*] succeeded!\n"
  I1109 12:50:25.232348 20 builder.go:147] stdout: "nodeport-test-qfb9x"
  I1109 12:50:25.232510 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7391" for this suite. @ 11/09/24 12:50:25.236
â€¢ [7.451 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1396
  STEP: Creating a kubernetes client @ 11/09/24 12:50:25.244
  I1109 12:50:25.244043 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename services @ 11/09/24 12:50:25.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:50:25.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:50:25.261
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-9791 @ 11/09/24 12:50:25.263
  STEP: changing the ExternalName service to type=ClusterIP @ 11/09/24 12:50:25.269
  STEP: creating replication controller externalname-service in namespace services-9791 @ 11/09/24 12:50:25.285
  I1109 12:50:25.293524      20 runners.go:193] Created replication controller with name: externalname-service, namespace: services-9791, replica count: 2
  I1109 12:50:28.344997      20 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1109 12:50:28.345041 20 resource.go:361] Creating new exec pod
  I1109 12:50:31.363679 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-9791 exec execpod7qzdj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1109 12:50:31.441704 20 builder.go:146] stderr: "+ + nc -v -t -w 2 externalname-serviceecho 80 hostName\n\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1109 12:50:31.441747 20 builder.go:147] stdout: "externalname-service-c54d4"
  I1109 12:50:31.441875 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-9791 exec execpod7qzdj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.64 80'
  I1109 12:50:31.518738 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.64 80\nConnection to 10.152.183.64 80 port [tcp/http] succeeded!\n"
  I1109 12:50:31.518808 20 builder.go:147] stdout: "externalname-service-c54d4"
  I1109 12:50:31.518905 20 service.go:1405] Cleaning up the ExternalName to ClusterIP test service
  I1109 12:50:31.535124 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9791" for this suite. @ 11/09/24 12:50:31.539
â€¢ [6.301 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:164
  STEP: Creating a kubernetes client @ 11/09/24 12:50:31.544
  I1109 12:50:31.544987 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename resourcequota @ 11/09/24 12:50:31.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:50:31.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:50:31.563
  STEP: Discovering how many secrets are in namespace by default @ 11/09/24 12:50:31.566
  STEP: Counting existing ResourceQuota @ 11/09/24 12:50:36.569
  STEP: Creating a ResourceQuota @ 11/09/24 12:50:41.573
  STEP: Ensuring resource quota status is calculated @ 11/09/24 12:50:41.578
  STEP: Creating a Secret @ 11/09/24 12:50:43.583
  STEP: Ensuring resource quota status captures secret creation @ 11/09/24 12:50:43.595
  STEP: Deleting a secret @ 11/09/24 12:50:45.601
  STEP: Ensuring resource quota status released usage @ 11/09/24 12:50:45.608
  I1109 12:50:47.612471 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2413" for this suite. @ 11/09/24 12:50:47.615
â€¢ [16.078 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 11/09/24 12:50:47.622
  I1109 12:50:47.622974 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename pods @ 11/09/24 12:50:47.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:50:47.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:50:47.646
  STEP: creating the pod @ 11/09/24 12:50:47.649
  STEP: submitting the pod to kubernetes @ 11/09/24 12:50:47.649
  STEP: verifying the pod is in kubernetes @ 11/09/24 12:50:49.674
  STEP: updating the pod @ 11/09/24 12:50:49.677
  I1109 12:50:50.193547 20 pod_client.go:173] Successfully updated pod "pod-update-71cef471-441d-4430-a345-17ff327911f7"
  STEP: verifying the updated pod is in kubernetes @ 11/09/24 12:50:50.198
  I1109 12:50:50.202416 20 pods.go:391] Pod update OK
  I1109 12:50:50.202551 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8513" for this suite. @ 11/09/24 12:50:50.206
â€¢ [2.592 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 11/09/24 12:50:50.215
  I1109 12:50:50.215317 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename secrets @ 11/09/24 12:50:50.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:50:50.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:50:50.232
  STEP: creating a secret @ 11/09/24 12:50:50.234
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 11/09/24 12:50:50.239
  STEP: patching the secret @ 11/09/24 12:50:50.242
  STEP: deleting the secret using a LabelSelector @ 11/09/24 12:50:50.25
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 11/09/24 12:50:50.258
  I1109 12:50:50.261075 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1137" for this suite. @ 11/09/24 12:50:50.263
â€¢ [0.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:288
  STEP: Creating a kubernetes client @ 11/09/24 12:50:50.271
  I1109 12:50:50.271172 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename dns @ 11/09/24 12:50:50.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:50:50.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:50:50.288
  STEP: Creating a test headless service @ 11/09/24 12:50:50.29
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7156.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-7156.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7156.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7156.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-7156.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-7156.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-7156.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-7156.svc.cluster.local;sleep 1; done
   @ 11/09/24 12:50:50.295
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7156.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-7156.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7156.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-7156.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-7156.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-7156.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-7156.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-7156.svc.cluster.local;sleep 1; done
   @ 11/09/24 12:50:50.295
  STEP: creating a pod to probe DNS @ 11/09/24 12:50:50.295
  STEP: submitting the pod to kubernetes @ 11/09/24 12:50:50.295
  STEP: retrieving the pod @ 11/09/24 12:50:52.313
  STEP: looking for the results for each expected name from probers @ 11/09/24 12:50:52.317
  I1109 12:50:52.321918 20 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-7156.svc.cluster.local from pod dns-7156/dns-test-83e9f527-a737-45b8-8775-c27037139aae: the server could not find the requested resource (get pods dns-test-83e9f527-a737-45b8-8775-c27037139aae)
  I1109 12:50:52.325802 20 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7156.svc.cluster.local from pod dns-7156/dns-test-83e9f527-a737-45b8-8775-c27037139aae: the server could not find the requested resource (get pods dns-test-83e9f527-a737-45b8-8775-c27037139aae)
  I1109 12:50:52.330474 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-7156.svc.cluster.local from pod dns-7156/dns-test-83e9f527-a737-45b8-8775-c27037139aae: the server could not find the requested resource (get pods dns-test-83e9f527-a737-45b8-8775-c27037139aae)
  I1109 12:50:52.334190 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-7156.svc.cluster.local from pod dns-7156/dns-test-83e9f527-a737-45b8-8775-c27037139aae: the server could not find the requested resource (get pods dns-test-83e9f527-a737-45b8-8775-c27037139aae)
  I1109 12:50:52.338154 20 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-7156.svc.cluster.local from pod dns-7156/dns-test-83e9f527-a737-45b8-8775-c27037139aae: the server could not find the requested resource (get pods dns-test-83e9f527-a737-45b8-8775-c27037139aae)
  I1109 12:50:52.342432 20 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-7156.svc.cluster.local from pod dns-7156/dns-test-83e9f527-a737-45b8-8775-c27037139aae: the server could not find the requested resource (get pods dns-test-83e9f527-a737-45b8-8775-c27037139aae)
  I1109 12:50:52.345708 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-7156.svc.cluster.local from pod dns-7156/dns-test-83e9f527-a737-45b8-8775-c27037139aae: the server could not find the requested resource (get pods dns-test-83e9f527-a737-45b8-8775-c27037139aae)
  I1109 12:50:52.349671 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-7156.svc.cluster.local from pod dns-7156/dns-test-83e9f527-a737-45b8-8775-c27037139aae: the server could not find the requested resource (get pods dns-test-83e9f527-a737-45b8-8775-c27037139aae)
  I1109 12:50:52.349700 20 dns_common.go:489] Lookups using dns-7156/dns-test-83e9f527-a737-45b8-8775-c27037139aae failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-7156.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7156.svc.cluster.local wheezy_udp@dns-test-service-2.dns-7156.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-7156.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-7156.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-7156.svc.cluster.local jessie_udp@dns-test-service-2.dns-7156.svc.cluster.local jessie_tcp@dns-test-service-2.dns-7156.svc.cluster.local]

  I1109 12:50:52.360511 20 dns_common.go:495] Pod client logs for webserver: 
  I1109 12:50:52.367292 20 dns_common.go:495] Pod client logs for querier: 
  I1109 12:50:52.372881 20 dns_common.go:495] Pod client logs for jessie-querier: 
  I1109 12:50:57.350546 20 dns_common.go:527] DNS probes using dns-7156/dns-test-83e9f527-a737-45b8-8775-c27037139aae succeeded

  STEP: deleting the pod @ 11/09/24 12:50:57.35
  STEP: deleting the test headless service @ 11/09/24 12:50:57.362
  I1109 12:50:57.380349 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7156" for this suite. @ 11/09/24 12:50:57.386
â€¢ [7.123 seconds]
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 11/09/24 12:50:57.394
  I1109 12:50:57.394545 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename configmap @ 11/09/24 12:50:57.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:50:57.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:50:57.415
  STEP: Creating configMap that has name configmap-test-emptyKey-99ab27aa-822d-4ad4-8fc7-14304b3d100b @ 11/09/24 12:50:57.417
  I1109 12:50:57.418680 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5980" for this suite. @ 11/09/24 12:50:57.422
â€¢ [0.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:119
  STEP: Creating a kubernetes client @ 11/09/24 12:50:57.43
  I1109 12:50:57.430604 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename dns @ 11/09/24 12:50:57.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:50:57.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:50:57.448
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-9834.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-9834.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 11/09/24 12:50:57.45
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-9834.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-9834.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 11/09/24 12:50:57.45
  STEP: creating a pod to probe /etc/hosts @ 11/09/24 12:50:57.45
  STEP: submitting the pod to kubernetes @ 11/09/24 12:50:57.45
  STEP: retrieving the pod @ 11/09/24 12:50:59.469
  STEP: looking for the results for each expected name from probers @ 11/09/24 12:50:59.472
  I1109 12:50:59.491271 20 dns_common.go:527] DNS probes using dns-9834/dns-test-27aa7dc8-41d9-4487-9152-57b79b8b4507 succeeded

  STEP: deleting the pod @ 11/09/24 12:50:59.491
  I1109 12:50:59.505614 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9834" for this suite. @ 11/09/24 12:50:59.509
â€¢ [2.085 seconds]
------------------------------
S
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 11/09/24 12:50:59.515
  I1109 12:50:59.515568 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename proxy @ 11/09/24 12:50:59.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:50:59.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:50:59.532
  STEP: starting an echo server on multiple ports @ 11/09/24 12:50:59.547
  STEP: creating replication controller proxy-service-msrvz in namespace proxy-1612 @ 11/09/24 12:50:59.547
  I1109 12:50:59.558942      20 runners.go:193] Created replication controller with name: proxy-service-msrvz, namespace: proxy-1612, replica count: 1
  I1109 12:51:00.610389      20 runners.go:193] proxy-service-msrvz Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I1109 12:51:01.611360      20 runners.go:193] proxy-service-msrvz Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1109 12:51:01.617959 20 proxy.go:230] setup took 2.083014963s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 11/09/24 12:51:01.618
  I1109 12:51:01.625012 20 proxy.go:558] (0) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc/proxy/rewriteme">test</a> (200; 6.545235ms)
  I1109 12:51:01.625006 20 proxy.go:558] (0) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:160/proxy/: foo (200; 6.735511ms)
  I1109 12:51:01.625073 20 proxy.go:558] (0) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:1080/proxy/rewriteme">test<... (200; 6.572877ms)
  I1109 12:51:01.625086 20 proxy.go:558] (0) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:160/proxy/: foo (200; 6.74583ms)
  I1109 12:51:01.629361 20 proxy.go:558] (0) /api/v1/namespaces/proxy-1612/services/http:proxy-service-msrvz:portname2/proxy/: bar (200; 11.192705ms)
  I1109 12:51:01.629370 20 proxy.go:558] (0) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:162/proxy/: bar (200; 10.830614ms)
  I1109 12:51:01.630309 20 proxy.go:558] (0) /api/v1/namespaces/proxy-1612/services/https:proxy-service-msrvz:tlsportname1/proxy/: tls baz (200; 12.004702ms)
  I1109 12:51:01.630309 20 proxy.go:558] (0) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:460/proxy/: tls baz (200; 12.021911ms)
  I1109 12:51:01.632698 20 proxy.go:558] (0) /api/v1/namespaces/proxy-1612/services/http:proxy-service-msrvz:portname1/proxy/: foo (200; 14.127854ms)
  I1109 12:51:01.632720 20 proxy.go:558] (0) /api/v1/namespaces/proxy-1612/services/proxy-service-msrvz:portname1/proxy/: foo (200; 14.355652ms)
  I1109 12:51:01.632745 20 proxy.go:558] (0) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:1080/proxy/rewriteme">... (200; 14.223554ms)
  I1109 12:51:01.632984 20 proxy.go:558] (0) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:162/proxy/: bar (200; 14.400377ms)
  I1109 12:51:01.633479 20 proxy.go:558] (0) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:462/proxy/: tls qux (200; 15.038361ms)
  I1109 12:51:01.633479 20 proxy.go:558] (0) /api/v1/namespaces/proxy-1612/services/https:proxy-service-msrvz:tlsportname2/proxy/: tls qux (200; 15.430632ms)
  I1109 12:51:01.633654 20 proxy.go:558] (0) /api/v1/namespaces/proxy-1612/services/proxy-service-msrvz:portname2/proxy/: bar (200; 15.236193ms)
  I1109 12:51:01.634680 20 proxy.go:558] (0) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:443/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:443/proxy/tlsrewritem... (200; 16.128922ms)
  I1109 12:51:01.639193 20 proxy.go:558] (1) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:162/proxy/: bar (200; 4.231338ms)
  I1109 12:51:01.639193 20 proxy.go:558] (1) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:460/proxy/: tls baz (200; 4.476617ms)
  I1109 12:51:01.640147 20 proxy.go:558] (1) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:162/proxy/: bar (200; 5.1269ms)
  I1109 12:51:01.640153 20 proxy.go:558] (1) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc/proxy/rewriteme">test</a> (200; 5.229731ms)
  I1109 12:51:01.640175 20 proxy.go:558] (1) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:160/proxy/: foo (200; 5.125822ms)
  I1109 12:51:01.640679 20 proxy.go:558] (1) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:1080/proxy/rewriteme">test<... (200; 5.783616ms)
  I1109 12:51:01.641083 20 proxy.go:558] (1) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:462/proxy/: tls qux (200; 6.142057ms)
  I1109 12:51:01.641306 20 proxy.go:558] (1) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:1080/proxy/rewriteme">... (200; 6.312424ms)
  I1109 12:51:01.641622 20 proxy.go:558] (1) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:443/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:443/proxy/tlsrewritem... (200; 6.645842ms)
  I1109 12:51:01.642155 20 proxy.go:558] (1) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:160/proxy/: foo (200; 7.078698ms)
  I1109 12:51:01.642171 20 proxy.go:558] (1) /api/v1/namespaces/proxy-1612/services/proxy-service-msrvz:portname2/proxy/: bar (200; 7.359813ms)
  I1109 12:51:01.642377 20 proxy.go:558] (1) /api/v1/namespaces/proxy-1612/services/https:proxy-service-msrvz:tlsportname1/proxy/: tls baz (200; 7.34201ms)
  I1109 12:51:01.643445 20 proxy.go:558] (1) /api/v1/namespaces/proxy-1612/services/proxy-service-msrvz:portname1/proxy/: foo (200; 8.654153ms)
  I1109 12:51:01.643446 20 proxy.go:558] (1) /api/v1/namespaces/proxy-1612/services/http:proxy-service-msrvz:portname1/proxy/: foo (200; 8.690103ms)
  I1109 12:51:01.643584 20 proxy.go:558] (1) /api/v1/namespaces/proxy-1612/services/http:proxy-service-msrvz:portname2/proxy/: bar (200; 8.704621ms)
  I1109 12:51:01.644022 20 proxy.go:558] (1) /api/v1/namespaces/proxy-1612/services/https:proxy-service-msrvz:tlsportname2/proxy/: tls qux (200; 9.167888ms)
  I1109 12:51:01.647040 20 proxy.go:558] (2) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:162/proxy/: bar (200; 2.979336ms)
  I1109 12:51:01.647135 20 proxy.go:558] (2) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:443/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:443/proxy/tlsrewritem... (200; 3.007265ms)
  I1109 12:51:01.647302 20 proxy.go:558] (2) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:160/proxy/: foo (200; 3.118155ms)
  I1109 12:51:01.648679 20 proxy.go:558] (2) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:1080/proxy/rewriteme">test<... (200; 4.351793ms)
  I1109 12:51:01.648860 20 proxy.go:558] (2) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:460/proxy/: tls baz (200; 4.658704ms)
  I1109 12:51:01.649319 20 proxy.go:558] (2) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:1080/proxy/rewriteme">... (200; 4.958078ms)
  I1109 12:51:01.649333 20 proxy.go:558] (2) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:162/proxy/: bar (200; 5.228564ms)
  I1109 12:51:01.650007 20 proxy.go:558] (2) /api/v1/namespaces/proxy-1612/services/proxy-service-msrvz:portname2/proxy/: bar (200; 5.960953ms)
  I1109 12:51:01.650294 20 proxy.go:558] (2) /api/v1/namespaces/proxy-1612/services/proxy-service-msrvz:portname1/proxy/: foo (200; 6.074854ms)
  I1109 12:51:01.650803 20 proxy.go:558] (2) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:462/proxy/: tls qux (200; 6.493672ms)
  I1109 12:51:01.650976 20 proxy.go:558] (2) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:160/proxy/: foo (200; 6.809911ms)
  I1109 12:51:01.651052 20 proxy.go:558] (2) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc/proxy/rewriteme">test</a> (200; 6.768741ms)
  I1109 12:51:01.651165 20 proxy.go:558] (2) /api/v1/namespaces/proxy-1612/services/https:proxy-service-msrvz:tlsportname2/proxy/: tls qux (200; 6.821312ms)
  I1109 12:51:01.652247 20 proxy.go:558] (2) /api/v1/namespaces/proxy-1612/services/https:proxy-service-msrvz:tlsportname1/proxy/: tls baz (200; 8.099088ms)
  I1109 12:51:01.652305 20 proxy.go:558] (2) /api/v1/namespaces/proxy-1612/services/http:proxy-service-msrvz:portname2/proxy/: bar (200; 8.037254ms)
  I1109 12:51:01.656753 20 proxy.go:558] (2) /api/v1/namespaces/proxy-1612/services/http:proxy-service-msrvz:portname1/proxy/: foo (200; 12.500027ms)
  I1109 12:51:01.665539 20 proxy.go:558] (3) /api/v1/namespaces/proxy-1612/services/proxy-service-msrvz:portname1/proxy/: foo (200; 8.443064ms)
  I1109 12:51:01.665549 20 proxy.go:558] (3) /api/v1/namespaces/proxy-1612/services/http:proxy-service-msrvz:portname1/proxy/: foo (200; 8.53338ms)
  I1109 12:51:01.668280 20 proxy.go:558] (3) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:162/proxy/: bar (200; 11.203611ms)
  I1109 12:51:01.669647 20 proxy.go:558] (3) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:1080/proxy/rewriteme">... (200; 12.590084ms)
  I1109 12:51:01.669668 20 proxy.go:558] (3) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc/proxy/rewriteme">test</a> (200; 12.846234ms)
  I1109 12:51:01.669896 20 proxy.go:558] (3) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:160/proxy/: foo (200; 12.974556ms)
  I1109 12:51:01.669917 20 proxy.go:558] (3) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:443/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:443/proxy/tlsrewritem... (200; 12.935166ms)
  I1109 12:51:01.671520 20 proxy.go:558] (3) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:162/proxy/: bar (200; 14.732147ms)
  I1109 12:51:01.671709 20 proxy.go:558] (3) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:160/proxy/: foo (200; 14.812368ms)
  I1109 12:51:01.671956 20 proxy.go:558] (3) /api/v1/namespaces/proxy-1612/services/http:proxy-service-msrvz:portname2/proxy/: bar (200; 14.832903ms)
  I1109 12:51:01.672269 20 proxy.go:558] (3) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:1080/proxy/rewriteme">test<... (200; 15.231729ms)
  I1109 12:51:01.672503 20 proxy.go:558] (3) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:462/proxy/: tls qux (200; 15.543064ms)
  I1109 12:51:01.672623 20 proxy.go:558] (3) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:460/proxy/: tls baz (200; 15.682169ms)
  I1109 12:51:01.672853 20 proxy.go:558] (3) /api/v1/namespaces/proxy-1612/services/https:proxy-service-msrvz:tlsportname1/proxy/: tls baz (200; 15.985212ms)
  I1109 12:51:01.673736 20 proxy.go:558] (3) /api/v1/namespaces/proxy-1612/services/proxy-service-msrvz:portname2/proxy/: bar (200; 16.628252ms)
  I1109 12:51:01.673800 20 proxy.go:558] (3) /api/v1/namespaces/proxy-1612/services/https:proxy-service-msrvz:tlsportname2/proxy/: tls qux (200; 16.780684ms)
  I1109 12:51:01.681586 20 proxy.go:558] (4) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:160/proxy/: foo (200; 7.452784ms)
  I1109 12:51:01.685031 20 proxy.go:558] (4) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:162/proxy/: bar (200; 11.018226ms)
  I1109 12:51:01.685105 20 proxy.go:558] (4) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:1080/proxy/rewriteme">test<... (200; 10.992934ms)
  I1109 12:51:01.685509 20 proxy.go:558] (4) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:160/proxy/: foo (200; 11.34339ms)
  I1109 12:51:01.686035 20 proxy.go:558] (4) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:162/proxy/: bar (200; 12.004885ms)
  I1109 12:51:01.686088 20 proxy.go:558] (4) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:1080/proxy/rewriteme">... (200; 12.041196ms)
  I1109 12:51:01.686147 20 proxy.go:558] (4) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:443/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:443/proxy/tlsrewritem... (200; 12.267665ms)
  I1109 12:51:01.686160 20 proxy.go:558] (4) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:460/proxy/: tls baz (200; 12.323082ms)
  I1109 12:51:01.686193 20 proxy.go:558] (4) /api/v1/namespaces/proxy-1612/services/https:proxy-service-msrvz:tlsportname1/proxy/: tls baz (200; 12.044245ms)
  I1109 12:51:01.686205 20 proxy.go:558] (4) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:462/proxy/: tls qux (200; 12.211991ms)
  I1109 12:51:01.686221 20 proxy.go:558] (4) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc/proxy/rewriteme">test</a> (200; 12.197551ms)
  I1109 12:51:01.687179 20 proxy.go:558] (4) /api/v1/namespaces/proxy-1612/services/http:proxy-service-msrvz:portname2/proxy/: bar (200; 13.21939ms)
  I1109 12:51:01.687200 20 proxy.go:558] (4) /api/v1/namespaces/proxy-1612/services/https:proxy-service-msrvz:tlsportname2/proxy/: tls qux (200; 13.095081ms)
  I1109 12:51:01.687309 20 proxy.go:558] (4) /api/v1/namespaces/proxy-1612/services/http:proxy-service-msrvz:portname1/proxy/: foo (200; 13.244374ms)
  I1109 12:51:01.687326 20 proxy.go:558] (4) /api/v1/namespaces/proxy-1612/services/proxy-service-msrvz:portname2/proxy/: bar (200; 13.383686ms)
  I1109 12:51:01.687408 20 proxy.go:558] (4) /api/v1/namespaces/proxy-1612/services/proxy-service-msrvz:portname1/proxy/: foo (200; 13.486707ms)
  I1109 12:51:01.698203 20 proxy.go:558] (5) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:160/proxy/: foo (200; 10.422235ms)
  I1109 12:51:01.699196 20 proxy.go:558] (5) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:162/proxy/: bar (200; 11.472934ms)
  I1109 12:51:01.699248 20 proxy.go:558] (5) /api/v1/namespaces/proxy-1612/services/proxy-service-msrvz:portname2/proxy/: bar (200; 11.704854ms)
  I1109 12:51:01.699831 20 proxy.go:558] (5) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:460/proxy/: tls baz (200; 12.371948ms)
  I1109 12:51:01.699829 20 proxy.go:558] (5) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:1080/proxy/rewriteme">... (200; 12.15341ms)
  I1109 12:51:01.699935 20 proxy.go:558] (5) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:462/proxy/: tls qux (200; 12.331868ms)
  I1109 12:51:01.699933 20 proxy.go:558] (5) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:162/proxy/: bar (200; 12.175674ms)
  I1109 12:51:01.700115 20 proxy.go:558] (5) /api/v1/namespaces/proxy-1612/services/https:proxy-service-msrvz:tlsportname1/proxy/: tls baz (200; 12.420524ms)
  I1109 12:51:01.700306 20 proxy.go:558] (5) /api/v1/namespaces/proxy-1612/services/http:proxy-service-msrvz:portname2/proxy/: bar (200; 12.743691ms)
  I1109 12:51:01.701043 20 proxy.go:558] (5) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc/proxy/rewriteme">test</a> (200; 13.459252ms)
  I1109 12:51:01.701621 20 proxy.go:558] (5) /api/v1/namespaces/proxy-1612/services/https:proxy-service-msrvz:tlsportname2/proxy/: tls qux (200; 13.977759ms)
  I1109 12:51:01.701627 20 proxy.go:558] (5) /api/v1/namespaces/proxy-1612/services/http:proxy-service-msrvz:portname1/proxy/: foo (200; 14.003969ms)
  I1109 12:51:01.702636 20 proxy.go:558] (5) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:1080/proxy/rewriteme">test<... (200; 15.154493ms)
  I1109 12:51:01.702636 20 proxy.go:558] (5) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:443/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:443/proxy/tlsrewritem... (200; 14.974293ms)
  I1109 12:51:01.702843 20 proxy.go:558] (5) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:160/proxy/: foo (200; 15.106086ms)
  I1109 12:51:01.703245 20 proxy.go:558] (5) /api/v1/namespaces/proxy-1612/services/proxy-service-msrvz:portname1/proxy/: foo (200; 15.730406ms)
  I1109 12:51:01.710316 20 proxy.go:558] (6) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:160/proxy/: foo (200; 6.717158ms)
  I1109 12:51:01.710347 20 proxy.go:558] (6) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:1080/proxy/rewriteme">test<... (200; 6.866293ms)
  I1109 12:51:01.711014 20 proxy.go:558] (6) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:160/proxy/: foo (200; 7.38759ms)
  I1109 12:51:01.711014 20 proxy.go:558] (6) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:1080/proxy/rewriteme">... (200; 7.507828ms)
  I1109 12:51:01.711205 20 proxy.go:558] (6) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:162/proxy/: bar (200; 7.681227ms)
  I1109 12:51:01.711963 20 proxy.go:558] (6) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc/proxy/rewriteme">test</a> (200; 8.500513ms)
  I1109 12:51:01.711983 20 proxy.go:558] (6) /api/v1/namespaces/proxy-1612/services/https:proxy-service-msrvz:tlsportname1/proxy/: tls baz (200; 8.408819ms)
  I1109 12:51:01.712206 20 proxy.go:558] (6) /api/v1/namespaces/proxy-1612/services/http:proxy-service-msrvz:portname2/proxy/: bar (200; 8.762946ms)
  I1109 12:51:01.713097 20 proxy.go:558] (6) /api/v1/namespaces/proxy-1612/services/https:proxy-service-msrvz:tlsportname2/proxy/: tls qux (200; 9.744632ms)
  I1109 12:51:01.713467 20 proxy.go:558] (6) /api/v1/namespaces/proxy-1612/services/proxy-service-msrvz:portname1/proxy/: foo (200; 10.080919ms)
  I1109 12:51:01.713962 20 proxy.go:558] (6) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:460/proxy/: tls baz (200; 10.684019ms)
  I1109 12:51:01.714280 20 proxy.go:558] (6) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:462/proxy/: tls qux (200; 10.721876ms)
  I1109 12:51:01.714539 20 proxy.go:558] (6) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:443/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:443/proxy/tlsrewritem... (200; 10.927762ms)
  I1109 12:51:01.714603 20 proxy.go:558] (6) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:162/proxy/: bar (200; 11.059759ms)
  I1109 12:51:01.715732 20 proxy.go:558] (6) /api/v1/namespaces/proxy-1612/services/http:proxy-service-msrvz:portname1/proxy/: foo (200; 12.08621ms)
  I1109 12:51:01.717199 20 proxy.go:558] (6) /api/v1/namespaces/proxy-1612/services/proxy-service-msrvz:portname2/proxy/: bar (200; 13.780532ms)
  I1109 12:51:01.723265 20 proxy.go:558] (7) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:162/proxy/: bar (200; 5.696368ms)
  I1109 12:51:01.723265 20 proxy.go:558] (7) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:160/proxy/: foo (200; 5.771577ms)
  I1109 12:51:01.724844 20 proxy.go:558] (7) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:1080/proxy/rewriteme">test<... (200; 7.490632ms)
  I1109 12:51:01.724868 20 proxy.go:558] (7) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:160/proxy/: foo (200; 7.393726ms)
  I1109 12:51:01.724867 20 proxy.go:558] (7) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:1080/proxy/rewriteme">... (200; 7.432896ms)
  I1109 12:51:01.725763 20 proxy.go:558] (7) /api/v1/namespaces/proxy-1612/services/http:proxy-service-msrvz:portname1/proxy/: foo (200; 8.141742ms)
  I1109 12:51:01.726312 20 proxy.go:558] (7) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:462/proxy/: tls qux (200; 8.893605ms)
  I1109 12:51:01.727350 20 proxy.go:558] (7) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:443/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:443/proxy/tlsrewritem... (200; 9.746648ms)
  I1109 12:51:01.727410 20 proxy.go:558] (7) /api/v1/namespaces/proxy-1612/services/https:proxy-service-msrvz:tlsportname1/proxy/: tls baz (200; 9.954022ms)
  I1109 12:51:01.727426 20 proxy.go:558] (7) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:460/proxy/: tls baz (200; 9.911587ms)
  I1109 12:51:01.728464 20 proxy.go:558] (7) /api/v1/namespaces/proxy-1612/services/https:proxy-service-msrvz:tlsportname2/proxy/: tls qux (200; 11.203648ms)
  I1109 12:51:01.728479 20 proxy.go:558] (7) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:162/proxy/: bar (200; 10.899212ms)
  I1109 12:51:01.728484 20 proxy.go:558] (7) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc/proxy/rewriteme">test</a> (200; 11.090638ms)
  I1109 12:51:01.728997 20 proxy.go:558] (7) /api/v1/namespaces/proxy-1612/services/proxy-service-msrvz:portname2/proxy/: bar (200; 11.77325ms)
  I1109 12:51:01.729950 20 proxy.go:558] (7) /api/v1/namespaces/proxy-1612/services/http:proxy-service-msrvz:portname2/proxy/: bar (200; 12.65321ms)
  I1109 12:51:01.731255 20 proxy.go:558] (7) /api/v1/namespaces/proxy-1612/services/proxy-service-msrvz:portname1/proxy/: foo (200; 13.719572ms)
  I1109 12:51:01.735328 20 proxy.go:558] (8) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:160/proxy/: foo (200; 3.839856ms)
  I1109 12:51:01.736173 20 proxy.go:558] (8) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:1080/proxy/rewriteme">... (200; 4.581631ms)
  I1109 12:51:01.736775 20 proxy.go:558] (8) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:160/proxy/: foo (200; 5.30889ms)
  I1109 12:51:01.738181 20 proxy.go:558] (8) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc/proxy/rewriteme">test</a> (200; 6.621477ms)
  I1109 12:51:01.738193 20 proxy.go:558] (8) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:162/proxy/: bar (200; 6.585744ms)
  I1109 12:51:01.739018 20 proxy.go:558] (8) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:443/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:443/proxy/tlsrewritem... (200; 7.441172ms)
  I1109 12:51:01.739018 20 proxy.go:558] (8) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:462/proxy/: tls qux (200; 7.72017ms)
  I1109 12:51:01.739752 20 proxy.go:558] (8) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:1080/proxy/rewriteme">test<... (200; 8.063818ms)
  I1109 12:51:01.739830 20 proxy.go:558] (8) /api/v1/namespaces/proxy-1612/services/https:proxy-service-msrvz:tlsportname1/proxy/: tls baz (200; 8.406385ms)
  I1109 12:51:01.739916 20 proxy.go:558] (8) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:162/proxy/: bar (200; 8.284925ms)
  I1109 12:51:01.739965 20 proxy.go:558] (8) /api/v1/namespaces/proxy-1612/services/http:proxy-service-msrvz:portname1/proxy/: foo (200; 8.301191ms)
  I1109 12:51:01.740175 20 proxy.go:558] (8) /api/v1/namespaces/proxy-1612/services/https:proxy-service-msrvz:tlsportname2/proxy/: tls qux (200; 8.527482ms)
  I1109 12:51:01.740175 20 proxy.go:558] (8) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:460/proxy/: tls baz (200; 8.77407ms)
  I1109 12:51:01.740263 20 proxy.go:558] (8) /api/v1/namespaces/proxy-1612/services/proxy-service-msrvz:portname2/proxy/: bar (200; 8.744007ms)
  I1109 12:51:01.740355 20 proxy.go:558] (8) /api/v1/namespaces/proxy-1612/services/proxy-service-msrvz:portname1/proxy/: foo (200; 8.852735ms)
  I1109 12:51:01.741405 20 proxy.go:558] (8) /api/v1/namespaces/proxy-1612/services/http:proxy-service-msrvz:portname2/proxy/: bar (200; 9.867559ms)
  I1109 12:51:01.748312 20 proxy.go:558] (9) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:1080/proxy/rewriteme">test<... (200; 6.789259ms)
  I1109 12:51:01.748323 20 proxy.go:558] (9) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:462/proxy/: tls qux (200; 6.892208ms)
  I1109 12:51:01.749912 20 proxy.go:558] (9) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:162/proxy/: bar (200; 8.198654ms)
  I1109 12:51:01.749912 20 proxy.go:558] (9) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:1080/proxy/rewriteme">... (200; 8.357952ms)
  I1109 12:51:01.749935 20 proxy.go:558] (9) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc/proxy/rewriteme">test</a> (200; 8.261252ms)
  I1109 12:51:01.749951 20 proxy.go:558] (9) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:160/proxy/: foo (200; 8.384914ms)
  I1109 12:51:01.750164 20 proxy.go:558] (9) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:443/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:443/proxy/tlsrewritem... (200; 8.429464ms)
  I1109 12:51:01.750410 20 proxy.go:558] (9) /api/v1/namespaces/proxy-1612/services/https:proxy-service-msrvz:tlsportname2/proxy/: tls qux (200; 8.910025ms)
  I1109 12:51:01.750510 20 proxy.go:558] (9) /api/v1/namespaces/proxy-1612/services/http:proxy-service-msrvz:portname1/proxy/: foo (200; 9.031698ms)
  I1109 12:51:01.750648 20 proxy.go:558] (9) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:160/proxy/: foo (200; 9.062999ms)
  I1109 12:51:01.750708 20 proxy.go:558] (9) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:460/proxy/: tls baz (200; 9.106007ms)
  I1109 12:51:01.751088 20 proxy.go:558] (9) /api/v1/namespaces/proxy-1612/services/proxy-service-msrvz:portname1/proxy/: foo (200; 9.469038ms)
  I1109 12:51:01.751117 20 proxy.go:558] (9) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:162/proxy/: bar (200; 9.424716ms)
  I1109 12:51:01.751318 20 proxy.go:558] (9) /api/v1/namespaces/proxy-1612/services/http:proxy-service-msrvz:portname2/proxy/: bar (200; 9.663771ms)
  I1109 12:51:01.751876 20 proxy.go:558] (9) /api/v1/namespaces/proxy-1612/services/proxy-service-msrvz:portname2/proxy/: bar (200; 10.242605ms)
  I1109 12:51:01.752117 20 proxy.go:558] (9) /api/v1/namespaces/proxy-1612/services/https:proxy-service-msrvz:tlsportname1/proxy/: tls baz (200; 10.677067ms)
  I1109 12:51:01.758306 20 proxy.go:558] (10) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:1080/proxy/rewriteme">... (200; 5.931467ms)
  I1109 12:51:01.758870 20 proxy.go:558] (10) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:162/proxy/: bar (200; 6.688217ms)
  I1109 12:51:01.759005 20 proxy.go:558] (10) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:462/proxy/: tls qux (200; 6.718555ms)
  I1109 12:51:01.760598 20 proxy.go:558] (10) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc/proxy/rewriteme">test</a> (200; 8.327592ms)
  I1109 12:51:01.760598 20 proxy.go:558] (10) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:162/proxy/: bar (200; 8.107374ms)
  I1109 12:51:01.760622 20 proxy.go:558] (10) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:160/proxy/: foo (200; 8.207436ms)
  I1109 12:51:01.760802 20 proxy.go:558] (10) /api/v1/namespaces/proxy-1612/services/http:proxy-service-msrvz:portname2/proxy/: bar (200; 8.550497ms)
  I1109 12:51:01.760957 20 proxy.go:558] (10) /api/v1/namespaces/proxy-1612/services/proxy-service-msrvz:portname1/proxy/: foo (200; 8.507653ms)
  I1109 12:51:01.761007 20 proxy.go:558] (10) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:460/proxy/: tls baz (200; 8.572322ms)
  I1109 12:51:01.761291 20 proxy.go:558] (10) /api/v1/namespaces/proxy-1612/services/https:proxy-service-msrvz:tlsportname2/proxy/: tls qux (200; 8.961689ms)
  I1109 12:51:01.763210 20 proxy.go:558] (10) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:160/proxy/: foo (200; 10.808305ms)
  I1109 12:51:01.764276 20 proxy.go:558] (10) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:1080/proxy/rewriteme">test<... (200; 11.921959ms)
  I1109 12:51:01.764722 20 proxy.go:558] (10) /api/v1/namespaces/proxy-1612/services/http:proxy-service-msrvz:portname1/proxy/: foo (200; 12.410966ms)
  I1109 12:51:01.765356 20 proxy.go:558] (10) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:443/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:443/proxy/tlsrewritem... (200; 12.886159ms)
  I1109 12:51:01.765375 20 proxy.go:558] (10) /api/v1/namespaces/proxy-1612/services/https:proxy-service-msrvz:tlsportname1/proxy/: tls baz (200; 12.869559ms)
  I1109 12:51:01.766464 20 proxy.go:558] (10) /api/v1/namespaces/proxy-1612/services/proxy-service-msrvz:portname2/proxy/: bar (200; 14.298959ms)
  I1109 12:51:01.773394 20 proxy.go:558] (11) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:1080/proxy/rewriteme">... (200; 6.816776ms)
  I1109 12:51:01.773378 20 proxy.go:558] (11) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:162/proxy/: bar (200; 6.780647ms)
  I1109 12:51:01.773530 20 proxy.go:558] (11) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:160/proxy/: foo (200; 6.843454ms)
  I1109 12:51:01.773927 20 proxy.go:558] (11) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:160/proxy/: foo (200; 7.222318ms)
  I1109 12:51:01.774427 20 proxy.go:558] (11) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:462/proxy/: tls qux (200; 7.59052ms)
  I1109 12:51:01.774430 20 proxy.go:558] (11) /api/v1/namespaces/proxy-1612/services/https:proxy-service-msrvz:tlsportname2/proxy/: tls qux (200; 7.911161ms)
  I1109 12:51:01.774829 20 proxy.go:558] (11) /api/v1/namespaces/proxy-1612/services/http:proxy-service-msrvz:portname2/proxy/: bar (200; 8.038187ms)
  I1109 12:51:01.774828 20 proxy.go:558] (11) /api/v1/namespaces/proxy-1612/services/http:proxy-service-msrvz:portname1/proxy/: foo (200; 7.978301ms)
  I1109 12:51:01.774965 20 proxy.go:558] (11) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:443/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:443/proxy/tlsrewritem... (200; 8.152429ms)
  I1109 12:51:01.775266 20 proxy.go:558] (11) /api/v1/namespaces/proxy-1612/services/https:proxy-service-msrvz:tlsportname1/proxy/: tls baz (200; 8.613631ms)
  I1109 12:51:01.775432 20 proxy.go:558] (11) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:162/proxy/: bar (200; 8.797249ms)
  I1109 12:51:01.775447 20 proxy.go:558] (11) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:1080/proxy/rewriteme">test<... (200; 8.891731ms)
  I1109 12:51:01.775662 20 proxy.go:558] (11) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:460/proxy/: tls baz (200; 9.165736ms)
  I1109 12:51:01.775946 20 proxy.go:558] (11) /api/v1/namespaces/proxy-1612/services/proxy-service-msrvz:portname2/proxy/: bar (200; 9.179665ms)
  I1109 12:51:01.776379 20 proxy.go:558] (11) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc/proxy/rewriteme">test</a> (200; 9.642796ms)
  I1109 12:51:01.779087 20 proxy.go:558] (11) /api/v1/namespaces/proxy-1612/services/proxy-service-msrvz:portname1/proxy/: foo (200; 12.3332ms)
  I1109 12:51:01.793152 20 proxy.go:558] (12) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:160/proxy/: foo (200; 13.87515ms)
  I1109 12:51:01.793613 20 proxy.go:558] (12) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:160/proxy/: foo (200; 14.416401ms)
  I1109 12:51:01.794699 20 proxy.go:558] (12) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:162/proxy/: bar (200; 15.18876ms)
  I1109 12:51:01.795708 20 proxy.go:558] (12) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:460/proxy/: tls baz (200; 16.4108ms)
  I1109 12:51:01.797948 20 proxy.go:558] (12) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc/proxy/rewriteme">test</a> (200; 18.579525ms)
  I1109 12:51:01.798276 20 proxy.go:558] (12) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:162/proxy/: bar (200; 18.87383ms)
  I1109 12:51:01.798615 20 proxy.go:558] (12) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:1080/proxy/rewriteme">test<... (200; 19.179055ms)
  I1109 12:51:01.798712 20 proxy.go:558] (12) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:1080/proxy/rewriteme">... (200; 19.259403ms)
  I1109 12:51:01.798799 20 proxy.go:558] (12) /api/v1/namespaces/proxy-1612/services/https:proxy-service-msrvz:tlsportname1/proxy/: tls baz (200; 19.485409ms)
  I1109 12:51:01.799738 20 proxy.go:558] (12) /api/v1/namespaces/proxy-1612/services/proxy-service-msrvz:portname2/proxy/: bar (200; 20.404273ms)
  I1109 12:51:01.799745 20 proxy.go:558] (12) /api/v1/namespaces/proxy-1612/services/http:proxy-service-msrvz:portname1/proxy/: foo (200; 20.217434ms)
  I1109 12:51:01.800742 20 proxy.go:558] (12) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:462/proxy/: tls qux (200; 21.36173ms)
  I1109 12:51:01.800739 20 proxy.go:558] (12) /api/v1/namespaces/proxy-1612/services/https:proxy-service-msrvz:tlsportname2/proxy/: tls qux (200; 21.321208ms)
  I1109 12:51:01.800781 20 proxy.go:558] (12) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:443/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:443/proxy/tlsrewritem... (200; 21.305952ms)
  I1109 12:51:01.800939 20 proxy.go:558] (12) /api/v1/namespaces/proxy-1612/services/proxy-service-msrvz:portname1/proxy/: foo (200; 21.591435ms)
  I1109 12:51:01.801298 20 proxy.go:558] (12) /api/v1/namespaces/proxy-1612/services/http:proxy-service-msrvz:portname2/proxy/: bar (200; 22.167073ms)
  I1109 12:51:01.806533 20 proxy.go:558] (13) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:462/proxy/: tls qux (200; 5.206957ms)
  I1109 12:51:01.806540 20 proxy.go:558] (13) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:160/proxy/: foo (200; 5.029806ms)
  I1109 12:51:01.806913 20 proxy.go:558] (13) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:162/proxy/: bar (200; 5.418426ms)
  I1109 12:51:01.806913 20 proxy.go:558] (13) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:1080/proxy/rewriteme">test<... (200; 5.462589ms)
  I1109 12:51:01.806933 20 proxy.go:558] (13) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:162/proxy/: bar (200; 5.328699ms)
  I1109 12:51:01.806936 20 proxy.go:558] (13) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:160/proxy/: foo (200; 5.407043ms)
  I1109 12:51:01.807307 20 proxy.go:558] (13) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:460/proxy/: tls baz (200; 5.761762ms)
  I1109 12:51:01.807322 20 proxy.go:558] (13) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:1080/proxy/rewriteme">... (200; 5.853039ms)
  I1109 12:51:01.808908 20 proxy.go:558] (13) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc/proxy/rewriteme">test</a> (200; 7.269721ms)
  I1109 12:51:01.809057 20 proxy.go:558] (13) /api/v1/namespaces/proxy-1612/services/http:proxy-service-msrvz:portname1/proxy/: foo (200; 7.666221ms)
  I1109 12:51:01.809656 20 proxy.go:558] (13) /api/v1/namespaces/proxy-1612/services/http:proxy-service-msrvz:portname2/proxy/: bar (200; 8.036813ms)
  I1109 12:51:01.809969 20 proxy.go:558] (13) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:443/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:443/proxy/tlsrewritem... (200; 8.312658ms)
  I1109 12:51:01.809962 20 proxy.go:558] (13) /api/v1/namespaces/proxy-1612/services/proxy-service-msrvz:portname1/proxy/: foo (200; 8.393384ms)
  I1109 12:51:01.810685 20 proxy.go:558] (13) /api/v1/namespaces/proxy-1612/services/proxy-service-msrvz:portname2/proxy/: bar (200; 9.099183ms)
  I1109 12:51:01.810888 20 proxy.go:558] (13) /api/v1/namespaces/proxy-1612/services/https:proxy-service-msrvz:tlsportname1/proxy/: tls baz (200; 9.536667ms)
  I1109 12:51:01.811589 20 proxy.go:558] (13) /api/v1/namespaces/proxy-1612/services/https:proxy-service-msrvz:tlsportname2/proxy/: tls qux (200; 10.167299ms)
  I1109 12:51:01.816436 20 proxy.go:558] (14) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:162/proxy/: bar (200; 4.715925ms)
  I1109 12:51:01.816673 20 proxy.go:558] (14) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:443/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:443/proxy/tlsrewritem... (200; 4.933826ms)
  I1109 12:51:01.817271 20 proxy.go:558] (14) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:162/proxy/: bar (200; 5.622981ms)
  I1109 12:51:01.820020 20 proxy.go:558] (14) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:160/proxy/: foo (200; 8.243988ms)
  I1109 12:51:01.820028 20 proxy.go:558] (14) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:1080/proxy/rewriteme">... (200; 8.08695ms)
  I1109 12:51:01.820111 20 proxy.go:558] (14) /api/v1/namespaces/proxy-1612/services/proxy-service-msrvz:portname2/proxy/: bar (200; 8.496714ms)
  I1109 12:51:01.820207 20 proxy.go:558] (14) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:160/proxy/: foo (200; 8.41519ms)
  I1109 12:51:01.820210 20 proxy.go:558] (14) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc/proxy/rewriteme">test</a> (200; 8.320696ms)
  I1109 12:51:01.820221 20 proxy.go:558] (14) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:460/proxy/: tls baz (200; 8.41023ms)
  I1109 12:51:01.821221 20 proxy.go:558] (14) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:1080/proxy/rewriteme">test<... (200; 9.293582ms)
  I1109 12:51:01.821242 20 proxy.go:558] (14) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:462/proxy/: tls qux (200; 9.333511ms)
  I1109 12:51:01.821767 20 proxy.go:558] (14) /api/v1/namespaces/proxy-1612/services/proxy-service-msrvz:portname1/proxy/: foo (200; 9.938423ms)
  I1109 12:51:01.821836 20 proxy.go:558] (14) /api/v1/namespaces/proxy-1612/services/http:proxy-service-msrvz:portname1/proxy/: foo (200; 9.988953ms)
  I1109 12:51:01.822052 20 proxy.go:558] (14) /api/v1/namespaces/proxy-1612/services/http:proxy-service-msrvz:portname2/proxy/: bar (200; 10.181488ms)
  I1109 12:51:01.822378 20 proxy.go:558] (14) /api/v1/namespaces/proxy-1612/services/https:proxy-service-msrvz:tlsportname2/proxy/: tls qux (200; 10.413221ms)
  I1109 12:51:01.822390 20 proxy.go:558] (14) /api/v1/namespaces/proxy-1612/services/https:proxy-service-msrvz:tlsportname1/proxy/: tls baz (200; 10.633408ms)
  I1109 12:51:01.826053 20 proxy.go:558] (15) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:1080/proxy/rewriteme">test<... (200; 3.633677ms)
  I1109 12:51:01.826096 20 proxy.go:558] (15) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:1080/proxy/rewriteme">... (200; 3.631598ms)
  I1109 12:51:01.826112 20 proxy.go:558] (15) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:162/proxy/: bar (200; 3.610931ms)
  I1109 12:51:01.826136 20 proxy.go:558] (15) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:162/proxy/: bar (200; 3.640308ms)
  I1109 12:51:01.827136 20 proxy.go:558] (15) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:160/proxy/: foo (200; 4.573924ms)
  I1109 12:51:01.827363 20 proxy.go:558] (15) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:462/proxy/: tls qux (200; 4.611497ms)
  I1109 12:51:01.827948 20 proxy.go:558] (15) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:460/proxy/: tls baz (200; 5.268452ms)
  I1109 12:51:01.828312 20 proxy.go:558] (15) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:443/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:443/proxy/tlsrewritem... (200; 5.787034ms)
  I1109 12:51:01.828498 20 proxy.go:558] (15) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc/proxy/rewriteme">test</a> (200; 5.764508ms)
  I1109 12:51:01.828519 20 proxy.go:558] (15) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:160/proxy/: foo (200; 5.912945ms)
  I1109 12:51:01.828817 20 proxy.go:558] (15) /api/v1/namespaces/proxy-1612/services/http:proxy-service-msrvz:portname2/proxy/: bar (200; 6.388826ms)
  I1109 12:51:01.829396 20 proxy.go:558] (15) /api/v1/namespaces/proxy-1612/services/https:proxy-service-msrvz:tlsportname2/proxy/: tls qux (200; 6.768312ms)
  I1109 12:51:01.829396 20 proxy.go:558] (15) /api/v1/namespaces/proxy-1612/services/http:proxy-service-msrvz:portname1/proxy/: foo (200; 6.850208ms)
  I1109 12:51:01.830016 20 proxy.go:558] (15) /api/v1/namespaces/proxy-1612/services/https:proxy-service-msrvz:tlsportname1/proxy/: tls baz (200; 7.317645ms)
  I1109 12:51:01.830081 20 proxy.go:558] (15) /api/v1/namespaces/proxy-1612/services/proxy-service-msrvz:portname1/proxy/: foo (200; 7.363467ms)
  I1109 12:51:01.830145 20 proxy.go:558] (15) /api/v1/namespaces/proxy-1612/services/proxy-service-msrvz:portname2/proxy/: bar (200; 7.497272ms)
  I1109 12:51:01.833126 20 proxy.go:558] (16) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:462/proxy/: tls qux (200; 2.956839ms)
  I1109 12:51:01.834354 20 proxy.go:558] (16) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:1080/proxy/rewriteme">test<... (200; 3.958318ms)
  I1109 12:51:01.834402 20 proxy.go:558] (16) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:160/proxy/: foo (200; 4.109275ms)
  I1109 12:51:01.834923 20 proxy.go:558] (16) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:160/proxy/: foo (200; 4.64862ms)
  I1109 12:51:01.834946 20 proxy.go:558] (16) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:1080/proxy/rewriteme">... (200; 4.468239ms)
  I1109 12:51:01.835025 20 proxy.go:558] (16) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:460/proxy/: tls baz (200; 4.713981ms)
  I1109 12:51:01.835082 20 proxy.go:558] (16) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:443/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:443/proxy/tlsrewritem... (200; 4.673966ms)
  I1109 12:51:01.835097 20 proxy.go:558] (16) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc/proxy/rewriteme">test</a> (200; 4.718579ms)
  I1109 12:51:01.836253 20 proxy.go:558] (16) /api/v1/namespaces/proxy-1612/services/https:proxy-service-msrvz:tlsportname1/proxy/: tls baz (200; 6.015522ms)
  I1109 12:51:01.836312 20 proxy.go:558] (16) /api/v1/namespaces/proxy-1612/services/http:proxy-service-msrvz:portname1/proxy/: foo (200; 5.890748ms)
  I1109 12:51:01.836830 20 proxy.go:558] (16) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:162/proxy/: bar (200; 6.339247ms)
  I1109 12:51:01.836981 20 proxy.go:558] (16) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:162/proxy/: bar (200; 6.515896ms)
  I1109 12:51:01.836982 20 proxy.go:558] (16) /api/v1/namespaces/proxy-1612/services/https:proxy-service-msrvz:tlsportname2/proxy/: tls qux (200; 6.539291ms)
  I1109 12:51:01.837255 20 proxy.go:558] (16) /api/v1/namespaces/proxy-1612/services/proxy-service-msrvz:portname2/proxy/: bar (200; 6.910637ms)
  I1109 12:51:01.837825 20 proxy.go:558] (16) /api/v1/namespaces/proxy-1612/services/http:proxy-service-msrvz:portname2/proxy/: bar (200; 7.462866ms)
  I1109 12:51:01.838184 20 proxy.go:558] (16) /api/v1/namespaces/proxy-1612/services/proxy-service-msrvz:portname1/proxy/: foo (200; 7.855873ms)
  I1109 12:51:01.841375 20 proxy.go:558] (17) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:460/proxy/: tls baz (200; 3.165518ms)
  I1109 12:51:01.842421 20 proxy.go:558] (17) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:443/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:443/proxy/tlsrewritem... (200; 4.152174ms)
  I1109 12:51:01.843128 20 proxy.go:558] (17) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:162/proxy/: bar (200; 4.62343ms)
  I1109 12:51:01.843302 20 proxy.go:558] (17) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc/proxy/rewriteme">test</a> (200; 4.861195ms)
  I1109 12:51:01.844137 20 proxy.go:558] (17) /api/v1/namespaces/proxy-1612/services/https:proxy-service-msrvz:tlsportname1/proxy/: tls baz (200; 5.662454ms)
  I1109 12:51:01.844153 20 proxy.go:558] (17) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:1080/proxy/rewriteme">... (200; 5.728824ms)
  I1109 12:51:01.844157 20 proxy.go:558] (17) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:160/proxy/: foo (200; 5.62123ms)
  I1109 12:51:01.844678 20 proxy.go:558] (17) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:462/proxy/: tls qux (200; 6.220727ms)
  I1109 12:51:01.844701 20 proxy.go:558] (17) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:160/proxy/: foo (200; 6.180498ms)
  I1109 12:51:01.844712 20 proxy.go:558] (17) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:162/proxy/: bar (200; 6.224216ms)
  I1109 12:51:01.844729 20 proxy.go:558] (17) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:1080/proxy/rewriteme">test<... (200; 6.343192ms)
  I1109 12:51:01.845106 20 proxy.go:558] (17) /api/v1/namespaces/proxy-1612/services/proxy-service-msrvz:portname1/proxy/: foo (200; 6.779518ms)
  I1109 12:51:01.845648 20 proxy.go:558] (17) /api/v1/namespaces/proxy-1612/services/http:proxy-service-msrvz:portname2/proxy/: bar (200; 7.239107ms)
  I1109 12:51:01.846297 20 proxy.go:558] (17) /api/v1/namespaces/proxy-1612/services/http:proxy-service-msrvz:portname1/proxy/: foo (200; 7.995045ms)
  I1109 12:51:01.846303 20 proxy.go:558] (17) /api/v1/namespaces/proxy-1612/services/proxy-service-msrvz:portname2/proxy/: bar (200; 7.943042ms)
  I1109 12:51:01.846318 20 proxy.go:558] (17) /api/v1/namespaces/proxy-1612/services/https:proxy-service-msrvz:tlsportname2/proxy/: tls qux (200; 7.971985ms)
  I1109 12:51:01.850288 20 proxy.go:558] (18) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:462/proxy/: tls qux (200; 3.916212ms)
  I1109 12:51:01.850288 20 proxy.go:558] (18) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:443/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:443/proxy/tlsrewritem... (200; 3.75453ms)
  I1109 12:51:01.850609 20 proxy.go:558] (18) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:460/proxy/: tls baz (200; 4.183312ms)
  I1109 12:51:01.850769 20 proxy.go:558] (18) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:160/proxy/: foo (200; 4.141204ms)
  I1109 12:51:01.851208 20 proxy.go:558] (18) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:1080/proxy/rewriteme">... (200; 4.731718ms)
  I1109 12:51:01.851265 20 proxy.go:558] (18) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc/proxy/rewriteme">test</a> (200; 4.550609ms)
  I1109 12:51:01.851524 20 proxy.go:558] (18) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:162/proxy/: bar (200; 5.026601ms)
  I1109 12:51:01.852448 20 proxy.go:558] (18) /api/v1/namespaces/proxy-1612/services/proxy-service-msrvz:portname1/proxy/: foo (200; 5.802151ms)
  I1109 12:51:01.853265 20 proxy.go:558] (18) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:162/proxy/: bar (200; 6.74954ms)
  I1109 12:51:01.853288 20 proxy.go:558] (18) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:160/proxy/: foo (200; 6.678047ms)
  I1109 12:51:01.853430 20 proxy.go:558] (18) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:1080/proxy/rewriteme">test<... (200; 6.662556ms)
  I1109 12:51:01.853654 20 proxy.go:558] (18) /api/v1/namespaces/proxy-1612/services/proxy-service-msrvz:portname2/proxy/: bar (200; 6.990257ms)
  I1109 12:51:01.854422 20 proxy.go:558] (18) /api/v1/namespaces/proxy-1612/services/http:proxy-service-msrvz:portname2/proxy/: bar (200; 7.73493ms)
  I1109 12:51:01.854451 20 proxy.go:558] (18) /api/v1/namespaces/proxy-1612/services/https:proxy-service-msrvz:tlsportname2/proxy/: tls qux (200; 7.702563ms)
  I1109 12:51:01.854464 20 proxy.go:558] (18) /api/v1/namespaces/proxy-1612/services/https:proxy-service-msrvz:tlsportname1/proxy/: tls baz (200; 7.892596ms)
  I1109 12:51:01.854511 20 proxy.go:558] (18) /api/v1/namespaces/proxy-1612/services/http:proxy-service-msrvz:portname1/proxy/: foo (200; 7.779817ms)
  I1109 12:51:01.859218 20 proxy.go:558] (19) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc/proxy/rewriteme">test</a> (200; 4.591934ms)
  I1109 12:51:01.859468 20 proxy.go:558] (19) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:1080/proxy/rewriteme">test<... (200; 4.743641ms)
  I1109 12:51:01.859592 20 proxy.go:558] (19) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:160/proxy/: foo (200; 4.80748ms)
  I1109 12:51:01.859615 20 proxy.go:558] (19) /api/v1/namespaces/proxy-1612/pods/proxy-service-msrvz-tlfzc:162/proxy/: bar (200; 4.924901ms)
  I1109 12:51:01.860046 20 proxy.go:558] (19) /api/v1/namespaces/proxy-1612/services/http:proxy-service-msrvz:portname2/proxy/: bar (200; 5.443788ms)
  I1109 12:51:01.860046 20 proxy.go:558] (19) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:1080/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:1080/proxy/rewriteme">... (200; 5.296392ms)
  I1109 12:51:01.860064 20 proxy.go:558] (19) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:443/proxy/: <a href="/api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:443/proxy/tlsrewritem... (200; 5.212713ms)
  I1109 12:51:01.860066 20 proxy.go:558] (19) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:462/proxy/: tls qux (200; 5.396585ms)
  I1109 12:51:01.860074 20 proxy.go:558] (19) /api/v1/namespaces/proxy-1612/pods/https:proxy-service-msrvz-tlfzc:460/proxy/: tls baz (200; 5.250266ms)
  I1109 12:51:01.861614 20 proxy.go:558] (19) /api/v1/namespaces/proxy-1612/services/https:proxy-service-msrvz:tlsportname1/proxy/: tls baz (200; 6.844441ms)
  I1109 12:51:01.861620 20 proxy.go:558] (19) /api/v1/namespaces/proxy-1612/services/http:proxy-service-msrvz:portname1/proxy/: foo (200; 6.734503ms)
  I1109 12:51:01.862052 20 proxy.go:558] (19) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:162/proxy/: bar (200; 7.344807ms)
  I1109 12:51:01.862066 20 proxy.go:558] (19) /api/v1/namespaces/proxy-1612/services/proxy-service-msrvz:portname2/proxy/: bar (200; 7.534519ms)
  I1109 12:51:01.862410 20 proxy.go:558] (19) /api/v1/namespaces/proxy-1612/pods/http:proxy-service-msrvz-tlfzc:160/proxy/: foo (200; 7.602487ms)
  I1109 12:51:01.862419 20 proxy.go:558] (19) /api/v1/namespaces/proxy-1612/services/proxy-service-msrvz:portname1/proxy/: foo (200; 7.552109ms)
  I1109 12:51:01.862609 20 proxy.go:558] (19) /api/v1/namespaces/proxy-1612/services/https:proxy-service-msrvz:tlsportname2/proxy/: tls qux (200; 8.035286ms)
  STEP: deleting ReplicationController proxy-service-msrvz in namespace proxy-1612, will wait for the garbage collector to delete the pods @ 11/09/24 12:51:01.862
  I1109 12:51:01.923431 20 resources.go:139] Deleting ReplicationController proxy-service-msrvz took: 7.150174ms
  I1109 12:51:02.024267 20 resources.go:163] Terminating ReplicationController proxy-service-msrvz pods took: 100.831597ms
  I1109 12:51:04.424961 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1612" for this suite. @ 11/09/24 12:51:04.428
â€¢ [4.920 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 11/09/24 12:51:04.436
  I1109 12:51:04.436037 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename projected @ 11/09/24 12:51:04.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:51:04.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:51:04.453
  STEP: Creating configMap with name projected-configmap-test-volume-6764a605-c903-4777-93ef-8be0da1d20c6 @ 11/09/24 12:51:04.455
  STEP: Creating a pod to test consume configMaps @ 11/09/24 12:51:04.458
  STEP: Saw pod success @ 11/09/24 12:51:06.476
  I1109 12:51:06.479790 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-projected-configmaps-9d4638b5-ffe0-4082-8a36-72459231d055 container agnhost-container: <nil>
  STEP: delete the pod @ 11/09/24 12:51:06.486
  I1109 12:51:06.499831 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2166" for this suite. @ 11/09/24 12:51:06.503
â€¢ [2.074 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 11/09/24 12:51:06.509
  I1109 12:51:06.509827 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename custom-resource-definition @ 11/09/24 12:51:06.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:51:06.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:51:06.531
  STEP: fetching the /apis discovery document @ 11/09/24 12:51:06.533
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 11/09/24 12:51:06.534
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 11/09/24 12:51:06.534
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 11/09/24 12:51:06.534
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 11/09/24 12:51:06.535
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 11/09/24 12:51:06.535
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 11/09/24 12:51:06.536
  I1109 12:51:06.536450 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1335" for this suite. @ 11/09/24 12:51:06.539
â€¢ [0.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 11/09/24 12:51:06.546
  I1109 12:51:06.546448 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename cronjob @ 11/09/24 12:51:06.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:51:06.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:51:06.564
  STEP: Creating a suspended cronjob @ 11/09/24 12:51:06.566
  STEP: Ensuring no jobs are scheduled @ 11/09/24 12:51:06.571
  STEP: Ensuring no job exists by listing jobs explicitly @ 11/09/24 12:56:06.571
  STEP: Removing cronjob @ 11/09/24 12:56:06.575
  I1109 12:56:06.582720 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3876" for this suite. @ 11/09/24 12:56:06.586
â€¢ [300.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 11/09/24 12:56:06.595
  I1109 12:56:06.595166 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 11/09/24 12:56:06.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:56:06.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:56:06.615
  STEP: create the container to handle the HTTPGet hook request. @ 11/09/24 12:56:06.621
  STEP: create the pod with lifecycle hook @ 11/09/24 12:56:08.64
  STEP: delete the pod with lifecycle hook @ 11/09/24 12:56:10.661
  STEP: check prestop hook @ 11/09/24 12:56:12.756
  I1109 12:56:12.775348 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6994" for this suite. @ 11/09/24 12:56:12.779
â€¢ [6.192 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:712
  STEP: Creating a kubernetes client @ 11/09/24 12:56:12.786
  I1109 12:56:12.786952 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename webhook @ 11/09/24 12:56:12.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:56:12.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:56:12.803
  STEP: Setting up server cert @ 11/09/24 12:56:12.825
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/09/24 12:56:13.049
  STEP: Deploying the webhook pod @ 11/09/24 12:56:13.059
  STEP: Wait for the deployment to be ready @ 11/09/24 12:56:13.072
  I1109 12:56:13.078549 20 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 11/09/24 12:56:15.09
  STEP: Verifying the service has paired with the endpoint @ 11/09/24 12:56:15.102
  I1109 12:56:16.102307 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 11/09/24 12:56:16.109
  STEP: verifying the validating webhook match conditions @ 11/09/24 12:56:16.117
  STEP: updating the validating webhook match conditions @ 11/09/24 12:56:16.121
  STEP: verifying the validating webhook match conditions @ 11/09/24 12:56:16.128
  I1109 12:56:16.185489 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4330" for this suite. @ 11/09/24 12:56:16.189
  STEP: Destroying namespace "webhook-markers-7345" for this suite. @ 11/09/24 12:56:16.199
â€¢ [3.419 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 11/09/24 12:56:16.206
  I1109 12:56:16.206307 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename controllerrevisions @ 11/09/24 12:56:16.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:56:16.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:56:16.231
  STEP: Creating DaemonSet "e2e-qkgjc-daemon-set" @ 11/09/24 12:56:16.255
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/09/24 12:56:16.261
  I1109 12:56:16.265601 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-177 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 12:56:16.265651 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-95-130 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 12:56:16.268019 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-qkgjc-daemon-set: 0
  I1109 12:56:16.268046 20 fixtures.go:130] Node ip-172-31-26-237 is running 0 daemon pod, expected 1
  I1109 12:56:17.266929 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-177 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 12:56:17.266997 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-95-130 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 12:56:17.270100 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-qkgjc-daemon-set: 0
  I1109 12:56:17.270123 20 fixtures.go:130] Node ip-172-31-26-237 is running 0 daemon pod, expected 1
  I1109 12:56:18.266746 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-177 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 12:56:18.266851 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-95-130 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 12:56:18.269728 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-qkgjc-daemon-set: 3
  I1109 12:56:18.269752 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset e2e-qkgjc-daemon-set
  STEP: Confirm DaemonSet "e2e-qkgjc-daemon-set" successfully created with "daemonset-name=e2e-qkgjc-daemon-set" label @ 11/09/24 12:56:18.272
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-qkgjc-daemon-set" @ 11/09/24 12:56:18.28
  I1109 12:56:18.283905 20 controller_revision.go:162] Located ControllerRevision: "e2e-qkgjc-daemon-set-6b4475d44b"
  STEP: Patching ControllerRevision "e2e-qkgjc-daemon-set-6b4475d44b" @ 11/09/24 12:56:18.286
  I1109 12:56:18.296090 20 controller_revision.go:173] e2e-qkgjc-daemon-set-6b4475d44b has been patched
  STEP: Create a new ControllerRevision @ 11/09/24 12:56:18.296
  I1109 12:56:18.300949 20 controller_revision.go:191] Created ControllerRevision: e2e-qkgjc-daemon-set-7d6688d47b
  STEP: Confirm that there are two ControllerRevisions @ 11/09/24 12:56:18.3
  I1109 12:56:18.301013 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1109 12:56:18.303456 20 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-qkgjc-daemon-set-6b4475d44b" @ 11/09/24 12:56:18.303
  STEP: Confirm that there is only one ControllerRevision @ 11/09/24 12:56:18.308
  I1109 12:56:18.308599 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1109 12:56:18.310976 20 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-qkgjc-daemon-set-7d6688d47b" @ 11/09/24 12:56:18.313
  I1109 12:56:18.322120 20 controller_revision.go:220] e2e-qkgjc-daemon-set-7d6688d47b has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 11/09/24 12:56:18.322
  W1109 12:56:18.327278      20 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 11/09/24 12:56:18.327
  I1109 12:56:18.327398 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1109 12:56:19.327494 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1109 12:56:19.331463 20 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-qkgjc-daemon-set-7d6688d47b=updated" @ 11/09/24 12:56:19.331
  STEP: Confirm that there is only one ControllerRevision @ 11/09/24 12:56:19.338
  I1109 12:56:19.339007 20 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1109 12:56:19.342119 20 controller_revision.go:265] Found 1 ControllerRevisions
  I1109 12:56:19.345477 20 controller_revision.go:246] ControllerRevision "e2e-qkgjc-daemon-set-75f688b6cc" has revision 3
  STEP: Deleting DaemonSet "e2e-qkgjc-daemon-set" @ 11/09/24 12:56:19.349
  STEP: deleting DaemonSet.extensions e2e-qkgjc-daemon-set in namespace controllerrevisions-8146, will wait for the garbage collector to delete the pods @ 11/09/24 12:56:19.349
  I1109 12:56:19.411147 20 resources.go:139] Deleting DaemonSet.extensions e2e-qkgjc-daemon-set took: 8.511677ms
  I1109 12:56:19.511445 20 resources.go:163] Terminating DaemonSet.extensions e2e-qkgjc-daemon-set pods took: 100.245935ms
  I1109 12:56:21.417543 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-qkgjc-daemon-set: 0
  I1109 12:56:21.417578 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-qkgjc-daemon-set
  I1109 12:56:21.424598 20 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"21355"},"items":null}

  I1109 12:56:21.430579 20 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"21355"},"items":null}

  I1109 12:56:21.451609 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-8146" for this suite. @ 11/09/24 12:56:21.463
â€¢ [5.268 seconds]
------------------------------
S
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 11/09/24 12:56:21.473
  I1109 12:56:21.473907 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename csiinlinevolumes @ 11/09/24 12:56:21.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:56:21.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:56:21.501
  STEP: creating @ 11/09/24 12:56:21.506
  STEP: getting @ 11/09/24 12:56:21.526
  STEP: listing in namespace @ 11/09/24 12:56:21.529
  STEP: patching @ 11/09/24 12:56:21.533
  STEP: deleting @ 11/09/24 12:56:21.541
  I1109 12:56:21.559347 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-54" for this suite. @ 11/09/24 12:56:21.562
â€¢ [0.094 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2194
  STEP: Creating a kubernetes client @ 11/09/24 12:56:21.568
  I1109 12:56:21.568463 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename services @ 11/09/24 12:56:21.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:56:21.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:56:21.584
  STEP: creating service in namespace services-8671 @ 11/09/24 12:56:21.587
  STEP: creating service affinity-nodeport in namespace services-8671 @ 11/09/24 12:56:21.587
  STEP: creating replication controller affinity-nodeport in namespace services-8671 @ 11/09/24 12:56:21.603
  I1109 12:56:21.611075      20 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-8671, replica count: 3
  I1109 12:56:24.662035      20 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1109 12:56:24.673821 20 resource.go:361] Creating new exec pod
  I1109 12:56:27.694270 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-8671 exec execpod-affinityg5c6j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I1109 12:56:27.782120 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  I1109 12:56:27.782274 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1109 12:56:27.782516 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-8671 exec execpod-affinityg5c6j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.246 80'
  I1109 12:56:27.858446 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.246 80\nConnection to 10.152.183.246 80 port [tcp/http] succeeded!\n"
  I1109 12:56:27.858493 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1109 12:56:27.858653 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-8671 exec execpod-affinityg5c6j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.94.169 30453'
  I1109 12:56:27.940535 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.94.169 30453\nConnection to 172.31.94.169 30453 port [tcp/*] succeeded!\n"
  I1109 12:56:27.940582 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1109 12:56:27.940670 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-8671 exec execpod-affinityg5c6j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.65.76 30453'
  I1109 12:56:28.026608 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.65.76 30453\nConnection to 172.31.65.76 30453 port [tcp/*] succeeded!\n"
  I1109 12:56:28.026658 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1109 12:56:28.026734 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-8671 exec execpod-affinityg5c6j -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.26.237:30453/ ; done'
  I1109 12:56:28.162601 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30453/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30453/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30453/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30453/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30453/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30453/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30453/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30453/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30453/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30453/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30453/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30453/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30453/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30453/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30453/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30453/\n"
  I1109 12:56:28.162666 20 builder.go:147] stdout: "\naffinity-nodeport-n2cvr\naffinity-nodeport-n2cvr\naffinity-nodeport-n2cvr\naffinity-nodeport-n2cvr\naffinity-nodeport-n2cvr\naffinity-nodeport-n2cvr\naffinity-nodeport-n2cvr\naffinity-nodeport-n2cvr\naffinity-nodeport-n2cvr\naffinity-nodeport-n2cvr\naffinity-nodeport-n2cvr\naffinity-nodeport-n2cvr\naffinity-nodeport-n2cvr\naffinity-nodeport-n2cvr\naffinity-nodeport-n2cvr\naffinity-nodeport-n2cvr"
  I1109 12:56:28.162679 20 service.go:242] Received response from host: affinity-nodeport-n2cvr
  I1109 12:56:28.162687 20 service.go:242] Received response from host: affinity-nodeport-n2cvr
  I1109 12:56:28.162694 20 service.go:242] Received response from host: affinity-nodeport-n2cvr
  I1109 12:56:28.162700 20 service.go:242] Received response from host: affinity-nodeport-n2cvr
  I1109 12:56:28.162706 20 service.go:242] Received response from host: affinity-nodeport-n2cvr
  I1109 12:56:28.162713 20 service.go:242] Received response from host: affinity-nodeport-n2cvr
  I1109 12:56:28.162719 20 service.go:242] Received response from host: affinity-nodeport-n2cvr
  I1109 12:56:28.162726 20 service.go:242] Received response from host: affinity-nodeport-n2cvr
  I1109 12:56:28.162737 20 service.go:242] Received response from host: affinity-nodeport-n2cvr
  I1109 12:56:28.162742 20 service.go:242] Received response from host: affinity-nodeport-n2cvr
  I1109 12:56:28.162750 20 service.go:242] Received response from host: affinity-nodeport-n2cvr
  I1109 12:56:28.162756 20 service.go:242] Received response from host: affinity-nodeport-n2cvr
  I1109 12:56:28.162763 20 service.go:242] Received response from host: affinity-nodeport-n2cvr
  I1109 12:56:28.162769 20 service.go:242] Received response from host: affinity-nodeport-n2cvr
  I1109 12:56:28.162774 20 service.go:242] Received response from host: affinity-nodeport-n2cvr
  I1109 12:56:28.162781 20 service.go:242] Received response from host: affinity-nodeport-n2cvr
  I1109 12:56:28.162879 20 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-8671, will wait for the garbage collector to delete the pods @ 11/09/24 12:56:28.178
  I1109 12:56:28.238666 20 resources.go:139] Deleting ReplicationController affinity-nodeport took: 5.744642ms
  I1109 12:56:28.339388 20 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 100.715585ms
  I1109 12:56:31.463581 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8671" for this suite. @ 11/09/24 12:56:31.467
â€¢ [9.907 seconds]
------------------------------
SS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 11/09/24 12:56:31.475
  I1109 12:56:31.475162 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename hostport @ 11/09/24 12:56:31.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:56:31.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:56:31.499
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 11/09/24 12:56:31.506
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.65.76 on the node which pod1 resides and expect scheduled @ 11/09/24 12:56:33.526
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.65.76 but use UDP protocol on the node which pod2 resides @ 11/09/24 12:56:45.565
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 11/09/24 12:56:49.603
  I1109 12:56:49.603063 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.65.76 http://127.0.0.1:54323/hostname] Namespace:hostport-8660 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1109 12:56:49.603082 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  I1109 12:56:49.603684 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1109 12:56:49.603741 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-8660/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.65.76+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.65.76, port: 54323 @ 11/09/24 12:56:49.648
  I1109 12:56:49.648918 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.65.76:54323/hostname] Namespace:hostport-8660 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1109 12:56:49.648936 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  I1109 12:56:49.649475 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1109 12:56:49.649533 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-8660/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.65.76%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.65.76, port: 54323 UDP @ 11/09/24 12:56:49.684
  I1109 12:56:49.684912 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.65.76 54323] Namespace:hostport-8660 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1109 12:56:49.684931 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  I1109 12:56:49.685489 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1109 12:56:49.685540 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-8660/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.65.76+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  I1109 12:56:54.724352 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-8660" for this suite. @ 11/09/24 12:56:54.729
â€¢ [23.262 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 11/09/24 12:56:54.737
  I1109 12:56:54.737159 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename container-probe @ 11/09/24 12:56:54.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 12:56:54.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 12:56:54.756
  STEP: Creating pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552 @ 11/09/24 12:56:54.759
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/09/24 12:56:56.777
  I1109 12:56:56.781598 20 container_probe.go:1749] Initial restart count of pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 is 0
  I1109 12:56:56.784425 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:56:58.789740 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:57:00.793892 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:57:02.798654 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:57:04.803831 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:57:06.808171 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:57:08.811958 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:57:10.816403 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:57:12.821362 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:57:14.825464 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:57:16.830451 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:57:18.836108 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:57:20.841543 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:57:22.846021 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:57:24.850015 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:57:26.854317 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:57:28.862495 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:57:30.868140 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:57:32.873036 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:57:34.885713 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:57:36.890248 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:57:38.895786 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:57:40.901546 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:57:42.906583 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:57:44.913014 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:57:46.917551 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:57:48.923273 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:57:50.927998 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:57:52.933264 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:57:54.938900 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:57:56.943605 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:57:58.948362 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:58:00.954023 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:58:02.958175 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:58:04.962629 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:58:06.967424 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:58:08.972458 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:58:10.977426 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:58:12.982440 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:58:14.988326 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:58:16.994486 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:58:18.999661 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:58:21.005098 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:58:23.011068 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:58:25.016194 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:58:27.020654 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:58:29.025623 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:58:31.030037 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:58:33.035143 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:58:35.041004 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:58:37.046520 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:58:39.052010 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:58:41.055981 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:58:43.061158 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:58:45.066060 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:58:47.069505 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:58:49.074381 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:58:51.078494 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:58:53.083767 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:58:55.089280 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:58:57.094409 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:58:59.099942 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:59:01.105674 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:59:03.110807 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:59:05.115748 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:59:07.121131 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:59:09.125060 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:59:11.130195 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:59:13.135618 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:59:15.141083 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:59:17.146176 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:59:19.152687 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:59:21.158198 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:59:23.163450 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:59:25.168649 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:59:27.174292 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:59:29.181885 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:59:31.187162 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:59:33.191452 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:59:35.196028 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:59:37.201373 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:59:39.207671 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:59:41.212008 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:59:43.217115 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:59:45.221518 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:59:47.227173 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:59:49.231882 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:59:51.237442 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:59:53.242365 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:59:55.248131 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:59:57.253471 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 12:59:59.257661 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 13:00:01.263767 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 13:00:03.268826 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 13:00:05.274275 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 13:00:07.279545 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 13:00:09.285135 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 13:00:11.291306 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 13:00:13.296527 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 13:00:15.301319 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 13:00:17.307546 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 13:00:19.312381 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 13:00:21.317813 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 13:00:23.322372 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 13:00:25.327274 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 13:00:27.332491 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 13:00:29.336909 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 13:00:31.342136 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 13:00:33.347254 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 13:00:35.352680 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 13:00:37.357337 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 13:00:39.362419 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 13:00:41.366756 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 13:00:43.371320 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 13:00:45.376109 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 13:00:47.381620 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 13:00:49.386180 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 13:00:51.392498 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 13:00:53.398186 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  I1109 13:00:55.403993 20 container_probe.go:1759] Get pod test-webserver-29f5aad1-8835-404c-b0d0-4912fddcd478 in namespace container-probe-4552
  STEP: deleting the pod @ 11/09/24 13:00:57.404
  I1109 13:00:57.417135 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4552" for this suite. @ 11/09/24 13:00:57.422
â€¢ [242.695 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:454
  STEP: Creating a kubernetes client @ 11/09/24 13:00:57.433
  I1109 13:00:57.433243 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename resourcequota @ 11/09/24 13:00:57.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:00:57.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:00:57.459
  STEP: Counting existing ResourceQuota @ 11/09/24 13:00:57.462
  STEP: Creating a ResourceQuota @ 11/09/24 13:01:02.465
  STEP: Ensuring resource quota status is calculated @ 11/09/24 13:01:02.47
  STEP: Creating a ReplicaSet @ 11/09/24 13:01:04.476
  STEP: Ensuring resource quota status captures replicaset creation @ 11/09/24 13:01:04.487
  STEP: Deleting a ReplicaSet @ 11/09/24 13:01:06.492
  STEP: Ensuring resource quota status released usage @ 11/09/24 13:01:06.499
  I1109 13:01:08.504246 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4484" for this suite. @ 11/09/24 13:01:08.507
â€¢ [11.082 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 11/09/24 13:01:08.515
  I1109 13:01:08.515133 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename pods @ 11/09/24 13:01:08.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:01:08.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:01:08.532
  STEP: creating pod @ 11/09/24 13:01:08.534
  I1109 13:01:10.563220 20 pods.go:83] Pod pod-hostip-1e267a2f-394d-4450-868b-b295207453ac has hostIP: 172.31.65.76
  I1109 13:01:10.563366 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7223" for this suite. @ 11/09/24 13:01:10.566
â€¢ [2.058 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 11/09/24 13:01:10.573
  I1109 13:01:10.573388 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename replication-controller @ 11/09/24 13:01:10.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:01:10.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:01:10.59
  STEP: creating a ReplicationController @ 11/09/24 13:01:10.595
  STEP: waiting for RC to be added @ 11/09/24 13:01:10.6
  STEP: waiting for available Replicas @ 11/09/24 13:01:10.6
  STEP: patching ReplicationController @ 11/09/24 13:01:11.275
  STEP: waiting for RC to be modified @ 11/09/24 13:01:11.283
  STEP: patching ReplicationController status @ 11/09/24 13:01:11.283
  STEP: waiting for RC to be modified @ 11/09/24 13:01:11.289
  STEP: waiting for available Replicas @ 11/09/24 13:01:11.289
  STEP: fetching ReplicationController status @ 11/09/24 13:01:11.294
  STEP: patching ReplicationController scale @ 11/09/24 13:01:11.297
  STEP: waiting for RC to be modified @ 11/09/24 13:01:11.304
  STEP: waiting for ReplicationController's scale to be the max amount @ 11/09/24 13:01:11.304
  STEP: fetching ReplicationController; ensuring that it's patched @ 11/09/24 13:01:12.797
  STEP: updating ReplicationController status @ 11/09/24 13:01:12.8
  STEP: waiting for RC to be modified @ 11/09/24 13:01:12.806
  STEP: listing all ReplicationControllers @ 11/09/24 13:01:12.806
  STEP: checking that ReplicationController has expected values @ 11/09/24 13:01:12.809
  STEP: deleting ReplicationControllers by collection @ 11/09/24 13:01:12.809
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 11/09/24 13:01:12.818
  I1109 13:01:12.865548 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1109 13:01:12.865647      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-8789" for this suite. @ 11/09/24 13:01:12.869
â€¢ [2.301 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 11/09/24 13:01:12.875
  I1109 13:01:12.875199 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename csistoragecapacity @ 11/09/24 13:01:12.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:01:12.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:01:12.892
  STEP: getting /apis @ 11/09/24 13:01:12.894
  STEP: getting /apis/storage.k8s.io @ 11/09/24 13:01:12.897
  STEP: getting /apis/storage.k8s.io/v1 @ 11/09/24 13:01:12.898
  STEP: creating @ 11/09/24 13:01:12.899
  STEP: watching @ 11/09/24 13:01:12.914
  I1109 13:01:12.914219 20 csistoragecapacity.go:143] starting watch
  STEP: getting @ 11/09/24 13:01:12.919
  STEP: listing in namespace @ 11/09/24 13:01:12.922
  STEP: listing across namespaces @ 11/09/24 13:01:12.925
  STEP: patching @ 11/09/24 13:01:12.928
  STEP: updating @ 11/09/24 13:01:12.932
  I1109 13:01:12.938102 20 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I1109 13:01:12.938174 20 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 11/09/24 13:01:12.938
  STEP: deleting a collection @ 11/09/24 13:01:12.949
  I1109 13:01:12.966158 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-1157" for this suite. @ 11/09/24 13:01:12.969
â€¢ [0.099 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 11/09/24 13:01:12.974
  I1109 13:01:12.974467 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename projected @ 11/09/24 13:01:12.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:01:12.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:01:12.992
  STEP: Creating configMap with name configmap-projected-all-test-volume-4877392d-f0dc-413e-a07a-5caa3bee7a90 @ 11/09/24 13:01:12.994
  STEP: Creating secret with name secret-projected-all-test-volume-71e27353-9bb8-429e-9903-a62c86579a6a @ 11/09/24 13:01:12.998
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 11/09/24 13:01:13.004
  E1109 13:01:13.865839      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:01:14.866028      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:01:15.866178      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:01:16.866314      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:01:17.023
  I1109 13:01:17.027375 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod projected-volume-f67cc218-25e4-49aa-92ae-8d604128b5a9 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 11/09/24 13:01:17.043
  I1109 13:01:17.061466 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2129" for this suite. @ 11/09/24 13:01:17.065
â€¢ [4.096 seconds]
------------------------------
S
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:302
  STEP: Creating a kubernetes client @ 11/09/24 13:01:17.07
  I1109 13:01:17.070604 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename security-context @ 11/09/24 13:01:17.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:01:17.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:01:17.086
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 11/09/24 13:01:17.089
  E1109 13:01:17.867354      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:01:18.867398      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:01:19.867492      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:01:20.867557      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:01:21.112
  I1109 13:01:21.116025 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod security-context-f8e57697-a377-4e91-b069-bf250a96d708 container test-container: <nil>
  STEP: delete the pod @ 11/09/24 13:01:21.121
  I1109 13:01:21.135223 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-9709" for this suite. @ 11/09/24 13:01:21.138
â€¢ [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 11/09/24 13:01:21.146
  I1109 13:01:21.146072 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename sched-pred @ 11/09/24 13:01:21.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:01:21.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:01:21.162
  I1109 13:01:21.164578 20 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1109 13:01:21.171490 20 util.go:393] Waiting for terminating namespaces to be deleted...
  I1109 13:01:21.173672 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-26-237 before test
  I1109 13:01:21.178283 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-mmmtf from ingress-nginx-kubernetes-worker started at 2024-11-09 12:02:20 +0000 UTC (1 container statuses recorded)
  I1109 13:01:21.178305 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1109 13:01:21.178313 20 predicates.go:957] calico-node-qlwl6 from kube-system started at 2024-11-09 12:09:00 +0000 UTC (1 container statuses recorded)
  I1109 13:01:21.178319 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1109 13:01:21.178324 20 predicates.go:957] kube-state-metrics-5d7bdccd49-tvgwt from kube-system started at 2024-11-09 12:02:20 +0000 UTC (1 container statuses recorded)
  I1109 13:01:21.178330 20 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I1109 13:01:21.178334 20 predicates.go:957] sonobuoy from sonobuoy started at 2024-11-09 12:11:47 +0000 UTC (1 container statuses recorded)
  I1109 13:01:21.178339 20 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1109 13:01:21.178366 20 predicates.go:957] sonobuoy-e2e-job-f9da5545554d47d7 from sonobuoy started at 2024-11-09 12:11:49 +0000 UTC (2 container statuses recorded)
  I1109 13:01:21.178371 20 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1109 13:01:21.178376 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1109 13:01:21.178381 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-5b9d25a256a64056-v4478 from sonobuoy started at 2024-11-09 12:11:49 +0000 UTC (2 container statuses recorded)
  I1109 13:01:21.178386 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1109 13:01:21.178393 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1109 13:01:21.178397 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-65-76 before test
  I1109 13:01:21.182836 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-5v6q4 from ingress-nginx-kubernetes-worker started at 2024-11-09 12:32:41 +0000 UTC (1 container statuses recorded)
  I1109 13:01:21.182868 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1109 13:01:21.182876 20 predicates.go:957] calico-node-xl75z from kube-system started at 2024-11-09 12:09:10 +0000 UTC (1 container statuses recorded)
  I1109 13:01:21.182882 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1109 13:01:21.182903 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-5b9d25a256a64056-qmqv9 from sonobuoy started at 2024-11-09 12:11:49 +0000 UTC (2 container statuses recorded)
  I1109 13:01:21.182908 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1109 13:01:21.182912 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1109 13:01:21.182919 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-94-169 before test
  I1109 13:01:21.187269 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-6rvrg from ingress-nginx-kubernetes-worker started at 2024-11-09 12:02:11 +0000 UTC (1 container statuses recorded)
  I1109 13:01:21.187290 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 3
  I1109 13:01:21.187297 20 predicates.go:957] calico-node-79dj5 from kube-system started at 2024-11-09 12:08:39 +0000 UTC (1 container statuses recorded)
  I1109 13:01:21.187302 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1109 13:01:21.187308 20 predicates.go:957] coredns-5b4857d7c8-9wnbb from kube-system started at 2024-11-09 12:02:11 +0000 UTC (1 container statuses recorded)
  I1109 13:01:21.187313 20 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1109 13:01:21.187320 20 predicates.go:957] metrics-server-v0.7.1-6c77d69467-hr9gn from kube-system started at 2024-11-09 12:32:15 +0000 UTC (2 container statuses recorded)
  I1109 13:01:21.187326 20 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I1109 13:01:21.187331 20 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I1109 13:01:21.187337 20 predicates.go:957] dashboard-metrics-scraper-64757cf48d-c25b9 from kubernetes-dashboard started at 2024-11-09 12:32:15 +0000 UTC (1 container statuses recorded)
  I1109 13:01:21.187342 20 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1109 13:01:21.187347 20 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-s2k4w from kubernetes-dashboard started at 2024-11-09 12:02:11 +0000 UTC (1 container statuses recorded)
  I1109 13:01:21.187351 20 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I1109 13:01:21.187357 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-5b9d25a256a64056-4mx4d from sonobuoy started at 2024-11-09 12:11:49 +0000 UTC (2 container statuses recorded)
  I1109 13:01:21.187361 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1109 13:01:21.187366 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-26-237 @ 11/09/24 13:01:21.201
  STEP: verifying the node has the label node ip-172-31-65-76 @ 11/09/24 13:01:21.215
  STEP: verifying the node has the label node ip-172-31-94-169 @ 11/09/24 13:01:21.226
  I1109 13:01:21.239939 20 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-5v6q4 requesting resource cpu=0m on Node ip-172-31-65-76
  I1109 13:01:21.240171 20 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-6rvrg requesting resource cpu=0m on Node ip-172-31-94-169
  I1109 13:01:21.240337 20 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-mmmtf requesting resource cpu=0m on Node ip-172-31-26-237
  I1109 13:01:21.240382 20 predicates.go:372] Pod calico-node-79dj5 requesting resource cpu=250m on Node ip-172-31-94-169
  I1109 13:01:21.240391 20 predicates.go:372] Pod calico-node-qlwl6 requesting resource cpu=250m on Node ip-172-31-26-237
  I1109 13:01:21.240398 20 predicates.go:372] Pod calico-node-xl75z requesting resource cpu=250m on Node ip-172-31-65-76
  I1109 13:01:21.240405 20 predicates.go:372] Pod coredns-5b4857d7c8-9wnbb requesting resource cpu=100m on Node ip-172-31-94-169
  I1109 13:01:21.240411 20 predicates.go:372] Pod kube-state-metrics-5d7bdccd49-tvgwt requesting resource cpu=0m on Node ip-172-31-26-237
  I1109 13:01:21.240607 20 predicates.go:372] Pod metrics-server-v0.7.1-6c77d69467-hr9gn requesting resource cpu=5m on Node ip-172-31-94-169
  I1109 13:01:21.240660 20 predicates.go:372] Pod dashboard-metrics-scraper-64757cf48d-c25b9 requesting resource cpu=0m on Node ip-172-31-94-169
  I1109 13:01:21.240722 20 predicates.go:372] Pod kubernetes-dashboard-7b6b7bcb5d-s2k4w requesting resource cpu=0m on Node ip-172-31-94-169
  I1109 13:01:21.240732 20 predicates.go:372] Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-26-237
  I1109 13:01:21.240738 20 predicates.go:372] Pod sonobuoy-e2e-job-f9da5545554d47d7 requesting resource cpu=0m on Node ip-172-31-26-237
  I1109 13:01:21.240745 20 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-5b9d25a256a64056-4mx4d requesting resource cpu=0m on Node ip-172-31-94-169
  I1109 13:01:21.240897 20 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-5b9d25a256a64056-qmqv9 requesting resource cpu=0m on Node ip-172-31-65-76
  I1109 13:01:21.240971 20 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-5b9d25a256a64056-v4478 requesting resource cpu=0m on Node ip-172-31-26-237
  STEP: Starting Pods to consume most of the cluster CPU. @ 11/09/24 13:01:21.24
  I1109 13:01:21.241003 20 predicates.go:382] Creating a pod which consumes cpu=1151m on Node ip-172-31-94-169
  I1109 13:01:21.250353 20 predicates.go:382] Creating a pod which consumes cpu=1225m on Node ip-172-31-26-237
  I1109 13:01:21.265961 20 predicates.go:382] Creating a pod which consumes cpu=1225m on Node ip-172-31-65-76
  E1109 13:01:21.867664      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:01:22.867764      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 11/09/24 13:01:23.302
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-19057e10-604a-4673-a406-063665a4f51b.18064e6011208528], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8105/filler-pod-19057e10-604a-4673-a406-063665a4f51b to ip-172-31-26-237] @ 11/09/24 13:01:23.305
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-19057e10-604a-4673-a406-063665a4f51b.18064e602d8abfa3], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 11/09/24 13:01:23.305
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-19057e10-604a-4673-a406-063665a4f51b.18064e602e7f0a0b], Reason = [Created], Message = [Created container filler-pod-19057e10-604a-4673-a406-063665a4f51b] @ 11/09/24 13:01:23.305
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-19057e10-604a-4673-a406-063665a4f51b.18064e603131ea0b], Reason = [Started], Message = [Started container filler-pod-19057e10-604a-4673-a406-063665a4f51b] @ 11/09/24 13:01:23.305
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-61773898-8d28-4f35-ac32-077581d17b7d.18064e600fb219e3], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8105/filler-pod-61773898-8d28-4f35-ac32-077581d17b7d to ip-172-31-94-169] @ 11/09/24 13:01:23.305
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-61773898-8d28-4f35-ac32-077581d17b7d.18064e602c2683e3], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 11/09/24 13:01:23.305
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-61773898-8d28-4f35-ac32-077581d17b7d.18064e602d4c9f2a], Reason = [Created], Message = [Created container filler-pod-61773898-8d28-4f35-ac32-077581d17b7d] @ 11/09/24 13:01:23.305
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-61773898-8d28-4f35-ac32-077581d17b7d.18064e602f9f1c64], Reason = [Started], Message = [Started container filler-pod-61773898-8d28-4f35-ac32-077581d17b7d] @ 11/09/24 13:01:23.305
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-75b64ad5-7991-46f1-9893-740cce9920b6.18064e6011ab28bd], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8105/filler-pod-75b64ad5-7991-46f1-9893-740cce9920b6 to ip-172-31-65-76] @ 11/09/24 13:01:23.305
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-75b64ad5-7991-46f1-9893-740cce9920b6.18064e602d8ca896], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 11/09/24 13:01:23.305
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-75b64ad5-7991-46f1-9893-740cce9920b6.18064e602e8d901a], Reason = [Created], Message = [Created container filler-pod-75b64ad5-7991-46f1-9893-740cce9920b6] @ 11/09/24 13:01:23.305
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-75b64ad5-7991-46f1-9893-740cce9920b6.18064e6030a2df58], Reason = [Started], Message = [Started container filler-pod-75b64ad5-7991-46f1-9893-740cce9920b6] @ 11/09/24 13:01:23.305
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.18064e608a3376c5], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.] @ 11/09/24 13:01:23.318
  E1109 13:01:23.868496      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: removing the label node off the node ip-172-31-26-237 @ 11/09/24 13:01:24.318
  STEP: verifying the node doesn't have the label node @ 11/09/24 13:01:24.455
  STEP: removing the label node off the node ip-172-31-65-76 @ 11/09/24 13:01:24.458
  STEP: verifying the node doesn't have the label node @ 11/09/24 13:01:24.47
  STEP: removing the label node off the node ip-172-31-94-169 @ 11/09/24 13:01:24.473
  STEP: verifying the node doesn't have the label node @ 11/09/24 13:01:24.485
  I1109 13:01:24.488738 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8105" for this suite. @ 11/09/24 13:01:24.492
â€¢ [3.352 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:331
  STEP: Creating a kubernetes client @ 11/09/24 13:01:24.498
  I1109 13:01:24.498125 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename resourcequota @ 11/09/24 13:01:24.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:01:24.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:01:24.515
  E1109 13:01:24.868579      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:01:25.869372      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:01:26.869441      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:01:27.870005      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:01:28.870061      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:01:29.871006      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:01:30.871289      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:01:31.871397      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:01:32.871516      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:01:33.871645      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:01:34.871736      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:01:35.872677      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:01:36.873382      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:01:37.873609      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:01:38.873706      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:01:39.874458      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:01:40.875301      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 11/09/24 13:01:41.522
  E1109 13:01:41.875486      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:01:42.876277      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:01:43.876712      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:01:44.877336      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:01:45.877610      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 11/09/24 13:01:46.526
  STEP: Ensuring resource quota status is calculated @ 11/09/24 13:01:46.533
  E1109 13:01:46.877930      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:01:47.877991      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 11/09/24 13:01:48.538
  STEP: Ensuring resource quota status captures configMap creation @ 11/09/24 13:01:48.548
  E1109 13:01:48.879080      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:01:49.879303      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 11/09/24 13:01:50.552
  STEP: Ensuring resource quota status released usage @ 11/09/24 13:01:50.559
  E1109 13:01:50.879903      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:01:51.880124      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:01:52.564645 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-187" for this suite. @ 11/09/24 13:01:52.567
â€¢ [28.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 11/09/24 13:01:52.575
  I1109 13:01:52.575788 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename webhook @ 11/09/24 13:01:52.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:01:52.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:01:52.594
  STEP: Setting up server cert @ 11/09/24 13:01:52.614
  E1109 13:01:52.880135      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/09/24 13:01:53.284
  STEP: Deploying the webhook pod @ 11/09/24 13:01:53.292
  STEP: Wait for the deployment to be ready @ 11/09/24 13:01:53.303
  I1109 13:01:53.310680 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1109 13:01:53.880399      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:01:54.880499      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/09/24 13:01:55.322
  STEP: Verifying the service has paired with the endpoint @ 11/09/24 13:01:55.331
  E1109 13:01:55.881375      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:01:56.331897 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 11/09/24 13:01:56.339
  STEP: create a pod that should be denied by the webhook @ 11/09/24 13:01:56.352
  STEP: create a pod that causes the webhook to hang @ 11/09/24 13:01:56.359
  E1109 13:01:56.881669      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:01:57.881796      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:01:58.881937      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:01:59.882003      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:02:00.882396      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:02:01.882626      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:02:02.882765      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:02:03.883463      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:02:04.883684      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:02:05.883697      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 11/09/24 13:02:06.366
  STEP: create a configmap that should be admitted by the webhook @ 11/09/24 13:02:06.512
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 11/09/24 13:02:06.521
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 11/09/24 13:02:06.53
  STEP: create a namespace that bypass the webhook @ 11/09/24 13:02:06.535
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 11/09/24 13:02:06.548
  I1109 13:02:06.608646 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8005" for this suite. @ 11/09/24 13:02:06.615
  STEP: Destroying namespace "webhook-markers-1524" for this suite. @ 11/09/24 13:02:06.623
  STEP: Destroying namespace "exempted-namespace-6803" for this suite. @ 11/09/24 13:02:06.631
â€¢ [14.061 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 11/09/24 13:02:06.637
  I1109 13:02:06.637142 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename runtimeclass @ 11/09/24 13:02:06.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:02:06.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:02:06.653
  STEP: Deleting RuntimeClass runtimeclass-8747-delete-me @ 11/09/24 13:02:06.662
  STEP: Waiting for the RuntimeClass to disappear @ 11/09/24 13:02:06.667
  I1109 13:02:06.676566 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8747" for this suite. @ 11/09/24 13:02:06.68
â€¢ [0.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:863
  STEP: Creating a kubernetes client @ 11/09/24 13:02:06.687
  I1109 13:02:06.687039 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename webhook @ 11/09/24 13:02:06.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:02:06.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:02:06.704
  STEP: Setting up server cert @ 11/09/24 13:02:06.724
  E1109 13:02:06.883762      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/09/24 13:02:06.976
  STEP: Deploying the webhook pod @ 11/09/24 13:02:06.984
  STEP: Wait for the deployment to be ready @ 11/09/24 13:02:06.994
  I1109 13:02:07.001836 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1109 13:02:07.883864      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:02:08.884104      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/09/24 13:02:09.012
  STEP: Verifying the service has paired with the endpoint @ 11/09/24 13:02:09.021
  E1109 13:02:09.884334      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:02:10.021577 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 11/09/24 13:02:10.028
  STEP: create the configmap with a random name @ 11/09/24 13:02:10.044
  STEP: verify the configmap is mutated @ 11/09/24 13:02:10.079
  STEP: create the configmap with 'skip-me' name @ 11/09/24 13:02:10.079
  I1109 13:02:10.152286 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-277" for this suite. @ 11/09/24 13:02:10.158
  STEP: Destroying namespace "webhook-markers-5197" for this suite. @ 11/09/24 13:02:10.165
â€¢ [3.485 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1791
  STEP: Creating a kubernetes client @ 11/09/24 13:02:10.172
  I1109 13:02:10.172114 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename kubectl @ 11/09/24 13:02:10.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:02:10.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:02:10.197
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 11/09/24 13:02:10.201
  I1109 13:02:10.201319 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-2199 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I1109 13:02:10.255283 20 builder.go:146] stderr: ""
  I1109 13:02:10.255324 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 11/09/24 13:02:10.255
  E1109 13:02:10.884544      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:02:11.884624      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:02:12.884839      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:02:13.885045      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:02:14.885483      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 11/09/24 13:02:15.307
  I1109 13:02:15.307262 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-2199 get pod e2e-test-httpd-pod -o json'
  I1109 13:02:15.354289 20 builder.go:146] stderr: ""
  I1109 13:02:15.354392 20 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-11-09T13:02:10Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-2199\",\n        \"resourceVersion\": \"22854\",\n        \"uid\": \"fdb27e10-33af-491a-a41d-8e52455ad876\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-5j64f\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-65-76\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-5j64f\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-11-09T13:02:11Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-11-09T13:02:10Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-11-09T13:02:11Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-11-09T13:02:11Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-11-09T13:02:10Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://3400a0f30c5de1169b5292320d437d761f465c6e32322c1cc09f052e48a1abe6\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-11-09T13:02:10Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-5j64f\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"172.31.65.76\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.65.76\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.35.69\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.35.69\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-11-09T13:02:10Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 11/09/24 13:02:15.354
  I1109 13:02:15.354515 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-2199 replace -f -'
  I1109 13:02:15.442468 20 builder.go:146] stderr: ""
  I1109 13:02:15.442516 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 11/09/24 13:02:15.442
  I1109 13:02:15.445151 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-2199 delete pods e2e-test-httpd-pod'
  E1109 13:02:15.886246      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:02:16.886390      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:02:17.396402 20 builder.go:146] stderr: ""
  I1109 13:02:17.396441 20 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1109 13:02:17.396662 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2199" for this suite. @ 11/09/24 13:02:17.4
â€¢ [7.237 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 11/09/24 13:02:17.409
  I1109 13:02:17.409104 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename container-probe @ 11/09/24 13:02:17.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:02:17.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:02:17.425
  STEP: Creating pod test-grpc-b6a9f447-351e-4c4f-b9f4-d2b717b541af in namespace container-probe-8907 @ 11/09/24 13:02:17.428
  E1109 13:02:17.886482      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:02:18.886597      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/09/24 13:02:19.448
  I1109 13:02:19.452891 20 container_probe.go:1749] Initial restart count of pod test-grpc-b6a9f447-351e-4c4f-b9f4-d2b717b541af is 0
  I1109 13:02:19.455892 20 container_probe.go:1759] Get pod test-grpc-b6a9f447-351e-4c4f-b9f4-d2b717b541af in namespace container-probe-8907
  E1109 13:02:19.887431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:02:20.887603      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:02:21.461363 20 container_probe.go:1759] Get pod test-grpc-b6a9f447-351e-4c4f-b9f4-d2b717b541af in namespace container-probe-8907
  E1109 13:02:21.888461      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:02:22.888680      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:02:23.465476 20 container_probe.go:1759] Get pod test-grpc-b6a9f447-351e-4c4f-b9f4-d2b717b541af in namespace container-probe-8907
  E1109 13:02:23.888963      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:02:24.889464      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:02:25.470902 20 container_probe.go:1759] Get pod test-grpc-b6a9f447-351e-4c4f-b9f4-d2b717b541af in namespace container-probe-8907
  E1109 13:02:25.890478      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:02:26.890697      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:02:27.475918 20 container_probe.go:1759] Get pod test-grpc-b6a9f447-351e-4c4f-b9f4-d2b717b541af in namespace container-probe-8907
  E1109 13:02:27.891460      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:02:28.891589      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:02:29.480840 20 container_probe.go:1759] Get pod test-grpc-b6a9f447-351e-4c4f-b9f4-d2b717b541af in namespace container-probe-8907
  E1109 13:02:29.892388      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:02:30.892715      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:02:31.485669 20 container_probe.go:1759] Get pod test-grpc-b6a9f447-351e-4c4f-b9f4-d2b717b541af in namespace container-probe-8907
  E1109 13:02:31.892834      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:02:32.893053      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:02:33.491962 20 container_probe.go:1759] Get pod test-grpc-b6a9f447-351e-4c4f-b9f4-d2b717b541af in namespace container-probe-8907
  E1109 13:02:33.893168      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:02:34.893286      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:02:35.496515 20 container_probe.go:1759] Get pod test-grpc-b6a9f447-351e-4c4f-b9f4-d2b717b541af in namespace container-probe-8907
  E1109 13:02:35.894177      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:02:36.894469      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:02:37.501254 20 container_probe.go:1759] Get pod test-grpc-b6a9f447-351e-4c4f-b9f4-d2b717b541af in namespace container-probe-8907
  E1109 13:02:37.894670      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:02:38.894906      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:02:39.505818 20 container_probe.go:1759] Get pod test-grpc-b6a9f447-351e-4c4f-b9f4-d2b717b541af in namespace container-probe-8907
  E1109 13:02:39.895271      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:02:40.895640      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:02:41.510795 20 container_probe.go:1759] Get pod test-grpc-b6a9f447-351e-4c4f-b9f4-d2b717b541af in namespace container-probe-8907
  E1109 13:02:41.896397      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:02:42.896509      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:02:43.514731 20 container_probe.go:1759] Get pod test-grpc-b6a9f447-351e-4c4f-b9f4-d2b717b541af in namespace container-probe-8907
  E1109 13:02:43.897296      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:02:44.897392      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:02:45.519325 20 container_probe.go:1759] Get pod test-grpc-b6a9f447-351e-4c4f-b9f4-d2b717b541af in namespace container-probe-8907
  E1109 13:02:45.897717      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:02:46.898453      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:02:47.525045 20 container_probe.go:1759] Get pod test-grpc-b6a9f447-351e-4c4f-b9f4-d2b717b541af in namespace container-probe-8907
  E1109 13:02:47.899477      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:02:48.899712      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:02:49.529656 20 container_probe.go:1759] Get pod test-grpc-b6a9f447-351e-4c4f-b9f4-d2b717b541af in namespace container-probe-8907
  E1109 13:02:49.900045      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:02:50.900193      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:02:51.534573 20 container_probe.go:1759] Get pod test-grpc-b6a9f447-351e-4c4f-b9f4-d2b717b541af in namespace container-probe-8907
  E1109 13:02:51.901165      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:02:52.901432      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:02:53.539121 20 container_probe.go:1759] Get pod test-grpc-b6a9f447-351e-4c4f-b9f4-d2b717b541af in namespace container-probe-8907
  E1109 13:02:53.902483      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:02:54.902588      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:02:55.543373 20 container_probe.go:1759] Get pod test-grpc-b6a9f447-351e-4c4f-b9f4-d2b717b541af in namespace container-probe-8907
  E1109 13:02:55.902951      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:02:56.903267      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:02:57.548715 20 container_probe.go:1759] Get pod test-grpc-b6a9f447-351e-4c4f-b9f4-d2b717b541af in namespace container-probe-8907
  E1109 13:02:57.904144      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:02:58.904401      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:02:59.552843 20 container_probe.go:1759] Get pod test-grpc-b6a9f447-351e-4c4f-b9f4-d2b717b541af in namespace container-probe-8907
  E1109 13:02:59.905455      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:00.905658      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:03:01.557719 20 container_probe.go:1759] Get pod test-grpc-b6a9f447-351e-4c4f-b9f4-d2b717b541af in namespace container-probe-8907
  E1109 13:03:01.906281      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:02.906410      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:03:03.562962 20 container_probe.go:1759] Get pod test-grpc-b6a9f447-351e-4c4f-b9f4-d2b717b541af in namespace container-probe-8907
  E1109 13:03:03.907475      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:04.908456      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:03:05.567339 20 container_probe.go:1759] Get pod test-grpc-b6a9f447-351e-4c4f-b9f4-d2b717b541af in namespace container-probe-8907
  E1109 13:03:05.908881      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:06.909566      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:03:07.573069 20 container_probe.go:1759] Get pod test-grpc-b6a9f447-351e-4c4f-b9f4-d2b717b541af in namespace container-probe-8907
  E1109 13:03:07.910555      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:08.910841      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:03:09.577813 20 container_probe.go:1759] Get pod test-grpc-b6a9f447-351e-4c4f-b9f4-d2b717b541af in namespace container-probe-8907
  E1109 13:03:09.911389      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:10.911767      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:03:11.583056 20 container_probe.go:1759] Get pod test-grpc-b6a9f447-351e-4c4f-b9f4-d2b717b541af in namespace container-probe-8907
  E1109 13:03:11.912629      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:12.912769      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:03:13.587647 20 container_probe.go:1759] Get pod test-grpc-b6a9f447-351e-4c4f-b9f4-d2b717b541af in namespace container-probe-8907
  E1109 13:03:13.912981      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:14.913213      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:03:15.591583 20 container_probe.go:1759] Get pod test-grpc-b6a9f447-351e-4c4f-b9f4-d2b717b541af in namespace container-probe-8907
  E1109 13:03:15.914138      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:16.914514      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:03:17.596928 20 container_probe.go:1759] Get pod test-grpc-b6a9f447-351e-4c4f-b9f4-d2b717b541af in namespace container-probe-8907
  E1109 13:03:17.915512      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:18.915730      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:03:19.602376 20 container_probe.go:1759] Get pod test-grpc-b6a9f447-351e-4c4f-b9f4-d2b717b541af in namespace container-probe-8907
  E1109 13:03:19.916787      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:20.917730      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:03:21.606774 20 container_probe.go:1759] Get pod test-grpc-b6a9f447-351e-4c4f-b9f4-d2b717b541af in namespace container-probe-8907
  E1109 13:03:21.918123      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:22.918241      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:03:23.611016 20 container_probe.go:1759] Get pod test-grpc-b6a9f447-351e-4c4f-b9f4-d2b717b541af in namespace container-probe-8907
  I1109 13:03:23.611057 20 container_probe.go:1763] Restart count of pod container-probe-8907/test-grpc-b6a9f447-351e-4c4f-b9f4-d2b717b541af is now 1 (1m4.158136602s elapsed)
  STEP: deleting the pod @ 11/09/24 13:03:23.611
  I1109 13:03:23.622158 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8907" for this suite. @ 11/09/24 13:03:23.626
â€¢ [66.225 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 11/09/24 13:03:23.634
  I1109 13:03:23.634473 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename svcaccounts @ 11/09/24 13:03:23.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:03:23.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:03:23.651
  I1109 13:03:23.666894 20 service_accounts.go:618] created pod
  E1109 13:03:23.918463      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:24.919440      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:03:25.676
  E1109 13:03:25.920316      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:26.920442      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:27.920639      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:28.920880      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:29.921106      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:30.921954      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:31.922138      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:32.922416      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:33.922602      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:34.922841      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:35.923854      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:36.924069      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:37.924361      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:38.924402      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:39.924549      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:40.924717      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:41.924801      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:42.924898      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:43.925125      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:44.925359      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:45.925888      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:46.926788      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:47.926898      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:48.927094      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:49.927309      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:50.927655      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:51.928432      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:52.929447      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:53.930429      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:54.930678      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:03:55.677401 20 service_accounts.go:624] polling logs
  I1109 13:03:55.688537 20 service_accounts.go:634] Pod logs: 
  I1109 13:03:24.196315       1 log.go:245] OK: Got token
  I1109 13:03:24.196374       1 log.go:245] validating with in-cluster discovery
  I1109 13:03:24.196579       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I1109 13:03:24.196716       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-6606:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0002b7af0), NotBefore:(*jwt.NumericDate)(0xc0002b7be0), IssuedAt:(*jwt.NumericDate)(0xc0002b7b00), ID:"25c4b134-03f8-490b-8291-8da8af33c90e"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-6606", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"64702978-50a0-47ab-9782-514f6700eec9"}}}
  I1109 13:03:24.202663       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I1109 13:03:24.206044       1 log.go:245] OK: Validated signature on JWT
  I1109 13:03:24.206107       1 log.go:245] OK: Got valid claims from token!
  I1109 13:03:24.206126       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-6606:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0002e80e0), NotBefore:(*jwt.NumericDate)(0xc0002e8108), IssuedAt:(*jwt.NumericDate)(0xc0002e80e8), ID:"25c4b134-03f8-490b-8291-8da8af33c90e"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-6606", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"64702978-50a0-47ab-9782-514f6700eec9"}}}

  I1109 13:03:55.688598 20 service_accounts.go:638] completed pod
  I1109 13:03:55.695313 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6606" for this suite. @ 11/09/24 13:03:55.699
â€¢ [32.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 11/09/24 13:03:55.706
  I1109 13:03:55.706355 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename container-runtime @ 11/09/24 13:03:55.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:03:55.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:03:55.723
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 11/09/24 13:03:55.735
  E1109 13:03:55.931121      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:56.931205      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:57.932056      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:58.932119      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:03:59.932766      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:00.932996      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:01.933707      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:02.934475      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:03.935321      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:04.935370      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:05.936156      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:06.936433      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:07.936574      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:08.937432      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:09.938248      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 11/09/24 13:04:10.809
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 11/09/24 13:04:10.812
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 11/09/24 13:04:10.819
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 11/09/24 13:04:10.819
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 11/09/24 13:04:10.839
  E1109 13:04:10.938684      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:11.938776      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 11/09/24 13:04:12.853
  E1109 13:04:12.939271      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 11/09/24 13:04:13.863
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 11/09/24 13:04:13.869
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 11/09/24 13:04:13.869
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 11/09/24 13:04:13.898
  E1109 13:04:13.940029      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 11/09/24 13:04:14.909
  E1109 13:04:14.940197      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 11/09/24 13:04:15.917
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 11/09/24 13:04:15.923
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 11/09/24 13:04:15.923
  E1109 13:04:15.940387      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:04:15.947090 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4273" for this suite. @ 11/09/24 13:04:15.95
â€¢ [20.250 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 11/09/24 13:04:15.956
  I1109 13:04:15.956319 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename downward-api @ 11/09/24 13:04:15.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:04:15.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:04:15.974
  STEP: Creating a pod to test downward api env vars @ 11/09/24 13:04:15.979
  E1109 13:04:16.940592      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:17.940707      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:04:17.998
  I1109 13:04:18.001565 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod downward-api-486a2472-365a-41db-8c65-8b5d2c359916 container dapi-container: <nil>
  STEP: delete the pod @ 11/09/24 13:04:18.007
  I1109 13:04:18.026172 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-923" for this suite. @ 11/09/24 13:04:18.03
â€¢ [2.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 11/09/24 13:04:18.037
  I1109 13:04:18.037383 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename field-validation @ 11/09/24 13:04:18.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:04:18.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:04:18.056
  I1109 13:04:18.058859 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  E1109 13:04:18.940803      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:19.941025      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  W1109 13:04:20.595043      20 warnings.go:70] unknown field "alpha"
  W1109 13:04:20.595083      20 warnings.go:70] unknown field "beta"
  W1109 13:04:20.595088      20 warnings.go:70] unknown field "delta"
  W1109 13:04:20.595091      20 warnings.go:70] unknown field "epsilon"
  W1109 13:04:20.595095      20 warnings.go:70] unknown field "gamma"
  E1109 13:04:20.941904      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:04:21.157719 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2133" for this suite. @ 11/09/24 13:04:21.16
â€¢ [3.129 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 11/09/24 13:04:21.166
  I1109 13:04:21.166741 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename deployment @ 11/09/24 13:04:21.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:04:21.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:04:21.184
  I1109 13:04:21.186984 20 deployment.go:1645] Creating simple deployment test-new-deployment
  I1109 13:04:21.197167 20 deployment.go:222] deployment "test-new-deployment" doesn't have the required revision set
  E1109 13:04:21.942017      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:22.942296      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 11/09/24 13:04:23.208
  STEP: updating a scale subresource @ 11/09/24 13:04:23.21
  STEP: verifying the deployment Spec.Replicas was modified @ 11/09/24 13:04:23.218
  STEP: Patch a scale subresource @ 11/09/24 13:04:23.22
  I1109 13:04:23.246462 20 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5093",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d347c6d6-cf9d-4c6e-982c-1ec60eeed57a",
      ResourceVersion: (string) (len=5) "23445",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866754261,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866754261,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866754262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866754262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866754262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866754262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866754261,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-64bcfc6446\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1109 13:04:23.252674 20 deployment.go:39] New ReplicaSet "test-new-deployment-64bcfc6446" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5093",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bf8d842e-77d7-4f82-8189-4f00b7dd0b32",
      ResourceVersion: (string) (len=5) "23452",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866754261,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "d347c6d6-cf9d-4c6e-982c-1ec60eeed57a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866754263,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 33 34 37 63 36  64 36 2d 63 66 39 64 2d  |\"d347c6d6-cf9d-|
              00000120  34 63 36 65 2d 39 38 32  63 2d 31 65 63 36 30 65  |4c6e-982c-1ec60e|
              00000130  65 65 64 35 37 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |eed57a\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866754263,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1109 13:04:23.262121 20 deployment.go:67] Pod "test-new-deployment-64bcfc6446-h4zkb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-h4zkb",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-5093",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "60a6f7cf-840a-43c0-97db-d8b4f35aa79c",
      ResourceVersion: (string) (len=5) "23432",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866754261,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "bf8d842e-77d7-4f82-8189-4f00b7dd0b32",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866754261,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 66  38 64 38 34 32 65 2d 37  |d\":\"bf8d842e-7|
              00000090  37 64 37 2d 34 66 38 32  2d 38 31 38 39 2d 34 66  |7d7-4f82-8189-4f|
              000000a0  30 30 62 37 64 64 30 62  33 32 5c 22 7d 22 3a 7b  |00b7dd0b32\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866754262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 33 35  2e 37 33 5c 22 7d 22 3a  |2.168.35.73\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hj7gd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hj7gd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-65-76",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866754262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866754261,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866754262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866754262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866754261,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.65.76",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.65.76"
        }
      },
      PodIP: (string) (len=13) "192.168.35.73",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.35.73"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866754261,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63866754261,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f4e2397da7dcc9299557aad44d3c1770fa48d716e79d30f0a1bb3cfadbb19c0c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hj7gd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1109 13:04:23.263510 20 deployment.go:67] Pod "test-new-deployment-64bcfc6446-z8dh8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-z8dh8",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-5093",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4c43e955-e074-4483-9e68-83f2e8417dd0",
      ResourceVersion: (string) (len=5) "23447",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866754263,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "bf8d842e-77d7-4f82-8189-4f00b7dd0b32",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866754263,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 66  38 64 38 34 32 65 2d 37  |d\":\"bf8d842e-7|
              00000090  37 64 37 2d 34 66 38 32  2d 38 31 38 39 2d 34 66  |7d7-4f82-8189-4f|
              000000a0  30 30 62 37 64 64 30 62  33 32 5c 22 7d 22 3a 7b  |00b7dd0b32\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jf9z6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jf9z6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-26-237",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866754263,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1109 13:04:23.264200 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5093" for this suite. @ 11/09/24 13:04:23.272
â€¢ [2.128 seconds]
------------------------------
SSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 11/09/24 13:04:23.294
  I1109 13:04:23.294911 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename podtemplate @ 11/09/24 13:04:23.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:04:23.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:04:23.361
  STEP: Create a pod template @ 11/09/24 13:04:23.363
  STEP: Replace a pod template @ 11/09/24 13:04:23.369
  I1109 13:04:23.376961 20 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I1109 13:04:23.377074 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7806" for this suite. @ 11/09/24 13:04:23.38
â€¢ [0.091 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 11/09/24 13:04:23.386
  I1109 13:04:23.386540 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename sched-pred @ 11/09/24 13:04:23.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:04:23.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:04:23.402
  I1109 13:04:23.405156 20 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1109 13:04:23.411478 20 util.go:393] Waiting for terminating namespaces to be deleted...
  I1109 13:04:23.414002 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-26-237 before test
  I1109 13:04:23.418141 20 predicates.go:957] test-new-deployment-64bcfc6446-z8dh8 from deployment-5093 started at 2024-11-09 13:04:23 +0000 UTC (1 container statuses recorded)
  I1109 13:04:23.418159 20 predicates.go:959] 	Container httpd ready: false, restart count 0
  I1109 13:04:23.418166 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-mmmtf from ingress-nginx-kubernetes-worker started at 2024-11-09 12:02:20 +0000 UTC (1 container statuses recorded)
  I1109 13:04:23.418172 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1109 13:04:23.418179 20 predicates.go:957] calico-node-qlwl6 from kube-system started at 2024-11-09 12:09:00 +0000 UTC (1 container statuses recorded)
  I1109 13:04:23.418184 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1109 13:04:23.418190 20 predicates.go:957] kube-state-metrics-5d7bdccd49-tvgwt from kube-system started at 2024-11-09 12:02:20 +0000 UTC (1 container statuses recorded)
  I1109 13:04:23.418201 20 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 0
  I1109 13:04:23.418207 20 predicates.go:957] sonobuoy from sonobuoy started at 2024-11-09 12:11:47 +0000 UTC (1 container statuses recorded)
  I1109 13:04:23.418212 20 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1109 13:04:23.418217 20 predicates.go:957] sonobuoy-e2e-job-f9da5545554d47d7 from sonobuoy started at 2024-11-09 12:11:49 +0000 UTC (2 container statuses recorded)
  I1109 13:04:23.418222 20 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1109 13:04:23.418244 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1109 13:04:23.418250 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-5b9d25a256a64056-v4478 from sonobuoy started at 2024-11-09 12:11:49 +0000 UTC (2 container statuses recorded)
  I1109 13:04:23.418255 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1109 13:04:23.418260 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1109 13:04:23.418265 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-65-76 before test
  I1109 13:04:23.422686 20 predicates.go:957] test-new-deployment-64bcfc6446-h4zkb from deployment-5093 started at 2024-11-09 13:04:21 +0000 UTC (1 container statuses recorded)
  I1109 13:04:23.422707 20 predicates.go:959] 	Container httpd ready: true, restart count 0
  I1109 13:04:23.422715 20 predicates.go:957] test-new-deployment-64bcfc6446-z84s2 from deployment-5093 started at 2024-11-09 13:04:23 +0000 UTC (1 container statuses recorded)
  I1109 13:04:23.422721 20 predicates.go:959] 	Container httpd ready: false, restart count 0
  I1109 13:04:23.422726 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-5v6q4 from ingress-nginx-kubernetes-worker started at 2024-11-09 12:32:41 +0000 UTC (1 container statuses recorded)
  I1109 13:04:23.422732 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1109 13:04:23.422738 20 predicates.go:957] calico-node-xl75z from kube-system started at 2024-11-09 12:09:10 +0000 UTC (1 container statuses recorded)
  I1109 13:04:23.422743 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1109 13:04:23.422748 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-5b9d25a256a64056-qmqv9 from sonobuoy started at 2024-11-09 12:11:49 +0000 UTC (2 container statuses recorded)
  I1109 13:04:23.422753 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1109 13:04:23.422758 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1109 13:04:23.422764 20 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-94-169 before test
  I1109 13:04:23.427786 20 predicates.go:957] test-new-deployment-64bcfc6446-q9w5r from deployment-5093 started at 2024-11-09 13:04:23 +0000 UTC (1 container statuses recorded)
  I1109 13:04:23.427800 20 predicates.go:959] 	Container httpd ready: false, restart count 0
  I1109 13:04:23.427807 20 predicates.go:957] nginx-ingress-controller-kubernetes-worker-6rvrg from ingress-nginx-kubernetes-worker started at 2024-11-09 12:02:11 +0000 UTC (1 container statuses recorded)
  I1109 13:04:23.427812 20 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 3
  I1109 13:04:23.427818 20 predicates.go:957] calico-node-79dj5 from kube-system started at 2024-11-09 12:08:39 +0000 UTC (1 container statuses recorded)
  I1109 13:04:23.427822 20 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1109 13:04:23.427828 20 predicates.go:957] coredns-5b4857d7c8-9wnbb from kube-system started at 2024-11-09 12:02:11 +0000 UTC (1 container statuses recorded)
  I1109 13:04:23.427833 20 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1109 13:04:23.427839 20 predicates.go:957] metrics-server-v0.7.1-6c77d69467-hr9gn from kube-system started at 2024-11-09 12:32:15 +0000 UTC (2 container statuses recorded)
  I1109 13:04:23.427844 20 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I1109 13:04:23.427854 20 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I1109 13:04:23.427880 20 predicates.go:957] dashboard-metrics-scraper-64757cf48d-c25b9 from kubernetes-dashboard started at 2024-11-09 12:32:15 +0000 UTC (1 container statuses recorded)
  I1109 13:04:23.427886 20 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1109 13:04:23.427893 20 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-s2k4w from kubernetes-dashboard started at 2024-11-09 12:02:11 +0000 UTC (1 container statuses recorded)
  I1109 13:04:23.427898 20 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I1109 13:04:23.427905 20 predicates.go:957] sonobuoy-systemd-logs-daemon-set-5b9d25a256a64056-4mx4d from sonobuoy started at 2024-11-09 12:11:49 +0000 UTC (2 container statuses recorded)
  I1109 13:04:23.427910 20 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1109 13:04:23.427916 20 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 11/09/24 13:04:23.427
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.18064e8a7b12842c], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.] @ 11/09/24 13:04:23.455
  E1109 13:04:23.942404      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:04:24.452989 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8860" for this suite. @ 11/09/24 13:04:24.457
â€¢ [1.077 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3619
  STEP: Creating a kubernetes client @ 11/09/24 13:04:24.463
  I1109 13:04:24.463328 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename services @ 11/09/24 13:04:24.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:04:24.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:04:24.481
  STEP: creating a collection of services @ 11/09/24 13:04:24.483
  I1109 13:04:24.483774 20 service.go:3655] Creating e2e-svc-a-w8vhm
  I1109 13:04:24.494410 20 service.go:3655] Creating e2e-svc-b-dsr8k
  I1109 13:04:24.503988 20 service.go:3655] Creating e2e-svc-c-54dpx
  STEP: deleting service collection @ 11/09/24 13:04:24.518
  I1109 13:04:24.544479 20 service.go:3690] Collection of services has been deleted
  I1109 13:04:24.544712 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3006" for this suite. @ 11/09/24 13:04:24.547
â€¢ [0.090 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 11/09/24 13:04:24.553
  I1109 13:04:24.553916 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename projected @ 11/09/24 13:04:24.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:04:24.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:04:24.571
  STEP: Creating secret with name projected-secret-test-8494b3eb-5eda-40d9-9eae-a55dcd868087 @ 11/09/24 13:04:24.574
  STEP: Creating a pod to test consume secrets @ 11/09/24 13:04:24.58
  E1109 13:04:24.942540      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:25.942986      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:26.943084      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:27.943287      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:04:28.604
  I1109 13:04:28.607953 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-projected-secrets-d6c5e433-7a97-4793-8f5f-3b09731ea284 container secret-volume-test: <nil>
  STEP: delete the pod @ 11/09/24 13:04:28.615
  I1109 13:04:28.629665 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7058" for this suite. @ 11/09/24 13:04:28.632
â€¢ [4.086 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 11/09/24 13:04:28.64
  I1109 13:04:28.640272 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename projected @ 11/09/24 13:04:28.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:04:28.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:04:28.66
  STEP: Creating projection with secret that has name projected-secret-test-map-c1f4f306-df46-4601-b3cb-ee0665ef2f23 @ 11/09/24 13:04:28.662
  STEP: Creating a pod to test consume secrets @ 11/09/24 13:04:28.667
  E1109 13:04:28.944072      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:29.944606      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:30.945459      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:31.945588      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:04:32.69
  I1109 13:04:32.693763 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-projected-secrets-2db43ef1-2681-4d26-b9a1-b2d003794908 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 11/09/24 13:04:32.7
  I1109 13:04:32.717088 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1200" for this suite. @ 11/09/24 13:04:32.723
â€¢ [4.089 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:221
  STEP: Creating a kubernetes client @ 11/09/24 13:04:32.729
  I1109 13:04:32.729798 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename sched-preemption @ 11/09/24 13:04:32.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:04:32.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:04:32.748
  I1109 13:04:32.764111 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1109 13:04:32.945689      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:33.945768      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:34.946217      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:35.946537      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:36.946627      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:37.946701      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:38.946908      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:39.947509      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:40.948078      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:41.948145      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:42.948379      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:43.948548      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:44.948932      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:45.949720      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:46.949877      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:47.949949      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:48.950391      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:49.950420      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:50.951384      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:51.951563      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:52.952476      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:53.952668      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:54.953471      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:55.954051      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:56.954151      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:57.954398      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:58.954498      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:04:59.954700      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:00.954750      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:01.954954      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:02.955355      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:03.955551      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:04.956011      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:05.956820      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:06.957119      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:07.957218      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:08.957858      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:09.958439      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:10.958532      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:11.959425      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:12.959951      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:13.960050      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:14.960922      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:15.961788      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:16.962435      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:17.962688      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:18.962771      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:19.962963      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:20.963738      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:21.963965      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:22.964453      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:23.964655      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:24.965442      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:25.965665      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:26.965716      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:27.965920      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:28.966445      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:29.966618      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:30.967084      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:31.967189      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:05:32.769005 20 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 11/09/24 13:05:32.772
  I1109 13:05:32.794238 20 preemption.go:266] Created pod: pod0-0-sched-preemption-low-priority
  I1109 13:05:32.801744 20 preemption.go:266] Created pod: pod0-1-sched-preemption-medium-priority
  I1109 13:05:32.825517 20 preemption.go:266] Created pod: pod1-0-sched-preemption-medium-priority
  I1109 13:05:32.832999 20 preemption.go:266] Created pod: pod1-1-sched-preemption-medium-priority
  I1109 13:05:32.853681 20 preemption.go:266] Created pod: pod2-0-sched-preemption-medium-priority
  I1109 13:05:32.862489 20 preemption.go:266] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 11/09/24 13:05:32.862
  E1109 13:05:32.967536      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:33.967630      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 11/09/24 13:05:34.89
  E1109 13:05:34.968589      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:35.968691      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:36.969686      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:37.969777      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:38.970541      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:05:39.081079 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8665" for this suite. @ 11/09/24 13:05:39.084
â€¢ [66.363 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 11/09/24 13:05:39.092
  I1109 13:05:39.092624 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename replicaset @ 11/09/24 13:05:39.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:05:39.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:05:39.109
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 11/09/24 13:05:39.113
  I1109 13:05:39.121427 20 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E1109 13:05:39.970769      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:40.971778      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:41.971975      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:42.972316      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:43.972614      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:05:44.125060 20 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/09/24 13:05:44.125
  STEP: getting scale subresource @ 11/09/24 13:05:44.125
  STEP: updating a scale subresource @ 11/09/24 13:05:44.131
  STEP: verifying the replicaset Spec.Replicas was modified @ 11/09/24 13:05:44.14
  STEP: Patch a scale subresource @ 11/09/24 13:05:44.147
  I1109 13:05:44.169208 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-935" for this suite. @ 11/09/24 13:05:44.181
â€¢ [5.104 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 11/09/24 13:05:44.196
  I1109 13:05:44.196928 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename projected @ 11/09/24 13:05:44.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:05:44.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:05:44.224
  STEP: Creating projection with secret that has name projected-secret-test-ef42b0aa-9de8-44a0-a687-3bff012b5a6a @ 11/09/24 13:05:44.233
  STEP: Creating a pod to test consume secrets @ 11/09/24 13:05:44.237
  E1109 13:05:44.973571      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:45.973661      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:46.973890      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:47.974045      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:05:48.26
  I1109 13:05:48.265159 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-projected-secrets-a4a83404-c7ce-4342-9647-3e22b8e8703f container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 11/09/24 13:05:48.27
  I1109 13:05:48.284690 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-617" for this suite. @ 11/09/24 13:05:48.287
â€¢ [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 11/09/24 13:05:48.303
  I1109 13:05:48.303533 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename configmap @ 11/09/24 13:05:48.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:05:48.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:05:48.334
  STEP: Creating configMap configmap-339/configmap-test-87d8ed51-053e-4863-8934-404ed67a455d @ 11/09/24 13:05:48.337
  STEP: Creating a pod to test consume configMaps @ 11/09/24 13:05:48.341
  E1109 13:05:48.974417      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:49.974627      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:50.974808      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:51.974903      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:05:52.365
  I1109 13:05:52.368631 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-configmaps-b00562ee-2f16-4396-8bbe-44c1278ce0ce container env-test: <nil>
  STEP: delete the pod @ 11/09/24 13:05:52.374
  I1109 13:05:52.395778 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-339" for this suite. @ 11/09/24 13:05:52.399
â€¢ [4.103 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 11/09/24 13:05:52.404
  I1109 13:05:52.404639 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename chunking @ 11/09/24 13:05:52.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:05:52.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:05:52.422
  STEP: creating a large number of resources @ 11/09/24 13:05:52.424
  E1109 13:05:52.975639      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:53.975731      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:54.976278      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:55.976837      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:56.977045      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:57.977878      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:58.978592      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:05:59.978812      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:00.979899      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:01.980820      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:02.981755      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:03.982451      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:04.982564      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:05.983465      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:06.984002      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:07.984775      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:08.984806      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:09.985210      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 11/09/24 13:06:10.111
  I1109 13:06:10.158809 20 chunking.go:163] Retrieved 40/40 results with rv 24563 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1NjMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 11/09/24 13:06:10.158
  E1109 13:06:10.985409      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:11.985555      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:12.985770      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:13.986177      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:14.986389      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:15.987392      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:16.987452      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:17.988448      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:18.989426      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:19.989608      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:20.989737      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:21.990060      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:22.990172      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:23.990329      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:24.990563      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:25.990767      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:26.990896      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:27.991122      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:28.991293      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:29.991560      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:06:30.164471 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1NjMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1109 13:06:30.991762      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:31.991957      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:32.992150      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:33.992723      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:34.992845      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:35.993845      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:36.994047      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:37.994437      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:38.994708      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:39.995428      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:40.995695      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:41.995792      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:42.996858      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:43.996956      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:44.997575      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:45.997666      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:46.998428      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:47.998531      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:48.998738      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:49.998844      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:06:50.164648 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1NjMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1109 13:06:50.999421      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:51.999606      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:52.999708      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:53.999909      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:55.000166      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:56.000327      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:57.000395      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:58.001444      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:06:59.001639      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:00.001829      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:01.001903      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:02.002143      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:03.002371      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:04.002568      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:05.002773      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:06.003831      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:07.003996      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:08.004197      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:09.004421      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:10.004635      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:07:10.164921 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1NjMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1109 13:07:11.004735      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:12.005424      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:13.005631      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:14.005823      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:15.006027      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:16.006865      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:17.007056      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:18.007531      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:19.007621      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:20.008424      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:21.008666      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:22.009426      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:23.009530      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:24.009737      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:25.009979      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:26.010265      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:27.010455      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:28.011442      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:29.011569      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:30.011770      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:07:30.163836 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1NjMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1109 13:07:31.012807      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:32.013433      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:33.013775      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:34.013972      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:35.014330      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:36.014514      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:37.014835      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:38.014968      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:39.015185      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:40.015409      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:41.015993      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:42.016283      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:43.016369      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:44.017423      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:45.018423      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:46.018530      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:47.019427      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:48.020452      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:49.020789      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:50.021069      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:07:50.164607 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1NjMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1109 13:07:51.021543      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:52.021733      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:53.021852      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:54.022426      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:55.022673      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:56.022727      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:57.023428      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:58.023605      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:07:59.023793      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:00.024444      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:01.024691      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:02.024907      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:03.025127      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:04.025358      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:05.025538      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:06.025658      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:07.025841      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:08.026043      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:09.026159      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:10.027207      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:08:10.164198 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1NjMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1109 13:08:11.027850      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:12.028667      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:13.028512      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:14.029426      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:15.030439      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:16.031418      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:17.032140      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:18.032287      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:19.032491      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:20.032679      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:21.032954      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:22.033158      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:23.033366      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:24.033582      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:25.033704      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:26.033800      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:27.034013      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:28.034196      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:29.034360      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:30.034461      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:08:30.164516 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1NjMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1109 13:08:31.035287      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:32.035512      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:33.035606      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:34.036450      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:35.036532      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:36.036852      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:37.036952      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:38.037057      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:39.038042      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:40.038138      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:41.038844      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:42.038938      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:43.039458      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:44.040452      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:45.040707      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:46.040809      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:47.040932      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:48.041117      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:49.041356      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:50.042431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:08:50.164546 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1NjMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1109 13:08:51.043354      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:52.043608      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:53.043910      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:54.044101      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:55.044316      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:56.044939      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:57.045926      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:58.046038      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:08:59.046963      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:00.047057      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:01.047331      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:02.047442      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:03.048423      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:04.049568      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:05.049824      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:06.050876      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:07.050992      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:08.051175      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:09.051418      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:10.051677      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:09:10.165338 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1NjMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1109 13:09:11.052541      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:12.052735      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:13.053070      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:14.053145      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:15.053526      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:16.054044      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:17.054258      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:18.054363      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:19.055439      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:20.056462      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:21.057344      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:22.057446      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:23.058440      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:24.059516      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:25.059697      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:26.059738      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:27.060373      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:28.061452      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:29.062441      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:30.062623      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:09:30.164700 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1NjMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1109 13:09:31.063441      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:32.063551      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:33.064431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:34.064641      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:35.065446      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:36.065568      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:37.066431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:38.066522      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:39.066672      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:40.066763      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:41.067669      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:42.067766      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:43.068422      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:44.069427      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:45.070445      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:46.070486      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:47.070681      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:48.071429      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:49.071732      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:50.072012      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:09:50.165362 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1NjMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1109 13:09:51.071935      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:52.072445      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:53.073426      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:54.073631      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:55.073856      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:56.074899      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:57.075078      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:58.075278      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:09:59.075522      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:00.075615      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:01.076143      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:02.076383      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:03.077435      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:04.077530      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:05.078421      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:06.078732      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:07.079481      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:08.079696      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:09.079884      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:10.080135      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:10:10.163779 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1NjMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1109 13:10:11.080851      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:12.081119      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:13.081356      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:14.081597      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:15.082437      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:16.082775      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:17.083452      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:18.084432      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:19.084538      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:20.085453      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:21.086457      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:22.086706      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:23.086820      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:24.087834      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:25.087935      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:26.088880      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:27.089064      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:28.089178      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:29.089370      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:30.089570      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:10:30.164754 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1NjMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1109 13:10:31.090424      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:32.090470      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:33.090706      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:34.091420      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:35.091649      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:36.091832      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:37.092057      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:38.092264      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:39.092474      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:40.092577      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:41.092754      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:42.092983      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:43.093933      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:44.094001      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:45.094315      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:46.094398      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:47.094540      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:48.094734      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:49.095440      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:50.095672      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:10:50.165501 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1NjMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1109 13:10:51.096439      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:52.097426      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:53.098424      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:54.099429      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:55.100495      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:56.101430      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:57.102511      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:58.102630      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:10:59.103436      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:00.103560      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:01.103791      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:02.104004      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:03.104219      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:04.104434      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:05.104661      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:06.104786      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:07.105007      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:08.105216      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:09.105554      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:10.105740      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:11:10.163472 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1NjMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1109 13:11:11.105875      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:12.106148      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:13.106426      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:14.106518      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:15.107421      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:16.108426      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:17.109432      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:18.109644      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:19.110373      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:20.110603      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:21.110784      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:22.111003      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:23.111576      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:24.111676      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:25.111922      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:26.112274      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:27.112533      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:28.112793      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:29.113000      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:30.113933      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:11:30.164563 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1NjMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1109 13:11:31.114669      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:32.114864      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:33.115077      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:34.115314      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:35.116301      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:36.116375      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:37.117351      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:38.117479      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:39.118429      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:40.119422      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:41.119747      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:42.119877      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:43.119912      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:44.120094      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:45.120344      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:46.120594      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:47.120713      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:48.120984      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:49.121334      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:50.121479      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:11:50.164560 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1NjMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1109 13:11:51.121644      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:52.121898      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:53.122053      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:54.122316      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:55.122503      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:56.122787      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:57.122889      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:58.123091      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:11:59.123308      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:00.123373      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:01.123691      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:02.123915      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:03.124466      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:04.124653      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:05.124861      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:06.124969      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:07.125115      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:08.125222      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:09.125421      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:10.125540      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:12:10.164009 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1NjMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1109 13:12:11.125863      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:12.126607      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:13.126787      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:14.127297      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:15.127365      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:16.128435      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:17.129423      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:18.129610      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:19.129859      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:20.130427      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:21.130730      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:22.130947      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:23.131429      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:24.132430      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:25.132559      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:26.132808      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:27.132915      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:28.133121      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:29.133465      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:30.133692      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:12:30.164939 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1NjMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1109 13:12:31.133932      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:32.134132      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:33.134526      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:34.134957      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:35.135155      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:36.136032      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:37.136170      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:38.136368      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:39.136482      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:40.136595      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:41.136673      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:42.137437      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:43.138425      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:44.138514      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:45.138607      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:46.138810      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:47.139420      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:48.139667      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:49.139922      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:50.140115      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:12:50.163667 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1NjMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1109 13:12:51.140772      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:52.140990      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:53.141514      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:54.141708      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:55.141924      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:56.142938      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:57.143106      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:58.143474      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:12:59.143657      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:00.143771      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:01.143925      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:02.144148      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:03.144367      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:04.144576      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:05.144775      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:06.144933      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:07.145144      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:08.145359      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:09.145544      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:10.145651      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:13:10.164849 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1NjMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1109 13:13:11.145826      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:12.146020      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:13.146211      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:14.146373      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:15.146479      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:16.147417      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:17.148429      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:18.148607      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:19.148701      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:20.149425      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:21.149658      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:22.150430      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:23.150557      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:24.150767      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:25.151439      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:26.151808      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:27.151930      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:28.152126      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:29.152340      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:30.152480      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:13:30.164045 20 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1NjMsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1109 13:13:31.153559      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:32.153810      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:33.153985      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:34.154298      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:35.154523      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:36.154532      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:37.154750      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:38.155561      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:39.156431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:40.156641      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:41.156982      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:42.157890      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:43.157984      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:44.158080      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:45.158284      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:46.158372      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:47.159425      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:48.160443      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:49.160797      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:50.161486      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:13:50.163345 20 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I1109 13:13:50.163372 20 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 11/09/24 13:13:50.163
  STEP: retrieving all remaining pages @ 11/09/24 13:13:50.167
  I1109 13:13:50.170972 20 chunking.go:221] Retrieved 40/40 results with rv 25459 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU0NTksInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I1109 13:13:50.174932 20 chunking.go:221] Retrieved 40/40 results with rv 25459 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU0NTksInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I1109 13:13:50.180437 20 chunking.go:221] Retrieved 40/40 results with rv 25459 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU0NTksInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I1109 13:13:50.184793 20 chunking.go:221] Retrieved 40/40 results with rv 25459 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU0NTksInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I1109 13:13:50.189820 20 chunking.go:221] Retrieved 40/40 results with rv 25459 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU0NTksInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I1109 13:13:50.195445 20 chunking.go:221] Retrieved 40/40 results with rv 25459 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU0NTksInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I1109 13:13:50.199496 20 chunking.go:221] Retrieved 40/40 results with rv 25459 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU0NTksInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I1109 13:13:50.203222 20 chunking.go:221] Retrieved 40/40 results with rv 25459 and continue 
  I1109 13:13:50.203421 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-6034" for this suite. @ 11/09/24 13:13:50.207
â€¢ [477.809 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 11/09/24 13:13:50.214
  I1109 13:13:50.214431 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename csiinlinevolumes @ 11/09/24 13:13:50.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:13:50.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:13:50.234
  STEP: Creating two CSIDrivers @ 11/09/24 13:13:50.24
  STEP: Getting "inline-driver-b9790dfc-1d86-42d6-8b3a-0120e563dc7c" & "inline-driver-24ee9d4e-3139-473d-8292-1327b2bf7be5" @ 11/09/24 13:13:50.256
  STEP: Patching the CSIDriver "inline-driver-24ee9d4e-3139-473d-8292-1327b2bf7be5" @ 11/09/24 13:13:50.263
  STEP: Updating the CSIDriver "inline-driver-24ee9d4e-3139-473d-8292-1327b2bf7be5" @ 11/09/24 13:13:50.268
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-3028" @ 11/09/24 13:13:50.275
  STEP: Deleting CSIDriver "inline-driver-b9790dfc-1d86-42d6-8b3a-0120e563dc7c" @ 11/09/24 13:13:50.277
  STEP: Confirm deletion of CSIDriver "inline-driver-b9790dfc-1d86-42d6-8b3a-0120e563dc7c" @ 11/09/24 13:13:50.286
  STEP: Deleting CSIDriver "inline-driver-24ee9d4e-3139-473d-8292-1327b2bf7be5" via DeleteCollection @ 11/09/24 13:13:50.289
  STEP: Confirm deletion of CSIDriver "inline-driver-24ee9d4e-3139-473d-8292-1327b2bf7be5" @ 11/09/24 13:13:50.296
  I1109 13:13:50.299757 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-3028" for this suite. @ 11/09/24 13:13:50.303
â€¢ [0.095 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 11/09/24 13:13:50.309
  I1109 13:13:50.309375 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename var-expansion @ 11/09/24 13:13:50.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:13:50.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:13:50.327
  STEP: creating the pod @ 11/09/24 13:13:50.33
  STEP: waiting for pod running @ 11/09/24 13:13:50.338
  E1109 13:13:51.161583      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:52.161744      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 11/09/24 13:13:52.347
  I1109 13:13:52.351868 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-4093 PodName:var-expansion-e6b2cc4d-66c2-4637-9b96-f738f2590c13 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1109 13:13:52.351891 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  I1109 13:13:52.352372 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1109 13:13:52.352417 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-4093/pods/var-expansion-e6b2cc4d-66c2-4637-9b96-f738f2590c13/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 11/09/24 13:13:52.393
  I1109 13:13:52.396824 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-4093 PodName:var-expansion-e6b2cc4d-66c2-4637-9b96-f738f2590c13 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1109 13:13:52.396847 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  I1109 13:13:52.397285 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1109 13:13:52.397335 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-4093/pods/var-expansion-e6b2cc4d-66c2-4637-9b96-f738f2590c13/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 11/09/24 13:13:52.434
  I1109 13:13:52.946811 20 pod_client.go:173] Successfully updated pod "var-expansion-e6b2cc4d-66c2-4637-9b96-f738f2590c13"
  STEP: waiting for annotated pod running @ 11/09/24 13:13:52.946
  STEP: deleting the pod gracefully @ 11/09/24 13:13:52.951
  I1109 13:13:52.951777 20 delete.go:62] Deleting pod "var-expansion-e6b2cc4d-66c2-4637-9b96-f738f2590c13" in namespace "var-expansion-4093"
  I1109 13:13:52.959487 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-e6b2cc4d-66c2-4637-9b96-f738f2590c13" to be fully deleted
  E1109 13:13:53.161825      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:54.162068      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:55.162192      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:56.162316      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:57.162436      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:58.162656      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:13:59.163308      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:00.163548      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:01.164567      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:02.164822      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:03.165145      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:04.165390      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:05.165724      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:06.165939      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:07.166381      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:08.166497      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:09.166600      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:10.166793      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:11.167725      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:12.167823      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:13.168745      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:14.168846      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:15.169694      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:16.169887      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:17.170129      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:18.170195      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:19.170854      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:20.171074      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:21.171329      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:22.171555      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:23.172554      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:24.172772      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:14:25.038249 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4093" for this suite. @ 11/09/24 13:14:25.042
â€¢ [34.740 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 11/09/24 13:14:25.049
  I1109 13:14:25.049810 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename webhook @ 11/09/24 13:14:25.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:14:25.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:14:25.069
  STEP: Setting up server cert @ 11/09/24 13:14:25.093
  E1109 13:14:25.173015      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/09/24 13:14:25.471
  STEP: Deploying the webhook pod @ 11/09/24 13:14:25.479
  STEP: Wait for the deployment to be ready @ 11/09/24 13:14:25.491
  I1109 13:14:25.497256 20 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1109 13:14:26.174007      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:27.174273      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/09/24 13:14:27.508
  STEP: Verifying the service has paired with the endpoint @ 11/09/24 13:14:27.518
  E1109 13:14:28.174410      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:14:28.518816 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 11/09/24 13:14:28.526
  STEP: verifying the mutating webhook match conditions @ 11/09/24 13:14:28.534
  STEP: updating the mutating webhook match conditions @ 11/09/24 13:14:28.537
  STEP: verifying the mutating webhook match conditions @ 11/09/24 13:14:28.544
  I1109 13:14:28.589000 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8855" for this suite. @ 11/09/24 13:14:28.592
  STEP: Destroying namespace "webhook-markers-4880" for this suite. @ 11/09/24 13:14:28.6
â€¢ [3.558 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 11/09/24 13:14:28.608
  I1109 13:14:28.608174 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename emptydir @ 11/09/24 13:14:28.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:14:28.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:14:28.625
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 11/09/24 13:14:28.628
  E1109 13:14:29.174557      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:30.174775      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:31.174953      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:32.175046      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:14:32.648
  I1109 13:14:32.652343 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-5eaa36f5-ff5c-4e6d-aa04-7ee9670349e8 container test-container: <nil>
  STEP: delete the pod @ 11/09/24 13:14:32.669
  I1109 13:14:32.684158 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3047" for this suite. @ 11/09/24 13:14:32.69
â€¢ [4.089 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 11/09/24 13:14:32.697
  I1109 13:14:32.697452 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename gc @ 11/09/24 13:14:32.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:14:32.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:14:32.712
  STEP: create the rc @ 11/09/24 13:14:32.714
  W1109 13:14:32.719064      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1109 13:14:33.177499      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:34.178452      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:35.178542      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:36.179451      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:37.179525      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc @ 11/09/24 13:14:37.723
  STEP: wait for all pods to be garbage collected @ 11/09/24 13:14:37.728
  E1109 13:14:38.180244      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:39.180379      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:40.180586      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:41.180688      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:42.181500      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 11/09/24 13:14:42.737
  W1109 13:14:42.742575      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1109 13:14:42.742617 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1109 13:14:42.742758 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8633" for this suite. @ 11/09/24 13:14:42.746
â€¢ [10.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:406
  STEP: Creating a kubernetes client @ 11/09/24 13:14:42.755
  I1109 13:14:42.755370 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename validating-admission-policy @ 11/09/24 13:14:42.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:14:42.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:14:42.77
  STEP: getting /apis @ 11/09/24 13:14:42.778
  STEP: getting /apis/admissionregistration.k8s.io @ 11/09/24 13:14:42.78
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 11/09/24 13:14:42.781
  STEP: creating @ 11/09/24 13:14:42.783
  STEP: getting @ 11/09/24 13:14:42.806
  STEP: listing @ 11/09/24 13:14:42.812
  STEP: watching @ 11/09/24 13:14:42.816
  I1109 13:14:42.816793 20 validatingadmissionpolicy.go:523] starting watch
  STEP: patching @ 11/09/24 13:14:42.818
  STEP: updating @ 11/09/24 13:14:42.832
  I1109 13:14:42.862787 20 validatingadmissionpolicy.go:552] waiting for watch events with expected annotations
  STEP: getting /status @ 11/09/24 13:14:42.862
  STEP: patching /status @ 11/09/24 13:14:42.866
  STEP: updating /status @ 11/09/24 13:14:42.874
  STEP: deleting @ 11/09/24 13:14:42.905
  STEP: deleting a collection @ 11/09/24 13:14:42.917
  I1109 13:14:42.935656 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-6328" for this suite. @ 11/09/24 13:14:42.939
â€¢ [0.190 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:398
  STEP: Creating a kubernetes client @ 11/09/24 13:14:42.945
  I1109 13:14:42.946007 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename resourcequota @ 11/09/24 13:14:42.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:14:42.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:14:42.964
  STEP: Counting existing ResourceQuota @ 11/09/24 13:14:42.967
  E1109 13:14:43.182447      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:44.183050      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:45.183443      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:46.184266      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:47.184827      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 11/09/24 13:14:47.971
  STEP: Ensuring resource quota status is calculated @ 11/09/24 13:14:47.976
  E1109 13:14:48.184881      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:49.184967      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 11/09/24 13:14:49.981
  STEP: Ensuring resource quota status captures replication controller creation @ 11/09/24 13:14:49.993
  E1109 13:14:50.185535      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:51.185645      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 11/09/24 13:14:51.997
  STEP: Ensuring resource quota status released usage @ 11/09/24 13:14:52.004
  E1109 13:14:52.185699      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:53.186536      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:14:54.010928 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-15" for this suite. @ 11/09/24 13:14:54.014
â€¢ [11.076 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 11/09/24 13:14:54.021
  I1109 13:14:54.021965 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename container-probe @ 11/09/24 13:14:54.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:14:54.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:14:54.039
  STEP: Creating pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088 @ 11/09/24 13:14:54.042
  E1109 13:14:54.187606      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:55.187725      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/09/24 13:14:56.06
  I1109 13:14:56.063621 20 container_probe.go:1749] Initial restart count of pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb is 0
  I1109 13:14:56.066601 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:14:56.187785      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:57.188455      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:14:58.071976 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:14:58.189205      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:14:59.189411      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:15:00.076099 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:15:00.190451      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:15:01.190584      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:15:02.081473 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:15:02.190659      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:15:03.190788      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:15:04.085772 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:15:04.190942      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:15:05.191783      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:15:06.090033 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:15:06.192403      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:15:07.192657      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:15:08.095124 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:15:08.193383      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:15:09.193490      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:15:10.099944 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:15:10.194205      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:15:11.195198      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:15:12.105008 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:15:12.195285      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:15:13.195550      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:15:14.110208 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:15:14.196470      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:15:15.196605      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:15:16.115025 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:15:16.197207      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:15:17.197439      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:15:18.120147 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:15:18.198348      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:15:19.198402      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:15:20.125263 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:15:20.199476      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:15:21.199776      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:15:22.129513 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:15:22.200732      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:15:23.200972      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:15:24.135168 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:15:24.201402      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:15:25.202455      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:15:26.140604 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:15:26.202845      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:15:27.203086      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:15:28.145687 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:15:28.203875      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:15:29.204005      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:15:30.150460 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:15:30.204663      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:15:31.204863      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:15:32.155885 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:15:32.205101      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:15:33.205371      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:15:34.160632 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:15:34.205777      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:15:35.205931      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:15:36.164678 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:15:36.206880      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:15:37.207011      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:15:38.169213 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:15:38.207375      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:15:39.208458      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:15:40.174255 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:15:40.209379      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:15:41.209494      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:15:42.178653 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:15:42.209880      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:15:43.210078      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:15:44.183261 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:15:44.210458      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:15:45.210654      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:15:46.188103 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:15:46.211289      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:15:47.211581      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:15:48.193453 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:15:48.211618      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:15:49.211899      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:15:50.198108 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:15:50.212321      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:15:51.212577      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:15:52.202613 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:15:52.212675      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:15:53.213745      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:15:54.206052 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:15:54.214143      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:15:55.214381      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:15:56.211148 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:15:56.215206      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:15:57.215381      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:15:58.215410      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:15:58.215470 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:15:59.215588      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:16:00.215795      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:16:00.220365 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:16:01.216514      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:16:02.216722      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:16:02.225285 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:16:03.217329      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:16:04.217390      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:16:04.230615 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:16:05.218472      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:16:06.218569      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:16:06.235887 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:16:07.218674      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:16:08.218768      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:16:08.241260 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:16:09.219320      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:16:10.219382      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:16:10.246518 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:16:11.219522      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:16:12.219627      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:16:12.251148 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:16:13.219734      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:16:14.219845      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:16:14.257176 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:16:15.220213      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:16:16.220390      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:16:16.262674 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:16:17.220652      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:16:18.220879      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:16:18.267266 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:16:19.221330      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:16:20.221410      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:16:20.271640 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:16:21.221512      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:16:22.221611      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:16:22.276736 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:16:23.222453      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:16:24.222579      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:16:24.282327 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:16:25.222686      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:16:26.223008      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:16:26.287928 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:16:27.223149      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:16:28.223393      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:16:28.293555 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:16:29.223541      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:16:30.223786      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:16:30.297905 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:16:31.223930      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:16:32.224053      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:16:32.303002 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:16:33.224989      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:16:34.225122      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:16:34.308115 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:16:35.225381      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:16:36.225456      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:16:36.313659 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:16:37.225533      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:16:38.225645      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:16:38.317612 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:16:39.226529      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:16:40.227476      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:16:40.323478 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:16:41.228462      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:16:42.228584      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:16:42.328440 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:16:43.229398      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:16:44.229502      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:16:44.333158 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:16:45.230487      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:16:46.230783      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:16:46.338884 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:16:47.231449      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:16:48.231607      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:16:48.343403 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:16:49.231744      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:16:50.231961      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:16:50.348944 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:16:51.232068      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:16:52.232277      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:16:52.353661 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:16:53.232401      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:16:54.232534      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:16:54.358535 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:16:55.233581      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:16:56.233711      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:16:56.363693 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:16:57.234393      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:16:58.234567      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:16:58.368892 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:16:59.234730      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:17:00.234839      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:17:00.373666 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:17:01.235702      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:17:02.235809      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:17:02.379161 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:17:03.236060      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:17:04.236145      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:17:04.384437 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:17:05.236325      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:17:06.236449      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:17:06.389103 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:17:07.236566      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:17:08.236651      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:17:08.394153 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:17:09.236780      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:17:10.237427      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:17:10.398837 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:17:11.238452      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:17:12.238544      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:17:12.404724 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:17:13.239464      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:17:14.240448      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:17:14.410130 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:17:15.240569      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:17:16.240850      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:17:16.414936 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:17:17.241845      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:17:18.241935      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:17:18.419860 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:17:19.242059      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:17:20.242220      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:17:20.425705 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:17:21.242464      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:17:22.242525      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:17:22.431363 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:17:23.242696      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:17:24.242927      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:17:24.437355 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:17:25.243184      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:17:26.243337      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:17:26.442874 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:17:27.243477      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:17:28.243698      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:17:28.447203 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:17:29.244041      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:17:30.244186      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:17:30.452187 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:17:31.244543      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:17:32.244660      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:17:32.458326 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:17:33.245160      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:17:34.245407      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:17:34.462693 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:17:35.245528      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:17:36.246448      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:17:36.467029 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:17:37.246553      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:17:38.246639      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:17:38.471417 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:17:39.246955      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:17:40.247591      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:17:40.478888 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:17:41.248386      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:17:42.249434      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:17:42.485498 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:17:43.250446      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:17:44.250563      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:17:44.490744 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:17:45.251622      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:17:46.251802      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:17:46.495743 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:17:47.251937      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:17:48.252130      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:17:48.501860 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:17:49.252378      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:17:50.252759      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:17:50.507377 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:17:51.252996      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:17:52.253330      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:17:52.512679 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:17:53.253450      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:17:54.253681      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:17:54.517502 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:17:55.254309      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:17:56.254556      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:17:56.522720 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:17:57.255605      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:17:58.255984      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:17:58.528419 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:17:59.256099      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:18:00.256438      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:18:00.532837 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:18:01.256549      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:18:02.256696      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:18:02.538091 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:18:03.256777      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:18:04.257512      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:18:04.543301 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:18:05.258434      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:18:06.259437      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:18:06.548671 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:18:07.260467      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:18:08.260614      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:18:08.552890 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:18:09.261445      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:18:10.261679      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:18:10.557826 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:18:11.262612      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:18:12.262832      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:18:12.562453 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:18:13.263268      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:18:14.263470      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:18:14.567864 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:18:15.263557      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:18:16.263653      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:18:16.572399 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:18:17.264194      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:18:18.264416      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:18:18.577900 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:18:19.264567      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:18:20.264761      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:18:20.582480 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:18:21.265460      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:18:22.265843      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:18:22.588253 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:18:23.265946      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:18:24.266069      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:18:24.594497 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:18:25.266149      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:18:26.267083      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:18:26.600093 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:18:27.267355      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:18:28.267461      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:18:28.605665 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:18:29.268412      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:18:30.269420      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:18:30.610645 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:18:31.269478      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:18:32.270435      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:18:32.615655 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:18:33.271429      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:18:34.271565      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:18:34.620689 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:18:35.272418      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:18:36.272676      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:18:36.625860 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:18:37.273737      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:18:38.273936      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:18:38.631568 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:18:39.274082      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:18:40.274338      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:18:40.636789 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:18:41.274560      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:18:42.274787      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:18:42.642336 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:18:43.274937      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:18:44.275141      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:18:44.647526 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:18:45.275257      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:18:46.275450      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:18:46.652807 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:18:47.276428      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:18:48.276924      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:18:48.658414 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:18:49.277018      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:18:50.277257      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:18:50.663418 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:18:51.278180      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:18:52.278372      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:18:52.667941 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:18:53.278844      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:18:54.279757      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:18:54.671628 20 container_probe.go:1759] Get pod busybox-8b5e7a3a-0453-4b6f-ac1a-b612603144eb in namespace container-probe-6088
  E1109 13:18:55.280357      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:18:56.280626      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 11/09/24 13:18:56.672
  I1109 13:18:56.688536 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6088" for this suite. @ 11/09/24 13:18:56.692
â€¢ [242.678 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 11/09/24 13:18:56.7
  I1109 13:18:56.700397 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename deployment @ 11/09/24 13:18:56.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:18:56.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:18:56.718
  I1109 13:18:56.720363 20 deployment.go:792] Creating deployment "test-recreate-deployment"
  I1109 13:18:56.724806 20 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I1109 13:18:56.734339 20 deployment.go:222] deployment "test-recreate-deployment" doesn't have the required revision set
  E1109 13:18:57.280785      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:18:58.281026      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:18:58.743359 20 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I1109 13:18:58.746675 20 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I1109 13:18:58.758294 20 deployment.go:313] Updating deployment test-recreate-deployment
  I1109 13:18:58.758337 20 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I1109 13:18:58.833477 20 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2951",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "79cb79ef-60ff-4340-86af-65f607606138",
      ResourceVersion: (string) (len=5) "26800",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866755136,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755136,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-88d47c55d\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1109 13:18:58.837452 20 deployment.go:39] New ReplicaSet "test-recreate-deployment-88d47c55d" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2951",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b18fb308-87f0-48eb-9167-33dae0504ef3",
      ResourceVersion: (string) (len=5) "26798",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866755138,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "79cb79ef-60ff-4340-86af-65f607606138",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 39 63 62 37 39  65 66 2d 36 30 66 66 2d  |\"79cb79ef-60ff-|
              00000120  34 33 34 30 2d 38 36 61  66 2d 36 35 66 36 30 37  |4340-86af-65f607|
              00000130  36 30 36 31 33 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |606138\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1109 13:18:58.837975 20 deployment.go:44] All old ReplicaSets of Deployment "test-recreate-deployment":
  I1109 13:18:58.838268 20 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-7549bcf47c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2951",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "453aafb0-a778-4caa-86be-fae4e053286d",
      ResourceVersion: (string) (len=5) "26788",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866755136,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "79cb79ef-60ff-4340-86af-65f607606138",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 39 63 62 37 39  65 66 2d 36 30 66 66 2d  |\"79cb79ef-60ff-|
              00000120  34 33 34 30 2d 38 36 61  66 2d 36 35 66 36 30 37  |4340-86af-65f607|
              00000130  36 30 36 31 33 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |606138\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1109 13:18:58.843306 20 deployment.go:67] Pod "test-recreate-deployment-88d47c55d-z82j5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-88d47c55d-z82j5",
      GenerateName: (string) (len=35) "test-recreate-deployment-88d47c55d-",
      Namespace: (string) (len=15) "deployment-2951",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f79824aa-e30b-4ed4-94f7-461402eba6d1",
      ResourceVersion: (string) (len=5) "26801",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866755138,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
          UID: (types.UID) (len=36) "b18fb308-87f0-48eb-9167-33dae0504ef3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 31  38 66 62 33 30 38 2d 38  |d\":\"b18fb308-8|
              00000090  37 66 30 2d 34 38 65 62  2d 39 31 36 37 2d 33 33  |7f0-48eb-9167-33|
              000000a0  64 61 65 30 35 30 34 65  66 33 5c 22 7d 22 3a 7b  |dae0504ef3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mjgjp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mjgjp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-65-76",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.65.76",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.65.76"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866755138,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mjgjp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1109 13:18:58.844378 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2951" for this suite. @ 11/09/24 13:18:58.847
â€¢ [2.155 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 11/09/24 13:18:58.855
  I1109 13:18:58.855509 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename endpointslicemirroring @ 11/09/24 13:18:58.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:18:58.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:18:58.874
  STEP: mirroring a new custom Endpoint @ 11/09/24 13:18:58.887
  I1109 13:18:58.896541 20 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  E1109 13:18:59.281303      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:19:00.281415      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 11/09/24 13:19:00.902
  I1109 13:19:00.910398 20 endpointslicemirroring.go:171] Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  E1109 13:19:01.282042      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:19:02.282192      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: mirroring deletion of a custom Endpoint @ 11/09/24 13:19:02.915
  I1109 13:19:02.924996 20 endpointslicemirroring.go:194] Waiting for 0 EndpointSlices to exist, got 1
  E1109 13:19:03.282479      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:19:04.282665      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:19:04.930389 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-7597" for this suite. @ 11/09/24 13:19:04.936
â€¢ [6.089 seconds]
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 11/09/24 13:19:04.944
  I1109 13:19:04.944434 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename var-expansion @ 11/09/24 13:19:04.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:19:04.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:19:04.968
  E1109 13:19:05.283117      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:19:06.284130      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:19:06.990355 20 delete.go:62] Deleting pod "var-expansion-2058bc7b-7db5-485d-b0de-e093842389f8" in namespace "var-expansion-2267"
  I1109 13:19:06.998729 20 delete.go:70] Wait up to 5m0s for pod "var-expansion-2058bc7b-7db5-485d-b0de-e093842389f8" to be fully deleted
  E1109 13:19:07.284303      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:19:08.284474      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:19:09.006288 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2267" for this suite. @ 11/09/24 13:19:09.009
â€¢ [4.073 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 11/09/24 13:19:09.018
  I1109 13:19:09.018042 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename pod-network-test @ 11/09/24 13:19:09.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:19:09.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:19:09.036
  STEP: Performing setup for networking test in namespace pod-network-test-6350 @ 11/09/24 13:19:09.038
  STEP: creating a selector @ 11/09/24 13:19:09.038
  STEP: Creating the service pods in kubernetes @ 11/09/24 13:19:09.038
  I1109 13:19:09.038895 20 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1109 13:19:09.285483      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:19:10.286449      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:19:11.287453      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:19:12.287511      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:19:13.287636      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:19:14.287739      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:19:15.288456      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:19:16.289461      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:19:17.289857      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:19:18.290094      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:19:19.290262      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:19:20.290478      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 11/09/24 13:19:21.117
  E1109 13:19:21.291259      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:19:22.291507      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:19:23.135140 20 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1109 13:19:23.135174 20 networking.go:42] Breadth first check of 192.168.122.14 on host 172.31.26.237...
  I1109 13:19:23.138637 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.35.71:9080/dial?request=hostname&protocol=http&host=192.168.122.14&port=8083&tries=1'] Namespace:pod-network-test-6350 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1109 13:19:23.138663 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  I1109 13:19:23.139107 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1109 13:19:23.139149 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6350/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.35.71%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.122.14%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1109 13:19:23.186991 20 utils.go:356] Waiting for responses: map[]
  I1109 13:19:23.187028 20 utils.go:360] reached 192.168.122.14 after 0/1 tries
  I1109 13:19:23.187038 20 networking.go:42] Breadth first check of 192.168.35.75 on host 172.31.65.76...
  I1109 13:19:23.191480 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.35.71:9080/dial?request=hostname&protocol=http&host=192.168.35.75&port=8083&tries=1'] Namespace:pod-network-test-6350 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1109 13:19:23.191502 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  I1109 13:19:23.191969 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1109 13:19:23.192012 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6350/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.35.71%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.35.75%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1109 13:19:23.227540 20 utils.go:356] Waiting for responses: map[]
  I1109 13:19:23.227584 20 utils.go:360] reached 192.168.35.75 after 0/1 tries
  I1109 13:19:23.227597 20 networking.go:42] Breadth first check of 192.168.187.20 on host 172.31.94.169...
  I1109 13:19:23.231339 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.35.71:9080/dial?request=hostname&protocol=http&host=192.168.187.20&port=8083&tries=1'] Namespace:pod-network-test-6350 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1109 13:19:23.231366 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  I1109 13:19:23.231802 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1109 13:19:23.231864 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6350/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.35.71%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.187.20%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1109 13:19:23.270201 20 utils.go:356] Waiting for responses: map[]
  I1109 13:19:23.270260 20 utils.go:360] reached 192.168.187.20 after 0/1 tries
  I1109 13:19:23.270270 20 networking.go:53] Going to retry 0 out of 3 pods....
  I1109 13:19:23.270403 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6350" for this suite. @ 11/09/24 13:19:23.274
â€¢ [14.264 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 11/09/24 13:19:23.281
  I1109 13:19:23.281887 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename secrets @ 11/09/24 13:19:23.282
  E1109 13:19:23.291506      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:19:23.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:19:23.301
  STEP: Creating secret with name secret-test-22b7b59a-cedc-4ed1-9ee9-4ebf2dfcc6b2 @ 11/09/24 13:19:23.304
  STEP: Creating a pod to test consume secrets @ 11/09/24 13:19:23.309
  E1109 13:19:24.292389      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:19:25.293455      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:19:25.328
  I1109 13:19:25.331560 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-secrets-b8e18b26-95ef-40d1-b7e0-3b0741d92b9f container secret-volume-test: <nil>
  STEP: delete the pod @ 11/09/24 13:19:25.342
  I1109 13:19:25.357757 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3129" for this suite. @ 11/09/24 13:19:25.361
â€¢ [2.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:79
  STEP: Creating a kubernetes client @ 11/09/24 13:19:25.368
  I1109 13:19:25.368620 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename resourcequota @ 11/09/24 13:19:25.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:19:25.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:19:25.383
  STEP: Counting existing ResourceQuota @ 11/09/24 13:19:25.385
  E1109 13:19:26.293539      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:19:27.293686      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:19:28.293875      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:19:29.293957      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:19:30.294416      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 11/09/24 13:19:30.389
  STEP: Ensuring resource quota status is calculated @ 11/09/24 13:19:30.393
  E1109 13:19:31.294523      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:19:32.294595      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:19:32.398684 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7195" for this suite. @ 11/09/24 13:19:32.403
â€¢ [7.042 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 11/09/24 13:19:32.41
  I1109 13:19:32.410294 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename emptydir @ 11/09/24 13:19:32.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:19:32.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:19:32.429
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 11/09/24 13:19:32.431
  E1109 13:19:33.295097      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:19:34.295281      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:19:35.295501      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:19:36.295684      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:19:36.455
  I1109 13:19:36.458933 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-54749747-aae0-4aea-b8cf-9502012ea8a6 container test-container: <nil>
  STEP: delete the pod @ 11/09/24 13:19:36.471
  I1109 13:19:36.485609 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6120" for this suite. @ 11/09/24 13:19:36.489
â€¢ [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 11/09/24 13:19:36.496
  I1109 13:19:36.496842 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename sysctl @ 11/09/24 13:19:36.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:19:36.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:19:36.511
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 11/09/24 13:19:36.514
  STEP: Watching for error events or started pod @ 11/09/24 13:19:36.521
  E1109 13:19:37.296187      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:19:38.296443      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 11/09/24 13:19:38.525
  E1109 13:19:39.296616      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:19:40.296698      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 11/09/24 13:19:40.538
  STEP: Getting logs from the pod @ 11/09/24 13:19:40.538
  STEP: Checking that the sysctl is actually updated @ 11/09/24 13:19:40.545
  I1109 13:19:40.545166 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-4414" for this suite. @ 11/09/24 13:19:40.549
â€¢ [4.060 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 11/09/24 13:19:40.556
  I1109 13:19:40.556704 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename gc @ 11/09/24 13:19:40.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:19:40.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:19:40.575
  STEP: create the rc @ 11/09/24 13:19:40.581
  W1109 13:19:40.585296      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1109 13:19:41.296985      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:19:42.298448      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:19:43.297740      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:19:44.308502      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:19:45.311030      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:19:46.311988      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc @ 11/09/24 13:19:46.588
  STEP: wait for the rc to be deleted @ 11/09/24 13:19:46.595
  E1109 13:19:47.312393      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:19:47.607548 20 garbage_collector.go:670] 80 pods remaining
  I1109 13:19:47.607579 20 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I1109 13:19:47.607585 20 garbage_collector.go:678] 
  E1109 13:19:48.313454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:19:48.613064 20 garbage_collector.go:670] 71 pods remaining
  I1109 13:19:48.613102 20 garbage_collector.go:677] 71 pods has nil DeletionTimestamp
  I1109 13:19:48.613109 20 garbage_collector.go:678] 
  E1109 13:19:49.313904      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:19:49.604629 20 garbage_collector.go:670] 60 pods remaining
  I1109 13:19:49.604658 20 garbage_collector.go:677] 60 pods has nil DeletionTimestamp
  I1109 13:19:49.604664 20 garbage_collector.go:678] 
  E1109 13:19:50.314846      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:19:50.612825 20 garbage_collector.go:670] 40 pods remaining
  I1109 13:19:50.612863 20 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I1109 13:19:50.612870 20 garbage_collector.go:678] 
  E1109 13:19:51.316127      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:19:51.603797 20 garbage_collector.go:670] 31 pods remaining
  I1109 13:19:51.603832 20 garbage_collector.go:677] 31 pods has nil DeletionTimestamp
  I1109 13:19:51.603837 20 garbage_collector.go:678] 
  E1109 13:19:52.316940      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:19:52.602709 20 garbage_collector.go:670] 20 pods remaining
  I1109 13:19:52.602733 20 garbage_collector.go:677] 20 pods has nil DeletionTimestamp
  I1109 13:19:52.602739 20 garbage_collector.go:678] 
  E1109 13:19:53.317627      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 11/09/24 13:19:53.608
  W1109 13:19:53.629925      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1109 13:19:53.629970 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1109 13:19:53.630129 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9410" for this suite. @ 11/09/24 13:19:53.64
â€¢ [13.090 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 11/09/24 13:19:53.647
  I1109 13:19:53.647597 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename replication-controller @ 11/09/24 13:19:53.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:19:53.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:19:53.679
  STEP: Given a ReplicationController is created @ 11/09/24 13:19:53.687
  STEP: When the matched label of one of its pods change @ 11/09/24 13:19:53.693
  I1109 13:19:53.698797 20 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  E1109 13:19:54.317602      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:19:55.318376      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:19:56.318481      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:19:57.318574      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:19:58.318643      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:19:58.704578 20 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 11/09/24 13:19:58.714
  E1109 13:19:59.318746      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:19:59.723312 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8592" for this suite. @ 11/09/24 13:19:59.726
â€¢ [6.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 11/09/24 13:19:59.732
  I1109 13:19:59.732574 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/09/24 13:19:59.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:19:59.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:19:59.75
  I1109 13:19:59.755537 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  E1109 13:20:00.319668      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 11/09/24 13:20:00.982
  I1109 13:20:00.982581 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=crd-publish-openapi-2725 --namespace=crd-publish-openapi-2725 create -f -'
  I1109 13:20:01.049683 20 builder.go:146] stderr: ""
  I1109 13:20:01.049731 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5000-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I1109 13:20:01.049790 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=crd-publish-openapi-2725 --namespace=crd-publish-openapi-2725 delete e2e-test-crd-publish-openapi-5000-crds test-foo'
  I1109 13:20:01.112846 20 builder.go:146] stderr: ""
  I1109 13:20:01.112889 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5000-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I1109 13:20:01.112940 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=crd-publish-openapi-2725 --namespace=crd-publish-openapi-2725 apply -f -'
  I1109 13:20:01.170396 20 builder.go:146] stderr: ""
  I1109 13:20:01.170434 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5000-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I1109 13:20:01.170502 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=crd-publish-openapi-2725 --namespace=crd-publish-openapi-2725 delete e2e-test-crd-publish-openapi-5000-crds test-foo'
  I1109 13:20:01.222575 20 builder.go:146] stderr: ""
  I1109 13:20:01.222614 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5000-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 11/09/24 13:20:01.222
  I1109 13:20:01.222867 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=crd-publish-openapi-2725 --namespace=crd-publish-openapi-2725 create -f -'
  I1109 13:20:01.269825 20 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 11/09/24 13:20:01.269
  I1109 13:20:01.269949 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=crd-publish-openapi-2725 --namespace=crd-publish-openapi-2725 create -f -'
  I1109 13:20:01.316268 20 builder.go:135] rc: 1
  I1109 13:20:01.316359 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=crd-publish-openapi-2725 --namespace=crd-publish-openapi-2725 apply -f -'
  E1109 13:20:01.319740      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:20:01.371327 20 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 11/09/24 13:20:01.371
  I1109 13:20:01.371458 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=crd-publish-openapi-2725 --namespace=crd-publish-openapi-2725 create -f -'
  I1109 13:20:01.417567 20 builder.go:135] rc: 1
  I1109 13:20:01.417649 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=crd-publish-openapi-2725 --namespace=crd-publish-openapi-2725 apply -f -'
  I1109 13:20:01.471387 20 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 11/09/24 13:20:01.471
  I1109 13:20:01.471516 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=crd-publish-openapi-2725 explain e2e-test-crd-publish-openapi-5000-crds'
  I1109 13:20:01.515674 20 builder.go:146] stderr: ""
  I1109 13:20:01.515723 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-5000-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 11/09/24 13:20:01.516
  I1109 13:20:01.516123 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=crd-publish-openapi-2725 explain e2e-test-crd-publish-openapi-5000-crds.metadata'
  I1109 13:20:01.562362 20 builder.go:146] stderr: ""
  I1109 13:20:01.562479 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-5000-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I1109 13:20:01.562756 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=crd-publish-openapi-2725 explain e2e-test-crd-publish-openapi-5000-crds.spec'
  I1109 13:20:01.606908 20 builder.go:146] stderr: ""
  I1109 13:20:01.607034 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-5000-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I1109 13:20:01.607224 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=crd-publish-openapi-2725 explain e2e-test-crd-publish-openapi-5000-crds.spec.bars'
  I1109 13:20:01.651523 20 builder.go:146] stderr: ""
  I1109 13:20:01.651578 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-5000-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 11/09/24 13:20:01.651
  I1109 13:20:01.651744 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=crd-publish-openapi-2725 explain e2e-test-crd-publish-openapi-5000-crds.spec.bars2'
  I1109 13:20:01.695798 20 builder.go:135] rc: 1
  E1109 13:20:02.320382      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:20:02.951867 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2725" for this suite. @ 11/09/24 13:20:02.958
â€¢ [3.234 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 11/09/24 13:20:02.966
  I1109 13:20:02.966532 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename pods @ 11/09/24 13:20:02.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:20:02.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:20:02.988
  I1109 13:20:02.990741 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: creating the pod @ 11/09/24 13:20:02.991
  STEP: submitting the pod to kubernetes @ 11/09/24 13:20:02.991
  E1109 13:20:03.320450      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:04.320697      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:20:05.078015 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3823" for this suite. @ 11/09/24 13:20:05.082
â€¢ [2.122 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 11/09/24 13:20:05.089
  I1109 13:20:05.089035 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename emptydir-wrapper @ 11/09/24 13:20:05.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:20:05.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:20:05.112
  E1109 13:20:05.321445      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:06.321717      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 11/09/24 13:20:07.146
  STEP: Cleaning up the configmap @ 11/09/24 13:20:07.153
  STEP: Cleaning up the pod @ 11/09/24 13:20:07.161
  I1109 13:20:07.176583 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-5853" for this suite. @ 11/09/24 13:20:07.181
â€¢ [2.099 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 11/09/24 13:20:07.188
  I1109 13:20:07.188549 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/09/24 13:20:07.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:20:07.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:20:07.211
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 11/09/24 13:20:07.213
  I1109 13:20:07.214170 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  E1109 13:20:07.322345      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:08.335456      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:09.336262      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:10.337004      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:11.337347      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 11/09/24 13:20:12.171
  I1109 13:20:12.171899 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  E1109 13:20:12.337488      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:13.338451      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:20:13.384743 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  E1109 13:20:14.339309      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:15.339771      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:16.339922      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:17.340574      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:18.341055      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:20:18.384348 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8763" for this suite. @ 11/09/24 13:20:18.391
â€¢ [11.213 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 11/09/24 13:20:18.401
  I1109 13:20:18.401288 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename namespaces @ 11/09/24 13:20:18.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:20:18.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:20:18.421
  STEP: Creating namespace "e2e-ns-xmbj7" @ 11/09/24 13:20:18.423
  I1109 13:20:18.441474 20 namespace.go:411] Namespace "e2e-ns-xmbj7-4662" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-xmbj7-4662" @ 11/09/24 13:20:18.441
  I1109 13:20:18.451628 20 namespace.go:434] Namespace "e2e-ns-xmbj7-4662" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-xmbj7-4662" @ 11/09/24 13:20:18.451
  I1109 13:20:18.461520 20 namespace.go:463] Namespace "e2e-ns-xmbj7-4662" has []v1.FinalizerName{"kubernetes"}
  I1109 13:20:18.461633 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4284" for this suite. @ 11/09/24 13:20:18.464
  STEP: Destroying namespace "e2e-ns-xmbj7-4662" for this suite. @ 11/09/24 13:20:18.471
â€¢ [0.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 11/09/24 13:20:18.478
  I1109 13:20:18.478457 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename daemonsets @ 11/09/24 13:20:18.479
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:20:18.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:20:18.499
  STEP: Creating a simple DaemonSet "daemon-set" @ 11/09/24 13:20:18.521
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/09/24 13:20:18.529
  I1109 13:20:18.534611 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-177 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 13:20:18.534650 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-95-130 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 13:20:18.538137 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1109 13:20:18.538158 20 fixtures.go:130] Node ip-172-31-26-237 is running 0 daemon pod, expected 1
  E1109 13:20:19.341661      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:20:19.533765 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-177 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 13:20:19.533814 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-95-130 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 13:20:19.536805 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1109 13:20:19.536827 20 fixtures.go:130] Node ip-172-31-65-76 is running 0 daemon pod, expected 1
  E1109 13:20:20.341722      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:20:20.534950 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-177 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 13:20:20.535001 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-95-130 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 13:20:20.538092 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1109 13:20:20.538112 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 11/09/24 13:20:20.542
  I1109 13:20:20.558304 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-177 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 13:20:20.558354 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-95-130 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 13:20:20.561346 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1109 13:20:20.561367 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 11/09/24 13:20:20.561
  E1109 13:20:21.341812      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting DaemonSet "daemon-set" @ 11/09/24 13:20:21.568
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9338, will wait for the garbage collector to delete the pods @ 11/09/24 13:20:21.568
  I1109 13:20:21.631396 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.327848ms
  I1109 13:20:21.732529 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.129815ms
  E1109 13:20:22.341851      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:23.342464      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:20:23.635923 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1109 13:20:23.635957 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1109 13:20:23.638711 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"29941"},"items":null}

  I1109 13:20:23.642103 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"29941"},"items":null}

  I1109 13:20:23.653529 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9338" for this suite. @ 11/09/24 13:20:23.656
â€¢ [5.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 11/09/24 13:20:23.662
  I1109 13:20:23.662635 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 11/09/24 13:20:23.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:20:23.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:20:23.687
  STEP: creating a target pod @ 11/09/24 13:20:23.689
  E1109 13:20:24.342621      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:25.342724      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 11/09/24 13:20:25.71
  E1109 13:20:26.343467      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:27.343563      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 11/09/24 13:20:27.727
  I1109 13:20:27.727473 20 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-2314 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1109 13:20:27.727490 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  I1109 13:20:27.727956 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1109 13:20:27.727997 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-2314/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I1109 13:20:27.765531 20 exec_util.go:111] Exec stderr: ""
  I1109 13:20:27.775144 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-2314" for this suite. @ 11/09/24 13:20:27.779
â€¢ [4.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1054
  STEP: Creating a kubernetes client @ 11/09/24 13:20:27.788
  I1109 13:20:27.788198 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename job @ 11/09/24 13:20:27.788
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:20:27.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:20:27.808
  STEP: Creating a job @ 11/09/24 13:20:27.811
  STEP: Ensure pods equal to parallelism count is attached to the job @ 11/09/24 13:20:27.817
  E1109 13:20:28.343957      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:29.344058      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: patching /status @ 11/09/24 13:20:29.822
  STEP: updating /status @ 11/09/24 13:20:29.83
  STEP: get /status @ 11/09/24 13:20:29.837
  I1109 13:20:29.841123 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7346" for this suite. @ 11/09/24 13:20:29.845
â€¢ [2.062 seconds]
------------------------------
S
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 11/09/24 13:20:29.85
  I1109 13:20:29.850298 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename containers @ 11/09/24 13:20:29.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:20:29.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:20:29.872
  E1109 13:20:30.344780      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:31.345579      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:20:31.896098 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4652" for this suite. @ 11/09/24 13:20:31.9
â€¢ [2.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:814
  STEP: Creating a kubernetes client @ 11/09/24 13:20:31.907
  I1109 13:20:31.907289 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename sched-preemption @ 11/09/24 13:20:31.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:20:31.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:20:31.93
  I1109 13:20:31.947903 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1109 13:20:32.345653      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:33.346363      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:34.346492      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:35.347202      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:36.347267      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:37.347371      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:38.347922      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:39.348112      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:40.348299      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:41.348405      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:42.348507      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:43.348945      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:44.349430      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:45.350352      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:46.350632      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:47.351337      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:48.351643      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:49.352422      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:50.352803      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:51.352932      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:52.353590      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:53.353875      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:54.354559      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:55.354683      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:56.355758      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:57.355918      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:58.356008      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:20:59.356143      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:00.356264      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:01.357296      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:02.357949      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:03.358045      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:04.358422      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:05.358926      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:06.359946      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:07.360626      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:08.361578      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:09.361864      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:10.362885      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:11.363001      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:12.363274      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:13.363256      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:14.364134      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:15.364326      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:16.364469      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:17.364680      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:18.365675      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:19.366433      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:20.367285      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:21.367323      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:22.367365      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:23.367458      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:24.368437      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:25.369422      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:26.369522      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:27.369715      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:28.370676      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:29.370933      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:30.371431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:31.371669      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:21:31.952850 20 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 11/09/24 13:21:31.957
  I1109 13:21:31.957491 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename sched-preemption-path @ 11/09/24 13:21:31.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:21:31.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:21:31.979
  I1109 13:21:31.995359 20 preemption.go:820] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I1109 13:21:31.998837 20 preemption.go:826] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  I1109 13:21:32.075070 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-3593" for this suite. @ 11/09/24 13:21:32.079
  I1109 13:21:32.085887 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-196" for this suite. @ 11/09/24 13:21:32.089
â€¢ [60.189 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 11/09/24 13:21:32.096
  I1109 13:21:32.096953 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename kubelet-test @ 11/09/24 13:21:32.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:21:32.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:21:32.119
  E1109 13:21:32.372633      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:33.372848      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:21:34.151530 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3913" for this suite. @ 11/09/24 13:21:34.156
â€¢ [2.066 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 11/09/24 13:21:34.163
  I1109 13:21:34.163574 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename custom-resource-definition @ 11/09/24 13:21:34.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:21:34.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:21:34.187
  I1109 13:21:34.189929 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  E1109 13:21:34.373027      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:35.373682      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:36.373990      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:21:37.284650 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3799" for this suite. @ 11/09/24 13:21:37.288
â€¢ [3.131 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 11/09/24 13:21:37.294
  I1109 13:21:37.294279 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename emptydir @ 11/09/24 13:21:37.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:21:37.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:21:37.315
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 11/09/24 13:21:37.317
  E1109 13:21:37.374062      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:38.374295      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:39.375048      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:40.375220      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:21:41.339
  I1109 13:21:41.342872 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-ef19b5ac-bb36-40d6-b5dc-9b97f6e6c9e3 container test-container: <nil>
  STEP: delete the pod @ 11/09/24 13:21:41.349
  I1109 13:21:41.367568 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8084" for this suite. @ 11/09/24 13:21:41.372
  E1109 13:21:41.375968      20 retrywatcher.go:131] "Watch failed" err="context canceled"
â€¢ [4.086 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 11/09/24 13:21:41.38
  I1109 13:21:41.380248 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename aggregateddiscovery @ 11/09/24 13:21:41.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:21:41.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:21:41.403
  I1109 13:21:41.405607 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  E1109 13:21:42.376267      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:43.376404      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:44.376523      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:21:44.462517 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-866" for this suite. @ 11/09/24 13:21:44.467
â€¢ [3.093 seconds]
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 11/09/24 13:21:44.473
  I1109 13:21:44.473548 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename endpointslice @ 11/09/24 13:21:44.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:21:44.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:21:44.545
  I1109 13:21:44.556465 20 endpointslice.go:1045] Endpoints addresses: [172.31.14.177 172.31.95.130] , ports: [6443]
  I1109 13:21:44.556492 20 endpointslice.go:1075] EndpointSlices addresses: [172.31.14.177 172.31.95.130] , ports: [6443]
  I1109 13:21:44.556578 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3721" for this suite. @ 11/09/24 13:21:44.559
â€¢ [0.092 seconds]
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 11/09/24 13:21:44.565
  I1109 13:21:44.565584 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename pods @ 11/09/24 13:21:44.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:21:44.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:21:44.588
  I1109 13:21:44.591539 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: creating the pod @ 11/09/24 13:21:44.592
  STEP: submitting the pod to kubernetes @ 11/09/24 13:21:44.592
  E1109 13:21:45.377437      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:46.378425      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:21:46.622458 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7537" for this suite. @ 11/09/24 13:21:46.627
â€¢ [2.071 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 11/09/24 13:21:46.636
  I1109 13:21:46.636288 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename webhook @ 11/09/24 13:21:46.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:21:46.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:21:46.657
  STEP: Setting up server cert @ 11/09/24 13:21:46.687
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/09/24 13:21:46.902
  STEP: Deploying the webhook pod @ 11/09/24 13:21:46.912
  STEP: Wait for the deployment to be ready @ 11/09/24 13:21:46.926
  I1109 13:21:46.936274 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1109 13:21:47.379458      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:48.379680      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/09/24 13:21:48.949
  STEP: Verifying the service has paired with the endpoint @ 11/09/24 13:21:48.96
  E1109 13:21:49.380394      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:21:49.961093 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 11/09/24 13:21:49.969
  STEP: create a configmap that should be updated by the webhook @ 11/09/24 13:21:49.983
  I1109 13:21:50.043630 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2984" for this suite. @ 11/09/24 13:21:50.05
  STEP: Destroying namespace "webhook-markers-1408" for this suite. @ 11/09/24 13:21:50.057
â€¢ [3.430 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 11/09/24 13:21:50.066
  I1109 13:21:50.066245 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename kubelet-test @ 11/09/24 13:21:50.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:21:50.084
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:21:50.087
  E1109 13:21:50.380833      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:51.381043      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:21:52.122150 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4145" for this suite. @ 11/09/24 13:21:52.126
â€¢ [2.070 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1473
  STEP: Creating a kubernetes client @ 11/09/24 13:21:52.135
  I1109 13:21:52.135919 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename services @ 11/09/24 13:21:52.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:21:52.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:21:52.161
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-9584 @ 11/09/24 13:21:52.163
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 11/09/24 13:21:52.17
  STEP: creating service externalsvc in namespace services-9584 @ 11/09/24 13:21:52.171
  STEP: creating replication controller externalsvc in namespace services-9584 @ 11/09/24 13:21:52.184
  I1109 13:21:52.189827      20 runners.go:193] Created replication controller with name: externalsvc, namespace: services-9584, replica count: 2
  E1109 13:21:52.381116      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:53.381363      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:54.382374      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:21:55.240184      20 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 11/09/24 13:21:55.244
  I1109 13:21:55.258909 20 resource.go:361] Creating new exec pod
  E1109 13:21:55.383271      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:56.383648      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:21:57.272597 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-9584 exec execpodq84vq -- /bin/sh -x -c nslookup clusterip-service.services-9584.svc.cluster.local'
  I1109 13:21:57.362598 20 builder.go:146] stderr: "+ nslookup clusterip-service.services-9584.svc.cluster.local\n"
  I1109 13:21:57.362641 20 builder.go:147] stdout: "Server:\t\t10.152.183.129\nAddress:\t10.152.183.129#53\n\nclusterip-service.services-9584.svc.cluster.local\tcanonical name = externalsvc.services-9584.svc.cluster.local.\nName:\texternalsvc.services-9584.svc.cluster.local\nAddress: 10.152.183.155\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-9584, will wait for the garbage collector to delete the pods @ 11/09/24 13:21:57.362
  E1109 13:21:57.383851      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:21:57.425827 20 resources.go:139] Deleting ReplicationController externalsvc took: 7.744355ms
  I1109 13:21:57.526642 20 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.807491ms
  E1109 13:21:58.384460      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:21:59.384725      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:00.385448      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:22:00.641649 20 service.go:1482] Cleaning up the ClusterIP to ExternalName test service
  I1109 13:22:00.651968 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9584" for this suite. @ 11/09/24 13:22:00.654
â€¢ [8.527 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 11/09/24 13:22:00.662
  I1109 13:22:00.662911 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename emptydir @ 11/09/24 13:22:00.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:22:00.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:22:00.684
  STEP: Creating a pod to test emptydir volume type on node default medium @ 11/09/24 13:22:00.686
  E1109 13:22:01.385624      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:02.385850      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:03.386387      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:04.386474      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:22:04.706
  I1109 13:22:04.710485 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-4f08aa96-64f2-4965-854e-7bf665b474b3 container test-container: <nil>
  STEP: delete the pod @ 11/09/24 13:22:04.72
  I1109 13:22:04.739071 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4196" for this suite. @ 11/09/24 13:22:04.743
â€¢ [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 11/09/24 13:22:04.75
  I1109 13:22:04.750962 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 11/09/24 13:22:04.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:22:04.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:22:04.771
  STEP: create the container to handle the HTTPGet hook request. @ 11/09/24 13:22:04.777
  E1109 13:22:05.386617      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:06.386688      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 11/09/24 13:22:06.877
  E1109 13:22:07.387454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:08.387565      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 11/09/24 13:22:08.897
  STEP: delete the pod with lifecycle hook @ 11/09/24 13:22:08.904
  E1109 13:22:09.388465      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:10.388552      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:22:10.922389 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7880" for this suite. @ 11/09/24 13:22:10.926
â€¢ [6.184 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:335
  STEP: Creating a kubernetes client @ 11/09/24 13:22:10.934
  I1109 13:22:10.934795 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename statefulset @ 11/09/24 13:22:10.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:22:10.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:22:10.954
  STEP: Creating service test in namespace statefulset-6183 @ 11/09/24 13:22:10.957
  STEP: Creating a new StatefulSet @ 11/09/24 13:22:10.963
  I1109 13:22:10.973712 20 wait.go:40] Found 0 stateful pods, waiting for 3
  E1109 13:22:11.389368      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:12.389404      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:13.390461      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:14.390597      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:15.390790      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:16.391171      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:17.391272      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:18.391467      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:19.391627      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:20.391832      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:22:20.976825 20 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1109 13:22:20.976859 20 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1109 13:22:20.976867 20 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 11/09/24 13:22:20.987
  I1109 13:22:20.998456 20 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 11/09/24 13:22:20.998
  E1109 13:22:21.392400      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:22.392628      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:23.392807      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:24.392998      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:25.393449      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:26.393734      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:27.393931      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:28.394199      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:29.394393      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:30.394580      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 11/09/24 13:22:31.007
  STEP: Performing a canary update @ 11/09/24 13:22:31.008
  I1109 13:22:31.018759 20 statefulset.go:2507] Updating stateful set ss2
  I1109 13:22:31.027863 20 wait.go:74] Waiting for Pod statefulset-6183/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1109 13:22:31.395449      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:32.396429      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:33.397253      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:34.397369      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:35.398426      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:36.399432      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:37.399882      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:38.400507      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:39.400753      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:40.400989      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 11/09/24 13:22:41.028
  I1109 13:22:41.068824 20 wait.go:40] Found 2 stateful pods, waiting for 3
  E1109 13:22:41.401185      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:42.401317      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:43.401552      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:44.402477      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:45.402577      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:46.402697      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:47.402895      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:48.403008      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:49.403119      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:50.403333      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:22:51.070336 20 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1109 13:22:51.070374 20 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1109 13:22:51.070381 20 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 11/09/24 13:22:51.076
  I1109 13:22:51.088008 20 statefulset.go:2507] Updating stateful set ss2
  I1109 13:22:51.098327 20 wait.go:74] Waiting for Pod statefulset-6183/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1109 13:22:51.403443      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:52.403719      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:53.403950      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:54.404169      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:55.404462      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:56.404567      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:57.404719      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:58.404865      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:22:59.404967      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:00.405087      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:23:01.106321 20 statefulset.go:2507] Updating stateful set ss2
  I1109 13:23:01.115707 20 wait.go:56] Waiting for StatefulSet statefulset-6183/ss2 to complete update
  I1109 13:23:01.115756 20 wait.go:63] Waiting for Pod statefulset-6183/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1109 13:23:01.406025      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:02.406137      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:03.406293      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:04.406420      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:05.407425      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:06.408454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:07.408531      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:08.409426      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:09.409527      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:10.410425      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:23:11.114453 20 statefulset.go:138] Deleting all statefulset in ns statefulset-6183
  I1109 13:23:11.117908 20 rest.go:150] Scaling statefulset ss2 to 0
  E1109 13:23:11.410603      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:12.410791      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:13.410996      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:14.411094      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:15.411204      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:16.411433      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:17.411535      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:18.411648      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:19.411870      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:20.412106      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:23:21.131870 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1109 13:23:21.135786 20 rest.go:88] Deleting statefulset ss2
  I1109 13:23:21.151102 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6183" for this suite. @ 11/09/24 13:23:21.156
â€¢ [70.228 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 11/09/24 13:23:21.163
  I1109 13:23:21.163131 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename containers @ 11/09/24 13:23:21.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:23:21.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:23:21.183
  STEP: Creating a pod to test override command @ 11/09/24 13:23:21.185
  E1109 13:23:21.412994      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:22.413132      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:23:23.204
  I1109 13:23:23.208406 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod client-containers-6839ab4d-48eb-47d9-81e3-8c144756d3a4 container agnhost-container: <nil>
  STEP: delete the pod @ 11/09/24 13:23:23.215
  I1109 13:23:23.228717 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-491" for this suite. @ 11/09/24 13:23:23.233
â€¢ [2.077 seconds]
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:127
  STEP: Creating a kubernetes client @ 11/09/24 13:23:23.239
  I1109 13:23:23.239809 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename sched-preemption @ 11/09/24 13:23:23.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:23:23.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:23:23.265
  I1109 13:23:23.281919 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1109 13:23:23.413252      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:24.414066      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:25.414860      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:26.415251      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:27.416067      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:28.416149      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:29.416930      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:30.417116      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:31.417217      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:32.417375      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:33.418085      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:34.418160      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:35.419193      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:36.419376      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:37.420350      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:38.420452      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:39.421093      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:40.421187      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:41.421459      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:42.421606      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:43.422606      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:44.422721      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:45.423729      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:46.423982      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:47.424389      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:48.424620      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:49.424682      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:50.425727      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:51.426787      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:52.427593      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:53.428111      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:54.428438      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:55.428862      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:56.429205      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:57.429416      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:58.430435      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:23:59.431354      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:00.431520      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:01.432467      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:02.432678      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:03.433713      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:04.433832      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:05.433927      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:06.434092      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:07.434740      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:08.435006      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:09.435810      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:10.435943      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:11.435991      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:12.436209      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:13.436317      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:14.436558      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:15.436857      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:16.437137      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:17.437990      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:18.438086      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:19.439067      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:20.439246      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:21.439282      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:22.439372      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:24:23.287318 20 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 11/09/24 13:24:23.291
  I1109 13:24:23.315489 20 preemption.go:175] Created pod: pod0-0-sched-preemption-low-priority
  I1109 13:24:23.322334 20 preemption.go:175] Created pod: pod0-1-sched-preemption-medium-priority
  I1109 13:24:23.339521 20 preemption.go:175] Created pod: pod1-0-sched-preemption-medium-priority
  I1109 13:24:23.349391 20 preemption.go:175] Created pod: pod1-1-sched-preemption-medium-priority
  I1109 13:24:23.363694 20 preemption.go:175] Created pod: pod2-0-sched-preemption-medium-priority
  I1109 13:24:23.374743 20 preemption.go:175] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 11/09/24 13:24:23.374
  E1109 13:24:23.440286      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:24.440442      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 11/09/24 13:24:25.405
  E1109 13:24:25.441282      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:26.441378      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:27.441715      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:28.441851      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:29.442205      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:24:29.485293 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5533" for this suite. @ 11/09/24 13:24:29.49
â€¢ [66.257 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 11/09/24 13:24:29.496
  I1109 13:24:29.496496 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename watch @ 11/09/24 13:24:29.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:24:29.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:24:29.518
  STEP: creating a new configmap @ 11/09/24 13:24:29.52
  STEP: modifying the configmap once @ 11/09/24 13:24:29.525
  STEP: modifying the configmap a second time @ 11/09/24 13:24:29.533
  STEP: deleting the configmap @ 11/09/24 13:24:29.54
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 11/09/24 13:24:29.547
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 11/09/24 13:24:29.548
  I1109 13:24:29.548576 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-2101  db0cf260-cca2-4ee9-a2d4-d3d05bf5514a 31635 0 2024-11-09 13:24:29 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-11-09 13:24:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1109 13:24:29.548717 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-2101  db0cf260-cca2-4ee9-a2d4-d3d05bf5514a 31636 0 2024-11-09 13:24:29 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-11-09 13:24:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1109 13:24:29.548819 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2101" for this suite. @ 11/09/24 13:24:29.551
â€¢ [0.061 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 11/09/24 13:24:29.558
  I1109 13:24:29.558188 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 11/09/24 13:24:29.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:24:29.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:24:29.576
  STEP: Setting up the test @ 11/09/24 13:24:29.579
  STEP: Creating hostNetwork=false pod @ 11/09/24 13:24:29.579
  E1109 13:24:30.442656      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:31.443415      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 11/09/24 13:24:31.607
  E1109 13:24:32.444464      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:33.444571      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Running the test @ 11/09/24 13:24:33.628
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 11/09/24 13:24:33.628
  I1109 13:24:33.628639 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6268 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1109 13:24:33.628659 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  I1109 13:24:33.629098 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1109 13:24:33.629138 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6268/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1109 13:24:33.672361 20 exec_util.go:111] Exec stderr: ""
  I1109 13:24:33.672426 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6268 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1109 13:24:33.672444 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  I1109 13:24:33.672894 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1109 13:24:33.672943 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6268/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1109 13:24:33.705061 20 exec_util.go:111] Exec stderr: ""
  I1109 13:24:33.705115 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6268 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1109 13:24:33.705124 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  I1109 13:24:33.705669 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1109 13:24:33.705717 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6268/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1109 13:24:33.739897 20 exec_util.go:111] Exec stderr: ""
  I1109 13:24:33.739955 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6268 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1109 13:24:33.739965 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  I1109 13:24:33.740504 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1109 13:24:33.740554 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6268/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1109 13:24:33.771933 20 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 11/09/24 13:24:33.771
  I1109 13:24:33.772030 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6268 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1109 13:24:33.772039 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  I1109 13:24:33.772533 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1109 13:24:33.772600 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6268/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I1109 13:24:33.805115 20 exec_util.go:111] Exec stderr: ""
  I1109 13:24:33.805171 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6268 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1109 13:24:33.805181 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  I1109 13:24:33.805746 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1109 13:24:33.805800 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6268/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I1109 13:24:33.843807 20 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 11/09/24 13:24:33.843
  I1109 13:24:33.843898 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6268 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1109 13:24:33.843907 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  I1109 13:24:33.844388 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1109 13:24:33.844443 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6268/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1109 13:24:33.875909 20 exec_util.go:111] Exec stderr: ""
  I1109 13:24:33.875969 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6268 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1109 13:24:33.875979 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  I1109 13:24:33.876490 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1109 13:24:33.876538 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6268/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1109 13:24:33.913085 20 exec_util.go:111] Exec stderr: ""
  I1109 13:24:33.913144 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6268 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1109 13:24:33.913155 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  I1109 13:24:33.913687 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1109 13:24:33.913742 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6268/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1109 13:24:33.946037 20 exec_util.go:111] Exec stderr: ""
  I1109 13:24:33.946094 20 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6268 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1109 13:24:33.946105 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  I1109 13:24:33.946577 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1109 13:24:33.946627 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6268/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1109 13:24:33.978862 20 exec_util.go:111] Exec stderr: ""
  I1109 13:24:33.979007 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-6268" for this suite. @ 11/09/24 13:24:33.985
â€¢ [4.433 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 11/09/24 13:24:33.991
  I1109 13:24:33.991687 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename deployment @ 11/09/24 13:24:33.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:24:34.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:24:34.011
  I1109 13:24:34.014943 20 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I1109 13:24:34.025032 20 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E1109 13:24:34.445493      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:35.445597      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:36.445723      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:37.445828      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:38.446634      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:24:39.028415 20 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/09/24 13:24:39.028
  I1109 13:24:39.028495 20 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I1109 13:24:39.034831 20 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I1109 13:24:39.042788 20 deployment.go:222] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E1109 13:24:39.447339      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:40.447605      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:24:41.050906 20 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I1109 13:24:41.054134 20 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I1109 13:24:41.065656 20 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4073",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9054bed8-cc59-4cbe-b08f-1e0e65368685",
      ResourceVersion: (string) (len=5) "31864",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866755479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-56bb5bb765\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1109 13:24:41.071566 20 deployment.go:39] New ReplicaSet "test-rolling-update-deployment-56bb5bb765" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4073",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c0b18036-ea6c-4803-ad03-fbd1dcbd1fcf",
      ResourceVersion: (string) (len=5) "31853",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866755479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "9054bed8-cc59-4cbe-b08f-1e0e65368685",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 30 35 34 62 65  64 38 2d 63 63 35 39 2d  |\"9054bed8-cc59-|
              00000120  34 63 62 65 2d 62 30 38  66 2d 31 65 30 65 36 35  |4cbe-b08f-1e0e65|
              00000130  33 36 38 36 38 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |368685\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1109 13:24:41.072762 20 deployment.go:44] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I1109 13:24:41.073018 20 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4073",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c9ee1b8b-d832-4d04-a074-91818fd1f485",
      ResourceVersion: (string) (len=5) "31863",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866755474,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "9054bed8-cc59-4cbe-b08f-1e0e65368685",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 39 30 35 34 62 65 64  |"uid\":\"9054bed|
              000000b0  38 2d 63 63 35 39 2d 34  63 62 65 2d 62 30 38 66  |8-cc59-4cbe-b08f|
              000000c0  2d 31 65 30 65 36 35 33  36 38 36 38 35 5c 22 7d  |-1e0e65368685\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1109 13:24:41.078050 20 deployment.go:67] Pod "test-rolling-update-deployment-56bb5bb765-6tpk7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-56bb5bb765-6tpk7",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-56bb5bb765-",
      Namespace: (string) (len=15) "deployment-4073",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ebf4da0d-21cc-4100-b94e-9a2463febb65",
      ResourceVersion: (string) (len=5) "31852",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866755479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
          UID: (types.UID) (len=36) "c0b18036-ea6c-4803-ad03-fbd1dcbd1fcf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 30  62 31 38 30 33 36 2d 65  |d\":\"c0b18036-e|
              00000090  61 36 63 2d 34 38 30 33  2d 61 64 30 33 2d 66 62  |a6c-4803-ad03-fb|
              000000a0  64 31 64 63 62 64 31 66  63 66 5c 22 7d 22 3a 7b  |d1dcbd1fcf\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 38  37 2e 36 5c 22 7d 22 3a  |2.168.187.6\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z4xpm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z4xpm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-94-169",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.94.169",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.94.169"
        }
      },
      PodIP: (string) (len=13) "192.168.187.6",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.187.6"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866755479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63866755479,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://333fb7e2a336da2eae2e33d81360252eed7c17e7914e20cc53ae9ef43c6fcd03",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-z4xpm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1109 13:24:41.079138 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4073" for this suite. @ 11/09/24 13:24:41.083
â€¢ [7.098 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 11/09/24 13:24:41.089
  I1109 13:24:41.089986 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename pods @ 11/09/24 13:24:41.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:24:41.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:24:41.11
  STEP: Create a pod @ 11/09/24 13:24:41.112
  E1109 13:24:41.448003      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:42.448124      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: patching /status @ 11/09/24 13:24:43.133
  I1109 13:24:43.141655 20 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I1109 13:24:43.141814 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1865" for this suite. @ 11/09/24 13:24:43.145
â€¢ [2.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 11/09/24 13:24:43.153
  I1109 13:24:43.153410 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename pods @ 11/09/24 13:24:43.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:24:43.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:24:43.177
  STEP: Create set of pods @ 11/09/24 13:24:43.183
  I1109 13:24:43.214454 20 pods.go:871] created test-pod-1
  I1109 13:24:43.221099 20 pods.go:871] created test-pod-2
  I1109 13:24:43.227256 20 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 11/09/24 13:24:43.227
  E1109 13:24:43.448504      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:44.448585      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 11/09/24 13:24:45.266
  I1109 13:24:45.271267 20 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  E1109 13:24:45.449465      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:24:46.269885 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5876" for this suite. @ 11/09/24 13:24:46.273
â€¢ [3.129 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 11/09/24 13:24:46.282
  I1109 13:24:46.282610 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename projected @ 11/09/24 13:24:46.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:24:46.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:24:46.302
  STEP: Creating secret with name s-test-opt-del-3fea7c7a-2664-4d0e-ab82-7a930986537f @ 11/09/24 13:24:46.308
  STEP: Creating secret with name s-test-opt-upd-3e3700e6-fcae-4407-83b1-05c45659857c @ 11/09/24 13:24:46.312
  STEP: Creating the pod @ 11/09/24 13:24:46.316
  E1109 13:24:46.450119      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:47.450297      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-3fea7c7a-2664-4d0e-ab82-7a930986537f @ 11/09/24 13:24:48.367
  STEP: Updating secret s-test-opt-upd-3e3700e6-fcae-4407-83b1-05c45659857c @ 11/09/24 13:24:48.373
  STEP: Creating secret with name s-test-opt-create-30c39e9d-f577-4496-af82-91a8df860d3f @ 11/09/24 13:24:48.377
  STEP: waiting to observe update in volume @ 11/09/24 13:24:48.382
  E1109 13:24:48.450795      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:49.450894      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:50.453276      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:51.453740      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:52.454278      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:53.454508      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:54.455382      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:55.455610      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:56.456010      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:57.456839      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:58.457077      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:24:59.457175      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:00.458003      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:01.458395      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:02.458844      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:03.459039      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:04.459281      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:05.459798      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:06.460273      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:07.460831      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:08.461046      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:09.462034      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:10.462527      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:11.462660      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:12.462733      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:13.462881      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:14.462969      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:15.463395      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:16.463760      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:17.464396      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:18.464633      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:19.464764      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:20.467390      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:21.465838      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:22.465939      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:23.466406      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:24.466586      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:25.466692      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:26.467440      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:27.467559      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:28.467648      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:29.468454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:30.469605      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:31.469738      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:32.469840      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:33.470024      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:34.470262      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:35.470584      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:36.470864      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:37.471389      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:38.471525      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:39.471769      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:40.472073      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:41.472283      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:42.472524      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:43.472736      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:44.472850      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:45.473028      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:46.473300      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:47.473459      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:48.473629      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:49.473821      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:50.473956      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:51.474144      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:52.474371      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:53.474543      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:54.474636      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:55.474871      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:56.475342      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:57.475536      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:25:58.475648      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:25:58.715377 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3183" for this suite. @ 11/09/24 13:25:58.718
â€¢ [72.444 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 11/09/24 13:25:58.726
  I1109 13:25:58.726941 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename replicaset @ 11/09/24 13:25:58.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:25:58.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:25:58.743
  I1109 13:25:58.746920 20 replica_set.go:191] Creating ReplicaSet my-hostname-basic-c9f858e5-be54-48da-b45f-f2351ee3ce0c
  I1109 13:25:58.754534 20 resource.go:87] Pod name my-hostname-basic-c9f858e5-be54-48da-b45f-f2351ee3ce0c: Found 0 pods out of 1
  E1109 13:25:59.476383      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:26:00.476547      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:26:01.476915      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:26:02.476977      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:26:03.477884      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:26:03.759006 20 resource.go:87] Pod name my-hostname-basic-c9f858e5-be54-48da-b45f-f2351ee3ce0c: Found 1 pods out of 1
  I1109 13:26:03.759046 20 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-c9f858e5-be54-48da-b45f-f2351ee3ce0c" is running
  I1109 13:26:03.762803 20 replica_set.go:220] Pod "my-hostname-basic-c9f858e5-be54-48da-b45f-f2351ee3ce0c-wshj8" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-11-09 13:26:00 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-11-09 13:25:58 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-11-09 13:26:00 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-11-09 13:26:00 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-11-09 13:25:58 +0000 UTC Reason: Message:}])
  I1109 13:26:03.762826 20 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 11/09/24 13:26:03.762
  I1109 13:26:03.772648 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7346" for this suite. @ 11/09/24 13:26:03.776
â€¢ [5.056 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:337
  STEP: Creating a kubernetes client @ 11/09/24 13:26:03.782
  I1109 13:26:03.782745 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename security-context @ 11/09/24 13:26:03.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:26:03.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:26:03.804
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 11/09/24 13:26:03.807
  E1109 13:26:04.478765      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:26:05.479454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:26:06.480295      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:26:07.480388      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:26:07.828
  I1109 13:26:07.833255 20 output.go:196] Trying to get logs from node ip-172-31-26-237 pod security-context-c6a67df0-4e57-4a45-bb4f-5574ad096131 container test-container: <nil>
  STEP: delete the pod @ 11/09/24 13:26:07.855
  I1109 13:26:07.875696 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-6070" for this suite. @ 11/09/24 13:26:07.879
â€¢ [4.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 11/09/24 13:26:07.886
  I1109 13:26:07.886751 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename downward-api @ 11/09/24 13:26:07.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:26:07.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:26:07.907
  STEP: Creating a pod to test downward api env vars @ 11/09/24 13:26:07.91
  E1109 13:26:08.481291      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:26:09.481518      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:26:10.481716      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:26:11.481866      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:26:11.933
  I1109 13:26:11.937115 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod downward-api-224a79fc-40d7-4ce5-a3f1-afac1453692d container dapi-container: <nil>
  STEP: delete the pod @ 11/09/24 13:26:11.945
  I1109 13:26:11.985932 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-908" for this suite. @ 11/09/24 13:26:11.99
â€¢ [4.111 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 11/09/24 13:26:11.997
  I1109 13:26:11.997644 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename projected @ 11/09/24 13:26:11.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:26:12.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:26:12.018
  STEP: Creating projection with secret that has name projected-secret-test-map-53ca86e9-13ed-49c7-ab36-7a68d7032933 @ 11/09/24 13:26:12.02
  STEP: Creating a pod to test consume secrets @ 11/09/24 13:26:12.024
  E1109 13:26:12.481999      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:26:13.482295      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:26:14.483293      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:26:15.483513      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:26:16.049
  I1109 13:26:16.053057 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-projected-secrets-959b6d1e-bda9-4fcf-bd9a-1dcab7b55ccd container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 11/09/24 13:26:16.059
  I1109 13:26:16.079398 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7605" for this suite. @ 11/09/24 13:26:16.083
â€¢ [4.093 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1391
  STEP: Creating a kubernetes client @ 11/09/24 13:26:16.09
  I1109 13:26:16.090394 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename kubectl @ 11/09/24 13:26:16.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:26:16.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:26:16.11
  I1109 13:26:16.113198 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-5349 create -f -'
  I1109 13:26:16.204275 20 builder.go:146] stderr: ""
  I1109 13:26:16.204313 20 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I1109 13:26:16.204362 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-5349 create -f -'
  I1109 13:26:16.297413 20 builder.go:146] stderr: ""
  I1109 13:26:16.297459 20 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 11/09/24 13:26:16.297
  E1109 13:26:16.483645      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:26:17.303837 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1109 13:26:17.303874 20 framework.go:733] Found 1 / 1
  I1109 13:26:17.303888 20 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I1109 13:26:17.307094 20 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1109 13:26:17.307114 20 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1109 13:26:17.307158 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-5349 describe pod agnhost-primary-6ggkf'
  I1109 13:26:17.365977 20 builder.go:146] stderr: ""
  I1109 13:26:17.366048 20 builder.go:147] stdout: "Name:             agnhost-primary-6ggkf\nNamespace:        kubectl-5349\nPriority:         0\nService Account:  default\nNode:             ip-172-31-65-76/172.31.65.76\nStart Time:       Sat, 09 Nov 2024 13:26:16 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.35.87\nIPs:\n  IP:           192.168.35.87\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://6b9170d5cd3eb90a5ff156ce99eac7544cb8d78231a5f4034cc492aedf5ec87c\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.52\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 09 Nov 2024 13:26:16 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-76b7j (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-76b7j:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-5349/agnhost-primary-6ggkf to ip-172-31-65-76\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.52\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I1109 13:26:17.366170 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-5349 describe rc agnhost-primary'
  I1109 13:26:17.421347 20 builder.go:146] stderr: ""
  I1109 13:26:17.421399 20 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-5349\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.52\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-6ggkf\n"
  I1109 13:26:17.421461 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-5349 describe service agnhost-primary'
  I1109 13:26:17.476063 20 builder.go:146] stderr: ""
  I1109 13:26:17.476106 20 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-5349\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.152.183.19\nIPs:                      10.152.183.19\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                192.168.35.87:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I1109 13:26:17.481046 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-5349 describe node ip-172-31-14-177'
  E1109 13:26:17.484373      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:26:17.548195 20 builder.go:146] stderr: ""
  I1109 13:26:17.548313 20 builder.go:147] stdout: "Name:               ip-172-31-14-177\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-control-plane\n                    juju-charm=kubernetes-control-plane\n                    juju.io/cloud=ec2\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-14-177\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 09 Nov 2024 11:57:05 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-14-177\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 09 Nov 2024 13:26:14 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 09 Nov 2024 12:08:51 +0000   Sat, 09 Nov 2024 12:08:51 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sat, 09 Nov 2024 13:23:41 +0000   Sat, 09 Nov 2024 11:57:05 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 09 Nov 2024 13:23:41 +0000   Sat, 09 Nov 2024 11:57:05 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 09 Nov 2024 13:23:41 +0000   Sat, 09 Nov 2024 11:57:05 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 09 Nov 2024 13:23:41 +0000   Sat, 09 Nov 2024 11:58:45 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.31.14.177\n  Hostname:    ip-172-31-14-177\nCapacity:\n  cpu:                2\n  ephemeral-storage:  16069568Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7967644Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  14809713845\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7865244Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 ec297077d9deec957cd7dc2dd2318cba\n  System UUID:                ec297077-d9de-ec95-7cd7-dc2dd2318cba\n  Boot ID:                    4508cf76-06ed-43db-a348-67d68b4ab743\n  Kernel Version:             6.8.0-1018-aws\n  OS Image:                   Ubuntu 22.04.5 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.8\n  Kubelet Version:            v1.31.2\n  Kube-Proxy Version:         v1.31.2\nNon-terminated Pods:          (2 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-node-zqtgh                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         77m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-5b9d25a256a64056-2th6z    0 (0%)        0 (0%)      0 (0%)           0 (0%)         74m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                250m (12%)  0 (0%)\n  memory             0 (0%)      0 (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
  I1109 13:26:17.548452 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-5349 describe namespace kubectl-5349'
  I1109 13:26:17.603410 20 builder.go:146] stderr: ""
  I1109 13:26:17.603450 20 builder.go:147] stdout: "Name:         kubectl-5349\nLabels:       e2e-framework=kubectl\n              e2e-run=98b365e4-63ab-42b6-b105-558bed033cc2\n              kubernetes.io/metadata.name=kubectl-5349\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I1109 13:26:17.603562 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5349" for this suite. @ 11/09/24 13:26:17.606
â€¢ [1.528 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 11/09/24 13:26:17.618
  I1109 13:26:17.618914 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename deployment @ 11/09/24 13:26:17.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:26:17.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:26:17.644
  I1109 13:26:17.663752 20 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  E1109 13:26:18.484581      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:26:19.485061      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:26:20.486616      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:26:21.485430      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:26:22.485534      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:26:22.667166 20 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 11/09/24 13:26:22.667
  I1109 13:26:22.667251 20 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 11/09/24 13:26:22.678
  I1109 13:26:22.687259 20 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3376",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "548e7d51-6880-4187-bb9b-51f14d401fbf",
      ResourceVersion: (string) (len=5) "32460",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866755582,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755582,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1109 13:26:22.693177 20 deployment.go:41] New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  I1109 13:26:22.693204 20 deployment.go:44] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I1109 13:26:22.693465 20 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3376",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1390f09d-4526-4a09-bcc5-c4c47e68ed4d",
      ResourceVersion: (string) (len=5) "32461",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866755577,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "548e7d51-6880-4187-bb9b-51f14d401fbf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755577,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755582,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 35 34 38 65 37 64 35  |"uid\":\"548e7d5|
              00000040  31 2d 36 38 38 30 2d 34  31 38 37 2d 62 62 39 62  |1-6880-4187-bb9b|
              00000050  2d 35 31 66 31 34 64 34  30 31 66 62 66 5c 22 7d  |-51f14d401fbf\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1109 13:26:22.702768 20 deployment.go:67] Pod "test-cleanup-controller-vn6zw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-vn6zw",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-3376",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6b7e81f1-4fbe-4eee-b9c5-1ce46eee7b03",
      ResourceVersion: (string) (len=5) "32439",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866755577,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "1390f09d-4526-4a09-bcc5-c4c47e68ed4d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755577,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  31 33 39 30 66 30 39 64  |uid\":\"1390f09d|
              00000080  2d 34 35 32 36 2d 34 61  30 39 2d 62 63 63 35 2d  |-4526-4a09-bcc5-|
              00000090  63 34 63 34 37 65 36 38  65 64 34 64 5c 22 7d 22  |c4c47e68ed4d\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 33 35  2e 31 30 36 5c 22 7d 22  |2.168.35.106\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fn2rf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fn2rf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-65-76",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755577,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866755577,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.65.76",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.65.76"
        }
      },
      PodIP: (string) (len=14) "192.168.35.106",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.35.106"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866755577,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63866755578,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0d05951ef683c2bf68cb4279d4aef68ddb9ab61972c2deb5c2a60ed3381364e1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-fn2rf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1109 13:26:22.703773 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3376" for this suite. @ 11/09/24 13:26:22.711
â€¢ [5.102 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 11/09/24 13:26:22.72
  I1109 13:26:22.720702 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename secrets @ 11/09/24 13:26:22.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:26:22.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:26:22.749
  STEP: Creating secret with name secret-test-a557bb91-1c75-4456-9f18-1c0a2fbcce61 @ 11/09/24 13:26:22.775
  STEP: Creating a pod to test consume secrets @ 11/09/24 13:26:22.779
  E1109 13:26:23.485803      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:26:24.485886      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:26:25.486474      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:26:26.487433      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:26:26.802
  I1109 13:26:26.807137 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-secrets-7ae94d88-517d-4d1f-b001-3b6ae92ea19a container secret-volume-test: <nil>
  STEP: delete the pod @ 11/09/24 13:26:26.814
  I1109 13:26:26.830587 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1304" for this suite. @ 11/09/24 13:26:26.834
  STEP: Destroying namespace "secret-namespace-2617" for this suite. @ 11/09/24 13:26:26.84
â€¢ [4.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 11/09/24 13:26:26.848
  I1109 13:26:26.848135 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename field-validation @ 11/09/24 13:26:26.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:26:26.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:26:26.868
  I1109 13:26:26.870608 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  E1109 13:26:27.488218      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:26:28.488406      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  W1109 13:26:29.405879      20 warnings.go:70] unknown field "alpha"
  W1109 13:26:29.405905      20 warnings.go:70] unknown field "beta"
  W1109 13:26:29.405909      20 warnings.go:70] unknown field "delta"
  W1109 13:26:29.405912      20 warnings.go:70] unknown field "epsilon"
  W1109 13:26:29.405915      20 warnings.go:70] unknown field "gamma"
  E1109 13:26:29.489353      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:26:29.953303 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1954" for this suite. @ 11/09/24 13:26:29.957
â€¢ [3.118 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 11/09/24 13:26:29.966
  I1109 13:26:29.966110 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename downward-api @ 11/09/24 13:26:29.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:26:29.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:26:29.988
  STEP: Creating a pod to test downward api env vars @ 11/09/24 13:26:29.99
  E1109 13:26:30.490384      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:26:31.490497      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:26:32.490869      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:26:33.490997      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:26:34.014
  I1109 13:26:34.019068 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod downward-api-fbba8964-e3de-4a2a-9f63-e9627c833301 container dapi-container: <nil>
  STEP: delete the pod @ 11/09/24 13:26:34.026
  I1109 13:26:34.046372 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2680" for this suite. @ 11/09/24 13:26:34.049
â€¢ [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 11/09/24 13:26:34.058
  I1109 13:26:34.058486 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename emptydir @ 11/09/24 13:26:34.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:26:34.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:26:34.08
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 11/09/24 13:26:34.082
  E1109 13:26:34.491898      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:26:35.492089      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:26:36.492423      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:26:37.492583      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:26:38.105
  I1109 13:26:38.109839 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-c5431949-8a7f-4510-b6db-99c451cefa9b container test-container: <nil>
  STEP: delete the pod @ 11/09/24 13:26:38.116
  I1109 13:26:38.131979 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5094" for this suite. @ 11/09/24 13:26:38.136
â€¢ [4.086 seconds]
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1513
  STEP: Creating a kubernetes client @ 11/09/24 13:26:38.144
  I1109 13:26:38.144919 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename services @ 11/09/24 13:26:38.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:26:38.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:26:38.217
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-8755 @ 11/09/24 13:26:38.219
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 11/09/24 13:26:38.232
  STEP: creating service externalsvc in namespace services-8755 @ 11/09/24 13:26:38.233
  STEP: creating replication controller externalsvc in namespace services-8755 @ 11/09/24 13:26:38.246
  I1109 13:26:38.254457      20 runners.go:193] Created replication controller with name: externalsvc, namespace: services-8755, replica count: 2
  E1109 13:26:38.492707      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:26:39.493194      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:26:40.493572      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:26:41.305534      20 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 11/09/24 13:26:41.309
  I1109 13:26:41.333627 20 resource.go:361] Creating new exec pod
  E1109 13:26:41.494364      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:26:42.494483      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:26:43.353706 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-8755 exec execpodr5658 -- /bin/sh -x -c nslookup nodeport-service.services-8755.svc.cluster.local'
  I1109 13:26:43.441816 20 builder.go:146] stderr: "+ nslookup nodeport-service.services-8755.svc.cluster.local\n"
  I1109 13:26:43.441858 20 builder.go:147] stdout: "Server:\t\t10.152.183.129\nAddress:\t10.152.183.129#53\n\nnodeport-service.services-8755.svc.cluster.local\tcanonical name = externalsvc.services-8755.svc.cluster.local.\nName:\texternalsvc.services-8755.svc.cluster.local\nAddress: 10.152.183.76\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-8755, will wait for the garbage collector to delete the pods @ 11/09/24 13:26:43.442
  E1109 13:26:43.495521      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:26:43.505499 20 resources.go:139] Deleting ReplicationController externalsvc took: 7.757444ms
  I1109 13:26:43.605949 20 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.445287ms
  E1109 13:26:44.495935      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:26:45.496868      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:26:46.323619 20 service.go:1524] Cleaning up the NodePort to ExternalName test service
  I1109 13:26:46.334586 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8755" for this suite. @ 11/09/24 13:26:46.338
â€¢ [8.202 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 11/09/24 13:26:46.346
  I1109 13:26:46.346589 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename kubelet-test @ 11/09/24 13:26:46.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:26:46.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:26:46.365
  E1109 13:26:46.497460      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:26:47.497532      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:26:48.497626      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:26:49.497749      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:26:50.386365 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5944" for this suite. @ 11/09/24 13:26:50.391
â€¢ [4.053 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 11/09/24 13:26:50.399
  I1109 13:26:50.399504 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename events @ 11/09/24 13:26:50.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:26:50.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:26:50.418
  STEP: Create set of events @ 11/09/24 13:26:50.425
  I1109 13:26:50.432345 20 core_events.go:198] created test-event-1
  I1109 13:26:50.437776 20 core_events.go:198] created test-event-2
  I1109 13:26:50.444362 20 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 11/09/24 13:26:50.444
  STEP: delete collection of events @ 11/09/24 13:26:50.447
  I1109 13:26:50.447463 20 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 11/09/24 13:26:50.469
  I1109 13:26:50.470033 20 core_events.go:230] requesting list of events to confirm quantity
  I1109 13:26:50.474576 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1752" for this suite. @ 11/09/24 13:26:50.479
â€¢ [0.092 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 11/09/24 13:26:50.495
  I1109 13:26:50.496528 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename container-runtime @ 11/09/24 13:26:50.498
  E1109 13:26:50.498556      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:26:50.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:26:50.518
  STEP: create the container @ 11/09/24 13:26:50.521
  W1109 13:26:50.527002      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 11/09/24 13:26:50.527
  E1109 13:26:51.499428      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:26:52.500448      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 11/09/24 13:26:52.543
  STEP: the container should be terminated @ 11/09/24 13:26:52.546
  STEP: the termination message should be set @ 11/09/24 13:26:52.546
  I1109 13:26:52.546771 20 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 11/09/24 13:26:52.546
  I1109 13:26:52.563938 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7824" for this suite. @ 11/09/24 13:26:52.566
â€¢ [2.079 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 11/09/24 13:26:52.574
  I1109 13:26:52.574138 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename limitrange @ 11/09/24 13:26:52.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:26:52.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:26:52.598
  STEP: Creating a LimitRange @ 11/09/24 13:26:52.6
  STEP: Setting up watch @ 11/09/24 13:26:52.6
  STEP: Submitting a LimitRange @ 11/09/24 13:26:52.704
  STEP: Verifying LimitRange creation was observed @ 11/09/24 13:26:52.711
  STEP: Fetching the LimitRange to ensure it has proper values @ 11/09/24 13:26:52.711
  I1109 13:26:52.714953 20 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I1109 13:26:52.714989 20 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 11/09/24 13:26:52.715
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 11/09/24 13:26:52.721
  I1109 13:26:52.725258 20 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I1109 13:26:52.725284 20 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 11/09/24 13:26:52.725
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 11/09/24 13:26:52.732
  I1109 13:26:52.735147 20 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I1109 13:26:52.735174 20 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 11/09/24 13:26:52.735
  STEP: Failing to create a Pod with more than max resources @ 11/09/24 13:26:52.736
  STEP: Updating a LimitRange @ 11/09/24 13:26:52.738
  STEP: Verifying LimitRange updating is effective @ 11/09/24 13:26:52.744
  E1109 13:26:53.501336      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:26:54.501562      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 11/09/24 13:26:54.749
  STEP: Failing to create a Pod with more than max resources @ 11/09/24 13:26:54.758
  STEP: Deleting a LimitRange @ 11/09/24 13:26:54.76
  STEP: Verifying the LimitRange was deleted @ 11/09/24 13:26:54.77
  E1109 13:26:55.501677      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:26:56.501990      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:26:57.502341      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:26:58.502589      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:26:59.502754      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:26:59.774553 20 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 11/09/24 13:26:59.774
  I1109 13:26:59.784152 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-112" for this suite. @ 11/09/24 13:26:59.787
â€¢ [7.221 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 11/09/24 13:26:59.795
  I1109 13:26:59.795598 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename secrets @ 11/09/24 13:26:59.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:26:59.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:26:59.813
  STEP: Creating secret with name secret-test-5be71fdb-1798-4aaf-bb50-4495b3be748b @ 11/09/24 13:26:59.815
  STEP: Creating a pod to test consume secrets @ 11/09/24 13:26:59.82
  E1109 13:27:00.502890      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:27:01.503402      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:27:02.503555      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:27:03.503680      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:27:03.845
  I1109 13:27:03.849785 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-secrets-8dc3417d-2b88-43bf-a3aa-c3b8338f4777 container secret-volume-test: <nil>
  STEP: delete the pod @ 11/09/24 13:27:03.857
  I1109 13:27:03.874788 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8096" for this suite. @ 11/09/24 13:27:03.878
â€¢ [4.090 seconds]
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 11/09/24 13:27:03.889
  I1109 13:27:03.889461 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename pod-network-test @ 11/09/24 13:27:03.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:27:03.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:27:03.912
  STEP: Performing setup for networking test in namespace pod-network-test-4264 @ 11/09/24 13:27:03.914
  STEP: creating a selector @ 11/09/24 13:27:03.914
  STEP: Creating the service pods in kubernetes @ 11/09/24 13:27:03.914
  I1109 13:27:03.914668 20 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1109 13:27:04.504571      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:27:05.504891      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:27:06.505903      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:27:07.506262      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:27:08.506337      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:27:09.506551      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:27:10.506936      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:27:11.507131      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:27:12.507652      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:27:13.508454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:27:14.509438      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:27:15.509567      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 11/09/24 13:27:15.998
  E1109 13:27:16.509749      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:27:17.509946      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:27:18.030036 20 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1109 13:27:18.030069 20 utils.go:496] Going to poll 192.168.122.60 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I1109 13:27:18.033739 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.122.60:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4264 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1109 13:27:18.033767 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  I1109 13:27:18.034242 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1109 13:27:18.034301 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4264/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.122.60%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1109 13:27:18.072931 20 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I1109 13:27:18.072966 20 utils.go:496] Going to poll 192.168.35.102 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I1109 13:27:18.076108 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.35.102:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4264 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1109 13:27:18.076128 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  I1109 13:27:18.076559 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1109 13:27:18.076607 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4264/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.35.102%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1109 13:27:18.116071 20 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I1109 13:27:18.116116 20 utils.go:496] Going to poll 192.168.187.9 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I1109 13:27:18.120789 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.187.9:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4264 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1109 13:27:18.120811 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  I1109 13:27:18.121252 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1109 13:27:18.121305 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4264/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.187.9%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1109 13:27:18.159461 20 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I1109 13:27:18.159592 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4264" for this suite. @ 11/09/24 13:27:18.164
â€¢ [14.283 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 11/09/24 13:27:18.172
  I1109 13:27:18.172739 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename emptydir @ 11/09/24 13:27:18.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:27:18.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:27:18.195
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 11/09/24 13:27:18.197
  E1109 13:27:18.510921      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:27:19.511462      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:27:20.511959      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:27:21.512077      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:27:22.215
  I1109 13:27:22.219180 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-38ceb197-1f3d-4b7b-9395-d05e8d95ed82 container test-container: <nil>
  STEP: delete the pod @ 11/09/24 13:27:22.227
  I1109 13:27:22.245739 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7796" for this suite. @ 11/09/24 13:27:22.249
â€¢ [4.085 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 11/09/24 13:27:22.257
  I1109 13:27:22.257838 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename container-probe @ 11/09/24 13:27:22.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:27:22.278
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:27:22.28
  STEP: Creating pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876 @ 11/09/24 13:27:22.283
  E1109 13:27:22.512735      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:27:23.513543      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/09/24 13:27:24.301
  I1109 13:27:24.304472 20 container_probe.go:1749] Initial restart count of pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 is 0
  I1109 13:27:24.307860 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:27:24.514394      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:27:25.514490      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:27:26.313608 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:27:26.514947      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:27:27.515148      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:27:28.317575 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:27:28.515929      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:27:29.516196      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:27:30.323276 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:27:30.516639      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:27:31.516735      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:27:32.328020 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:27:32.517303      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:27:33.517393      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:27:34.333219 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:27:34.518453      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:27:35.518541      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:27:36.338604 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:27:36.518868      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:27:37.519010      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:27:38.343706 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:27:38.520000      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:27:39.520221      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:27:40.347847 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:27:40.521142      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:27:41.521366      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:27:42.353890 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:27:42.522217      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:27:43.522459      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:27:44.358424 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  I1109 13:27:44.358481 20 container_probe.go:1763] Restart count of pod container-probe-7876/liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 is now 1 (20.053980043s elapsed)
  E1109 13:27:44.522645      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:27:45.522759      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:27:46.363897 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:27:46.523277      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:27:47.523489      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:27:48.368074 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:27:48.524511      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:27:49.524627      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:27:50.371766 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:27:50.524984      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:27:51.525220      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:27:52.377301 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:27:52.525544      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:27:53.525793      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:27:54.382282 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:27:54.526435      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:27:55.527427      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:27:56.387174 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:27:56.528348      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:27:57.528522      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:27:58.391407 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:27:58.528614      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:27:59.529423      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:28:00.397961 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:28:00.530130      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:28:01.530325      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:28:02.402439 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:28:02.530670      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:28:03.530803      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:28:04.408008 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  I1109 13:28:04.408047 20 container_probe.go:1763] Restart count of pod container-probe-7876/liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 is now 2 (40.103546548s elapsed)
  E1109 13:28:04.531321      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:28:05.531373      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:28:06.413097 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:28:06.532352      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:28:07.532564      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:28:08.418808 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:28:08.533023      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:28:09.533255      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:28:10.424372 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:28:10.533757      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:28:11.534126      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:28:12.430417 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:28:12.534624      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:28:13.534722      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:28:14.435469 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:28:14.535689      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:28:15.536533      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:28:16.441470 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:28:16.536596      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:28:17.536708      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:28:18.446371 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:28:18.537418      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:28:19.538423      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:28:20.458883 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:28:20.539175      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:28:21.539421      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:28:22.463254 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:28:22.539476      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:28:23.539729      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:28:24.467679 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  I1109 13:28:24.467718 20 container_probe.go:1763] Restart count of pod container-probe-7876/liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 is now 3 (1m0.163217657s elapsed)
  E1109 13:28:24.539845      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:28:25.540025      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:28:26.472816 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:28:26.540931      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:28:27.541095      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:28:28.476953 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:28:28.542185      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:28:29.542395      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:28:30.482740 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:28:30.542922      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:28:31.543309      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:28:32.488142 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:28:32.543380      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:28:33.543601      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:28:34.493523 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:28:34.543699      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:28:35.543836      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:28:36.497674 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:28:36.544878      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:28:37.545499      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:28:38.503035 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:28:38.546388      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:28:39.547462      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:28:40.507192 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:28:40.548536      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:28:41.549460      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:28:42.512511 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:28:42.549687      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:28:43.549792      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:28:44.516546 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  I1109 13:28:44.516583 20 container_probe.go:1763] Restart count of pod container-probe-7876/liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 is now 4 (1m20.21208227s elapsed)
  E1109 13:28:44.550779      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:28:45.550847      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:28:46.522122 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:28:46.551370      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:28:47.551491      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:28:48.528077 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:28:48.552318      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:28:49.552510      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:28:50.533316 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:28:50.553524      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:28:51.553662      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:28:52.538692 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:28:52.553886      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:28:53.554258      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:28:54.543173 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:28:54.554462      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:28:55.554597      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:28:56.548985 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:28:56.555179      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:28:57.555393      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:28:58.554313 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:28:58.555397      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:28:59.555632      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:29:00.555625      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:29:00.558473 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:29:01.556735      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:29:02.557460      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:29:02.563571 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:29:03.557561      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:29:04.557633      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:29:04.568029 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:29:05.557766      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:29:06.557865      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:29:06.574044 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:29:07.558453      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:29:08.559454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:29:08.579579 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:29:09.560529      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:29:10.561436      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:29:10.584635 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:29:11.561561      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:29:12.562460      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:29:12.590754 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:29:13.562561      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:29:14.562698      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:29:14.596137 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:29:15.562938      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:29:16.563852      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:29:16.602554 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:29:17.564058      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:29:18.564306      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:29:18.608741 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:29:19.564430      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:29:20.564667      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:29:20.613715 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:29:21.564768      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:29:22.564996      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:29:22.619503 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:29:23.565539      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:29:24.565725      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:29:24.623962 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:29:25.566325      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:29:26.566477      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:29:26.630003 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:29:27.567454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:29:28.567560      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:29:28.635878 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:29:29.568451      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:29:30.569461      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:29:30.641009 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:29:31.570462      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:29:32.570803      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:29:32.646353 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:29:33.571289      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:29:34.571661      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:29:34.652096 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:29:35.571801      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:29:36.572206      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:29:36.657421 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:29:37.572425      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:29:38.572459      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:29:38.662947 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:29:39.572953      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:29:40.573182      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:29:40.668526 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:29:41.573853      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:29:42.574462      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:29:42.674295 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:29:43.575268      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:29:44.575500      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:29:44.679178 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:29:45.576111      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:29:46.576561      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:29:46.684876 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:29:47.576763      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:29:48.577310      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:29:48.690492 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:29:49.577409      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:29:50.577634      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:29:50.694815 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:29:51.577693      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:29:52.577787      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:29:52.699959 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:29:53.578452      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:29:54.578558      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:29:54.705502 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  E1109 13:29:55.579391      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:29:56.580461      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:29:56.710656 20 container_probe.go:1759] Get pod liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 in namespace container-probe-7876
  I1109 13:29:56.710696 20 container_probe.go:1763] Restart count of pod container-probe-7876/liveness-3453cea9-4208-4574-95dd-12b6e6eb2bd3 is now 5 (2m32.406195966s elapsed)
  STEP: deleting the pod @ 11/09/24 13:29:56.71
  I1109 13:29:56.725461 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7876" for this suite. @ 11/09/24 13:29:56.729
â€¢ [154.479 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1066
  STEP: Creating a kubernetes client @ 11/09/24 13:29:56.737
  I1109 13:29:56.737046 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename resourcequota @ 11/09/24 13:29:56.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:29:56.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:29:56.756
  STEP: Creating resourceQuota "e2e-rq-status-s2gzg" @ 11/09/24 13:29:56.761
  I1109 13:29:56.768860 20 resource_quota.go:1102] Resource quota "e2e-rq-status-s2gzg" reports spec: hard cpu limit of 500m
  I1109 13:29:56.768886 20 resource_quota.go:1104] Resource quota "e2e-rq-status-s2gzg" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-s2gzg" /status @ 11/09/24 13:29:56.768
  STEP: Confirm /status for "e2e-rq-status-s2gzg" resourceQuota via watch @ 11/09/24 13:29:56.778
  I1109 13:29:56.779381 20 resource_quota.go:1131] observed resourceQuota "e2e-rq-status-s2gzg" in namespace "resourcequota-6972" with hard status: v1.ResourceList(nil)
  I1109 13:29:56.779441 20 resource_quota.go:1134] Found resourceQuota "e2e-rq-status-s2gzg" in namespace "resourcequota-6972" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I1109 13:29:56.779453 20 resource_quota.go:1141] ResourceQuota "e2e-rq-status-s2gzg" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 11/09/24 13:29:56.783
  I1109 13:29:56.788863 20 resource_quota.go:1152] Resource quota "e2e-rq-status-s2gzg" reports spec: hard cpu limit of 1
  I1109 13:29:56.788888 20 resource_quota.go:1153] Resource quota "e2e-rq-status-s2gzg" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-s2gzg" /status @ 11/09/24 13:29:56.788
  STEP: Confirm /status for "e2e-rq-status-s2gzg" resourceQuota via watch @ 11/09/24 13:29:56.796
  I1109 13:29:56.797247 20 resource_quota.go:1175] observed resourceQuota "e2e-rq-status-s2gzg" in namespace "resourcequota-6972" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I1109 13:29:56.797281 20 resource_quota.go:1178] Found resourceQuota "e2e-rq-status-s2gzg" in namespace "resourcequota-6972" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I1109 13:29:56.797291 20 resource_quota.go:1185] ResourceQuota "e2e-rq-status-s2gzg" /status was patched
  STEP: Get "e2e-rq-status-s2gzg" /status @ 11/09/24 13:29:56.797
  I1109 13:29:56.800767 20 resource_quota.go:1196] Resourcequota "e2e-rq-status-s2gzg" reports status: hard cpu of 1
  I1109 13:29:56.800793 20 resource_quota.go:1198] Resourcequota "e2e-rq-status-s2gzg" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-s2gzg" /status before checking Spec is unchanged @ 11/09/24 13:29:56.804
  I1109 13:29:56.811096 20 resource_quota.go:1218] Resourcequota "e2e-rq-status-s2gzg" reports status: hard cpu of 2
  I1109 13:29:56.811130 20 resource_quota.go:1220] Resourcequota "e2e-rq-status-s2gzg" reports status: hard memory of 2Gi
  I1109 13:29:56.812443 20 resource_quota.go:1232] Found resourceQuota "e2e-rq-status-s2gzg" in namespace "resourcequota-6972" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I1109 13:29:56.815617 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d04f90), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d04fc0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d04ff0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:29:57.581523      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:29:58.581644      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:29:59.582046      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:00.582175      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:01.582337      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:30:01.819670 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484cdc8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484cdf8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484ce28), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:30:02.582509      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:03.582608      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:04.582967      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:05.583493      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:06.583639      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:30:06.817759 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484cff0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484d038), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484d068), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:30:07.584622      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:08.584837      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:09.585043      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:10.585440      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:11.585570      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:30:11.816863 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484d1a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484d1d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484d218), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:30:12.585740      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:13.585797      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:14.586064      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:15.586161      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:16.586385      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:30:16.816840 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d05278), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d052a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d052d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:30:17.587465      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:18.588460      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:19.588556      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:20.588637      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:21.589592      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:30:21.817622 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484d3c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484d3f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484d428), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:30:22.590456      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:23.590796      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:24.590740      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:25.590792      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:26.591149      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:30:26.817116 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d04078), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d040a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d040d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:30:27.591342      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:28.591583      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:29.591784      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:30.591913      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:31.592368      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:30:31.816600 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484c498), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484c4c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484c4f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:30:32.592411      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:33.593429      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:34.593585      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:35.593851      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:36.594164      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:30:36.817416 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d042d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d04300), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d04330), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:30:37.594402      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:38.594543      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:39.594666      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:40.594868      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:41.595036      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:30:41.818544 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484c690), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484c6c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484c708), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:30:42.595353      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:43.595442      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:44.595655      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:45.596451      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:46.596565      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:30:46.817767 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d04510), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d04540), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d04570), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:30:47.597264      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:48.597373      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:49.597506      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:50.598456      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:51.598562      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:30:51.818094 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484c900), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484c948), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484c990), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:30:52.598964      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:53.599045      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:54.599509      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:55.599640      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:56.599882      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:30:56.816811 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484caf8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484cb40), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484cb70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:30:57.600587      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:58.600882      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:30:59.601648      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:00.601938      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:01.602338      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:31:01.817418 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484cd08), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484cd38), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484cd68), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:31:02.603389      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:03.603526      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:04.603996      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:05.604095      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:06.604331      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:31:06.817305 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484ceb8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484cee8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484cf18), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:31:07.605057      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:08.605447      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:09.605569      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:10.605662      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:11.605790      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:31:11.816825 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d048d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d04900), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d04930), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:31:12.606469      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:13.607456      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:14.608475      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:15.608542      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:16.609420      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:31:16.817357 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484d110), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484d140), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484d170), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:31:17.610016      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:18.610277      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:19.610495      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:20.610586      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:21.610748      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:31:21.818063 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d04ac8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d04af8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d04b28), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:31:22.610882      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:23.611184      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:24.611372      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:25.611516      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:26.611791      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:31:26.817107 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484d350), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484d380), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484d3b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:31:27.612462      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:28.612572      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:29.613451      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:30.613780      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:31.614132      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:31:31.817903 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d04d08), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d04d38), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d04d68), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:31:32.614388      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:33.614661      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:34.615069      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:35.615157      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:36.615522      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:31:36.817866 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d04f60), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d04f90), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d04fc0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:31:37.615651      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:38.616665      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:39.617588      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:40.617729      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:41.617942      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:31:41.817513 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484d608), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484d638), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484d680), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:31:42.618342      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:43.618397      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:44.618495      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:45.618559      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:46.618711      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:31:46.818323 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d05188), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d051b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d05200), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:31:47.618833      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:48.618937      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:49.619021      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:50.619510      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:51.619636      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:31:51.816779 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484d830), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484d860), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484d890), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:31:52.620692      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:53.620913      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:54.621515      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:55.621647      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:56.621742      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:31:56.817975 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d05398), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d053c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d05428), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:31:57.621885      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:58.622085      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:31:59.623077      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:00.623435      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:01.623587      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:32:01.817792 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484da28), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484da58), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484da88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:32:02.623676      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:03.624442      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:04.624791      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:05.624999      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:06.625260      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:32:06.816424 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d05608), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d05638), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d05668), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:32:07.625293      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:08.625460      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:09.626474      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:10.626553      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:11.626873      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:32:11.818031 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484dc20), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484dc50), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484dc80), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:32:12.627467      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:13.628450      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:14.628571      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:15.628689      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:16.629431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:32:16.817838 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d05830), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d05860), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d05890), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:32:17.629563      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:18.629851      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:19.629898      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:20.630123      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:21.630344      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:32:21.816404 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d059e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d05a28), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d05a58), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:32:22.631357      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:23.631606      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:24.631601      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:25.631575      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:26.632439      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:32:26.817184 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d04078), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d040a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d040d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:32:27.632580      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:28.632745      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:29.632940      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:30.633129      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:31.633294      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:32:31.817467 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484c498), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484c4c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484c4f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:32:32.633323      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:33.633520      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:34.633747      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:35.634574      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:36.634873      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:32:36.816738 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484c648), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484c678), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484c6a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:32:37.635599      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:38.636611      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:39.636710      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:40.637572      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:41.637670      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:32:41.817445 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d04300), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d04330), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d04360), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:32:42.637765      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:43.638430      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:44.639416      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:45.639514      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:46.639815      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:32:46.818532 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484c8a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484c8d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484c918), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:32:47.640023      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:48.640269      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:49.640370      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:50.640510      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:51.640839      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:32:51.816654 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484cab0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484cae0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484cb10), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:32:52.641638      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:53.641844      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:54.642038      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:55.642506      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:56.642585      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:32:56.817551 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484cca8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484ccf0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484cd20), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:32:57.642716      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:58.643440      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:32:59.643665      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:00.643860      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:01.644017      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:33:01.818417 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d045b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d045e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d04618), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:33:02.644128      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:03.645105      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:04.645323      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:05.645517      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:06.645834      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:33:06.817361 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484ced0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484cf00), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484cf30), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:33:07.645925      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:08.646365      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:09.646459      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:10.647519      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:11.647626      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:33:11.817625 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484d0f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484d128), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484d158), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:33:12.648357      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:13.648463      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:14.649428      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:15.650437      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:16.650599      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:33:16.817857 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484d2c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484d2f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484d320), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:33:17.650762      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:18.651428      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:19.652443      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:20.652558      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:21.652889      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:33:21.817598 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d04918), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d04948), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d04978), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:33:22.653027      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:23.653277      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:24.653463      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:25.653662      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:26.653984      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:33:26.818009 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484d4b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484d518), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484d548), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:33:27.654183      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:28.654406      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:29.655434      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:30.655625      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:31.655825      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:33:31.818205 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d04b10), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d04b40), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d04b70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:33:32.655929      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:33.656085      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:34.656897      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:35.657441      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:36.658423      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:33:36.816552 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484d740), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484d770), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484d7a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:33:37.659419      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:38.660432      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:39.661470      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:40.661596      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:41.662197      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:33:41.817613 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d04d68), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d04d98), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d04dc8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:33:42.662422      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:43.662648      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:44.662873      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:45.663065      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:46.663278      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:33:46.816974 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d04fc0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d04ff0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d05038), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:33:47.663465      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:48.663626      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:49.664434      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:50.664717      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:51.665125      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:33:51.816823 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d05170), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d051a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d051d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:33:52.665362      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:53.665508      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:54.665722      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:55.665873      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:56.666170      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:33:56.818846 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484d9f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484da28), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484da58), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:33:57.666358      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:58.666459      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:33:59.667533      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:00.667618      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:01.667720      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:34:01.816883 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d05380), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d053b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d053e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:34:02.668419      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:03.668531      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:04.669452      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:05.670440      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:06.671432      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:34:06.817169 20 resource_quota.go:1263] ResourceQuota "e2e-rq-status-s2gzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-s2gzg", GenerateName:"", Namespace:"resourcequota-6972", SelfLink:"", UID:"9919ab38-e455-4b32-8fdc-5bd1be2fb72b", ResourceVersion:"33560", Generation:0, CreationTimestamp:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-s2gzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484dbf0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484dc20), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.November, 9, 13, 29, 56, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00484dc50), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1109 13:34:07.672029      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:08.672275      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:09.672486      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:10.672622      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:11.672746      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:34:11.817537 20 resource_quota.go:1260] ResourceQuota "e2e-rq-status-s2gzg" Spec was unchanged and /status reset
  I1109 13:34:11.817682 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6972" for this suite. @ 11/09/24 13:34:11.821
â€¢ [255.091 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 11/09/24 13:34:11.828
  I1109 13:34:11.828890 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename projected @ 11/09/24 13:34:11.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:34:11.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:34:11.849
  STEP: Creating the pod @ 11/09/24 13:34:11.852
  E1109 13:34:12.672942      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:13.673221      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:34:14.407030 20 pod_client.go:173] Successfully updated pod "labelsupdated0d44e44-bb7a-4f22-be01-4e5bc4f3d9bb"
  E1109 13:34:14.673379      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:15.673599      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:34:16.422808 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3398" for this suite. @ 11/09/24 13:34:16.427
â€¢ [4.607 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 11/09/24 13:34:16.435
  I1109 13:34:16.435822 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename projected @ 11/09/24 13:34:16.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:34:16.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:34:16.457
  STEP: Creating projection with secret that has name projected-secret-test-877efd53-ef5e-411e-bc32-c75f98c7d64a @ 11/09/24 13:34:16.459
  STEP: Creating a pod to test consume secrets @ 11/09/24 13:34:16.465
  E1109 13:34:16.674203      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:17.674380      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:18.674472      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:19.675549      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:34:20.494
  I1109 13:34:20.499163 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-projected-secrets-1219a23c-ff12-40c2-a599-8e35fb2afc40 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 11/09/24 13:34:20.508
  I1109 13:34:20.525920 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2816" for this suite. @ 11/09/24 13:34:20.529
â€¢ [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1075
  STEP: Creating a kubernetes client @ 11/09/24 13:34:20.535
  I1109 13:34:20.535527 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename kubectl @ 11/09/24 13:34:20.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:34:20.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:34:20.559
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 11/09/24 13:34:20.562
  I1109 13:34:20.562606 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-3209 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I1109 13:34:20.613390 20 builder.go:146] stderr: ""
  I1109 13:34:20.613427 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 11/09/24 13:34:20.613
  I1109 13:34:20.613515 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-3209 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I1109 13:34:20.664767 20 builder.go:146] stderr: ""
  I1109 13:34:20.664808 20 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 11/09/24 13:34:20.664
  I1109 13:34:20.667652 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-3209 delete pods e2e-test-httpd-pod'
  E1109 13:34:20.676251      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:21.676414      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:34:22.107986 20 builder.go:146] stderr: ""
  I1109 13:34:22.108033 20 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1109 13:34:22.108271 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3209" for this suite. @ 11/09/24 13:34:22.111
â€¢ [1.581 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 11/09/24 13:34:22.117
  I1109 13:34:22.117313 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename downward-api @ 11/09/24 13:34:22.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:34:22.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:34:22.139
  STEP: Creating a pod to test downward API volume plugin @ 11/09/24 13:34:22.141
  E1109 13:34:22.676538      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:23.676851      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:24.677454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:25.678439      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:34:26.164
  I1109 13:34:26.168456 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod downwardapi-volume-57e702bf-79ed-4b1b-863f-b3552f9e8b11 container client-container: <nil>
  STEP: delete the pod @ 11/09/24 13:34:26.176
  I1109 13:34:26.194603 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1590" for this suite. @ 11/09/24 13:34:26.198
â€¢ [4.088 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 11/09/24 13:34:26.205
  I1109 13:34:26.205660 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/09/24 13:34:26.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:34:26.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:34:26.226
  I1109 13:34:26.229709 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  E1109 13:34:26.679386      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 11/09/24 13:34:27.562
  I1109 13:34:27.562129 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=crd-publish-openapi-3832 --namespace=crd-publish-openapi-3832 create -f -'
  E1109 13:34:27.679739      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:28.680476      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:34:29.640010 20 builder.go:146] stderr: ""
  I1109 13:34:29.640047 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1648-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I1109 13:34:29.640099 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=crd-publish-openapi-3832 --namespace=crd-publish-openapi-3832 delete e2e-test-crd-publish-openapi-1648-crds test-cr'
  E1109 13:34:29.680607      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:34:29.692742 20 builder.go:146] stderr: ""
  I1109 13:34:29.692779 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1648-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I1109 13:34:29.692871 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=crd-publish-openapi-3832 --namespace=crd-publish-openapi-3832 apply -f -'
  I1109 13:34:29.750342 20 builder.go:146] stderr: ""
  I1109 13:34:29.750395 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1648-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I1109 13:34:29.750454 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=crd-publish-openapi-3832 --namespace=crd-publish-openapi-3832 delete e2e-test-crd-publish-openapi-1648-crds test-cr'
  I1109 13:34:29.801748 20 builder.go:146] stderr: ""
  I1109 13:34:29.801788 20 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1648-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 11/09/24 13:34:29.801
  I1109 13:34:29.801933 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=crd-publish-openapi-3832 explain e2e-test-crd-publish-openapi-1648-crds'
  I1109 13:34:29.847055 20 builder.go:146] stderr: ""
  I1109 13:34:29.847114 20 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-1648-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E1109 13:34:30.680727      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:34:31.060685 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3832" for this suite. @ 11/09/24 13:34:31.067
â€¢ [4.870 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1624
  STEP: Creating a kubernetes client @ 11/09/24 13:34:31.076
  I1109 13:34:31.076386 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename kubectl @ 11/09/24 13:34:31.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:34:31.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:34:31.095
  STEP: creating the pod @ 11/09/24 13:34:31.097
  I1109 13:34:31.098079 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-6271 create -f -'
  I1109 13:34:31.190319 20 builder.go:146] stderr: ""
  I1109 13:34:31.190355 20 builder.go:147] stdout: "pod/pause created\n"
  E1109 13:34:31.681484      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:32.681730      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 11/09/24 13:34:33.202
  I1109 13:34:33.202861 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-6271 label pods pause testing-label=testing-label-value'
  I1109 13:34:33.258723 20 builder.go:146] stderr: ""
  I1109 13:34:33.258766 20 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 11/09/24 13:34:33.258
  I1109 13:34:33.258888 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-6271 get pod pause -L testing-label'
  I1109 13:34:33.304486 20 builder.go:146] stderr: ""
  I1109 13:34:33.304524 20 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 11/09/24 13:34:33.304
  I1109 13:34:33.304886 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-6271 label pods pause testing-label-'
  I1109 13:34:33.359478 20 builder.go:146] stderr: ""
  I1109 13:34:33.359516 20 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 11/09/24 13:34:33.359
  I1109 13:34:33.359681 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-6271 get pod pause -L testing-label'
  I1109 13:34:33.403945 20 builder.go:146] stderr: ""
  I1109 13:34:33.403985 20 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 11/09/24 13:34:33.404
  I1109 13:34:33.404151 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-6271 delete --grace-period=0 --force -f -'
  I1109 13:34:33.499387 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1109 13:34:33.499424 20 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I1109 13:34:33.499473 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-6271 get rc,svc -l name=pause --no-headers'
  I1109 13:34:33.549843 20 builder.go:146] stderr: "No resources found in kubectl-6271 namespace.\n"
  I1109 13:34:33.549903 20 builder.go:147] stdout: ""
  I1109 13:34:33.549954 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-6271 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1109 13:34:33.594404 20 builder.go:146] stderr: ""
  I1109 13:34:33.594447 20 builder.go:147] stdout: ""
  I1109 13:34:33.594558 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6271" for this suite. @ 11/09/24 13:34:33.599
â€¢ [2.531 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 11/09/24 13:34:33.607
  I1109 13:34:33.607089 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename podtemplate @ 11/09/24 13:34:33.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:34:33.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:34:33.621
  I1109 13:34:33.658998 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6256" for this suite. @ 11/09/24 13:34:33.662
â€¢ [0.061 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 11/09/24 13:34:33.668
  I1109 13:34:33.668014 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename svcaccounts @ 11/09/24 13:34:33.668
  E1109 13:34:33.681993      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:34:33.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:34:33.688
  E1109 13:34:34.682430      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:35.682625      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 11/09/24 13:34:35.711
  I1109 13:34:35.711910 20 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6218 pod-service-account-6983e9d0-ee62-4a69-a099-e757e3f41352 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 11/09/24 13:34:35.806
  I1109 13:34:35.806215 20 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6218 pod-service-account-6983e9d0-ee62-4a69-a099-e757e3f41352 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 11/09/24 13:34:35.884
  I1109 13:34:35.884792 20 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6218 pod-service-account-6983e9d0-ee62-4a69-a099-e757e3f41352 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I1109 13:34:35.978013 20 service_accounts.go:114] Got root ca configmap in namespace "svcaccounts-6218"
  I1109 13:34:35.979870 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6218" for this suite. @ 11/09/24 13:34:35.983
â€¢ [2.322 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 11/09/24 13:34:35.99
  I1109 13:34:35.990214 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename field-validation @ 11/09/24 13:34:35.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:34:36.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:34:36.008
  STEP: apply creating a deployment @ 11/09/24 13:34:36.011
  I1109 13:34:36.024776 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2404" for this suite. @ 11/09/24 13:34:36.028
â€¢ [0.046 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 11/09/24 13:34:36.036
  I1109 13:34:36.036102 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename projected @ 11/09/24 13:34:36.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:34:36.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:34:36.052
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-d0c52da4-092a-4ba1-90b5-74180331a5f5 @ 11/09/24 13:34:36.059
  STEP: Creating the pod @ 11/09/24 13:34:36.064
  E1109 13:34:36.682841      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:37.683590      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-d0c52da4-092a-4ba1-90b5-74180331a5f5 @ 11/09/24 13:34:38.096
  STEP: waiting to observe update in volume @ 11/09/24 13:34:38.102
  E1109 13:34:38.683713      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:39.683914      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:40.684117      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:41.684267      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:42.684350      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:43.684613      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:44.684725      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:45.684984      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:46.685498      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:47.685740      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:48.686650      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:49.687566      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:50.688469      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:51.688547      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:52.688671      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:53.688883      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:54.689534      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:55.689701      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:56.690484      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:57.690921      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:58.691435      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:34:59.691657      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:00.692435      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:01.692841      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:02.692974      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:03.693105      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:04.694265      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:05.694550      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:06.695482      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:07.696366      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:08.696956      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:09.697072      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:10.697435      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:11.697532      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:12.697662      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:13.698455      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:14.699427      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:15.699592      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:16.699677      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:17.699876      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:18.700359      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:19.700563      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:20.701141      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:21.701501      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:22.701583      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:23.701775      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:24.702770      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:25.703024      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:26.703954      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:27.704158      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:28.704422      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:29.704599      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:30.704821      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:31.705016      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:32.706037      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:33.706307      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:34.707210      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:35.707427      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:36.708002      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:37.708461      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:38.709015      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:39.709248      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:40.709402      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:41.709505      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:42.710491      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:43.710778      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:44.710780      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:45.711009      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:46.711139      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:47.711361      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:48.711543      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:49.712496      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:50.713256      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:51.713411      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:52.714509      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:53.714739      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:54.715354      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:55.715594      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:56.716073      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:57.716303      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:58.716395      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:35:59.717455      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:00.718314      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:01.718438      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:02.719481      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:03.719590      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:36:04.478704 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7872" for this suite. @ 11/09/24 13:36:04.482
â€¢ [88.454 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 11/09/24 13:36:04.49
  I1109 13:36:04.490320 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename custom-resource-definition @ 11/09/24 13:36:04.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:36:04.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:36:04.507
  I1109 13:36:04.510089 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  E1109 13:36:04.719703      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:36:05.052569 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9615" for this suite. @ 11/09/24 13:36:05.059
â€¢ [0.577 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1044
  STEP: Creating a kubernetes client @ 11/09/24 13:36:05.066
  I1109 13:36:05.066918 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename kubectl @ 11/09/24 13:36:05.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:36:05.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:36:05.085
  STEP: create deployment with httpd image @ 11/09/24 13:36:05.088
  I1109 13:36:05.088720 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-4341 create -f -'
  I1109 13:36:05.156287 20 builder.go:146] stderr: ""
  I1109 13:36:05.156324 20 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 11/09/24 13:36:05.156
  I1109 13:36:05.156413 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-4341 diff -f -'
  I1109 13:36:05.244297 20 builder.go:135] rc: 1
  I1109 13:36:05.244389 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-4341 delete -f -'
  I1109 13:36:05.293974 20 builder.go:146] stderr: ""
  I1109 13:36:05.294016 20 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I1109 13:36:05.294136 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4341" for this suite. @ 11/09/24 13:36:05.297
â€¢ [0.239 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1034
  STEP: Creating a kubernetes client @ 11/09/24 13:36:05.306
  I1109 13:36:05.306221 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename statefulset @ 11/09/24 13:36:05.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:36:05.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:36:05.329
  STEP: Creating service test in namespace statefulset-1367 @ 11/09/24 13:36:05.332
  STEP: Creating statefulset ss in namespace statefulset-1367 @ 11/09/24 13:36:05.342
  I1109 13:36:05.353309 20 wait.go:40] Found 0 stateful pods, waiting for 1
  E1109 13:36:05.719779      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:06.719925      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:07.720118      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:08.720384      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:09.720553      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:10.721571      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:11.721656      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:12.721876      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:13.722068      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:14.722749      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:36:15.354628 20 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 11/09/24 13:36:15.361
  STEP: Getting /status @ 11/09/24 13:36:15.367
  I1109 13:36:15.371217 20 statefulset.go:1070] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 11/09/24 13:36:15.371
  I1109 13:36:15.382556 20 statefulset.go:1090] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 11/09/24 13:36:15.382
  I1109 13:36:15.384081 20 statefulset.go:1118] Observed &StatefulSet event: ADDED
  I1109 13:36:15.384109 20 statefulset.go:1111] Found Statefulset ss in namespace statefulset-1367 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1109 13:36:15.384121 20 statefulset.go:1122] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 11/09/24 13:36:15.384
  I1109 13:36:15.384148 20 statefulset.go:1126] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1109 13:36:15.391603 20 statefulset.go:1130] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 11/09/24 13:36:15.391
  I1109 13:36:15.393508 20 statefulset.go:1155] Observed &StatefulSet event: ADDED
  I1109 13:36:15.393536 20 statefulset.go:1151] Observed Statefulset ss in namespace statefulset-1367 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1109 13:36:15.393628 20 statefulset.go:1155] Observed &StatefulSet event: MODIFIED
  I1109 13:36:15.393680 20 statefulset.go:138] Deleting all statefulset in ns statefulset-1367
  I1109 13:36:15.398068 20 rest.go:150] Scaling statefulset ss to 0
  E1109 13:36:15.723270      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:16.723430      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:17.724481      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:18.724589      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:19.724694      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:20.724789      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:21.725171      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:22.725327      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:23.725506      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:24.725653      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:36:25.413699 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1109 13:36:25.416763 20 rest.go:88] Deleting statefulset ss
  I1109 13:36:25.431076 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1367" for this suite. @ 11/09/24 13:36:25.434
â€¢ [20.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 11/09/24 13:36:25.44
  I1109 13:36:25.440581 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename svcaccounts @ 11/09/24 13:36:25.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:36:25.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:36:25.458
  STEP: Creating a pod to test service account token:  @ 11/09/24 13:36:25.46
  E1109 13:36:25.725878      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:26.725982      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:36:27.48
  I1109 13:36:27.483994 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod test-pod-35f52ad8-7552-4c18-aa76-a1da58c70b09 container agnhost-container: <nil>
  STEP: delete the pod @ 11/09/24 13:36:27.491
  I1109 13:36:27.505464 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4356" for this suite. @ 11/09/24 13:36:27.509
â€¢ [2.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:569
  STEP: Creating a kubernetes client @ 11/09/24 13:36:27.515
  I1109 13:36:27.515493 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename webhook @ 11/09/24 13:36:27.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:36:27.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:36:27.531
  STEP: Setting up server cert @ 11/09/24 13:36:27.555
  E1109 13:36:27.726655      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/09/24 13:36:27.867
  STEP: Deploying the webhook pod @ 11/09/24 13:36:27.877
  STEP: Wait for the deployment to be ready @ 11/09/24 13:36:27.89
  I1109 13:36:27.900769 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1109 13:36:28.727339      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:29.727380      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/09/24 13:36:29.912
  STEP: Verifying the service has paired with the endpoint @ 11/09/24 13:36:29.92
  E1109 13:36:30.728436      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:36:30.920872 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 11/09/24 13:36:30.996
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 11/09/24 13:36:31.025
  STEP: Deleting the collection of validation webhooks @ 11/09/24 13:36:31.051
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 11/09/24 13:36:31.103
  I1109 13:36:31.151322 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7428" for this suite. @ 11/09/24 13:36:31.154
  STEP: Destroying namespace "webhook-markers-5613" for this suite. @ 11/09/24 13:36:31.163
â€¢ [3.655 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 11/09/24 13:36:31.17
  I1109 13:36:31.170888 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename downward-api @ 11/09/24 13:36:31.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:36:31.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:36:31.184
  STEP: Creating a pod to test downward API volume plugin @ 11/09/24 13:36:31.257
  E1109 13:36:31.728582      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:32.728792      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:33.728791      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:34.729034      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:36:35.281
  I1109 13:36:35.285375 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod downwardapi-volume-3ec37110-f66e-4cab-8628-aa29e381f221 container client-container: <nil>
  STEP: delete the pod @ 11/09/24 13:36:35.292
  I1109 13:36:35.308211 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9081" for this suite. @ 11/09/24 13:36:35.311
â€¢ [4.148 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 11/09/24 13:36:35.318
  I1109 13:36:35.318606 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename configmap @ 11/09/24 13:36:35.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:36:35.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:36:35.338
  STEP: Creating configMap with name configmap-test-volume-c1e7972f-32f6-49a3-8803-498df1f3883f @ 11/09/24 13:36:35.34
  STEP: Creating a pod to test consume configMaps @ 11/09/24 13:36:35.346
  E1109 13:36:35.729118      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:36.729445      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:37.729665      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:38.729772      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:36:39.371
  I1109 13:36:39.374175 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-configmaps-260948fa-afb3-43fa-ae44-fcaba46dab58 container agnhost-container: <nil>
  STEP: delete the pod @ 11/09/24 13:36:39.381
  I1109 13:36:39.397426 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3663" for this suite. @ 11/09/24 13:36:39.401
â€¢ [4.090 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 11/09/24 13:36:39.408
  I1109 13:36:39.408974 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename container-runtime @ 11/09/24 13:36:39.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:36:39.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:36:39.429
  STEP: create the container @ 11/09/24 13:36:39.431
  W1109 13:36:39.438941      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 11/09/24 13:36:39.439
  E1109 13:36:39.730471      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:40.730523      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 11/09/24 13:36:41.453
  STEP: the container should be terminated @ 11/09/24 13:36:41.456
  STEP: the termination message should be set @ 11/09/24 13:36:41.456
  I1109 13:36:41.456449 20 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 11/09/24 13:36:41.456
  I1109 13:36:41.473444 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6755" for this suite. @ 11/09/24 13:36:41.476
â€¢ [2.074 seconds]
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 11/09/24 13:36:41.483
  I1109 13:36:41.483310 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename ingress @ 11/09/24 13:36:41.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:36:41.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:36:41.501
  STEP: getting /apis @ 11/09/24 13:36:41.503
  STEP: getting /apis/networking.k8s.io @ 11/09/24 13:36:41.507
  STEP: getting /apis/networking.k8s.iov1 @ 11/09/24 13:36:41.508
  STEP: creating @ 11/09/24 13:36:41.509
  STEP: getting @ 11/09/24 13:36:41.527
  STEP: listing @ 11/09/24 13:36:41.53
  STEP: watching @ 11/09/24 13:36:41.534
  I1109 13:36:41.534498 20 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 11/09/24 13:36:41.535
  STEP: cluster-wide watching @ 11/09/24 13:36:41.538
  I1109 13:36:41.538971 20 ingress.go:198] starting watch
  STEP: patching @ 11/09/24 13:36:41.54
  STEP: updating @ 11/09/24 13:36:41.549
  I1109 13:36:41.564840 20 ingress.go:221] waiting for watch events with expected annotations
  I1109 13:36:41.564888 20 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 11/09/24 13:36:41.564
  STEP: updating /status @ 11/09/24 13:36:41.574
  STEP: get /status @ 11/09/24 13:36:41.587
  STEP: deleting @ 11/09/24 13:36:41.59
  STEP: deleting a collection @ 11/09/24 13:36:41.606
  I1109 13:36:41.626007 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-9957" for this suite. @ 11/09/24 13:36:41.629
â€¢ [0.154 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 11/09/24 13:36:41.637
  I1109 13:36:41.637258 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename replication-controller @ 11/09/24 13:36:41.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:36:41.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:36:41.653
  STEP: Creating ReplicationController "e2e-rc-q42cw" @ 11/09/24 13:36:41.656
  I1109 13:36:41.660974 20 rc.go:792] Get Replication Controller "e2e-rc-q42cw" to confirm replicas
  E1109 13:36:41.731559      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:36:42.661599 20 rc.go:792] Get Replication Controller "e2e-rc-q42cw" to confirm replicas
  I1109 13:36:42.665935 20 rc.go:801] Found 1 replicas for "e2e-rc-q42cw" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-q42cw" @ 11/09/24 13:36:42.665
  STEP: Updating a scale subresource @ 11/09/24 13:36:42.669
  STEP: Verifying replicas where modified for replication controller "e2e-rc-q42cw" @ 11/09/24 13:36:42.674
  I1109 13:36:42.675002 20 rc.go:792] Get Replication Controller "e2e-rc-q42cw" to confirm replicas
  E1109 13:36:42.731629      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:36:43.675685 20 rc.go:792] Get Replication Controller "e2e-rc-q42cw" to confirm replicas
  I1109 13:36:43.680477 20 rc.go:801] Found 2 replicas for "e2e-rc-q42cw" replication controller
  I1109 13:36:43.680754 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1661" for this suite. @ 11/09/24 13:36:43.684
â€¢ [2.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1435
  STEP: Creating a kubernetes client @ 11/09/24 13:36:43.694
  I1109 13:36:43.694623 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename services @ 11/09/24 13:36:43.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:36:43.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:36:43.711
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-4683 @ 11/09/24 13:36:43.714
  STEP: changing the ExternalName service to type=NodePort @ 11/09/24 13:36:43.719
  E1109 13:36:43.732603      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: creating replication controller externalname-service in namespace services-4683 @ 11/09/24 13:36:43.739
  I1109 13:36:43.750050      20 runners.go:193] Created replication controller with name: externalname-service, namespace: services-4683, replica count: 2
  E1109 13:36:44.733347      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:45.734300      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:46.734391      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:36:46.801670      20 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1109 13:36:46.801704 20 resource.go:361] Creating new exec pod
  E1109 13:36:47.734534      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:48.734769      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:49.735394      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:36:49.822741 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-4683 exec execpod7jt4d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1109 13:36:49.903356 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1109 13:36:49.903397 20 builder.go:147] stdout: "externalname-service-qbr5d"
  I1109 13:36:49.903482 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-4683 exec execpod7jt4d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.229 80'
  I1109 13:36:49.982548 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.229 80\nConnection to 10.152.183.229 80 port [tcp/http] succeeded!\n"
  I1109 13:36:49.982589 20 builder.go:147] stdout: "externalname-service-qbr5d"
  I1109 13:36:49.982714 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-4683 exec execpod7jt4d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.65.76 30693'
  I1109 13:36:50.061767 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.65.76 30693\nConnection to 172.31.65.76 30693 port [tcp/*] succeeded!\n"
  I1109 13:36:50.061810 20 builder.go:147] stdout: "externalname-service-vwwpb"
  I1109 13:36:50.061901 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-4683 exec execpod7jt4d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.26.237 30693'
  I1109 13:36:50.145319 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.26.237 30693\nConnection to 172.31.26.237 30693 port [tcp/*] succeeded!\n"
  I1109 13:36:50.145373 20 builder.go:147] stdout: "externalname-service-qbr5d"
  I1109 13:36:50.145447 20 service.go:1444] Cleaning up the ExternalName to NodePort test service
  I1109 13:36:50.165123 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4683" for this suite. @ 11/09/24 13:36:50.169
â€¢ [6.483 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 11/09/24 13:36:50.177
  I1109 13:36:50.177520 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename field-validation @ 11/09/24 13:36:50.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:36:50.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:36:50.205
  STEP: apply creating a deployment @ 11/09/24 13:36:50.209
  I1109 13:36:50.225196 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8939" for this suite. @ 11/09/24 13:36:50.228
â€¢ [0.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 11/09/24 13:36:50.234
  I1109 13:36:50.234075 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename gc @ 11/09/24 13:36:50.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:36:50.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:36:50.251
  I1109 13:36:50.285660 20 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"d1e08fac-a01f-43d8-a692-299b62fa3244", Controller:(*bool)(0xc0029bf566), BlockOwnerDeletion:(*bool)(0xc0029bf567)}}
  I1109 13:36:50.291304 20 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"4b6bf4b1-d5ff-43c4-978c-c83a46d64f12", Controller:(*bool)(0xc003ac373e), BlockOwnerDeletion:(*bool)(0xc003ac373f)}}
  I1109 13:36:50.295727 20 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"318eab43-2baf-49a2-aebf-f87941a25ba9", Controller:(*bool)(0xc0029bf7a6), BlockOwnerDeletion:(*bool)(0xc0029bf7a7)}}
  E1109 13:36:50.735783      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:51.736163      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:52.736304      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:53.736694      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:54.737541      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:36:55.308125 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9700" for this suite. @ 11/09/24 13:36:55.312
â€¢ [5.087 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 11/09/24 13:36:55.321
  I1109 13:36:55.321456 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename emptydir @ 11/09/24 13:36:55.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:36:55.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:36:55.34
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 11/09/24 13:36:55.344
  E1109 13:36:55.738449      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:56.738788      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:57.738882      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:36:58.738989      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:36:59.364
  I1109 13:36:59.368130 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-2e346a10-42bb-4180-b0d6-1dec2d78e5fd container test-container: <nil>
  STEP: delete the pod @ 11/09/24 13:36:59.374
  I1109 13:36:59.388831 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3541" for this suite. @ 11/09/24 13:36:59.392
â€¢ [4.079 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:878
  STEP: Creating a kubernetes client @ 11/09/24 13:36:59.4
  I1109 13:36:59.400158 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename job @ 11/09/24 13:36:59.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:36:59.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:36:59.424
  STEP: Creating a job @ 11/09/24 13:36:59.428
  STEP: Ensuring active pods == parallelism @ 11/09/24 13:36:59.44
  E1109 13:36:59.739450      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:37:00.739537      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete a job @ 11/09/24 13:37:01.444
  STEP: deleting Job.batch foo in namespace job-1375, will wait for the garbage collector to delete the pods @ 11/09/24 13:37:01.444
  I1109 13:37:01.505955 20 resources.go:139] Deleting Job.batch foo took: 6.784473ms
  I1109 13:37:01.606740 20 resources.go:163] Terminating Job.batch foo pods took: 100.78143ms
  E1109 13:37:01.740277      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 11/09/24 13:37:02.407
  I1109 13:37:02.412009 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1375" for this suite. @ 11/09/24 13:37:02.416
â€¢ [3.023 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 11/09/24 13:37:02.423
  I1109 13:37:02.423558 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename downward-api @ 11/09/24 13:37:02.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:37:02.439
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:37:02.442
  STEP: Creating a pod to test downward API volume plugin @ 11/09/24 13:37:02.445
  E1109 13:37:02.740514      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:37:03.740720      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:37:04.741560      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:37:05.741666      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:37:06.463
  I1109 13:37:06.467067 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod downwardapi-volume-faa2adc3-26cd-4729-9594-da9faaa93bfd container client-container: <nil>
  STEP: delete the pod @ 11/09/24 13:37:06.473
  I1109 13:37:06.489294 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7988" for this suite. @ 11/09/24 13:37:06.492
â€¢ [4.076 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 11/09/24 13:37:06.499
  I1109 13:37:06.499860 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename daemonsets @ 11/09/24 13:37:06.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:37:06.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:37:06.518
  I1109 13:37:06.539146 20 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/09/24 13:37:06.544
  I1109 13:37:06.551151 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-177 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 13:37:06.551198 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-95-130 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 13:37:06.553559 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1109 13:37:06.553583 20 fixtures.go:130] Node ip-172-31-26-237 is running 0 daemon pod, expected 1
  E1109 13:37:06.741908      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:37:07.548175 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-177 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 13:37:07.548250 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-95-130 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 13:37:07.551406 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1109 13:37:07.551428 20 fixtures.go:130] Node ip-172-31-26-237 is running 0 daemon pod, expected 1
  E1109 13:37:07.742517      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:37:08.549819 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-177 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 13:37:08.549872 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-95-130 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 13:37:08.552906 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1109 13:37:08.552926 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 11/09/24 13:37:08.565
  STEP: Check that daemon pods images are updated. @ 11/09/24 13:37:08.579
  I1109 13:37:08.582140 20 daemon_set.go:1193] Wrong image for pod: daemon-set-4tmn5. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1109 13:37:08.582201 20 daemon_set.go:1193] Wrong image for pod: daemon-set-c8pfr. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1109 13:37:08.582208 20 daemon_set.go:1193] Wrong image for pod: daemon-set-gdfwr. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1109 13:37:08.587549 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-177 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 13:37:08.587630 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-95-130 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1109 13:37:08.742675      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:37:09.584768 20 daemon_set.go:1193] Wrong image for pod: daemon-set-4tmn5. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1109 13:37:09.584800 20 daemon_set.go:1193] Wrong image for pod: daemon-set-c8pfr. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1109 13:37:09.588892 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-177 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 13:37:09.588930 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-95-130 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1109 13:37:09.743069      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:37:10.584811 20 daemon_set.go:1193] Wrong image for pod: daemon-set-4tmn5. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1109 13:37:10.584845 20 daemon_set.go:1193] Wrong image for pod: daemon-set-c8pfr. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1109 13:37:10.584850 20 daemon_set.go:1198] Pod daemon-set-lfx4t is not available
  I1109 13:37:10.588699 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-177 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 13:37:10.588740 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-95-130 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1109 13:37:10.743883      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:37:11.584505 20 daemon_set.go:1193] Wrong image for pod: daemon-set-c8pfr. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1109 13:37:11.584539 20 daemon_set.go:1198] Pod daemon-set-vt2d2 is not available
  I1109 13:37:11.587488 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-177 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 13:37:11.587519 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-95-130 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1109 13:37:11.744743      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:37:12.587068 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-177 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 13:37:12.587121 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-95-130 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1109 13:37:12.745176      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:37:13.587826 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-177 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 13:37:13.587877 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-95-130 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 11/09/24 13:37:13.587
  I1109 13:37:13.591427 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-177 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 13:37:13.591464 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-95-130 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 13:37:13.594440 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1109 13:37:13.594461 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 11/09/24 13:37:13.609
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8447, will wait for the garbage collector to delete the pods @ 11/09/24 13:37:13.609
  I1109 13:37:13.669888 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 6.642109ms
  E1109 13:37:13.745405      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:37:13.771075 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.181961ms
  E1109 13:37:14.745807      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:37:15.475186 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1109 13:37:15.475252 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1109 13:37:15.479176 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"35620"},"items":null}

  I1109 13:37:15.482755 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"35620"},"items":null}

  I1109 13:37:15.495820 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8447" for this suite. @ 11/09/24 13:37:15.499
â€¢ [9.006 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 11/09/24 13:37:15.506
  I1109 13:37:15.506772 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename certificates @ 11/09/24 13:37:15.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:37:15.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:37:15.521
  E1109 13:37:15.746251      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: getting /apis @ 11/09/24 13:37:15.764
  STEP: getting /apis/certificates.k8s.io @ 11/09/24 13:37:15.768
  STEP: getting /apis/certificates.k8s.io/v1 @ 11/09/24 13:37:15.769
  STEP: creating @ 11/09/24 13:37:15.77
  STEP: getting @ 11/09/24 13:37:15.788
  STEP: listing @ 11/09/24 13:37:15.79
  STEP: watching @ 11/09/24 13:37:15.793
  I1109 13:37:15.793987 20 certificates.go:316] starting watch
  STEP: patching @ 11/09/24 13:37:15.794
  STEP: updating @ 11/09/24 13:37:15.8
  I1109 13:37:15.806704 20 certificates.go:332] waiting for watch events with expected annotations
  I1109 13:37:15.806739 20 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 11/09/24 13:37:15.806
  STEP: patching /approval @ 11/09/24 13:37:15.81
  STEP: updating /approval @ 11/09/24 13:37:15.818
  STEP: getting /status @ 11/09/24 13:37:15.824
  STEP: patching /status @ 11/09/24 13:37:15.827
  STEP: updating /status @ 11/09/24 13:37:15.835
  STEP: deleting @ 11/09/24 13:37:15.842
  STEP: deleting a collection @ 11/09/24 13:37:15.854
  I1109 13:37:15.870120 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-6333" for this suite. @ 11/09/24 13:37:15.873
â€¢ [0.374 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 11/09/24 13:37:15.88
  I1109 13:37:15.880639 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename security-context-test @ 11/09/24 13:37:15.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:37:15.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:37:15.9
  E1109 13:37:16.747033      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:37:17.747674      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:37:18.748387      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:37:19.748481      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:37:19.943751 20 security_context.go:538] Got logs for pod "busybox-privileged-false-94c5d368-4cbb-44ed-9446-55647649ce7f": "ip: RTNETLINK answers: Operation not permitted\n"
  I1109 13:37:19.943893 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2710" for this suite. @ 11/09/24 13:37:19.948
â€¢ [4.076 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 11/09/24 13:37:19.956
  I1109 13:37:19.956659 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename webhook @ 11/09/24 13:37:19.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:37:19.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:37:19.975
  STEP: Setting up server cert @ 11/09/24 13:37:19.996
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/09/24 13:37:20.331
  STEP: Deploying the webhook pod @ 11/09/24 13:37:20.34
  STEP: Wait for the deployment to be ready @ 11/09/24 13:37:20.351
  I1109 13:37:20.358177 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1109 13:37:20.748726      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:37:21.748825      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/09/24 13:37:22.369
  STEP: Verifying the service has paired with the endpoint @ 11/09/24 13:37:22.378
  E1109 13:37:22.749431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:37:23.378954 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1109 13:37:23.386558 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  E1109 13:37:23.750465      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-777-crds.webhook.example.com via the AdmissionRegistration API @ 11/09/24 13:37:23.898
  STEP: Creating a custom resource while v1 is storage version @ 11/09/24 13:37:23.913
  E1109 13:37:24.751176      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:37:25.751598      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 11/09/24 13:37:25.94
  STEP: Patching the custom resource while v2 is storage version @ 11/09/24 13:37:25.955
  I1109 13:37:26.555995 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4623" for this suite. @ 11/09/24 13:37:26.56
  STEP: Destroying namespace "webhook-markers-6686" for this suite. @ 11/09/24 13:37:26.568
â€¢ [6.619 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 11/09/24 13:37:26.575
  I1109 13:37:26.575498 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename configmap @ 11/09/24 13:37:26.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:37:26.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:37:26.593
  STEP: Creating configMap configmap-2549/configmap-test-2083b912-93da-4405-879d-5b675569d8c5 @ 11/09/24 13:37:26.598
  STEP: Creating a pod to test consume configMaps @ 11/09/24 13:37:26.604
  E1109 13:37:26.752469      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:37:27.752588      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:37:28.623
  I1109 13:37:28.627089 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-configmaps-085fb1f0-d1ad-4629-82a9-9eb0bbf40564 container env-test: <nil>
  STEP: delete the pod @ 11/09/24 13:37:28.634
  I1109 13:37:28.650896 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2549" for this suite. @ 11/09/24 13:37:28.655
â€¢ [2.088 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 11/09/24 13:37:28.663
  I1109 13:37:28.663553 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename configmap @ 11/09/24 13:37:28.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:37:28.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:37:28.682
  STEP: Creating configMap with name configmap-test-volume-map-cba7f4fc-0b39-4197-a074-c01ef3bb93d2 @ 11/09/24 13:37:28.685
  STEP: Creating a pod to test consume configMaps @ 11/09/24 13:37:28.689
  E1109 13:37:28.753479      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:37:29.753692      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:37:30.708
  I1109 13:37:30.712166 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-configmaps-3d22c76c-6a9b-42e8-826b-40fd699d7159 container agnhost-container: <nil>
  STEP: delete the pod @ 11/09/24 13:37:30.718
  I1109 13:37:30.737403 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-912" for this suite. @ 11/09/24 13:37:30.741
â€¢ [2.084 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 11/09/24 13:37:30.747
  I1109 13:37:30.748011 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename container-probe @ 11/09/24 13:37:30.748
  E1109 13:37:30.754031      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:37:30.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:37:30.765
  STEP: Creating pod liveness-82ab2ab2-c90e-44a4-b540-f7593c3e21b7 in namespace container-probe-9268 @ 11/09/24 13:37:30.768
  E1109 13:37:31.754358      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:37:32.754453      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/09/24 13:37:32.786
  I1109 13:37:32.790857 20 container_probe.go:1749] Initial restart count of pod liveness-82ab2ab2-c90e-44a4-b540-f7593c3e21b7 is 0
  I1109 13:37:32.794313 20 container_probe.go:1759] Get pod liveness-82ab2ab2-c90e-44a4-b540-f7593c3e21b7 in namespace container-probe-9268
  E1109 13:37:33.754526      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:37:34.754748      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:37:34.799753 20 container_probe.go:1759] Get pod liveness-82ab2ab2-c90e-44a4-b540-f7593c3e21b7 in namespace container-probe-9268
  E1109 13:37:35.755509      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:37:36.755777      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:37:36.804899 20 container_probe.go:1759] Get pod liveness-82ab2ab2-c90e-44a4-b540-f7593c3e21b7 in namespace container-probe-9268
  E1109 13:37:37.755974      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:37:38.756138      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:37:38.810096 20 container_probe.go:1759] Get pod liveness-82ab2ab2-c90e-44a4-b540-f7593c3e21b7 in namespace container-probe-9268
  E1109 13:37:39.756407      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:37:40.756476      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:37:40.815706 20 container_probe.go:1759] Get pod liveness-82ab2ab2-c90e-44a4-b540-f7593c3e21b7 in namespace container-probe-9268
  E1109 13:37:41.756574      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:37:42.756699      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:37:42.819487 20 container_probe.go:1759] Get pod liveness-82ab2ab2-c90e-44a4-b540-f7593c3e21b7 in namespace container-probe-9268
  E1109 13:37:43.757387      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:37:44.757633      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:37:44.823999 20 container_probe.go:1759] Get pod liveness-82ab2ab2-c90e-44a4-b540-f7593c3e21b7 in namespace container-probe-9268
  E1109 13:37:45.757590      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:37:46.758454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:37:46.829330 20 container_probe.go:1759] Get pod liveness-82ab2ab2-c90e-44a4-b540-f7593c3e21b7 in namespace container-probe-9268
  E1109 13:37:47.758567      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:37:48.759460      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:37:48.833890 20 container_probe.go:1759] Get pod liveness-82ab2ab2-c90e-44a4-b540-f7593c3e21b7 in namespace container-probe-9268
  E1109 13:37:49.760466      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:37:50.760503      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:37:50.840084 20 container_probe.go:1759] Get pod liveness-82ab2ab2-c90e-44a4-b540-f7593c3e21b7 in namespace container-probe-9268
  E1109 13:37:51.761094      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:37:52.761353      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:37:52.845087 20 container_probe.go:1759] Get pod liveness-82ab2ab2-c90e-44a4-b540-f7593c3e21b7 in namespace container-probe-9268
  I1109 13:37:52.845127 20 container_probe.go:1763] Restart count of pod container-probe-9268/liveness-82ab2ab2-c90e-44a4-b540-f7593c3e21b7 is now 1 (20.054241326s elapsed)
  STEP: deleting the pod @ 11/09/24 13:37:52.845
  I1109 13:37:52.860206 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9268" for this suite. @ 11/09/24 13:37:52.865
â€¢ [22.124 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:878
  STEP: Creating a kubernetes client @ 11/09/24 13:37:52.871
  I1109 13:37:52.871832 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename kubectl @ 11/09/24 13:37:52.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:37:52.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:37:52.892
  STEP: validating api versions @ 11/09/24 13:37:52.894
  I1109 13:37:52.894367 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-8888 api-versions'
  I1109 13:37:52.938040 20 builder.go:146] stderr: ""
  I1109 13:37:52.938094 20 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I1109 13:37:52.938512 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8888" for this suite. @ 11/09/24 13:37:52.942
â€¢ [0.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 11/09/24 13:37:52.949
  I1109 13:37:52.949853 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename deployment @ 11/09/24 13:37:52.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:37:52.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:37:52.969
  I1109 13:37:52.974257 20 deployment.go:1196] Creating deployment "webserver-deployment"
  I1109 13:37:52.979759 20 deployment.go:1200] Waiting for observed generation 1
  E1109 13:37:53.761619      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:37:54.762120      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:37:54.987831 20 deployment.go:1205] Waiting for all required pods to come up
  I1109 13:37:54.992497 20 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 11/09/24 13:37:54.992
  I1109 13:37:54.992591 20 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I1109 13:37:54.999762 20 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I1109 13:37:55.010152 20 deployment.go:313] Updating deployment webserver-deployment
  I1109 13:37:55.010187 20 deployment.go:1224] Waiting for observed generation 2
  E1109 13:37:55.762714      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:37:56.762957      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:37:57.018600 20 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I1109 13:37:57.022585 20 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I1109 13:37:57.025713 20 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I1109 13:37:57.035459 20 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I1109 13:37:57.035496 20 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I1109 13:37:57.038715 20 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I1109 13:37:57.045186 20 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I1109 13:37:57.045213 20 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I1109 13:37:57.055442 20 deployment.go:313] Updating deployment webserver-deployment
  I1109 13:37:57.055487 20 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I1109 13:37:57.060465 20 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I1109 13:37:57.062917 20 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I1109 13:37:57.081182 20 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1512",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aa9bbe44-e17c-4acc-a39b-f334064c3645",
      ResourceVersion: (string) (len=5) "36255",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756272,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-786f49d774\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1109 13:37:57.109162 20 deployment.go:39] New ReplicaSet "webserver-deployment-786f49d774" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-786f49d774",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1512",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "99cbc5fa-bf2a-4776-989f-2dce94b19f35",
      ResourceVersion: (string) (len=5) "36258",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756275,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "aa9bbe44-e17c-4acc-a39b-f334064c3645",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 61 39 62 62 65  34 34 2d 65 31 37 63 2d  |\"aa9bbe44-e17c-|
              00000120  34 61 63 63 2d 61 33 39  62 2d 66 33 33 34 30 36  |4acc-a39b-f33406|
              00000130  34 63 33 36 34 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4c3645\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1109 13:37:57.109676 20 deployment.go:44] All old ReplicaSets of Deployment "webserver-deployment":
  I1109 13:37:57.109936 20 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1512",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "400b0acc-a837-49f1-8bab-f1471b19d595",
      ResourceVersion: (string) (len=5) "36256",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756272,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "aa9bbe44-e17c-4acc-a39b-f334064c3645",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 61 39 62 62 65  34 34 2d 65 31 37 63 2d  |\"aa9bbe44-e17c-|
              00000120  34 61 63 63 2d 61 33 39  62 2d 66 33 33 34 30 36  |4acc-a39b-f33406|
              00000130  34 63 33 36 34 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4c3645\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1109 13:37:57.132212 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-5chd5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-5chd5",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-1512",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5f22f50d-c787-4bb9-91de-3f6543b9e6d8",
      ResourceVersion: (string) (len=5) "36133",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "400b0acc-a837-49f1-8bab-f1471b19d595",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  30 62 30 61 63 63 2d 61  |d\":\"400b0acc-a|
              00000090  38 33 37 2d 34 39 66 31  2d 38 62 61 62 2d 66 31  |837-49f1-8bab-f1|
              000000a0  34 37 31 62 31 39 64 35  39 35 5c 22 7d 22 3a 7b  |471b19d595\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 38  37 2e 38 5c 22 7d 22 3a  |2.168.187.8\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mv7vr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mv7vr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-94-169",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.94.169",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.94.169"
        }
      },
      PodIP: (string) (len=13) "192.168.187.8",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.187.8"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63866756273,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ab8bb8906cf8ae5e10933c6a30b8056b6e4d91c034039ea9cacd1efea0748f7f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mv7vr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1109 13:37:57.134623 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-7dghh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-7dghh",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-1512",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "694d6eee-914c-47f5-afe5-839533a0ec56",
      ResourceVersion: (string) (len=5) "36145",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756272,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "400b0acc-a837-49f1-8bab-f1471b19d595",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  30 62 30 61 63 63 2d 61  |d\":\"400b0acc-a|
              00000090  38 33 37 2d 34 39 66 31  2d 38 62 61 62 2d 66 31  |837-49f1-8bab-f1|
              000000a0  34 37 31 62 31 39 64 35  39 35 5c 22 7d 22 3a 7b  |471b19d595\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 33 35  2e 31 32 34 5c 22 7d 22  |2.168.35.124\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7lqxp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7lqxp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-65-76",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.65.76",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.65.76"
        }
      },
      PodIP: (string) (len=14) "192.168.35.124",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.35.124"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63866756273,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6a7206dc229e2500fe3d92b9e011b56a42a38d757dad766905b6477464477e21",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7lqxp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1109 13:37:57.136271 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-b7fzx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-b7fzx",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-1512",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cfd1fbfa-653e-4305-ba73-dbd11bed8a51",
      ResourceVersion: (string) (len=5) "36289",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756277,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "400b0acc-a837-49f1-8bab-f1471b19d595",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  30 62 30 61 63 63 2d 61  |d\":\"400b0acc-a|
              00000090  38 33 37 2d 34 39 66 31  2d 38 62 61 62 2d 66 31  |837-49f1-8bab-f1|
              000000a0  34 37 31 62 31 39 64 35  39 35 5c 22 7d 22 3a 7b  |471b19d595\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qsrsl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qsrsl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-94-169",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1109 13:37:57.140063 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-cx5pw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-cx5pw",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-1512",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1c03e6eb-4970-4100-8279-47c217e41340",
      ResourceVersion: (string) (len=5) "36118",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "400b0acc-a837-49f1-8bab-f1471b19d595",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  30 62 30 61 63 63 2d 61  |d\":\"400b0acc-a|
              00000090  38 33 37 2d 34 39 66 31  2d 38 62 61 62 2d 66 31  |837-49f1-8bab-f1|
              000000a0  34 37 31 62 31 39 64 35  39 35 5c 22 7d 22 3a 7b  |471b19d595\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  32 2e 36 5c 22 7d 22 3a  |2.168.122.6\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-frfl2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-frfl2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-26-237",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.26.237",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.26.237"
        }
      },
      PodIP: (string) (len=13) "192.168.122.6",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.122.6"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63866756273,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://65803963a25a7b18f67602fdf2d3500148d72cbdeab2b590bf455199547405c2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-frfl2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1109 13:37:57.146012 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-dj27d" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-dj27d",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-1512",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "156fce36-5719-4bca-ab44-a3cd31ec2a40",
      ResourceVersion: (string) (len=5) "36121",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "400b0acc-a837-49f1-8bab-f1471b19d595",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  30 62 30 61 63 63 2d 61  |d\":\"400b0acc-a|
              00000090  38 33 37 2d 34 39 66 31  2d 38 62 61 62 2d 66 31  |837-49f1-8bab-f1|
              000000a0  34 37 31 62 31 39 64 35  39 35 5c 22 7d 22 3a 7b  |471b19d595\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  32 2e 35 5c 22 7d 22 3a  |2.168.122.5\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rh5m4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rh5m4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-26-237",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.26.237",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.26.237"
        }
      },
      PodIP: (string) (len=13) "192.168.122.5",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.122.5"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63866756273,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6ee52e735f4c137cac473c94d1c747f178b2f17393ca2871354d982c81d646aa",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rh5m4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1109 13:37:57.147220 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-dr5rd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-dr5rd",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-1512",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "98bc300d-1e64-4df2-9e3e-635434fc8171",
      ResourceVersion: (string) (len=5) "36127",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756272,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "400b0acc-a837-49f1-8bab-f1471b19d595",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  30 62 30 61 63 63 2d 61  |d\":\"400b0acc-a|
              00000090  38 33 37 2d 34 39 66 31  2d 38 62 61 62 2d 66 31  |837-49f1-8bab-f1|
              000000a0  34 37 31 62 31 39 64 35  39 35 5c 22 7d 22 3a 7b  |471b19d595\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 38  37 2e 35 35 5c 22 7d 22  |2.168.187.55\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5qnqt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5qnqt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-94-169",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.94.169",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.94.169"
        }
      },
      PodIP: (string) (len=14) "192.168.187.55",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.187.55"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63866756273,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://94b6a2cada047cbb3db8ab495054af1a235b8967c37a47b5c1f36068985956b4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5qnqt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1109 13:37:57.170588 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-flrm5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-flrm5",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-1512",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "df18e123-3a2a-4b72-b449-4da1efbdb1d2",
      ResourceVersion: (string) (len=5) "36294",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756277,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "400b0acc-a837-49f1-8bab-f1471b19d595",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  30 62 30 61 63 63 2d 61  |d\":\"400b0acc-a|
              00000090  38 33 37 2d 34 39 66 31  2d 38 62 61 62 2d 66 31  |837-49f1-8bab-f1|
              000000a0  34 37 31 62 31 39 64 35  39 35 5c 22 7d 22 3a 7b  |471b19d595\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7jnm9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7jnm9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-26-237",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1109 13:37:57.171667 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-hkwg9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-hkwg9",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-1512",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7145dc6e-349b-45d5-aac9-8df9ae4509b7",
      ResourceVersion: (string) (len=5) "36272",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756277,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "400b0acc-a837-49f1-8bab-f1471b19d595",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  30 62 30 61 63 63 2d 61  |d\":\"400b0acc-a|
              00000090  38 33 37 2d 34 39 66 31  2d 38 62 61 62 2d 66 31  |837-49f1-8bab-f1|
              000000a0  34 37 31 62 31 39 64 35  39 35 5c 22 7d 22 3a 7b  |471b19d595\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hj5p7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hj5p7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-26-237",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1109 13:37:57.173074 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-j89pr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-j89pr",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-1512",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "04b54405-f8be-4a54-ad7c-b38bcfddeb91",
      ResourceVersion: (string) (len=5) "36293",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756277,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "400b0acc-a837-49f1-8bab-f1471b19d595",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  30 62 30 61 63 63 2d 61  |d\":\"400b0acc-a|
              00000090  38 33 37 2d 34 39 66 31  2d 38 62 61 62 2d 66 31  |837-49f1-8bab-f1|
              000000a0  34 37 31 62 31 39 64 35  39 35 5c 22 7d 22 3a 7b  |471b19d595\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-slbcj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-slbcj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-65-76",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.65.76",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.65.76"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756277,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-slbcj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1109 13:37:57.174512 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-llw55" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-llw55",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-1512",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "db16f550-684c-4985-bf0c-cf0bda642be6",
      ResourceVersion: (string) (len=5) "36124",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756272,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "400b0acc-a837-49f1-8bab-f1471b19d595",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  30 62 30 61 63 63 2d 61  |d\":\"400b0acc-a|
              00000090  38 33 37 2d 34 39 66 31  2d 38 62 61 62 2d 66 31  |837-49f1-8bab-f1|
              000000a0  34 37 31 62 31 39 64 35  39 35 5c 22 7d 22 3a 7b  |471b19d595\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  32 2e 36 33 5c 22 7d 22  |2.168.122.63\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wcrfv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wcrfv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-26-237",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.26.237",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.26.237"
        }
      },
      PodIP: (string) (len=14) "192.168.122.63",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.122.63"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63866756273,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://dbd96f5fe287b800a34e87edce2ea02896fdc0a314a0d59e01889841d983dff0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wcrfv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1109 13:37:57.176169 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-mbmw4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-mbmw4",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-1512",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d0ec9fe4-1831-46b8-b16a-f586372e40b3",
      ResourceVersion: (string) (len=5) "36130",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "400b0acc-a837-49f1-8bab-f1471b19d595",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  30 62 30 61 63 63 2d 61  |d\":\"400b0acc-a|
              00000090  38 33 37 2d 34 39 66 31  2d 38 62 61 62 2d 66 31  |837-49f1-8bab-f1|
              000000a0  34 37 31 62 31 39 64 35  39 35 5c 22 7d 22 3a 7b  |471b19d595\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 38  37 2e 35 32 5c 22 7d 22  |2.168.187.52\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wl7rt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wl7rt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-94-169",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.94.169",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.94.169"
        }
      },
      PodIP: (string) (len=14) "192.168.187.52",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.187.52"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63866756273,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://20063f6ab094609c7520a88dd25ea1fc660eb7fe23bbc349cd3807319bddb4d1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wl7rt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1109 13:37:57.178180 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-mrdnf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-mrdnf",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-1512",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "05b8a704-102e-482c-9dd1-ad640f9f9b0f",
      ResourceVersion: (string) (len=5) "36277",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756277,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "400b0acc-a837-49f1-8bab-f1471b19d595",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  30 62 30 61 63 63 2d 61  |d\":\"400b0acc-a|
              00000090  38 33 37 2d 34 39 66 31  2d 38 62 61 62 2d 66 31  |837-49f1-8bab-f1|
              000000a0  34 37 31 62 31 39 64 35  39 35 5c 22 7d 22 3a 7b  |471b19d595\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6l64l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6l64l",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1109 13:37:57.180418 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-q5gbg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-q5gbg",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-1512",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "91f05792-31b6-4a0c-917c-554bdc805888",
      ResourceVersion: (string) (len=5) "36274",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756277,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "400b0acc-a837-49f1-8bab-f1471b19d595",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  30 62 30 61 63 63 2d 61  |d\":\"400b0acc-a|
              00000090  38 33 37 2d 34 39 66 31  2d 38 62 61 62 2d 66 31  |837-49f1-8bab-f1|
              000000a0  34 37 31 62 31 39 64 35  39 35 5c 22 7d 22 3a 7b  |471b19d595\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hbsrx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hbsrx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-65-76",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1109 13:37:57.183310 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-rcfrj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-rcfrj",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-1512",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "99e2f8cd-03e6-4448-a0d7-22db59f3a2ea",
      ResourceVersion: (string) (len=5) "36290",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756277,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "400b0acc-a837-49f1-8bab-f1471b19d595",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  30 62 30 61 63 63 2d 61  |d\":\"400b0acc-a|
              00000090  38 33 37 2d 34 39 66 31  2d 38 62 61 62 2d 66 31  |837-49f1-8bab-f1|
              000000a0  34 37 31 62 31 39 64 35  39 35 5c 22 7d 22 3a 7b  |471b19d595\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sgjv8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sgjv8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1109 13:37:57.184099 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-rd92p" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-rd92p",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-1512",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f57f1ab9-b822-441a-b833-733cd87c25bc",
      ResourceVersion: (string) (len=5) "36291",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756277,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "400b0acc-a837-49f1-8bab-f1471b19d595",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  30 62 30 61 63 63 2d 61  |d\":\"400b0acc-a|
              00000090  38 33 37 2d 34 39 66 31  2d 38 62 61 62 2d 66 31  |837-49f1-8bab-f1|
              000000a0  34 37 31 62 31 39 64 35  39 35 5c 22 7d 22 3a 7b  |471b19d595\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6qxhq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6qxhq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1109 13:37:57.186780 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-t9qfl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-t9qfl",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-1512",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9e733b3f-0060-43cd-9bd3-a29a76a80175",
      ResourceVersion: (string) (len=5) "36139",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "400b0acc-a837-49f1-8bab-f1471b19d595",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  30 62 30 61 63 63 2d 61  |d\":\"400b0acc-a|
              00000090  38 33 37 2d 34 39 66 31  2d 38 62 61 62 2d 66 31  |837-49f1-8bab-f1|
              000000a0  34 37 31 62 31 39 64 35  39 35 5c 22 7d 22 3a 7b  |471b19d595\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 33 35  2e 31 32 30 5c 22 7d 22  |2.168.35.120\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jqcmn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jqcmn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-65-76",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.65.76",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.65.76"
        }
      },
      PodIP: (string) (len=14) "192.168.35.120",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.35.120"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63866756273,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2be723a31bcb68c2946e26f38cd3d6415a5b3c46162e6bd259074f36630b9bf8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jqcmn",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1109 13:37:57.190187 20 deployment.go:67] Pod "webserver-deployment-64bcfc6446-tkcbb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-tkcbb",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-1512",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "82fee92b-35d6-41ea-9587-da8d5d7ee286",
      ResourceVersion: (string) (len=5) "36292",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756277,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "400b0acc-a837-49f1-8bab-f1471b19d595",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  30 62 30 61 63 63 2d 61  |d\":\"400b0acc-a|
              00000090  38 33 37 2d 34 39 66 31  2d 38 62 61 62 2d 66 31  |837-49f1-8bab-f1|
              000000a0  34 37 31 62 31 39 64 35  39 35 5c 22 7d 22 3a 7b  |471b19d595\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6jb4q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6jb4q",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-65-76",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1109 13:37:57.191337 20 deployment.go:67] Pod "webserver-deployment-786f49d774-744gz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-744gz",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-1512",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0310b9c6-2ede-4200-962d-8bb952e96fcb",
      ResourceVersion: (string) (len=5) "36281",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756277,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "99cbc5fa-bf2a-4776-989f-2dce94b19f35",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 39  63 62 63 35 66 61 2d 62  |d\":\"99cbc5fa-b|
              00000090  66 32 61 2d 34 37 37 36  2d 39 38 39 66 2d 32 64  |f2a-4776-989f-2d|
              000000a0  63 65 39 34 62 31 39 66  33 35 5c 22 7d 22 3a 7b  |ce94b19f35\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4vg74",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4vg74",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-65-76",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1109 13:37:57.192281 20 deployment.go:67] Pod "webserver-deployment-786f49d774-bslmd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-bslmd",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-1512",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bc17c29a-ca9f-4537-8bf6-29c5b43e1e20",
      ResourceVersion: (string) (len=5) "36243",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756275,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "99cbc5fa-bf2a-4776-989f-2dce94b19f35",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 39  63 62 63 35 66 61 2d 62  |d\":\"99cbc5fa-b|
              00000090  66 32 61 2d 34 37 37 36  2d 39 38 39 66 2d 32 64  |f2a-4776-989f-2d|
              000000a0  63 65 39 34 62 31 39 66  33 35 5c 22 7d 22 3a 7b  |ce94b19f35\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 32 32 2e 38  5c 22 7d 22 3a 7b 22 2e  |68.122.8\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-86fgm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-86fgm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-26-237",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.26.237",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.26.237"
        }
      },
      PodIP: (string) (len=13) "192.168.122.8",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.122.8"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756275,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-86fgm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1109 13:37:57.194431 20 deployment.go:67] Pod "webserver-deployment-786f49d774-dbj78" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-dbj78",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-1512",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "153a541c-fc28-434c-86e3-2fcc66bb947c",
      ResourceVersion: (string) (len=5) "36253",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756275,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "99cbc5fa-bf2a-4776-989f-2dce94b19f35",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 39  63 62 63 35 66 61 2d 62  |d\":\"99cbc5fa-b|
              00000090  66 32 61 2d 34 37 37 36  2d 39 38 39 66 2d 32 64  |f2a-4776-989f-2d|
              000000a0  63 65 39 34 62 31 39 66  33 35 5c 22 7d 22 3a 7b  |ce94b19f35\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 33 35 2e 37 30  5c 22 7d 22 3a 7b 22 2e  |68.35.70\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6r8vz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6r8vz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-65-76",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.65.76",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.65.76"
        }
      },
      PodIP: (string) (len=13) "192.168.35.70",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.35.70"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756275,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6r8vz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1109 13:37:57.195630 20 deployment.go:67] Pod "webserver-deployment-786f49d774-fth6r" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-fth6r",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-1512",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "437955b4-fbcf-4ded-ab95-c9592fcceca1",
      ResourceVersion: (string) (len=5) "36287",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756277,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "99cbc5fa-bf2a-4776-989f-2dce94b19f35",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 39  63 62 63 35 66 61 2d 62  |d\":\"99cbc5fa-b|
              00000090  66 32 61 2d 34 37 37 36  2d 39 38 39 66 2d 32 64  |f2a-4776-989f-2d|
              000000a0  63 65 39 34 62 31 39 66  33 35 5c 22 7d 22 3a 7b  |ce94b19f35\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8bwj7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8bwj7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1109 13:37:57.196394 20 deployment.go:67] Pod "webserver-deployment-786f49d774-h84rs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-h84rs",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-1512",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aac5033a-e20a-454e-a624-12503e048b0b",
      ResourceVersion: (string) (len=5) "36284",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756277,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "99cbc5fa-bf2a-4776-989f-2dce94b19f35",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 39  63 62 63 35 66 61 2d 62  |d\":\"99cbc5fa-b|
              00000090  66 32 61 2d 34 37 37 36  2d 39 38 39 66 2d 32 64  |f2a-4776-989f-2d|
              000000a0  63 65 39 34 62 31 39 66  33 35 5c 22 7d 22 3a 7b  |ce94b19f35\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dfvzf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dfvzf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1109 13:37:57.197193 20 deployment.go:67] Pod "webserver-deployment-786f49d774-k8mcs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-k8mcs",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-1512",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "902c9086-eda0-4636-a206-1e841cbfad60",
      ResourceVersion: (string) (len=5) "36271",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756277,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "99cbc5fa-bf2a-4776-989f-2dce94b19f35",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 39  63 62 63 35 66 61 2d 62  |d\":\"99cbc5fa-b|
              00000090  66 32 61 2d 34 37 37 36  2d 39 38 39 66 2d 32 64  |f2a-4776-989f-2d|
              000000a0  63 65 39 34 62 31 39 66  33 35 5c 22 7d 22 3a 7b  |ce94b19f35\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ssglh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ssglh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-94-169",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1109 13:37:57.198366 20 deployment.go:67] Pod "webserver-deployment-786f49d774-ks7xm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-ks7xm",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-1512",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "99c5a155-66e0-4dc8-baaf-efc20be92cd9",
      ResourceVersion: (string) (len=5) "36247",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756275,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "99cbc5fa-bf2a-4776-989f-2dce94b19f35",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 39  63 62 63 35 66 61 2d 62  |d\":\"99cbc5fa-b|
              00000090  66 32 61 2d 34 37 37 36  2d 39 38 39 66 2d 32 64  |f2a-4776-989f-2d|
              000000a0  63 65 39 34 62 31 39 66  33 35 5c 22 7d 22 3a 7b  |ce94b19f35\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 38 37 2e 35  30 5c 22 7d 22 3a 7b 22  |68.187.50\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jmj8v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jmj8v",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-94-169",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.94.169",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.94.169"
        }
      },
      PodIP: (string) (len=14) "192.168.187.50",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.187.50"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756275,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jmj8v",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1109 13:37:57.199721 20 deployment.go:67] Pod "webserver-deployment-786f49d774-lcwmk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-lcwmk",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-1512",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ee0960d8-7d72-4a21-aa3b-41d8f23b87f5",
      ResourceVersion: (string) (len=5) "36240",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756275,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "99cbc5fa-bf2a-4776-989f-2dce94b19f35",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 39  63 62 63 35 66 61 2d 62  |d\":\"99cbc5fa-b|
              00000090  66 32 61 2d 34 37 37 36  2d 39 38 39 66 2d 32 64  |f2a-4776-989f-2d|
              000000a0  63 65 39 34 62 31 39 66  33 35 5c 22 7d 22 3a 7b  |ce94b19f35\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 32 32 2e 37  5c 22 7d 22 3a 7b 22 2e  |68.122.7\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lpxlh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lpxlh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-26-237",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.26.237",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.26.237"
        }
      },
      PodIP: (string) (len=13) "192.168.122.7",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.122.7"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756275,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-lpxlh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1109 13:37:57.200995 20 deployment.go:67] Pod "webserver-deployment-786f49d774-nvp6x" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-nvp6x",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-1512",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a38632b5-e783-471e-9ea7-1399c9bed008",
      ResourceVersion: (string) (len=5) "36250",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756275,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "99cbc5fa-bf2a-4776-989f-2dce94b19f35",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 39  63 62 63 35 66 61 2d 62  |d\":\"99cbc5fa-b|
              00000090  66 32 61 2d 34 37 37 36  2d 39 38 39 66 2d 32 64  |f2a-4776-989f-2d|
              000000a0  63 65 39 34 62 31 39 66  33 35 5c 22 7d 22 3a 7b  |ce94b19f35\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 33 35 2e 37 33  5c 22 7d 22 3a 7b 22 2e  |68.35.73\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pnx5v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pnx5v",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-65-76",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.65.76",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.65.76"
        }
      },
      PodIP: (string) (len=13) "192.168.35.73",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.35.73"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756275,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pnx5v",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1109 13:37:57.202263 20 deployment.go:67] Pod "webserver-deployment-786f49d774-phbdt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-phbdt",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-1512",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "962c5872-7f21-4617-9b1e-6dc20a4061be",
      ResourceVersion: (string) (len=5) "36280",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756277,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "99cbc5fa-bf2a-4776-989f-2dce94b19f35",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 39  63 62 63 35 66 61 2d 62  |d\":\"99cbc5fa-b|
              00000090  66 32 61 2d 34 37 37 36  2d 39 38 39 66 2d 32 64  |f2a-4776-989f-2d|
              000000a0  63 65 39 34 62 31 39 66  33 35 5c 22 7d 22 3a 7b  |ce94b19f35\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tl6wq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tl6wq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1109 13:37:57.203850 20 deployment.go:67] Pod "webserver-deployment-786f49d774-pnv5j" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-pnv5j",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-1512",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7f239cdb-025a-4654-972a-89f516f14bb6",
      ResourceVersion: (string) (len=5) "36286",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756277,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "99cbc5fa-bf2a-4776-989f-2dce94b19f35",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 39  63 62 63 35 66 61 2d 62  |d\":\"99cbc5fa-b|
              00000090  66 32 61 2d 34 37 37 36  2d 39 38 39 66 2d 32 64  |f2a-4776-989f-2d|
              000000a0  63 65 39 34 62 31 39 66  33 35 5c 22 7d 22 3a 7b  |ce94b19f35\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gdkd2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gdkd2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1109 13:37:57.205447 20 deployment.go:67] Pod "webserver-deployment-786f49d774-t2gdn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-t2gdn",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-1512",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8b5da590-544e-4440-89af-e364afa9f334",
      ResourceVersion: (string) (len=5) "36279",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756277,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "99cbc5fa-bf2a-4776-989f-2dce94b19f35",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 39  63 62 63 35 66 61 2d 62  |d\":\"99cbc5fa-b|
              00000090  66 32 61 2d 34 37 37 36  2d 39 38 39 66 2d 32 64  |f2a-4776-989f-2d|
              000000a0  63 65 39 34 62 31 39 66  33 35 5c 22 7d 22 3a 7b  |ce94b19f35\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h7fzp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h7fzp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-94-169",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1109 13:37:57.207499 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1512" for this suite. @ 11/09/24 13:37:57.22
â€¢ [4.278 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 11/09/24 13:37:57.228
  I1109 13:37:57.228399 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename projected @ 11/09/24 13:37:57.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:37:57.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:37:57.259
  STEP: Creating configMap with name projected-configmap-test-volume-0bde01cb-d01d-4e2e-94dc-9e023779ab53 @ 11/09/24 13:37:57.262
  STEP: Creating a pod to test consume configMaps @ 11/09/24 13:37:57.27
  E1109 13:37:57.763110      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:37:58.763371      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:37:59.763412      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:00.763594      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:38:01.294
  I1109 13:38:01.298063 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-projected-configmaps-ecc3ef30-765a-4f5c-abd1-f81e3798ed45 container agnhost-container: <nil>
  STEP: delete the pod @ 11/09/24 13:38:01.303
  I1109 13:38:01.319782 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8886" for this suite. @ 11/09/24 13:38:01.323
â€¢ [4.103 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 11/09/24 13:38:01.331
  I1109 13:38:01.331035 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename secrets @ 11/09/24 13:38:01.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:38:01.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:38:01.348
  STEP: Creating projection with secret that has name secret-emptykey-test-dc01e757-aa02-4648-929c-443c0b815d22 @ 11/09/24 13:38:01.351
  I1109 13:38:01.352595 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7873" for this suite. @ 11/09/24 13:38:01.356
â€¢ [0.032 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:193
  STEP: Creating a kubernetes client @ 11/09/24 13:38:01.363
  I1109 13:38:01.363615 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename dns @ 11/09/24 13:38:01.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:38:01.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:38:01.38
  STEP: Creating a test headless service @ 11/09/24 13:38:01.384
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6929 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-6929;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6929 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-6929;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6929.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-6929.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6929.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-6929.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6929.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-6929.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6929.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-6929.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6929.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-6929.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6929.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-6929.svc;check="$$(dig +notcp +noall +answer +search 156.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.156_udp@PTR;check="$$(dig +tcp +noall +answer +search 156.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.156_tcp@PTR;sleep 1; done
   @ 11/09/24 13:38:01.404
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6929 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-6929;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6929 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-6929;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6929.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-6929.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6929.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-6929.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6929.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-6929.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6929.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-6929.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6929.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-6929.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6929.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-6929.svc;check="$$(dig +notcp +noall +answer +search 156.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.156_udp@PTR;check="$$(dig +tcp +noall +answer +search 156.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.156_tcp@PTR;sleep 1; done
   @ 11/09/24 13:38:01.404
  STEP: creating a pod to probe DNS @ 11/09/24 13:38:01.404
  STEP: submitting the pod to kubernetes @ 11/09/24 13:38:01.404
  E1109 13:38:01.764551      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:02.765484      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 11/09/24 13:38:03.43
  STEP: looking for the results for each expected name from probers @ 11/09/24 13:38:03.456
  I1109 13:38:03.469594 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-6929/dns-test-dfff0ded-e673-4ada-aef1-4c76984e075b: the server could not find the requested resource (get pods dns-test-dfff0ded-e673-4ada-aef1-4c76984e075b)
  I1109 13:38:03.482104 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-6929/dns-test-dfff0ded-e673-4ada-aef1-4c76984e075b: the server could not find the requested resource (get pods dns-test-dfff0ded-e673-4ada-aef1-4c76984e075b)
  I1109 13:38:03.494434 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-6929 from pod dns-6929/dns-test-dfff0ded-e673-4ada-aef1-4c76984e075b: the server could not find the requested resource (get pods dns-test-dfff0ded-e673-4ada-aef1-4c76984e075b)
  I1109 13:38:03.508164 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-6929 from pod dns-6929/dns-test-dfff0ded-e673-4ada-aef1-4c76984e075b: the server could not find the requested resource (get pods dns-test-dfff0ded-e673-4ada-aef1-4c76984e075b)
  I1109 13:38:03.512966 20 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-6929.svc from pod dns-6929/dns-test-dfff0ded-e673-4ada-aef1-4c76984e075b: the server could not find the requested resource (get pods dns-test-dfff0ded-e673-4ada-aef1-4c76984e075b)
  I1109 13:38:03.516793 20 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-6929.svc from pod dns-6929/dns-test-dfff0ded-e673-4ada-aef1-4c76984e075b: the server could not find the requested resource (get pods dns-test-dfff0ded-e673-4ada-aef1-4c76984e075b)
  I1109 13:38:03.522670 20 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6929.svc from pod dns-6929/dns-test-dfff0ded-e673-4ada-aef1-4c76984e075b: the server could not find the requested resource (get pods dns-test-dfff0ded-e673-4ada-aef1-4c76984e075b)
  I1109 13:38:03.526167 20 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6929.svc from pod dns-6929/dns-test-dfff0ded-e673-4ada-aef1-4c76984e075b: the server could not find the requested resource (get pods dns-test-dfff0ded-e673-4ada-aef1-4c76984e075b)
  I1109 13:38:03.550434 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-6929/dns-test-dfff0ded-e673-4ada-aef1-4c76984e075b: the server could not find the requested resource (get pods dns-test-dfff0ded-e673-4ada-aef1-4c76984e075b)
  I1109 13:38:03.553478 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-6929/dns-test-dfff0ded-e673-4ada-aef1-4c76984e075b: the server could not find the requested resource (get pods dns-test-dfff0ded-e673-4ada-aef1-4c76984e075b)
  I1109 13:38:03.561738 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-6929 from pod dns-6929/dns-test-dfff0ded-e673-4ada-aef1-4c76984e075b: the server could not find the requested resource (get pods dns-test-dfff0ded-e673-4ada-aef1-4c76984e075b)
  I1109 13:38:03.568306 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-6929 from pod dns-6929/dns-test-dfff0ded-e673-4ada-aef1-4c76984e075b: the server could not find the requested resource (get pods dns-test-dfff0ded-e673-4ada-aef1-4c76984e075b)
  I1109 13:38:03.572076 20 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-6929.svc from pod dns-6929/dns-test-dfff0ded-e673-4ada-aef1-4c76984e075b: the server could not find the requested resource (get pods dns-test-dfff0ded-e673-4ada-aef1-4c76984e075b)
  I1109 13:38:03.578422 20 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-6929.svc from pod dns-6929/dns-test-dfff0ded-e673-4ada-aef1-4c76984e075b: the server could not find the requested resource (get pods dns-test-dfff0ded-e673-4ada-aef1-4c76984e075b)
  I1109 13:38:03.583394 20 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6929.svc from pod dns-6929/dns-test-dfff0ded-e673-4ada-aef1-4c76984e075b: the server could not find the requested resource (get pods dns-test-dfff0ded-e673-4ada-aef1-4c76984e075b)
  I1109 13:38:03.604325 20 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6929.svc from pod dns-6929/dns-test-dfff0ded-e673-4ada-aef1-4c76984e075b: the server could not find the requested resource (get pods dns-test-dfff0ded-e673-4ada-aef1-4c76984e075b)
  I1109 13:38:03.654330 20 dns_common.go:489] Lookups using dns-6929/dns-test-dfff0ded-e673-4ada-aef1-4c76984e075b failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-6929 wheezy_tcp@dns-test-service.dns-6929 wheezy_udp@dns-test-service.dns-6929.svc wheezy_tcp@dns-test-service.dns-6929.svc wheezy_udp@_http._tcp.dns-test-service.dns-6929.svc wheezy_tcp@_http._tcp.dns-test-service.dns-6929.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6929 jessie_tcp@dns-test-service.dns-6929 jessie_udp@dns-test-service.dns-6929.svc jessie_tcp@dns-test-service.dns-6929.svc jessie_udp@_http._tcp.dns-test-service.dns-6929.svc jessie_tcp@_http._tcp.dns-test-service.dns-6929.svc]

  I1109 13:38:03.674145 20 dns_common.go:495] Pod client logs for webserver: 
  I1109 13:38:03.681168 20 dns_common.go:495] Pod client logs for querier: 
  I1109 13:38:03.688504 20 dns_common.go:495] Pod client logs for jessie-querier: 
  E1109 13:38:03.766056      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:04.766121      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:05.766597      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:06.766687      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:07.767442      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:38:08.545377 20 dns_common.go:527] DNS probes using dns-6929/dns-test-dfff0ded-e673-4ada-aef1-4c76984e075b succeeded

  STEP: deleting the pod @ 11/09/24 13:38:08.545
  STEP: deleting the test service @ 11/09/24 13:38:08.562
  STEP: deleting the test headless service @ 11/09/24 13:38:08.591
  I1109 13:38:08.602789 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6929" for this suite. @ 11/09/24 13:38:08.608
â€¢ [7.250 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 11/09/24 13:38:08.613
  I1109 13:38:08.613830 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename prestop @ 11/09/24 13:38:08.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:38:08.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:38:08.63
  STEP: Creating server pod server in namespace prestop-4404 @ 11/09/24 13:38:08.633
  STEP: Waiting for pods to come up. @ 11/09/24 13:38:08.639
  E1109 13:38:08.768525      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:09.768610      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-4404 @ 11/09/24 13:38:10.654
  E1109 13:38:10.769542      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:11.769754      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 11/09/24 13:38:12.672
  E1109 13:38:12.769853      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:13.769944      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:14.770914      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:15.771789      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:16.772496      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:38:17.685963 20 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 11/09/24 13:38:17.686
  I1109 13:38:17.698531 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-4404" for this suite. @ 11/09/24 13:38:17.702
â€¢ [9.094 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 11/09/24 13:38:17.707
  I1109 13:38:17.707709 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename runtimeclass @ 11/09/24 13:38:17.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:38:17.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:38:17.724
  STEP: getting /apis @ 11/09/24 13:38:17.726
  STEP: getting /apis/node.k8s.io @ 11/09/24 13:38:17.729
  STEP: getting /apis/node.k8s.io/v1 @ 11/09/24 13:38:17.73
  STEP: creating @ 11/09/24 13:38:17.731
  STEP: watching @ 11/09/24 13:38:17.746
  I1109 13:38:17.746200 20 runtimeclass.go:275] starting watch
  STEP: getting @ 11/09/24 13:38:17.751
  STEP: listing @ 11/09/24 13:38:17.754
  STEP: patching @ 11/09/24 13:38:17.757
  STEP: updating @ 11/09/24 13:38:17.762
  I1109 13:38:17.767726 20 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 11/09/24 13:38:17.767
  E1109 13:38:17.772881      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting a collection @ 11/09/24 13:38:17.779
  I1109 13:38:17.795519 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3762" for this suite. @ 11/09/24 13:38:17.799
â€¢ [0.098 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 11/09/24 13:38:17.805
  I1109 13:38:17.805755 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename csi-storageclass @ 11/09/24 13:38:17.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:38:17.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:38:17.821
  STEP: Creating a StorageClass @ 11/09/24 13:38:17.824
  STEP: Get StorageClass "e2e-724wk" @ 11/09/24 13:38:17.828
  STEP: Patching the StorageClass "e2e-724wk" @ 11/09/24 13:38:17.83
  STEP: Delete StorageClass "e2e-724wk" @ 11/09/24 13:38:17.837
  STEP: Confirm deletion of StorageClass "e2e-724wk" @ 11/09/24 13:38:17.844
  STEP: Create a replacement StorageClass @ 11/09/24 13:38:17.848
  STEP: Updating StorageClass "e2e-v2-zv2s7" @ 11/09/24 13:38:17.851
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-zv2s7=updated" @ 11/09/24 13:38:17.859
  STEP: Deleting StorageClass "e2e-v2-zv2s7" via DeleteCollection @ 11/09/24 13:38:17.861
  STEP: Confirm deletion of StorageClass "e2e-v2-zv2s7" @ 11/09/24 13:38:17.868
  I1109 13:38:17.871423 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-7521" for this suite. @ 11/09/24 13:38:17.874
â€¢ [0.077 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 11/09/24 13:38:17.882
  I1109 13:38:17.882475 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename projected @ 11/09/24 13:38:17.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:38:17.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:38:17.898
  STEP: Creating configMap with name projected-configmap-test-volume-map-a7b233f6-8906-4b39-9f3e-5eb471fa0581 @ 11/09/24 13:38:17.9
  STEP: Creating a pod to test consume configMaps @ 11/09/24 13:38:17.904
  E1109 13:38:18.773423      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:19.773684      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:38:19.923
  I1109 13:38:19.927303 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-projected-configmaps-a564cf99-0cb6-426f-8ce3-b3157914a98b container agnhost-container: <nil>
  STEP: delete the pod @ 11/09/24 13:38:19.934
  I1109 13:38:19.956795 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7091" for this suite. @ 11/09/24 13:38:19.961
â€¢ [2.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:626
  STEP: Creating a kubernetes client @ 11/09/24 13:38:19.969
  I1109 13:38:19.969483 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename sched-preemption @ 11/09/24 13:38:19.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:38:19.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:38:19.987
  I1109 13:38:20.002422 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1109 13:38:20.774623      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:21.774726      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:22.774881      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:23.774956      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:24.775970      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:25.776444      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:26.776595      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:27.776627      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:28.777544      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:29.778466      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:30.779152      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:31.779284      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:32.780200      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:33.780334      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:34.780406      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:35.781191      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:36.781404      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:37.781549      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:38.781761      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:39.782023      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:40.782108      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:41.782212      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:42.782302      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:43.782547      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:44.782691      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:45.783584      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:46.783723      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:47.784675      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:48.784893      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:49.785437      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:50.786358      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:51.787436      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:52.788417      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:53.788605      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:54.789433      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:55.789919      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:56.790457      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:57.790633      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:58.790799      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:38:59.791051      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:39:00.791677      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:39:01.791875      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:39:02.791969      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:39:03.792292      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:39:04.792452      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:39:05.792513      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:39:06.792608      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:39:07.792827      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:39:08.793905      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:39:09.793970      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:39:10.794676      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:39:11.795449      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:39:12.796374      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:39:13.796471      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:39:14.796567      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:39:15.797172      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:39:16.798114      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:39:17.798452      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:39:18.799423      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:39:19.800440      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:39:20.007621 20 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 11/09/24 13:39:20.01
  I1109 13:39:20.010818 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename sched-preemption-path @ 11/09/24 13:39:20.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:39:20.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:39:20.029
  STEP: Finding an available node @ 11/09/24 13:39:20.032
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 11/09/24 13:39:20.032
  E1109 13:39:20.801271      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:39:21.801428      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 11/09/24 13:39:22.056
  I1109 13:39:22.068178 20 preemption.go:585] found a healthy node: ip-172-31-65-76
  E1109 13:39:22.801756      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:39:23.801888      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:39:24.802125      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:39:25.802804      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:39:26.803687      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:39:27.804388      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:39:28.136026 20 preemption.go:708] pods created so far: [1 1 1]
  I1109 13:39:28.136055 20 preemption.go:709] length of pods created so far: 3
  E1109 13:39:28.805018      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:39:29.805252      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:39:30.805649      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:39:31.805736      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:39:32.147532 20 preemption.go:726] pods created so far: [2 2 1]
  E1109 13:39:32.806700      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:39:33.806999      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:39:34.807120      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:39:35.807470      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:39:36.808428      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:39:37.808621      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:39:38.809430      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:39:39.244456 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-6012" for this suite. @ 11/09/24 13:39:39.248
  I1109 13:39:39.254323 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-178" for this suite. @ 11/09/24 13:39:39.258
â€¢ [79.295 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 11/09/24 13:39:39.264
  I1109 13:39:39.264848 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename emptydir @ 11/09/24 13:39:39.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:39:39.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:39:39.283
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 11/09/24 13:39:39.285
  E1109 13:39:39.810393      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:39:40.810588      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:39:41.810868      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:39:42.811114      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:39:43.31
  I1109 13:39:43.314347 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-c83cfb63-d8b7-4b6f-b38e-79b8dfd29b24 container test-container: <nil>
  STEP: delete the pod @ 11/09/24 13:39:43.329
  I1109 13:39:43.344075 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7909" for this suite. @ 11/09/24 13:39:43.348
â€¢ [4.092 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 11/09/24 13:39:43.357
  I1109 13:39:43.357128 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename validating-admission-policy @ 11/09/24 13:39:43.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:39:43.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:39:43.372
  STEP: creating a policy with variables @ 11/09/24 13:39:43.379
  STEP: waiting until the marker is denied @ 11/09/24 13:39:43.397
  E1109 13:39:43.811792      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: testing a replicated Deployment to be allowed @ 11/09/24 13:39:43.904
  STEP: testing a non-replicated ReplicaSet not to be denied @ 11/09/24 13:39:43.916
  I1109 13:39:43.977915 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-6276" for this suite. @ 11/09/24 13:39:43.984
â€¢ [0.636 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 11/09/24 13:39:43.993
  I1109 13:39:43.993466 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename webhook @ 11/09/24 13:39:43.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:39:44.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:39:44.014
  STEP: Setting up server cert @ 11/09/24 13:39:44.035
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/09/24 13:39:44.222
  STEP: Deploying the webhook pod @ 11/09/24 13:39:44.233
  STEP: Wait for the deployment to be ready @ 11/09/24 13:39:44.245
  I1109 13:39:44.259805 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1109 13:39:44.811962      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:39:45.812190      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/09/24 13:39:46.272
  STEP: Verifying the service has paired with the endpoint @ 11/09/24 13:39:46.28
  E1109 13:39:46.812412      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:39:47.281038 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 11/09/24 13:39:47.289
  STEP: create a pod @ 11/09/24 13:39:47.301
  E1109 13:39:47.812508      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:39:48.812571      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 11/09/24 13:39:49.317
  I1109 13:39:49.317170 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=webhook-1455 attach --namespace=webhook-1455 to-be-attached-pod -i -c=container1'
  I1109 13:39:49.379384 20 builder.go:135] rc: 1
  I1109 13:39:49.424791 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1455" for this suite. @ 11/09/24 13:39:49.428
  STEP: Destroying namespace "webhook-markers-5732" for this suite. @ 11/09/24 13:39:49.435
â€¢ [5.450 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 11/09/24 13:39:49.443
  I1109 13:39:49.443480 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename discovery @ 11/09/24 13:39:49.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:39:49.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:39:49.462
  STEP: Setting up server cert @ 11/09/24 13:39:49.466
  E1109 13:39:49.813249      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:39:49.912981 20 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I1109 13:39:49.914010 20 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I1109 13:39:49.914029 20 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I1109 13:39:49.914036 20 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I1109 13:39:49.914042 20 discovery.go:139] Checking APIGroup: apps
  I1109 13:39:49.914950 20 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I1109 13:39:49.914962 20 discovery.go:148] Versions found [{apps/v1 v1}]
  I1109 13:39:49.914968 20 discovery.go:154] apps/v1 matches apps/v1
  I1109 13:39:49.914975 20 discovery.go:139] Checking APIGroup: events.k8s.io
  I1109 13:39:49.915812 20 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I1109 13:39:49.915823 20 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I1109 13:39:49.915829 20 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I1109 13:39:49.915835 20 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I1109 13:39:49.916681 20 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I1109 13:39:49.916693 20 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I1109 13:39:49.916699 20 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I1109 13:39:49.916705 20 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I1109 13:39:49.917472 20 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I1109 13:39:49.917484 20 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I1109 13:39:49.917489 20 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I1109 13:39:49.917496 20 discovery.go:139] Checking APIGroup: autoscaling
  I1109 13:39:49.918287 20 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I1109 13:39:49.918299 20 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I1109 13:39:49.918304 20 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I1109 13:39:49.918311 20 discovery.go:139] Checking APIGroup: batch
  I1109 13:39:49.919105 20 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I1109 13:39:49.919113 20 discovery.go:148] Versions found [{batch/v1 v1}]
  I1109 13:39:49.919119 20 discovery.go:154] batch/v1 matches batch/v1
  I1109 13:39:49.919124 20 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I1109 13:39:49.919907 20 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I1109 13:39:49.919919 20 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I1109 13:39:49.919925 20 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I1109 13:39:49.919973 20 discovery.go:139] Checking APIGroup: networking.k8s.io
  I1109 13:39:49.920754 20 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I1109 13:39:49.920762 20 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I1109 13:39:49.920768 20 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I1109 13:39:49.920773 20 discovery.go:139] Checking APIGroup: policy
  I1109 13:39:49.921703 20 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I1109 13:39:49.921725 20 discovery.go:148] Versions found [{policy/v1 v1}]
  I1109 13:39:49.921731 20 discovery.go:154] policy/v1 matches policy/v1
  I1109 13:39:49.921738 20 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I1109 13:39:49.922594 20 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I1109 13:39:49.922610 20 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I1109 13:39:49.922616 20 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I1109 13:39:49.922622 20 discovery.go:139] Checking APIGroup: storage.k8s.io
  I1109 13:39:49.923423 20 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I1109 13:39:49.923434 20 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I1109 13:39:49.923440 20 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I1109 13:39:49.923446 20 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I1109 13:39:49.924275 20 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I1109 13:39:49.924285 20 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I1109 13:39:49.924290 20 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I1109 13:39:49.924296 20 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I1109 13:39:49.925046 20 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I1109 13:39:49.925095 20 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I1109 13:39:49.925102 20 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I1109 13:39:49.925128 20 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I1109 13:39:49.925952 20 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I1109 13:39:49.925967 20 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I1109 13:39:49.925973 20 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I1109 13:39:49.925980 20 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I1109 13:39:49.926839 20 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I1109 13:39:49.926851 20 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I1109 13:39:49.926856 20 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I1109 13:39:49.926863 20 discovery.go:139] Checking APIGroup: node.k8s.io
  I1109 13:39:49.927657 20 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I1109 13:39:49.927666 20 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I1109 13:39:49.927672 20 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I1109 13:39:49.927679 20 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I1109 13:39:49.928651 20 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I1109 13:39:49.928683 20 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I1109 13:39:49.928690 20 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I1109 13:39:49.928696 20 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I1109 13:39:49.929758 20 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I1109 13:39:49.929784 20 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  I1109 13:39:49.929789 20 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I1109 13:39:49.929793 20 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I1109 13:39:49.930659 20 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I1109 13:39:49.930673 20 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I1109 13:39:49.930679 20 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I1109 13:39:49.930771 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-8246" for this suite. @ 11/09/24 13:39:49.935
â€¢ [0.499 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 11/09/24 13:39:49.942
  I1109 13:39:49.942479 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename replicaset @ 11/09/24 13:39:49.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:39:49.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:39:49.966
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 11/09/24 13:39:49.969
  E1109 13:39:50.813582      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:39:51.813714      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 11/09/24 13:39:51.994
  STEP: Then the orphan pod is adopted @ 11/09/24 13:39:52.001
  E1109 13:39:52.813825      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 11/09/24 13:39:53.011
  I1109 13:39:53.015111 20 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 11/09/24 13:39:53.026
  E1109 13:39:53.813963      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:39:54.034934 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9069" for this suite. @ 11/09/24 13:39:54.038
â€¢ [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 11/09/24 13:39:54.045
  I1109 13:39:54.045770 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename svc-latency @ 11/09/24 13:39:54.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:39:54.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:39:54.063
  I1109 13:39:54.065410 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-1311 @ 11/09/24 13:39:54.066
  I1109 13:39:54.072843      20 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-1311, replica count: 1
  E1109 13:39:54.814222      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:39:55.123659      20 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1109 13:39:55.234695 20 service_latency.go:356] Created: latency-svc-gtv7g
  I1109 13:39:55.242728 20 service_latency.go:363] Got endpoints: latency-svc-gtv7g [18.457335ms]
  I1109 13:39:55.255889 20 service_latency.go:356] Created: latency-svc-vck9j
  I1109 13:39:55.258988 20 service_latency.go:363] Got endpoints: latency-svc-vck9j [16.154543ms]
  I1109 13:39:55.262360 20 service_latency.go:356] Created: latency-svc-d2dk4
  I1109 13:39:55.267859 20 service_latency.go:356] Created: latency-svc-5w657
  I1109 13:39:55.271340 20 service_latency.go:363] Got endpoints: latency-svc-d2dk4 [27.780388ms]
  I1109 13:39:55.273280 20 service_latency.go:363] Got endpoints: latency-svc-5w657 [29.6505ms]
  I1109 13:39:55.275139 20 service_latency.go:356] Created: latency-svc-tfx5t
  I1109 13:39:55.281203 20 service_latency.go:363] Got endpoints: latency-svc-tfx5t [37.334908ms]
  I1109 13:39:55.283911 20 service_latency.go:356] Created: latency-svc-dqx8c
  I1109 13:39:55.291537 20 service_latency.go:363] Got endpoints: latency-svc-dqx8c [47.687686ms]
  I1109 13:39:55.293855 20 service_latency.go:356] Created: latency-svc-tpggb
  I1109 13:39:55.300471 20 service_latency.go:363] Got endpoints: latency-svc-tpggb [56.726896ms]
  I1109 13:39:55.301912 20 service_latency.go:356] Created: latency-svc-2f29z
  I1109 13:39:55.306162 20 service_latency.go:363] Got endpoints: latency-svc-2f29z [62.4626ms]
  I1109 13:39:55.307906 20 service_latency.go:356] Created: latency-svc-57w4q
  I1109 13:39:55.315071 20 service_latency.go:363] Got endpoints: latency-svc-57w4q [71.250773ms]
  I1109 13:39:55.317887 20 service_latency.go:356] Created: latency-svc-swzm6
  I1109 13:39:55.322081 20 service_latency.go:363] Got endpoints: latency-svc-swzm6 [78.299115ms]
  I1109 13:39:55.324509 20 service_latency.go:356] Created: latency-svc-c4lgx
  I1109 13:39:55.329219 20 service_latency.go:363] Got endpoints: latency-svc-c4lgx [85.31393ms]
  I1109 13:39:55.395207 20 service_latency.go:356] Created: latency-svc-qzfdr
  I1109 13:39:55.399834 20 service_latency.go:356] Created: latency-svc-87r8k
  I1109 13:39:55.400348 20 service_latency.go:356] Created: latency-svc-dtwcm
  I1109 13:39:55.407593 20 service_latency.go:363] Got endpoints: latency-svc-qzfdr [163.614466ms]
  I1109 13:39:55.408153 20 service_latency.go:356] Created: latency-svc-gkdw7
  I1109 13:39:55.408244 20 service_latency.go:356] Created: latency-svc-zvj8d
  I1109 13:39:55.408259 20 service_latency.go:356] Created: latency-svc-zp8h5
  I1109 13:39:55.408328 20 service_latency.go:356] Created: latency-svc-xss4g
  I1109 13:39:55.408329 20 service_latency.go:356] Created: latency-svc-vr28d
  I1109 13:39:55.408417 20 service_latency.go:356] Created: latency-svc-kcrmj
  I1109 13:39:55.408499 20 service_latency.go:356] Created: latency-svc-42qm2
  I1109 13:39:55.408645 20 service_latency.go:356] Created: latency-svc-h5wrf
  I1109 13:39:55.408781 20 service_latency.go:356] Created: latency-svc-qjjcq
  I1109 13:39:55.408861 20 service_latency.go:356] Created: latency-svc-kmx6b
  I1109 13:39:55.408870 20 service_latency.go:356] Created: latency-svc-c9rdl
  I1109 13:39:55.410476 20 service_latency.go:356] Created: latency-svc-dz7zs
  I1109 13:39:55.417786 20 service_latency.go:363] Got endpoints: latency-svc-87r8k [173.735452ms]
  I1109 13:39:55.422291 20 service_latency.go:363] Got endpoints: latency-svc-h5wrf [100.1786ms]
  I1109 13:39:55.424596 20 service_latency.go:363] Got endpoints: latency-svc-dtwcm [151.283145ms]
  I1109 13:39:55.424758 20 service_latency.go:363] Got endpoints: latency-svc-kcrmj [180.73493ms]
  I1109 13:39:55.430761 20 service_latency.go:363] Got endpoints: latency-svc-gkdw7 [115.643242ms]
  I1109 13:39:55.430845 20 service_latency.go:363] Got endpoints: latency-svc-kmx6b [171.821998ms]
  I1109 13:39:55.430913 20 service_latency.go:363] Got endpoints: latency-svc-42qm2 [101.634311ms]
  I1109 13:39:55.527843 20 service_latency.go:363] Got endpoints: latency-svc-xss4g [283.900252ms]
  I1109 13:39:55.528433 20 service_latency.go:363] Got endpoints: latency-svc-zp8h5 [222.235928ms]
  I1109 13:39:55.528667 20 service_latency.go:363] Got endpoints: latency-svc-vr28d [257.247017ms]
  I1109 13:39:55.528836 20 service_latency.go:363] Got endpoints: latency-svc-c9rdl [228.249548ms]
  I1109 13:39:55.528955 20 service_latency.go:363] Got endpoints: latency-svc-dz7zs [247.71433ms]
  I1109 13:39:55.532254 20 service_latency.go:363] Got endpoints: latency-svc-qjjcq [288.288063ms]
  I1109 13:39:55.534087 20 service_latency.go:356] Created: latency-svc-d4bj8
  I1109 13:39:55.536265 20 service_latency.go:363] Got endpoints: latency-svc-zvj8d [244.667757ms]
  I1109 13:39:55.542059 20 service_latency.go:363] Got endpoints: latency-svc-d4bj8 [134.432445ms]
  I1109 13:39:55.545114 20 service_latency.go:356] Created: latency-svc-4hm9d
  I1109 13:39:55.552015 20 service_latency.go:363] Got endpoints: latency-svc-4hm9d [134.192369ms]
  I1109 13:39:55.552332 20 service_latency.go:356] Created: latency-svc-snc5r
  I1109 13:39:55.555591 20 service_latency.go:356] Created: latency-svc-4pqf5
  I1109 13:39:55.557433 20 service_latency.go:363] Got endpoints: latency-svc-snc5r [135.066344ms]
  I1109 13:39:55.562295 20 service_latency.go:356] Created: latency-svc-47qls
  I1109 13:39:55.563291 20 service_latency.go:363] Got endpoints: latency-svc-4pqf5 [138.511516ms]
  I1109 13:39:55.568768 20 service_latency.go:363] Got endpoints: latency-svc-47qls [144.141586ms]
  I1109 13:39:55.573304 20 service_latency.go:356] Created: latency-svc-nbzdr
  I1109 13:39:55.575795 20 service_latency.go:363] Got endpoints: latency-svc-nbzdr [144.974416ms]
  I1109 13:39:55.581199 20 service_latency.go:356] Created: latency-svc-jsfdj
  I1109 13:39:55.586387 20 service_latency.go:363] Got endpoints: latency-svc-jsfdj [155.518853ms]
  I1109 13:39:55.586750 20 service_latency.go:356] Created: latency-svc-cwfcj
  I1109 13:39:55.591585 20 service_latency.go:363] Got endpoints: latency-svc-cwfcj [160.657409ms]
  I1109 13:39:55.596144 20 service_latency.go:356] Created: latency-svc-fc7gc
  I1109 13:39:55.601060 20 service_latency.go:363] Got endpoints: latency-svc-fc7gc [73.138656ms]
  I1109 13:39:55.604091 20 service_latency.go:356] Created: latency-svc-qtzxz
  I1109 13:39:55.610771 20 service_latency.go:363] Got endpoints: latency-svc-qtzxz [82.146925ms]
  I1109 13:39:55.611811 20 service_latency.go:356] Created: latency-svc-c7chm
  I1109 13:39:55.617179 20 service_latency.go:363] Got endpoints: latency-svc-c7chm [88.304664ms]
  I1109 13:39:55.620117 20 service_latency.go:356] Created: latency-svc-snc8d
  I1109 13:39:55.625103 20 service_latency.go:356] Created: latency-svc-v97j5
  I1109 13:39:55.630661 20 service_latency.go:356] Created: latency-svc-8hg9f
  I1109 13:39:55.635853 20 service_latency.go:356] Created: latency-svc-gt9fj
  I1109 13:39:55.641037 20 service_latency.go:356] Created: latency-svc-6xl7r
  I1109 13:39:55.643450 20 service_latency.go:363] Got endpoints: latency-svc-snc8d [114.643027ms]
  I1109 13:39:55.648414 20 service_latency.go:356] Created: latency-svc-cv4fg
  I1109 13:39:55.655785 20 service_latency.go:356] Created: latency-svc-2lh6m
  I1109 13:39:55.660686 20 service_latency.go:356] Created: latency-svc-twz2w
  I1109 13:39:55.665722 20 service_latency.go:356] Created: latency-svc-4nf89
  I1109 13:39:55.670934 20 service_latency.go:356] Created: latency-svc-4j2l8
  I1109 13:39:55.676973 20 service_latency.go:356] Created: latency-svc-gpvdn
  I1109 13:39:55.681632 20 service_latency.go:356] Created: latency-svc-mdzd9
  I1109 13:39:55.687992 20 service_latency.go:356] Created: latency-svc-qgmbm
  I1109 13:39:55.690298 20 service_latency.go:363] Got endpoints: latency-svc-v97j5 [161.282565ms]
  I1109 13:39:55.694626 20 service_latency.go:356] Created: latency-svc-dfjsc
  I1109 13:39:55.699587 20 service_latency.go:356] Created: latency-svc-528x8
  I1109 13:39:55.705704 20 service_latency.go:356] Created: latency-svc-xsbjs
  I1109 13:39:55.711478 20 service_latency.go:356] Created: latency-svc-7w9tc
  I1109 13:39:55.742159 20 service_latency.go:363] Got endpoints: latency-svc-8hg9f [209.869934ms]
  I1109 13:39:55.753013 20 service_latency.go:356] Created: latency-svc-vb4fx
  I1109 13:39:55.790046 20 service_latency.go:363] Got endpoints: latency-svc-gt9fj [253.748866ms]
  I1109 13:39:55.801078 20 service_latency.go:356] Created: latency-svc-g92xp
  E1109 13:39:55.815163      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:39:55.842369 20 service_latency.go:363] Got endpoints: latency-svc-6xl7r [300.271568ms]
  I1109 13:39:55.852507 20 service_latency.go:356] Created: latency-svc-4wh7l
  I1109 13:39:55.890876 20 service_latency.go:363] Got endpoints: latency-svc-cv4fg [338.823543ms]
  I1109 13:39:55.902106 20 service_latency.go:356] Created: latency-svc-8gm4m
  I1109 13:39:55.941269 20 service_latency.go:363] Got endpoints: latency-svc-2lh6m [383.794677ms]
  I1109 13:39:55.951134 20 service_latency.go:356] Created: latency-svc-6wwbq
  I1109 13:39:55.992373 20 service_latency.go:363] Got endpoints: latency-svc-twz2w [429.051824ms]
  I1109 13:39:56.001446 20 service_latency.go:356] Created: latency-svc-hjndc
  I1109 13:39:56.041163 20 service_latency.go:363] Got endpoints: latency-svc-4nf89 [472.351638ms]
  I1109 13:39:56.050461 20 service_latency.go:356] Created: latency-svc-kkk2v
  I1109 13:39:56.088712 20 service_latency.go:363] Got endpoints: latency-svc-4j2l8 [512.855983ms]
  I1109 13:39:56.099350 20 service_latency.go:356] Created: latency-svc-skfwx
  I1109 13:39:56.139956 20 service_latency.go:363] Got endpoints: latency-svc-gpvdn [553.533923ms]
  I1109 13:39:56.150913 20 service_latency.go:356] Created: latency-svc-hd84x
  I1109 13:39:56.193744 20 service_latency.go:363] Got endpoints: latency-svc-mdzd9 [602.117319ms]
  I1109 13:39:56.204767 20 service_latency.go:356] Created: latency-svc-d6khk
  I1109 13:39:56.243613 20 service_latency.go:363] Got endpoints: latency-svc-qgmbm [642.485743ms]
  I1109 13:39:56.253757 20 service_latency.go:356] Created: latency-svc-d689d
  I1109 13:39:56.291683 20 service_latency.go:363] Got endpoints: latency-svc-dfjsc [680.872986ms]
  I1109 13:39:56.301325 20 service_latency.go:356] Created: latency-svc-jbs72
  I1109 13:39:56.339920 20 service_latency.go:363] Got endpoints: latency-svc-528x8 [722.699242ms]
  I1109 13:39:56.358167 20 service_latency.go:356] Created: latency-svc-4hhdb
  I1109 13:39:56.390794 20 service_latency.go:363] Got endpoints: latency-svc-xsbjs [747.311443ms]
  I1109 13:39:56.401448 20 service_latency.go:356] Created: latency-svc-m2qv4
  I1109 13:39:56.440922 20 service_latency.go:363] Got endpoints: latency-svc-7w9tc [750.592613ms]
  I1109 13:39:56.450711 20 service_latency.go:356] Created: latency-svc-s8fhr
  I1109 13:39:56.490870 20 service_latency.go:363] Got endpoints: latency-svc-vb4fx [748.657055ms]
  I1109 13:39:56.501411 20 service_latency.go:356] Created: latency-svc-2bkqr
  I1109 13:39:56.540254 20 service_latency.go:363] Got endpoints: latency-svc-g92xp [750.115066ms]
  I1109 13:39:56.551923 20 service_latency.go:356] Created: latency-svc-qxmh4
  I1109 13:39:56.590925 20 service_latency.go:363] Got endpoints: latency-svc-4wh7l [748.500106ms]
  I1109 13:39:56.600537 20 service_latency.go:356] Created: latency-svc-bd7bf
  I1109 13:39:56.641302 20 service_latency.go:363] Got endpoints: latency-svc-8gm4m [750.367514ms]
  I1109 13:39:56.652830 20 service_latency.go:356] Created: latency-svc-ds4fr
  I1109 13:39:56.690646 20 service_latency.go:363] Got endpoints: latency-svc-6wwbq [749.331092ms]
  I1109 13:39:56.701072 20 service_latency.go:356] Created: latency-svc-xqhrk
  I1109 13:39:56.739585 20 service_latency.go:363] Got endpoints: latency-svc-hjndc [747.162057ms]
  I1109 13:39:56.751031 20 service_latency.go:356] Created: latency-svc-vbfzq
  I1109 13:39:56.791041 20 service_latency.go:363] Got endpoints: latency-svc-kkk2v [749.76945ms]
  I1109 13:39:56.800708 20 service_latency.go:356] Created: latency-svc-x78wd
  E1109 13:39:56.815825      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:39:56.839017 20 service_latency.go:363] Got endpoints: latency-svc-skfwx [750.209733ms]
  I1109 13:39:56.848530 20 service_latency.go:356] Created: latency-svc-4mwf9
  I1109 13:39:56.892279 20 service_latency.go:363] Got endpoints: latency-svc-hd84x [752.276396ms]
  I1109 13:39:56.903599 20 service_latency.go:356] Created: latency-svc-67rgd
  I1109 13:39:56.942518 20 service_latency.go:363] Got endpoints: latency-svc-d6khk [748.720862ms]
  I1109 13:39:56.951385 20 service_latency.go:356] Created: latency-svc-kr4kc
  I1109 13:39:56.990191 20 service_latency.go:363] Got endpoints: latency-svc-d689d [746.507162ms]
  I1109 13:39:57.001042 20 service_latency.go:356] Created: latency-svc-7h2dw
  I1109 13:39:57.041141 20 service_latency.go:363] Got endpoints: latency-svc-jbs72 [749.40296ms]
  I1109 13:39:57.051812 20 service_latency.go:356] Created: latency-svc-rrb5w
  I1109 13:39:57.091301 20 service_latency.go:363] Got endpoints: latency-svc-4hhdb [751.327148ms]
  I1109 13:39:57.102081 20 service_latency.go:356] Created: latency-svc-jvzrq
  I1109 13:39:57.141513 20 service_latency.go:363] Got endpoints: latency-svc-m2qv4 [750.667878ms]
  I1109 13:39:57.151780 20 service_latency.go:356] Created: latency-svc-7p6hv
  I1109 13:39:57.191436 20 service_latency.go:363] Got endpoints: latency-svc-s8fhr [750.452048ms]
  I1109 13:39:57.201707 20 service_latency.go:356] Created: latency-svc-6d775
  I1109 13:39:57.240908 20 service_latency.go:363] Got endpoints: latency-svc-2bkqr [749.983971ms]
  I1109 13:39:57.251924 20 service_latency.go:356] Created: latency-svc-xc4jb
  I1109 13:39:57.292332 20 service_latency.go:363] Got endpoints: latency-svc-qxmh4 [751.951291ms]
  I1109 13:39:57.301344 20 service_latency.go:356] Created: latency-svc-shcxh
  I1109 13:39:57.339823 20 service_latency.go:363] Got endpoints: latency-svc-bd7bf [748.850025ms]
  I1109 13:39:57.351548 20 service_latency.go:356] Created: latency-svc-9jlnh
  I1109 13:39:57.392031 20 service_latency.go:363] Got endpoints: latency-svc-ds4fr [750.677486ms]
  I1109 13:39:57.402553 20 service_latency.go:356] Created: latency-svc-gc5lz
  I1109 13:39:57.440851 20 service_latency.go:363] Got endpoints: latency-svc-xqhrk [749.998939ms]
  I1109 13:39:57.451058 20 service_latency.go:356] Created: latency-svc-rqplv
  I1109 13:39:57.492042 20 service_latency.go:363] Got endpoints: latency-svc-vbfzq [752.383254ms]
  I1109 13:39:57.503271 20 service_latency.go:356] Created: latency-svc-48g7f
  I1109 13:39:57.541312 20 service_latency.go:363] Got endpoints: latency-svc-x78wd [750.21937ms]
  I1109 13:39:57.553538 20 service_latency.go:356] Created: latency-svc-d5krv
  I1109 13:39:57.590989 20 service_latency.go:363] Got endpoints: latency-svc-4mwf9 [751.925201ms]
  I1109 13:39:57.602716 20 service_latency.go:356] Created: latency-svc-cl6xx
  I1109 13:39:57.640267 20 service_latency.go:363] Got endpoints: latency-svc-67rgd [747.942422ms]
  I1109 13:39:57.648880 20 service_latency.go:356] Created: latency-svc-lxh7f
  I1109 13:39:57.691353 20 service_latency.go:363] Got endpoints: latency-svc-kr4kc [748.781163ms]
  I1109 13:39:57.700380 20 service_latency.go:356] Created: latency-svc-vm64t
  I1109 13:39:57.741381 20 service_latency.go:363] Got endpoints: latency-svc-7h2dw [751.122425ms]
  I1109 13:39:57.751555 20 service_latency.go:356] Created: latency-svc-hq2wm
  I1109 13:39:57.792163 20 service_latency.go:363] Got endpoints: latency-svc-rrb5w [750.950566ms]
  I1109 13:39:57.804813 20 service_latency.go:356] Created: latency-svc-pqbjq
  E1109 13:39:57.816469      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:39:57.838820 20 service_latency.go:363] Got endpoints: latency-svc-jvzrq [747.47282ms]
  I1109 13:39:57.848861 20 service_latency.go:356] Created: latency-svc-rlq9t
  I1109 13:39:57.891101 20 service_latency.go:363] Got endpoints: latency-svc-7p6hv [749.541583ms]
  I1109 13:39:57.901656 20 service_latency.go:356] Created: latency-svc-684ps
  I1109 13:39:57.941255 20 service_latency.go:363] Got endpoints: latency-svc-6d775 [749.75107ms]
  I1109 13:39:57.951258 20 service_latency.go:356] Created: latency-svc-msqxs
  I1109 13:39:57.992403 20 service_latency.go:363] Got endpoints: latency-svc-xc4jb [751.447301ms]
  I1109 13:39:58.003577 20 service_latency.go:356] Created: latency-svc-6mlpn
  I1109 13:39:58.040099 20 service_latency.go:363] Got endpoints: latency-svc-shcxh [747.710434ms]
  I1109 13:39:58.051855 20 service_latency.go:356] Created: latency-svc-rh9ct
  I1109 13:39:58.091632 20 service_latency.go:363] Got endpoints: latency-svc-9jlnh [751.763785ms]
  I1109 13:39:58.102018 20 service_latency.go:356] Created: latency-svc-k64gg
  I1109 13:39:58.142406 20 service_latency.go:363] Got endpoints: latency-svc-gc5lz [750.31489ms]
  I1109 13:39:58.151348 20 service_latency.go:356] Created: latency-svc-fz8c8
  I1109 13:39:58.193524 20 service_latency.go:363] Got endpoints: latency-svc-rqplv [752.619342ms]
  I1109 13:39:58.205142 20 service_latency.go:356] Created: latency-svc-6tlp4
  I1109 13:39:58.240359 20 service_latency.go:363] Got endpoints: latency-svc-48g7f [748.258394ms]
  I1109 13:39:58.254867 20 service_latency.go:356] Created: latency-svc-bx999
  I1109 13:39:58.290208 20 service_latency.go:363] Got endpoints: latency-svc-d5krv [748.836374ms]
  I1109 13:39:58.300031 20 service_latency.go:356] Created: latency-svc-jwbdp
  I1109 13:39:58.341394 20 service_latency.go:363] Got endpoints: latency-svc-cl6xx [750.361279ms]
  I1109 13:39:58.354699 20 service_latency.go:356] Created: latency-svc-26p6d
  I1109 13:39:58.392251 20 service_latency.go:363] Got endpoints: latency-svc-lxh7f [751.917345ms]
  I1109 13:39:58.401726 20 service_latency.go:356] Created: latency-svc-prkl4
  I1109 13:39:58.439683 20 service_latency.go:363] Got endpoints: latency-svc-vm64t [748.285424ms]
  I1109 13:39:58.450053 20 service_latency.go:356] Created: latency-svc-d2phq
  I1109 13:39:58.489395 20 service_latency.go:363] Got endpoints: latency-svc-hq2wm [747.955092ms]
  I1109 13:39:58.500343 20 service_latency.go:356] Created: latency-svc-7hf9n
  I1109 13:39:58.541569 20 service_latency.go:363] Got endpoints: latency-svc-pqbjq [749.359417ms]
  I1109 13:39:58.551046 20 service_latency.go:356] Created: latency-svc-6r2g8
  I1109 13:39:58.591457 20 service_latency.go:363] Got endpoints: latency-svc-rlq9t [752.590782ms]
  I1109 13:39:58.601273 20 service_latency.go:356] Created: latency-svc-mx2nf
  I1109 13:39:58.640490 20 service_latency.go:363] Got endpoints: latency-svc-684ps [749.333459ms]
  I1109 13:39:58.651631 20 service_latency.go:356] Created: latency-svc-xs99w
  I1109 13:39:58.691073 20 service_latency.go:363] Got endpoints: latency-svc-msqxs [749.762965ms]
  I1109 13:39:58.701827 20 service_latency.go:356] Created: latency-svc-jd5sq
  I1109 13:39:58.740122 20 service_latency.go:363] Got endpoints: latency-svc-6mlpn [747.663944ms]
  I1109 13:39:58.750269 20 service_latency.go:356] Created: latency-svc-v7n6w
  I1109 13:39:58.790318 20 service_latency.go:363] Got endpoints: latency-svc-rh9ct [750.149977ms]
  I1109 13:39:58.800501 20 service_latency.go:356] Created: latency-svc-7tpmk
  E1109 13:39:58.816549      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:39:58.841296 20 service_latency.go:363] Got endpoints: latency-svc-k64gg [749.604425ms]
  I1109 13:39:58.851030 20 service_latency.go:356] Created: latency-svc-cswrc
  I1109 13:39:58.891997 20 service_latency.go:363] Got endpoints: latency-svc-fz8c8 [749.541094ms]
  I1109 13:39:58.902559 20 service_latency.go:356] Created: latency-svc-9jl9b
  I1109 13:39:58.941139 20 service_latency.go:363] Got endpoints: latency-svc-6tlp4 [747.569609ms]
  I1109 13:39:58.952628 20 service_latency.go:356] Created: latency-svc-84mpm
  I1109 13:39:58.989742 20 service_latency.go:363] Got endpoints: latency-svc-bx999 [749.330353ms]
  I1109 13:39:58.999133 20 service_latency.go:356] Created: latency-svc-4bg9m
  I1109 13:39:59.042280 20 service_latency.go:363] Got endpoints: latency-svc-jwbdp [752.001949ms]
  I1109 13:39:59.051180 20 service_latency.go:356] Created: latency-svc-c2ppv
  I1109 13:39:59.091188 20 service_latency.go:363] Got endpoints: latency-svc-26p6d [749.744964ms]
  I1109 13:39:59.100571 20 service_latency.go:356] Created: latency-svc-l8nrh
  I1109 13:39:59.141310 20 service_latency.go:363] Got endpoints: latency-svc-prkl4 [749.008712ms]
  I1109 13:39:59.157715 20 service_latency.go:356] Created: latency-svc-fw2b8
  I1109 13:39:59.194371 20 service_latency.go:363] Got endpoints: latency-svc-d2phq [754.637636ms]
  I1109 13:39:59.207355 20 service_latency.go:356] Created: latency-svc-8dc2h
  I1109 13:39:59.243958 20 service_latency.go:363] Got endpoints: latency-svc-7hf9n [754.510438ms]
  I1109 13:39:59.256564 20 service_latency.go:356] Created: latency-svc-s28bf
  I1109 13:39:59.291365 20 service_latency.go:363] Got endpoints: latency-svc-6r2g8 [749.619157ms]
  I1109 13:39:59.300786 20 service_latency.go:356] Created: latency-svc-26gcd
  I1109 13:39:59.339378 20 service_latency.go:363] Got endpoints: latency-svc-mx2nf [747.877658ms]
  I1109 13:39:59.355020 20 service_latency.go:356] Created: latency-svc-mp7cl
  I1109 13:39:59.390605 20 service_latency.go:363] Got endpoints: latency-svc-xs99w [750.033899ms]
  I1109 13:39:59.399635 20 service_latency.go:356] Created: latency-svc-qq7c6
  I1109 13:39:59.441453 20 service_latency.go:363] Got endpoints: latency-svc-jd5sq [750.323393ms]
  I1109 13:39:59.454306 20 service_latency.go:356] Created: latency-svc-86xzn
  I1109 13:39:59.488587 20 service_latency.go:363] Got endpoints: latency-svc-v7n6w [748.413803ms]
  I1109 13:39:59.497943 20 service_latency.go:356] Created: latency-svc-j47xs
  I1109 13:39:59.541806 20 service_latency.go:363] Got endpoints: latency-svc-7tpmk [751.432539ms]
  I1109 13:39:59.551900 20 service_latency.go:356] Created: latency-svc-ljb6s
  I1109 13:39:59.591331 20 service_latency.go:363] Got endpoints: latency-svc-cswrc [749.971012ms]
  I1109 13:39:59.602291 20 service_latency.go:356] Created: latency-svc-xkqzj
  I1109 13:39:59.640520 20 service_latency.go:363] Got endpoints: latency-svc-9jl9b [748.440526ms]
  I1109 13:39:59.650445 20 service_latency.go:356] Created: latency-svc-zprlj
  I1109 13:39:59.688902 20 service_latency.go:363] Got endpoints: latency-svc-84mpm [747.706384ms]
  I1109 13:39:59.698701 20 service_latency.go:356] Created: latency-svc-47l2v
  I1109 13:39:59.741268 20 service_latency.go:363] Got endpoints: latency-svc-4bg9m [751.470609ms]
  I1109 13:39:59.753806 20 service_latency.go:356] Created: latency-svc-cfkpm
  I1109 13:39:59.789504 20 service_latency.go:363] Got endpoints: latency-svc-c2ppv [747.169409ms]
  I1109 13:39:59.799541 20 service_latency.go:356] Created: latency-svc-c4zmj
  E1109 13:39:59.816826      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:39:59.840082 20 service_latency.go:363] Got endpoints: latency-svc-l8nrh [748.819876ms]
  I1109 13:39:59.850264 20 service_latency.go:356] Created: latency-svc-t5mwf
  I1109 13:39:59.890873 20 service_latency.go:363] Got endpoints: latency-svc-fw2b8 [749.515105ms]
  I1109 13:39:59.900063 20 service_latency.go:356] Created: latency-svc-lvs9g
  I1109 13:39:59.942618 20 service_latency.go:363] Got endpoints: latency-svc-8dc2h [748.199249ms]
  I1109 13:39:59.955216 20 service_latency.go:356] Created: latency-svc-cxwfd
  I1109 13:39:59.990126 20 service_latency.go:363] Got endpoints: latency-svc-s28bf [746.070047ms]
  I1109 13:40:00.003180 20 service_latency.go:356] Created: latency-svc-7lzkz
  I1109 13:40:00.039930 20 service_latency.go:363] Got endpoints: latency-svc-26gcd [748.521978ms]
  I1109 13:40:00.050949 20 service_latency.go:356] Created: latency-svc-2l98h
  I1109 13:40:00.092063 20 service_latency.go:363] Got endpoints: latency-svc-mp7cl [752.623206ms]
  I1109 13:40:00.102072 20 service_latency.go:356] Created: latency-svc-w2bmq
  I1109 13:40:00.145393 20 service_latency.go:363] Got endpoints: latency-svc-qq7c6 [754.737355ms]
  I1109 13:40:00.154699 20 service_latency.go:356] Created: latency-svc-dm4zw
  I1109 13:40:00.191403 20 service_latency.go:363] Got endpoints: latency-svc-86xzn [749.881921ms]
  I1109 13:40:00.211352 20 service_latency.go:356] Created: latency-svc-pq9j6
  I1109 13:40:00.241088 20 service_latency.go:363] Got endpoints: latency-svc-j47xs [752.452297ms]
  I1109 13:40:00.254283 20 service_latency.go:356] Created: latency-svc-mcpps
  I1109 13:40:00.290530 20 service_latency.go:363] Got endpoints: latency-svc-ljb6s [748.662311ms]
  I1109 13:40:00.299991 20 service_latency.go:356] Created: latency-svc-l87hj
  I1109 13:40:00.340570 20 service_latency.go:363] Got endpoints: latency-svc-xkqzj [749.193156ms]
  I1109 13:40:00.350839 20 service_latency.go:356] Created: latency-svc-7756t
  I1109 13:40:00.391281 20 service_latency.go:363] Got endpoints: latency-svc-zprlj [750.711658ms]
  I1109 13:40:00.401104 20 service_latency.go:356] Created: latency-svc-flt66
  I1109 13:40:00.441211 20 service_latency.go:363] Got endpoints: latency-svc-47l2v [752.245933ms]
  I1109 13:40:00.452786 20 service_latency.go:356] Created: latency-svc-hjk67
  I1109 13:40:00.490651 20 service_latency.go:363] Got endpoints: latency-svc-cfkpm [749.335218ms]
  I1109 13:40:00.502622 20 service_latency.go:356] Created: latency-svc-s8bvw
  I1109 13:40:00.542793 20 service_latency.go:363] Got endpoints: latency-svc-c4zmj [753.239402ms]
  I1109 13:40:00.553610 20 service_latency.go:356] Created: latency-svc-cqtvv
  I1109 13:40:00.589823 20 service_latency.go:363] Got endpoints: latency-svc-t5mwf [749.693496ms]
  I1109 13:40:00.598034 20 service_latency.go:356] Created: latency-svc-k29d6
  I1109 13:40:00.641624 20 service_latency.go:363] Got endpoints: latency-svc-lvs9g [750.695943ms]
  I1109 13:40:00.654523 20 service_latency.go:356] Created: latency-svc-xlsn8
  I1109 13:40:00.690425 20 service_latency.go:363] Got endpoints: latency-svc-cxwfd [747.759086ms]
  I1109 13:40:00.702943 20 service_latency.go:356] Created: latency-svc-dmgj9
  I1109 13:40:00.741625 20 service_latency.go:363] Got endpoints: latency-svc-7lzkz [751.446575ms]
  I1109 13:40:00.750918 20 service_latency.go:356] Created: latency-svc-z96sc
  I1109 13:40:00.802664 20 service_latency.go:363] Got endpoints: latency-svc-2l98h [762.687328ms]
  I1109 13:40:00.814298 20 service_latency.go:356] Created: latency-svc-fpcg5
  E1109 13:40:00.817328      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:40:00.842468 20 service_latency.go:363] Got endpoints: latency-svc-w2bmq [750.352457ms]
  I1109 13:40:00.852778 20 service_latency.go:356] Created: latency-svc-9xqbt
  I1109 13:40:00.890436 20 service_latency.go:363] Got endpoints: latency-svc-dm4zw [744.998689ms]
  I1109 13:40:00.902312 20 service_latency.go:356] Created: latency-svc-p59cv
  I1109 13:40:00.940482 20 service_latency.go:363] Got endpoints: latency-svc-pq9j6 [749.028779ms]
  I1109 13:40:00.952652 20 service_latency.go:356] Created: latency-svc-zgn52
  I1109 13:40:00.990897 20 service_latency.go:363] Got endpoints: latency-svc-mcpps [749.735441ms]
  I1109 13:40:01.001726 20 service_latency.go:356] Created: latency-svc-9htzc
  I1109 13:40:01.043294 20 service_latency.go:363] Got endpoints: latency-svc-l87hj [752.702142ms]
  I1109 13:40:01.053809 20 service_latency.go:356] Created: latency-svc-r5dl5
  I1109 13:40:01.091776 20 service_latency.go:363] Got endpoints: latency-svc-7756t [751.157139ms]
  I1109 13:40:01.102350 20 service_latency.go:356] Created: latency-svc-zfx6d
  I1109 13:40:01.141524 20 service_latency.go:363] Got endpoints: latency-svc-flt66 [750.183553ms]
  I1109 13:40:01.154698 20 service_latency.go:356] Created: latency-svc-n7xdj
  I1109 13:40:01.190242 20 service_latency.go:363] Got endpoints: latency-svc-hjk67 [748.936659ms]
  I1109 13:40:01.200961 20 service_latency.go:356] Created: latency-svc-5v9wn
  I1109 13:40:01.241764 20 service_latency.go:363] Got endpoints: latency-svc-s8bvw [750.797751ms]
  I1109 13:40:01.255413 20 service_latency.go:356] Created: latency-svc-pnj5j
  I1109 13:40:01.290539 20 service_latency.go:363] Got endpoints: latency-svc-cqtvv [747.696868ms]
  I1109 13:40:01.300112 20 service_latency.go:356] Created: latency-svc-qq78t
  I1109 13:40:01.341353 20 service_latency.go:363] Got endpoints: latency-svc-k29d6 [751.464176ms]
  I1109 13:40:01.352518 20 service_latency.go:356] Created: latency-svc-t9pfl
  I1109 13:40:01.392134 20 service_latency.go:363] Got endpoints: latency-svc-xlsn8 [750.459808ms]
  I1109 13:40:01.404123 20 service_latency.go:356] Created: latency-svc-7f66b
  I1109 13:40:01.439677 20 service_latency.go:363] Got endpoints: latency-svc-dmgj9 [749.199313ms]
  I1109 13:40:01.450066 20 service_latency.go:356] Created: latency-svc-4ldrt
  I1109 13:40:01.493122 20 service_latency.go:363] Got endpoints: latency-svc-z96sc [751.421285ms]
  I1109 13:40:01.501775 20 service_latency.go:356] Created: latency-svc-hnfrl
  I1109 13:40:01.540519 20 service_latency.go:363] Got endpoints: latency-svc-fpcg5 [737.807597ms]
  I1109 13:40:01.550275 20 service_latency.go:356] Created: latency-svc-njcm5
  I1109 13:40:01.591994 20 service_latency.go:363] Got endpoints: latency-svc-9xqbt [749.479554ms]
  I1109 13:40:01.606111 20 service_latency.go:356] Created: latency-svc-h8g7l
  I1109 13:40:01.640498 20 service_latency.go:363] Got endpoints: latency-svc-p59cv [750.014292ms]
  I1109 13:40:01.651125 20 service_latency.go:356] Created: latency-svc-84pmq
  I1109 13:40:01.690961 20 service_latency.go:363] Got endpoints: latency-svc-zgn52 [750.420527ms]
  I1109 13:40:01.703416 20 service_latency.go:356] Created: latency-svc-dxrpl
  I1109 13:40:01.744829 20 service_latency.go:363] Got endpoints: latency-svc-9htzc [753.872374ms]
  I1109 13:40:01.755762 20 service_latency.go:356] Created: latency-svc-gh4cd
  I1109 13:40:01.792442 20 service_latency.go:363] Got endpoints: latency-svc-r5dl5 [749.089395ms]
  I1109 13:40:01.803360 20 service_latency.go:356] Created: latency-svc-5wgpb
  E1109 13:40:01.818385      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:40:01.840132 20 service_latency.go:363] Got endpoints: latency-svc-zfx6d [748.304437ms]
  I1109 13:40:01.854172 20 service_latency.go:356] Created: latency-svc-lt6j9
  I1109 13:40:01.889722 20 service_latency.go:363] Got endpoints: latency-svc-n7xdj [748.143812ms]
  I1109 13:40:01.901942 20 service_latency.go:356] Created: latency-svc-fvdrk
  I1109 13:40:01.942515 20 service_latency.go:363] Got endpoints: latency-svc-5v9wn [752.173651ms]
  I1109 13:40:01.954356 20 service_latency.go:356] Created: latency-svc-95g6j
  I1109 13:40:01.991331 20 service_latency.go:363] Got endpoints: latency-svc-pnj5j [749.50942ms]
  I1109 13:40:02.002685 20 service_latency.go:356] Created: latency-svc-c9fl5
  I1109 13:40:02.042100 20 service_latency.go:363] Got endpoints: latency-svc-qq78t [751.50603ms]
  I1109 13:40:02.052282 20 service_latency.go:356] Created: latency-svc-mxs6s
  I1109 13:40:02.092800 20 service_latency.go:363] Got endpoints: latency-svc-t9pfl [751.384798ms]
  I1109 13:40:02.103805 20 service_latency.go:356] Created: latency-svc-8p2tb
  I1109 13:40:02.140947 20 service_latency.go:363] Got endpoints: latency-svc-7f66b [748.734171ms]
  I1109 13:40:02.153034 20 service_latency.go:356] Created: latency-svc-v7d8z
  I1109 13:40:02.192484 20 service_latency.go:363] Got endpoints: latency-svc-4ldrt [752.735796ms]
  I1109 13:40:02.203113 20 service_latency.go:356] Created: latency-svc-5ds9f
  I1109 13:40:02.242933 20 service_latency.go:363] Got endpoints: latency-svc-hnfrl [749.753912ms]
  I1109 13:40:02.254954 20 service_latency.go:356] Created: latency-svc-4p8vz
  I1109 13:40:02.292218 20 service_latency.go:363] Got endpoints: latency-svc-njcm5 [751.600147ms]
  I1109 13:40:02.303213 20 service_latency.go:356] Created: latency-svc-59nj4
  I1109 13:40:02.347637 20 service_latency.go:363] Got endpoints: latency-svc-h8g7l [755.591524ms]
  I1109 13:40:02.359062 20 service_latency.go:356] Created: latency-svc-nt2nc
  I1109 13:40:02.393150 20 service_latency.go:363] Got endpoints: latency-svc-84pmq [752.59821ms]
  I1109 13:40:02.404385 20 service_latency.go:356] Created: latency-svc-wbgb5
  I1109 13:40:02.441220 20 service_latency.go:363] Got endpoints: latency-svc-dxrpl [750.217429ms]
  I1109 13:40:02.454794 20 service_latency.go:356] Created: latency-svc-bnk9h
  I1109 13:40:02.491782 20 service_latency.go:363] Got endpoints: latency-svc-gh4cd [746.901734ms]
  I1109 13:40:02.505157 20 service_latency.go:356] Created: latency-svc-n6c9c
  I1109 13:40:02.540459 20 service_latency.go:363] Got endpoints: latency-svc-5wgpb [747.962874ms]
  I1109 13:40:02.552542 20 service_latency.go:356] Created: latency-svc-d577q
  I1109 13:40:02.592193 20 service_latency.go:363] Got endpoints: latency-svc-lt6j9 [752.006922ms]
  I1109 13:40:02.605321 20 service_latency.go:356] Created: latency-svc-g2ddn
  I1109 13:40:02.642374 20 service_latency.go:363] Got endpoints: latency-svc-fvdrk [752.599748ms]
  I1109 13:40:02.653890 20 service_latency.go:356] Created: latency-svc-ztqxh
  I1109 13:40:02.693846 20 service_latency.go:363] Got endpoints: latency-svc-95g6j [751.256077ms]
  I1109 13:40:02.703747 20 service_latency.go:356] Created: latency-svc-465zr
  I1109 13:40:02.741912 20 service_latency.go:363] Got endpoints: latency-svc-c9fl5 [750.527284ms]
  I1109 13:40:02.753783 20 service_latency.go:356] Created: latency-svc-kcgg7
  I1109 13:40:02.792180 20 service_latency.go:363] Got endpoints: latency-svc-mxs6s [750.01673ms]
  I1109 13:40:02.804333 20 service_latency.go:356] Created: latency-svc-gkrxm
  E1109 13:40:02.819389      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:40:02.841494 20 service_latency.go:363] Got endpoints: latency-svc-8p2tb [748.649722ms]
  I1109 13:40:02.851046 20 service_latency.go:356] Created: latency-svc-rhsct
  I1109 13:40:02.891696 20 service_latency.go:363] Got endpoints: latency-svc-v7d8z [750.698712ms]
  I1109 13:40:02.902772 20 service_latency.go:356] Created: latency-svc-rxs6t
  I1109 13:40:02.942855 20 service_latency.go:363] Got endpoints: latency-svc-5ds9f [750.313464ms]
  I1109 13:40:02.954289 20 service_latency.go:356] Created: latency-svc-7j97s
  I1109 13:40:02.991863 20 service_latency.go:363] Got endpoints: latency-svc-4p8vz [748.740304ms]
  I1109 13:40:03.001385 20 service_latency.go:356] Created: latency-svc-6dqq4
  I1109 13:40:03.040940 20 service_latency.go:363] Got endpoints: latency-svc-59nj4 [748.60791ms]
  I1109 13:40:03.052454 20 service_latency.go:356] Created: latency-svc-27rgd
  I1109 13:40:03.092722 20 service_latency.go:363] Got endpoints: latency-svc-nt2nc [745.032224ms]
  I1109 13:40:03.140620 20 service_latency.go:363] Got endpoints: latency-svc-wbgb5 [747.412273ms]
  I1109 13:40:03.191996 20 service_latency.go:363] Got endpoints: latency-svc-bnk9h [750.698509ms]
  I1109 13:40:03.242348 20 service_latency.go:363] Got endpoints: latency-svc-n6c9c [750.509099ms]
  I1109 13:40:03.291500 20 service_latency.go:363] Got endpoints: latency-svc-d577q [750.988606ms]
  I1109 13:40:03.340540 20 service_latency.go:363] Got endpoints: latency-svc-g2ddn [748.253607ms]
  I1109 13:40:03.391554 20 service_latency.go:363] Got endpoints: latency-svc-ztqxh [749.127949ms]
  I1109 13:40:03.442974 20 service_latency.go:363] Got endpoints: latency-svc-465zr [749.08071ms]
  I1109 13:40:03.491121 20 service_latency.go:363] Got endpoints: latency-svc-kcgg7 [749.160775ms]
  I1109 13:40:03.541872 20 service_latency.go:363] Got endpoints: latency-svc-gkrxm [749.640179ms]
  I1109 13:40:03.592167 20 service_latency.go:363] Got endpoints: latency-svc-rhsct [750.624637ms]
  I1109 13:40:03.640773 20 service_latency.go:363] Got endpoints: latency-svc-rxs6t [748.980087ms]
  I1109 13:40:03.691332 20 service_latency.go:363] Got endpoints: latency-svc-7j97s [748.424629ms]
  I1109 13:40:03.741286 20 service_latency.go:363] Got endpoints: latency-svc-6dqq4 [749.373749ms]
  I1109 13:40:03.789288 20 service_latency.go:363] Got endpoints: latency-svc-27rgd [748.301642ms]
  I1109 13:40:03.789664 20 service_latency.go:114] Latencies: [16.154543ms 27.780388ms 29.6505ms 37.334908ms 47.687686ms 56.726896ms 62.4626ms 71.250773ms 73.138656ms 78.299115ms 82.146925ms 85.31393ms 88.304664ms 100.1786ms 101.634311ms 114.643027ms 115.643242ms 134.192369ms 134.432445ms 135.066344ms 138.511516ms 144.141586ms 144.974416ms 151.283145ms 155.518853ms 160.657409ms 161.282565ms 163.614466ms 171.821998ms 173.735452ms 180.73493ms 209.869934ms 222.235928ms 228.249548ms 244.667757ms 247.71433ms 253.748866ms 257.247017ms 283.900252ms 288.288063ms 300.271568ms 338.823543ms 383.794677ms 429.051824ms 472.351638ms 512.855983ms 553.533923ms 602.117319ms 642.485743ms 680.872986ms 722.699242ms 737.807597ms 744.998689ms 745.032224ms 746.070047ms 746.507162ms 746.901734ms 747.162057ms 747.169409ms 747.311443ms 747.412273ms 747.47282ms 747.569609ms 747.663944ms 747.696868ms 747.706384ms 747.710434ms 747.759086ms 747.877658ms 747.942422ms 747.955092ms 747.962874ms 748.143812ms 748.199249ms 748.253607ms 748.258394ms 748.285424ms 748.301642ms 748.304437ms 748.413803ms 748.424629ms 748.440526ms 748.500106ms 748.521978ms 748.60791ms 748.649722ms 748.657055ms 748.662311ms 748.720862ms 748.734171ms 748.740304ms 748.781163ms 748.819876ms 748.836374ms 748.850025ms 748.936659ms 748.980087ms 749.008712ms 749.028779ms 749.08071ms 749.089395ms 749.127949ms 749.160775ms 749.193156ms 749.199313ms 749.330353ms 749.331092ms 749.333459ms 749.335218ms 749.359417ms 749.373749ms 749.40296ms 749.479554ms 749.50942ms 749.515105ms 749.541094ms 749.541583ms 749.604425ms 749.619157ms 749.640179ms 749.693496ms 749.735441ms 749.744964ms 749.75107ms 749.753912ms 749.762965ms 749.76945ms 749.881921ms 749.971012ms 749.983971ms 749.998939ms 750.014292ms 750.01673ms 750.033899ms 750.115066ms 750.149977ms 750.183553ms 750.209733ms 750.217429ms 750.21937ms 750.313464ms 750.31489ms 750.323393ms 750.352457ms 750.361279ms 750.367514ms 750.420527ms 750.452048ms 750.459808ms 750.509099ms 750.527284ms 750.592613ms 750.624637ms 750.667878ms 750.677486ms 750.695943ms 750.698509ms 750.698712ms 750.711658ms 750.797751ms 750.950566ms 750.988606ms 751.122425ms 751.157139ms 751.256077ms 751.327148ms 751.384798ms 751.421285ms 751.432539ms 751.446575ms 751.447301ms 751.464176ms 751.470609ms 751.50603ms 751.600147ms 751.763785ms 751.917345ms 751.925201ms 751.951291ms 752.001949ms 752.006922ms 752.173651ms 752.245933ms 752.276396ms 752.383254ms 752.452297ms 752.590782ms 752.59821ms 752.599748ms 752.619342ms 752.623206ms 752.702142ms 752.735796ms 753.239402ms 753.872374ms 754.510438ms 754.637636ms 754.737355ms 755.591524ms 762.687328ms]
  I1109 13:40:03.789685 20 service_latency.go:118] 50 %ile: 749.089395ms
  I1109 13:40:03.789693 20 service_latency.go:119] 90 %ile: 752.006922ms
  I1109 13:40:03.789700 20 service_latency.go:120] 99 %ile: 755.591524ms
  I1109 13:40:03.789705 20 service_latency.go:121] Total sample count: 200
  I1109 13:40:03.789799 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-1311" for this suite. @ 11/09/24 13:40:03.794
â€¢ [9.756 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 11/09/24 13:40:03.801
  I1109 13:40:03.801573 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename kubelet-test @ 11/09/24 13:40:03.802
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:40:03.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:40:03.818
  E1109 13:40:03.819655      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:40:03.841395 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1975" for this suite. @ 11/09/24 13:40:03.846
â€¢ [0.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 11/09/24 13:40:03.853
  I1109 13:40:03.853220 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename custom-resource-definition @ 11/09/24 13:40:03.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:40:03.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:40:03.87
  I1109 13:40:03.872979 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  E1109 13:40:04.820477      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:05.821223      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:06.822313      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:07.823102      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:08.823341      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:09.824201      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:40:10.079223 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6973" for this suite. @ 11/09/24 13:40:10.082
â€¢ [6.240 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 11/09/24 13:40:10.092
  I1109 13:40:10.092937 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename namespaces @ 11/09/24 13:40:10.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:40:10.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:40:10.118
  STEP: creating a Namespace @ 11/09/24 13:40:10.124
  STEP: patching the Namespace @ 11/09/24 13:40:10.14
  STEP: get the Namespace and ensuring it has the label @ 11/09/24 13:40:10.147
  I1109 13:40:10.152857 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4728" for this suite. @ 11/09/24 13:40:10.162
  STEP: Destroying namespace "nspatchtest-1c430cd4-1e76-4803-8c23-b0e9eaace8fb-5789" for this suite. @ 11/09/24 13:40:10.168
â€¢ [0.083 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 11/09/24 13:40:10.175
  I1109 13:40:10.175749 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename subpath @ 11/09/24 13:40:10.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:40:10.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:40:10.219
  STEP: Setting up data @ 11/09/24 13:40:10.224
  STEP: Creating pod pod-subpath-test-configmap-55dj @ 11/09/24 13:40:10.234
  STEP: Creating a pod to test atomic-volume-subpath @ 11/09/24 13:40:10.234
  E1109 13:40:10.825253      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:11.825390      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:12.826349      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:13.826376      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:14.826521      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:15.827062      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:16.827475      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:17.828463      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:18.828576      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:19.828680      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:20.829177      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:21.829397      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:22.829510      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:23.830470      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:24.831453      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:25.831667      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:26.832620      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:27.832732      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:28.833309      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:29.833416      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:30.834488      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:31.835457      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:32.836352      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:33.836431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:40:34.309
  I1109 13:40:34.313989 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-subpath-test-configmap-55dj container test-container-subpath-configmap-55dj: <nil>
  STEP: delete the pod @ 11/09/24 13:40:34.323
  STEP: Deleting pod pod-subpath-test-configmap-55dj @ 11/09/24 13:40:34.343
  I1109 13:40:34.343063 20 delete.go:62] Deleting pod "pod-subpath-test-configmap-55dj" in namespace "subpath-6666"
  I1109 13:40:34.346947 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6666" for this suite. @ 11/09/24 13:40:34.35
â€¢ [24.181 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 11/09/24 13:40:34.357
  I1109 13:40:34.357105 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename projected @ 11/09/24 13:40:34.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:40:34.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:40:34.378
  STEP: Creating a pod to test downward API volume plugin @ 11/09/24 13:40:34.381
  E1109 13:40:34.837149      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:35.838186      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:36.838460      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:37.838563      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:40:38.403
  I1109 13:40:38.407150 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod downwardapi-volume-5da12521-09e0-4ec2-978d-27a69ac9d765 container client-container: <nil>
  STEP: delete the pod @ 11/09/24 13:40:38.413
  I1109 13:40:38.428295 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7546" for this suite. @ 11/09/24 13:40:38.433
â€¢ [4.084 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 11/09/24 13:40:38.441
  I1109 13:40:38.441306 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename crd-publish-openapi @ 11/09/24 13:40:38.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:40:38.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:40:38.459
  STEP: set up a multi version CRD @ 11/09/24 13:40:38.462
  I1109 13:40:38.462501 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  E1109 13:40:38.838647      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:39.838765      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:40.839787      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 11/09/24 13:40:41.642
  STEP: check the unserved version gets removed @ 11/09/24 13:40:41.658
  E1109 13:40:41.840415      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 11/09/24 13:40:42.422
  E1109 13:40:42.840773      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:43.840847      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:44.858743      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:40:44.919022 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2138" for this suite. @ 11/09/24 13:40:44.925
â€¢ [6.492 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:999
  STEP: Creating a kubernetes client @ 11/09/24 13:40:44.934
  I1109 13:40:44.934278 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename resourcequota @ 11/09/24 13:40:44.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:40:44.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:40:44.955
  STEP: Creating a ResourceQuota @ 11/09/24 13:40:44.958
  STEP: Getting a ResourceQuota @ 11/09/24 13:40:44.962
  STEP: Listing all ResourceQuotas with LabelSelector @ 11/09/24 13:40:44.965
  STEP: Patching the ResourceQuota @ 11/09/24 13:40:44.969
  STEP: Deleting a Collection of ResourceQuotas @ 11/09/24 13:40:44.976
  STEP: Verifying the deleted ResourceQuota @ 11/09/24 13:40:44.986
  I1109 13:40:44.989172 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7691" for this suite. @ 11/09/24 13:40:44.992
â€¢ [0.065 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 11/09/24 13:40:44.999
  I1109 13:40:44.999318 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename webhook @ 11/09/24 13:40:44.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:40:45.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:40:45.016
  STEP: Setting up server cert @ 11/09/24 13:40:45.038
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/09/24 13:40:45.199
  STEP: Deploying the webhook pod @ 11/09/24 13:40:45.208
  STEP: Wait for the deployment to be ready @ 11/09/24 13:40:45.221
  I1109 13:40:45.229327 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1109 13:40:45.859659      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:46.859920      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/09/24 13:40:47.242
  STEP: Verifying the service has paired with the endpoint @ 11/09/24 13:40:47.251
  E1109 13:40:47.860845      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:40:48.251195 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 11/09/24 13:40:48.259
  STEP: create a namespace for the webhook @ 11/09/24 13:40:48.272
  STEP: create a configmap should be unconditionally rejected by the webhook @ 11/09/24 13:40:48.284
  I1109 13:40:48.341598 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-381" for this suite. @ 11/09/24 13:40:48.348
  STEP: Destroying namespace "webhook-markers-7793" for this suite. @ 11/09/24 13:40:48.355
  STEP: Destroying namespace "fail-closed-namespace-8863" for this suite. @ 11/09/24 13:40:48.362
â€¢ [3.370 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 11/09/24 13:40:48.369
  I1109 13:40:48.369548 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename disruption @ 11/09/24 13:40:48.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:40:48.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:40:48.386
  STEP: creating the pdb @ 11/09/24 13:40:48.389
  STEP: Waiting for the pdb to be processed @ 11/09/24 13:40:48.395
  E1109 13:40:48.860937      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:49.861135      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 11/09/24 13:40:50.4
  STEP: Waiting for the pdb to be processed @ 11/09/24 13:40:50.41
  E1109 13:40:50.861693      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:51.861923      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 11/09/24 13:40:52.415
  STEP: Waiting for the pdb to be processed @ 11/09/24 13:40:52.425
  STEP: Waiting for the pdb to be deleted @ 11/09/24 13:40:52.438
  I1109 13:40:52.443104 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1410" for this suite. @ 11/09/24 13:40:52.447
â€¢ [4.084 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 11/09/24 13:40:52.453
  I1109 13:40:52.453685 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename secrets @ 11/09/24 13:40:52.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:40:52.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:40:52.471
  STEP: Creating secret with name secret-test-3d338ab6-f309-4c4c-90b1-c3905158d560 @ 11/09/24 13:40:52.474
  STEP: Creating a pod to test consume secrets @ 11/09/24 13:40:52.479
  E1109 13:40:52.862012      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:53.862199      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:54.863075      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:55.863443      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:40:56.503
  I1109 13:40:56.506237 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-secrets-aba76311-fdf2-40a2-a351-4905ce503379 container secret-volume-test: <nil>
  STEP: delete the pod @ 11/09/24 13:40:56.513
  I1109 13:40:56.528819 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5748" for this suite. @ 11/09/24 13:40:56.533
â€¢ [4.088 seconds]
------------------------------
SS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 11/09/24 13:40:56.541
  I1109 13:40:56.541733 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename pv @ 11/09/24 13:40:56.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:40:56.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:40:56.561
  STEP: Creating initial PV and PVC @ 11/09/24 13:40:56.563
  I1109 13:40:56.563760 20 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-5424" @ 11/09/24 13:40:56.575
  STEP: Listing PVCs in namespace "pv-5424" @ 11/09/24 13:40:56.579
  STEP: Patching the PV "pv-5424-qgpbk" @ 11/09/24 13:40:56.584
  STEP: Patching the PVC "pvc-wb668" @ 11/09/24 13:40:56.597
  STEP: Getting PV "pv-5424-qgpbk" @ 11/09/24 13:40:56.605
  STEP: Getting PVC "pvc-wb668" @ 11/09/24 13:40:56.612
  STEP: Deleting PVC "pvc-wb668" @ 11/09/24 13:40:56.617
  STEP: Confirm deletion of PVC "pvc-wb668" @ 11/09/24 13:40:56.627
  E1109 13:40:56.863680      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:57.863936      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-5424-qgpbk" @ 11/09/24 13:40:58.639
  STEP: Confirm deletion of PV "pv-5424-qgpbk" @ 11/09/24 13:40:58.646
  E1109 13:40:58.864676      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:40:59.864807      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Recreating another PV & PVC @ 11/09/24 13:41:00.655
  I1109 13:41:00.655861 20 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-5424-rqzp6" @ 11/09/24 13:41:00.668
  STEP: Updating the PVC "pvc-ljsqf" @ 11/09/24 13:41:00.702
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-ljsqf=updated" @ 11/09/24 13:41:00.709
  STEP: Deleting PVC "pvc-ljsqf" via DeleteCollection @ 11/09/24 13:41:00.713
  STEP: Confirm deletion of PVC "pvc-ljsqf" @ 11/09/24 13:41:00.722
  E1109 13:41:00.865130      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:01.865639      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-5424-rqzp6" via DeleteCollection @ 11/09/24 13:41:02.73
  STEP: Confirm deletion of PV "pv-5424-rqzp6" @ 11/09/24 13:41:02.74
  E1109 13:41:02.865959      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:03.866094      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:41:04.748013 20 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I1109 13:41:04.748049 20 pv.go:205] Deleting PersistentVolumeClaim "pvc-ljsqf"
  I1109 13:41:04.750956 20 pv.go:193] Deleting PersistentVolume "pv-5424-rqzp6"
  I1109 13:41:04.755029 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-5424" for this suite. @ 11/09/24 13:41:04.758
â€¢ [8.226 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 11/09/24 13:41:04.768
  I1109 13:41:04.768406 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename secrets @ 11/09/24 13:41:04.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:41:04.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:41:04.787
  STEP: Creating secret with name s-test-opt-del-58507130-5f23-4843-a4dc-857bfc37f0f5 @ 11/09/24 13:41:04.793
  STEP: Creating secret with name s-test-opt-upd-5dcbf6c5-6276-44de-83c8-1106540593b3 @ 11/09/24 13:41:04.797
  STEP: Creating the pod @ 11/09/24 13:41:04.802
  E1109 13:41:04.867145      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:05.867288      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-58507130-5f23-4843-a4dc-857bfc37f0f5 @ 11/09/24 13:41:06.842
  STEP: Updating secret s-test-opt-upd-5dcbf6c5-6276-44de-83c8-1106540593b3 @ 11/09/24 13:41:06.848
  STEP: Creating secret with name s-test-opt-create-4c93ca79-0ddd-4444-970f-a04455c0c4fd @ 11/09/24 13:41:06.853
  STEP: waiting to observe update in volume @ 11/09/24 13:41:06.858
  E1109 13:41:06.868259      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:07.868393      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:08.868450      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:09.868509      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:10.869461      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:11.869513      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:12.869874      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:13.869923      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:14.870172      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:15.870284      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:16.870501      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:17.871167      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:18.871449      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:19.872475      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:20.872708      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:21.872840      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:22.873066      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:23.873294      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:24.873567      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:25.874362      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:26.875417      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:27.875545      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:28.875987      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:29.876363      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:30.877464      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:31.877530      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:32.877818      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:33.878357      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:34.879454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:35.879693      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:36.879855      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:37.880359      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:38.880578      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:39.880880      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:40.881844      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:41.882213      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:42.882479      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:43.883118      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:44.883367      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:45.883586      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:46.883930      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:47.884602      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:48.884715      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:49.885373      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:50.885711      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:51.885760      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:52.886594      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:53.887434      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:54.888419      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:55.889120      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:56.889364      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:57.890429      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:58.891434      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:41:59.891670      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:42:00.891737      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:42:01.891911      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:42:02.892193      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:42:03.892346      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:42:04.892595      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:42:05.892657      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:42:06.892809      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:42:07.893584      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:42:08.893810      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:42:09.894818      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:42:10.895223      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:42:11.145694 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1670" for this suite. @ 11/09/24 13:42:11.149
â€¢ [66.387 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 11/09/24 13:42:11.155
  I1109 13:42:11.155242 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename webhook @ 11/09/24 13:42:11.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:42:11.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:42:11.172
  STEP: Setting up server cert @ 11/09/24 13:42:11.193
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/09/24 13:42:11.361
  STEP: Deploying the webhook pod @ 11/09/24 13:42:11.369
  STEP: Wait for the deployment to be ready @ 11/09/24 13:42:11.383
  I1109 13:42:11.391165 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1109 13:42:11.895378      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:42:12.896385      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/09/24 13:42:13.403
  STEP: Verifying the service has paired with the endpoint @ 11/09/24 13:42:13.413
  E1109 13:42:13.896461      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:42:14.414197 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1109 13:42:14.422407 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  E1109 13:42:14.897378      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6228-crds.webhook.example.com via the AdmissionRegistration API @ 11/09/24 13:42:14.933
  STEP: Creating a custom resource that should be mutated by the webhook @ 11/09/24 13:42:14.947
  E1109 13:42:15.898446      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:42:16.898800      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:42:17.545445 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8952" for this suite. @ 11/09/24 13:42:17.549
  STEP: Destroying namespace "webhook-markers-2165" for this suite. @ 11/09/24 13:42:17.557
â€¢ [6.410 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 11/09/24 13:42:17.565
  I1109 13:42:17.565386 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename deployment @ 11/09/24 13:42:17.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:42:17.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:42:17.581
  STEP: creating a Deployment @ 11/09/24 13:42:17.587
  I1109 13:42:17.587264 20 deployment.go:507] Creating simple deployment test-deployment-w8w77
  I1109 13:42:17.603512 20 deployment.go:222] deployment "test-deployment-w8w77" doesn't have the required revision set
  E1109 13:42:17.899825      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:42:18.899939      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Getting /status @ 11/09/24 13:42:19.618
  I1109 13:42:19.623340 20 deployment.go:532] Deployment test-deployment-w8w77 has Conditions: [{Available True 2024-11-09 13:42:19 +0000 UTC 2024-11-09 13:42:19 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-11-09 13:42:19 +0000 UTC 2024-11-09 13:42:17 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-w8w77-f4dbbbf74" has successfully progressed.}]
  STEP: updating Deployment Status @ 11/09/24 13:42:19.623
  I1109 13:42:19.633483 20 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.November, 9, 13, 42, 19, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 9, 13, 42, 19, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.November, 9, 13, 42, 19, 0, time.Local), LastTransitionTime:time.Date(2024, time.November, 9, 13, 42, 17, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-w8w77-f4dbbbf74\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 11/09/24 13:42:19.633
  I1109 13:42:19.634948 20 deployment.go:579] Observed &Deployment event: ADDED
  I1109 13:42:19.634981 20 deployment.go:575] Observed Deployment test-deployment-w8w77 in namespace deployment-9023 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-11-09 13:42:17 +0000 UTC 2024-11-09 13:42:17 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-w8w77-f4dbbbf74"}
  I1109 13:42:19.635069 20 deployment.go:579] Observed &Deployment event: MODIFIED
  I1109 13:42:19.635111 20 deployment.go:575] Observed Deployment test-deployment-w8w77 in namespace deployment-9023 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-11-09 13:42:17 +0000 UTC 2024-11-09 13:42:17 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-w8w77-f4dbbbf74"}
  I1109 13:42:19.635120 20 deployment.go:575] Observed Deployment test-deployment-w8w77 in namespace deployment-9023 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-11-09 13:42:17 +0000 UTC 2024-11-09 13:42:17 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1109 13:42:19.635197 20 deployment.go:579] Observed &Deployment event: MODIFIED
  I1109 13:42:19.635211 20 deployment.go:575] Observed Deployment test-deployment-w8w77 in namespace deployment-9023 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-11-09 13:42:17 +0000 UTC 2024-11-09 13:42:17 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1109 13:42:19.635248 20 deployment.go:575] Observed Deployment test-deployment-w8w77 in namespace deployment-9023 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-11-09 13:42:17 +0000 UTC 2024-11-09 13:42:17 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-w8w77-f4dbbbf74" is progressing.}
  I1109 13:42:19.635322 20 deployment.go:579] Observed &Deployment event: MODIFIED
  I1109 13:42:19.635417 20 deployment.go:575] Observed Deployment test-deployment-w8w77 in namespace deployment-9023 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-11-09 13:42:19 +0000 UTC 2024-11-09 13:42:19 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1109 13:42:19.635536 20 deployment.go:575] Observed Deployment test-deployment-w8w77 in namespace deployment-9023 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-11-09 13:42:19 +0000 UTC 2024-11-09 13:42:17 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-w8w77-f4dbbbf74" has successfully progressed.}
  I1109 13:42:19.635633 20 deployment.go:579] Observed &Deployment event: MODIFIED
  I1109 13:42:19.635647 20 deployment.go:575] Observed Deployment test-deployment-w8w77 in namespace deployment-9023 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-11-09 13:42:19 +0000 UTC 2024-11-09 13:42:19 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1109 13:42:19.635656 20 deployment.go:575] Observed Deployment test-deployment-w8w77 in namespace deployment-9023 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-11-09 13:42:19 +0000 UTC 2024-11-09 13:42:17 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-w8w77-f4dbbbf74" has successfully progressed.}
  I1109 13:42:19.635692 20 deployment.go:572] Found Deployment test-deployment-w8w77 in namespace deployment-9023 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1109 13:42:19.635703 20 deployment.go:583] Deployment test-deployment-w8w77 has an updated status
  STEP: patching the Statefulset Status @ 11/09/24 13:42:19.635
  I1109 13:42:19.635732 20 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1109 13:42:19.641790 20 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 11/09/24 13:42:19.641
  I1109 13:42:19.643336 20 deployment.go:616] Observed &Deployment event: ADDED
  I1109 13:42:19.643360 20 deployment.go:612] Observed deployment test-deployment-w8w77 in namespace deployment-9023 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-11-09 13:42:17 +0000 UTC 2024-11-09 13:42:17 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-w8w77-f4dbbbf74"}
  I1109 13:42:19.643431 20 deployment.go:616] Observed &Deployment event: MODIFIED
  I1109 13:42:19.643446 20 deployment.go:612] Observed deployment test-deployment-w8w77 in namespace deployment-9023 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-11-09 13:42:17 +0000 UTC 2024-11-09 13:42:17 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-w8w77-f4dbbbf74"}
  I1109 13:42:19.643456 20 deployment.go:612] Observed deployment test-deployment-w8w77 in namespace deployment-9023 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-11-09 13:42:17 +0000 UTC 2024-11-09 13:42:17 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1109 13:42:19.643527 20 deployment.go:616] Observed &Deployment event: MODIFIED
  I1109 13:42:19.643699 20 deployment.go:612] Observed deployment test-deployment-w8w77 in namespace deployment-9023 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-11-09 13:42:17 +0000 UTC 2024-11-09 13:42:17 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1109 13:42:19.643711 20 deployment.go:612] Observed deployment test-deployment-w8w77 in namespace deployment-9023 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-11-09 13:42:17 +0000 UTC 2024-11-09 13:42:17 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-w8w77-f4dbbbf74" is progressing.}
  I1109 13:42:19.643796 20 deployment.go:616] Observed &Deployment event: MODIFIED
  I1109 13:42:19.643815 20 deployment.go:612] Observed deployment test-deployment-w8w77 in namespace deployment-9023 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-11-09 13:42:19 +0000 UTC 2024-11-09 13:42:19 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1109 13:42:19.643827 20 deployment.go:612] Observed deployment test-deployment-w8w77 in namespace deployment-9023 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-11-09 13:42:19 +0000 UTC 2024-11-09 13:42:17 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-w8w77-f4dbbbf74" has successfully progressed.}
  I1109 13:42:19.643898 20 deployment.go:616] Observed &Deployment event: MODIFIED
  I1109 13:42:19.643912 20 deployment.go:612] Observed deployment test-deployment-w8w77 in namespace deployment-9023 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-11-09 13:42:19 +0000 UTC 2024-11-09 13:42:19 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1109 13:42:19.643921 20 deployment.go:612] Observed deployment test-deployment-w8w77 in namespace deployment-9023 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-11-09 13:42:19 +0000 UTC 2024-11-09 13:42:17 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-w8w77-f4dbbbf74" has successfully progressed.}
  I1109 13:42:19.643930 20 deployment.go:612] Observed deployment test-deployment-w8w77 in namespace deployment-9023 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1109 13:42:19.644016 20 deployment.go:616] Observed &Deployment event: MODIFIED
  I1109 13:42:19.644035 20 deployment.go:609] Found deployment test-deployment-w8w77 in namespace deployment-9023 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I1109 13:42:19.644044 20 deployment.go:620] Deployment test-deployment-w8w77 has a patched status
  I1109 13:42:19.648748 20 deployment.go:633] Deployment "test-deployment-w8w77":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-w8w77",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9023",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "60b41338-2977-4c92-91fa-300faf3a136f",
      ResourceVersion: (string) (len=5) "40164",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756537,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756539,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756539,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=3) "e2e": (string) (len=7) "testing"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756539,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756539,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=55) "Found new replica set \"test-deployment-w8w77-f4dbbbf74\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1109 13:42:19.652657 20 deployment.go:39] New ReplicaSet "test-deployment-w8w77-f4dbbbf74" of Deployment "test-deployment-w8w77":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-w8w77-f4dbbbf74",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9023",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c561958f-c0cb-4b7f-a45c-cd98f5ea8496",
      ResourceVersion: (string) (len=5) "40157",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756537,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-w8w77",
          UID: (types.UID) (len=36) "60b41338-2977-4c92-91fa-300faf3a136f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 36 30 62  |k:{\"uid\":\"60b|
              00000120  34 31 33 33 38 2d 32 39  37 37 2d 34 63 39 32 2d  |41338-2977-4c92-|
              00000130  39 31 66 61 2d 33 30 30  66 61 66 33 61 31 33 36  |91fa-300faf3a136|
              00000140  66 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |f\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756539,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1109 13:42:19.659259 20 deployment.go:67] Pod "test-deployment-w8w77-f4dbbbf74-gff9s" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "test-deployment-w8w77-f4dbbbf74-gff9s",
      GenerateName: (string) (len=32) "test-deployment-w8w77-f4dbbbf74-",
      Namespace: (string) (len=15) "deployment-9023",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a5cf9e53-81cf-4af5-adc9-c655534263d5",
      ResourceVersion: (string) (len=5) "40156",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756537,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "test-deployment-w8w77-f4dbbbf74",
          UID: (types.UID) (len=36) "c561958f-c0cb-4b7f-a45c-cd98f5ea8496",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 63 35 36 31 39 35 38  66 2d 63 30 63 62 2d 34  |"c561958f-c0cb-4|
              000000a0  62 37 66 2d 61 34 35 63  2d 63 64 39 38 66 35 65  |b7f-a45c-cd98f5e|
              000000b0  61 38 34 39 36 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |a8496\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756539,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 33 35  2e 31 31 37 5c 22 7d 22  |2.168.35.117\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5pfms",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5pfms",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-65-76",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756538,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756538,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756538,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63866756537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.65.76",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.65.76"
        }
      },
      PodIP: (string) (len=14) "192.168.35.117",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.35.117"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63866756537,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63866756538,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8df144d07517bdc1633462f22d8c47316c42ce7d405a1a618e00da4e1f391291",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5pfms",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1109 13:42:19.661061 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9023" for this suite. @ 11/09/24 13:42:19.665
â€¢ [2.108 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 11/09/24 13:42:19.673
  I1109 13:42:19.673696 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename container-runtime @ 11/09/24 13:42:19.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:42:19.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:42:19.691
  STEP: create the container @ 11/09/24 13:42:19.694
  W1109 13:42:19.707861      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 11/09/24 13:42:19.708
  E1109 13:42:19.900031      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:42:20.900793      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:42:21.901879      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 11/09/24 13:42:22.73
  STEP: the container should be terminated @ 11/09/24 13:42:22.733
  STEP: the termination message should be set @ 11/09/24 13:42:22.733
  I1109 13:42:22.733879 20 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 11/09/24 13:42:22.733
  I1109 13:42:22.747218 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7498" for this suite. @ 11/09/24 13:42:22.75
â€¢ [3.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 11/09/24 13:42:22.756
  I1109 13:42:22.756809 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename downward-api @ 11/09/24 13:42:22.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:42:22.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:42:22.776
  STEP: Creating the pod @ 11/09/24 13:42:22.778
  E1109 13:42:22.902339      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:42:23.902584      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:42:24.903455      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:42:25.319928 20 pod_client.go:173] Successfully updated pod "labelsupdate91fe6a6d-d861-4353-9cec-43a8b65d0d1a"
  E1109 13:42:25.904351      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:42:26.905134      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:42:27.335006 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4623" for this suite. @ 11/09/24 13:42:27.339
â€¢ [4.589 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 11/09/24 13:42:27.346
  I1109 13:42:27.346382 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename projected @ 11/09/24 13:42:27.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:42:27.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:42:27.366
  STEP: Creating configMap with name projected-configmap-test-volume-map-dad74c85-a447-432b-81bb-1b4ab26901b1 @ 11/09/24 13:42:27.369
  STEP: Creating a pod to test consume configMaps @ 11/09/24 13:42:27.374
  E1109 13:42:27.906059      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:42:28.906861      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:42:29.395
  I1109 13:42:29.398656 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-projected-configmaps-15e5a4eb-396e-4e66-babd-14589b0f0bd0 container agnhost-container: <nil>
  STEP: delete the pod @ 11/09/24 13:42:29.405
  I1109 13:42:29.418639 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2721" for this suite. @ 11/09/24 13:42:29.421
â€¢ [2.083 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 11/09/24 13:42:29.429
  I1109 13:42:29.429096 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename container-probe @ 11/09/24 13:42:29.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:42:29.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:42:29.448
  STEP: Creating pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773 @ 11/09/24 13:42:29.451
  E1109 13:42:29.907459      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:42:30.907759      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 11/09/24 13:42:31.471
  I1109 13:42:31.474625 20 container_probe.go:1749] Initial restart count of pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 is 0
  I1109 13:42:31.478679 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:42:31.908204      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:42:32.908414      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:42:33.483447 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:42:33.908962      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:42:34.909063      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:42:35.487699 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:42:35.909154      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:42:36.909285      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:42:37.493197 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:42:37.909454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:42:38.910475      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:42:39.497330 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:42:39.910632      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:42:40.910763      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:42:41.502771 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:42:41.911350      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:42:42.911570      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:42:43.508397 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:42:43.911906      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:42:44.912125      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:42:45.512268 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:42:45.912810      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:42:46.913021      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:42:47.516845 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:42:47.913356      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:42:48.913579      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:42:49.522121 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:42:49.914628      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:42:50.915005      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:42:51.526282 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:42:51.915851      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:42:52.915948      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:42:53.531972 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:42:53.916471      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:42:54.917146      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:42:55.536763 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:42:55.917262      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:42:56.917387      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:42:57.541191 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:42:57.918478      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:42:58.919450      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:42:59.546621 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:42:59.920141      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:43:00.920224      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:43:01.551692 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:43:01.921181      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:43:02.921332      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:43:03.556881 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:43:03.922376      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:43:04.922503      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:43:05.561826 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:43:05.923380      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:43:06.923483      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:43:07.566311 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:43:07.923728      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:43:08.923978      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:43:09.571047 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:43:09.924598      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:43:10.925093      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:43:11.575646 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:43:11.926116      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:43:12.926247      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:43:13.581272 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:43:13.926590      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:43:14.927152      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:43:15.585583 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:43:15.928142      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:43:16.928273      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:43:17.589889 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:43:17.928450      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:43:18.928550      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:43:19.594979 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:43:19.929454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:43:20.929552      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:43:21.600288 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:43:21.929697      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:43:22.929926      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:43:23.606034 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:43:23.930480      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:43:24.931463      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:43:25.612264 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:43:25.931790      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:43:26.932462      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:43:27.616523 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:43:27.933015      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:43:28.933267      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:43:29.621081 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:43:29.933405      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:43:30.933541      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:43:31.626276 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:43:31.933708      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:43:32.934463      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:43:33.631919 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:43:33.935347      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:43:34.935418      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:43:35.636108 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:43:35.935547      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:43:36.935755      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:43:37.640902 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:43:37.936307      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:43:38.936700      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:43:39.646432 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:43:39.936774      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:43:40.937687      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:43:41.651761 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:43:41.938222      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:43:42.938367      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:43:43.657282 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:43:43.938484      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:43:44.938579      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:43:45.662576 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:43:45.939028      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:43:46.939149      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:43:47.666399 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:43:47.939833      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:43:48.940060      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:43:49.672119 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:43:49.940466      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:43:50.940638      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:43:51.676303 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:43:51.941689      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:43:52.942462      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:43:53.681768 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:43:53.943218      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:43:54.943451      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:43:55.686920 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:43:55.944391      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:43:56.945462      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:43:57.691570 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:43:57.946024      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:43:58.946187      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:43:59.696486 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:43:59.947004      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:44:00.947306      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:44:01.701938 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:44:01.948377      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:44:02.948383      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:44:03.706496 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:44:03.948790      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:44:04.948997      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:44:05.712200 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:44:05.949687      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:44:06.949784      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:44:07.716628 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:44:07.949928      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:44:08.950153      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:44:09.722650 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:44:09.950964      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:44:10.951301      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:44:11.728569 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:44:11.952302      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:44:12.952351      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:44:13.735121 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:44:13.953430      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:44:14.953597      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:44:15.740293 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:44:15.953666      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:44:16.953927      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:44:17.745099 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:44:17.954458      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:44:18.954707      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:44:19.749344 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:44:19.955401      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:44:20.955634      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:44:21.754068 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:44:21.956454      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:44:22.956573      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:44:23.760014 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:44:23.957352      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:44:24.957446      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:44:25.765006 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:44:25.958276      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:44:26.958365      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:44:27.768964 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:44:27.959294      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:44:28.959377      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:44:29.773199 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:44:29.960460      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:44:30.960774      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:44:31.778250 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:44:31.961507      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:44:32.961632      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:44:33.784124 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:44:33.962438      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:44:34.962645      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:44:35.789283 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:44:35.963592      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:44:36.963791      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:44:37.794650 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:44:37.963900      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:44:38.964028      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:44:39.799337 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:44:39.964631      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:44:40.964746      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:44:41.804300 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:44:41.965614      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:44:42.965806      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:44:43.808911 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:44:43.966392      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:44:44.966448      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:44:45.813675 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:44:45.967043      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:44:46.967379      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:44:47.819153 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:44:47.968367      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:44:48.968402      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:44:49.823709 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:44:49.968940      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:44:50.969388      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:44:51.829354 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:44:51.969545      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:44:52.970435      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:44:53.835215 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:44:53.971463      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:44:54.971589      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:44:55.840202 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:44:55.972444      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:44:56.973457      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:44:57.845472 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:44:57.973681      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:44:58.973785      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:44:59.849572 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:44:59.974805      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:45:00.975852      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:45:01.854767 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:45:01.975993      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:45:02.976121      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:45:03.859766 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:45:03.977025      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:45:04.977105      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:45:05.864765 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:45:05.977982      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:45:06.978989      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:45:07.868555 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:45:07.979690      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:45:08.979794      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:45:09.873585 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:45:09.980862      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:45:10.981457      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:45:11.878883 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:45:11.982254      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:45:12.982402      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:45:13.884537 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:45:13.982786      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:45:14.983154      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:45:15.889811 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:45:15.984076      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:45:16.984175      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:45:17.893968 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:45:17.984280      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:45:18.984381      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:45:19.899402 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:45:19.984516      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:45:20.984763      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:45:21.904223 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:45:21.985467      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:45:22.985621      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:45:23.908926 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:45:23.986194      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:45:24.986728      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:45:25.913980 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:45:25.987179      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:45:26.987405      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:45:27.919631 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:45:27.987813      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:45:28.988470      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:45:29.925125 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:45:29.989305      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:45:30.989578      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:45:31.930334 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:45:31.990520      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:45:32.990630      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:45:33.935051 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:45:33.991220      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:45:34.991604      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:45:35.940327 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:45:35.992532      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:45:36.992782      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:45:37.946006 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:45:37.993279      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:45:38.993487      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:45:39.950580 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:45:39.993706      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:45:40.993721      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:45:41.955737 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:45:41.993870      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:45:42.993992      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:45:43.960109 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:45:43.994405      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:45:44.994602      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:45:45.965133 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:45:45.995391      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:45:46.996324      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:45:47.970097 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:45:47.997315      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:45:48.997398      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:45:49.974519 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:45:49.997641      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:45:50.997896      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:45:51.979259 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:45:51.998366      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:45:52.998395      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:45:53.983493 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:45:53.998627      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:45:54.999452      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:45:55.987816 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:45:55.999932      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:45:57.000092      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:45:57.992844 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:45:58.000957      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:45:59.001345      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:45:59.998362 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:46:00.001469      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:46:01.001721      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:46:02.001709      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:46:02.002769 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:46:03.001886      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:46:04.002461      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:46:04.008385 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:46:05.002492      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:46:06.002642      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:46:06.012788 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:46:07.002880      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:46:08.003060      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:46:08.017427 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:46:09.003484      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:46:10.004453      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:46:10.021917 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:46:11.004602      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:46:12.004908      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:46:12.026875 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:46:13.005104      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:46:14.005357      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:46:14.032536 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:46:15.005480      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:46:16.005564      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:46:16.036543 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:46:17.006364      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:46:18.007430      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:46:18.041422 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:46:19.008359      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:46:20.009425      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:46:20.046992 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:46:21.009871      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:46:22.010001      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:46:22.051677 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:46:23.010166      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:46:24.010359      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:46:24.057358 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:46:25.010461      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:46:26.010919      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:46:26.063182 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:46:27.011429      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:46:28.012495      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:46:28.067955 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:46:29.012599      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:46:30.012973      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:46:30.072161 20 container_probe.go:1759] Get pod liveness-778a234f-93e9-4633-91bd-829f411e13d0 in namespace container-probe-7773
  E1109 13:46:31.013809      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:46:32.013924      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 11/09/24 13:46:32.072
  I1109 13:46:32.088530 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7773" for this suite. @ 11/09/24 13:46:32.092
â€¢ [242.671 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 11/09/24 13:46:32.1
  I1109 13:46:32.100655 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename disruption @ 11/09/24 13:46:32.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:46:32.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:46:32.115
  STEP: Creating a kubernetes client @ 11/09/24 13:46:32.118
  I1109 13:46:32.118877 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename disruption-2 @ 11/09/24 13:46:32.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:46:32.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:46:32.135
  STEP: Waiting for the pdb to be processed @ 11/09/24 13:46:32.142
  E1109 13:46:33.014076      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:46:34.014369      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 11/09/24 13:46:34.151
  E1109 13:46:35.015400      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:46:36.015433      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 11/09/24 13:46:36.162
  STEP: listing a collection of PDBs across all namespaces @ 11/09/24 13:46:36.168
  STEP: listing a collection of PDBs in namespace disruption-9137 @ 11/09/24 13:46:36.172
  STEP: deleting a collection of PDBs @ 11/09/24 13:46:36.174
  STEP: Waiting for the PDB collection to be deleted @ 11/09/24 13:46:36.188
  I1109 13:46:36.190976 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-7431" for this suite. @ 11/09/24 13:46:36.194
  I1109 13:46:36.199110 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9137" for this suite. @ 11/09/24 13:46:36.202
â€¢ [4.108 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 11/09/24 13:46:36.209
  I1109 13:46:36.209137 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename crd-watch @ 11/09/24 13:46:36.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:46:36.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:46:36.224
  I1109 13:46:36.227836 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  E1109 13:46:37.015719      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:46:38.016569      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 11/09/24 13:46:38.763
  I1109 13:46:38.767078 20 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-11-09T13:46:38Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-11-09T13:46:38Z]] name:name1 resourceVersion:40877 uid:6a47dbb5-8b5c-4218-9ed2-6ffcaaa038a3] num:map[num1:9223372036854775807 num2:1000000]]}
  E1109 13:46:39.017333      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:46:40.017395      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:46:41.018130      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:46:42.018387      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:46:43.018473      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:46:44.018638      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:46:45.018705      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:46:46.019765      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:46:47.019969      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:46:48.020164      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 11/09/24 13:46:48.767
  I1109 13:46:48.773223 20 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-11-09T13:46:48Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-11-09T13:46:48Z]] name:name2 resourceVersion:40913 uid:f91d438f-8de9-4b0a-b1f2-90cd164cdcbe] num:map[num1:9223372036854775807 num2:1000000]]}
  E1109 13:46:49.020456      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:46:50.020610      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:46:51.020704      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:46:52.020794      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:46:53.020943      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:46:54.021046      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:46:55.021270      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:46:56.021685      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:46:57.022578      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:46:58.022764      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 11/09/24 13:46:58.773
  I1109 13:46:58.780802 20 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-11-09T13:46:38Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-11-09T13:46:58Z]] name:name1 resourceVersion:40933 uid:6a47dbb5-8b5c-4218-9ed2-6ffcaaa038a3] num:map[num1:9223372036854775807 num2:1000000]]}
  E1109 13:46:59.023202      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:00.023393      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:01.024402      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:02.025464      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:03.025674      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:04.026336      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:05.026418      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:06.027449      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:07.027535      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:08.028459      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 11/09/24 13:47:08.781
  I1109 13:47:08.788543 20 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-11-09T13:46:48Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-11-09T13:47:08Z]] name:name2 resourceVersion:40953 uid:f91d438f-8de9-4b0a-b1f2-90cd164cdcbe] num:map[num1:9223372036854775807 num2:1000000]]}
  E1109 13:47:09.028912      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:10.029437      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:11.029737      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:12.029855      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:13.029953      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:14.030559      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:15.030632      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:16.031137      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:17.031406      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:18.031458      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 11/09/24 13:47:18.789
  I1109 13:47:18.797145 20 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-11-09T13:46:38Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-11-09T13:46:58Z]] name:name1 resourceVersion:40973 uid:6a47dbb5-8b5c-4218-9ed2-6ffcaaa038a3] num:map[num1:9223372036854775807 num2:1000000]]}
  E1109 13:47:19.032471      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:20.032726      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:21.033802      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:22.034050      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:23.034816      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:24.035666      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:25.035765      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:26.035814      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:27.035964      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:28.035993      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 11/09/24 13:47:28.797
  I1109 13:47:28.805567 20 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-11-09T13:46:48Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-11-09T13:47:08Z]] name:name2 resourceVersion:40993 uid:f91d438f-8de9-4b0a-b1f2-90cd164cdcbe] num:map[num1:9223372036854775807 num2:1000000]]}
  E1109 13:47:29.036943      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:30.037424      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:31.038418      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:32.039439      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:33.039639      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:34.040429      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:35.041437      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:36.041742      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:37.041875      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:38.042093      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:39.042890      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:47:39.320906 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-2002" for this suite. @ 11/09/24 13:47:39.324
â€¢ [63.123 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 11/09/24 13:47:39.332
  I1109 13:47:39.332115 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename emptydir @ 11/09/24 13:47:39.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:47:39.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:47:39.49
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 11/09/24 13:47:39.493
  E1109 13:47:40.043057      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:41.043867      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:42.044575      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:43.045565      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:47:43.517
  I1109 13:47:43.520249 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-798d214e-63d0-432c-a272-f8abeb7d0b0a container test-container: <nil>
  STEP: delete the pod @ 11/09/24 13:47:43.538
  I1109 13:47:43.552738 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9143" for this suite. @ 11/09/24 13:47:43.556
â€¢ [4.232 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 11/09/24 13:47:43.564
  I1109 13:47:43.564762 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename webhook @ 11/09/24 13:47:43.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:47:43.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:47:43.583
  STEP: Setting up server cert @ 11/09/24 13:47:43.605
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/09/24 13:47:43.718
  STEP: Deploying the webhook pod @ 11/09/24 13:47:43.728
  STEP: Wait for the deployment to be ready @ 11/09/24 13:47:43.74
  I1109 13:47:43.746432 20 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1109 13:47:44.045675      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:45.045782      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/09/24 13:47:45.758
  STEP: Verifying the service has paired with the endpoint @ 11/09/24 13:47:45.77
  E1109 13:47:46.045916      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:47:46.770718 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 11/09/24 13:47:46.777
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 11/09/24 13:47:46.789
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 11/09/24 13:47:46.794
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 11/09/24 13:47:46.804
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 11/09/24 13:47:46.814
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 11/09/24 13:47:46.82
  I1109 13:47:46.864679 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3259" for this suite. @ 11/09/24 13:47:46.867
  STEP: Destroying namespace "webhook-markers-1074" for this suite. @ 11/09/24 13:47:46.877
â€¢ [3.320 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 11/09/24 13:47:46.884
  I1109 13:47:46.884839 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename downward-api @ 11/09/24 13:47:46.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:47:46.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:47:46.903
  STEP: Creating a pod to test downward API volume plugin @ 11/09/24 13:47:46.905
  E1109 13:47:47.046265      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:48.046405      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:47:48.926
  I1109 13:47:48.930289 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod downwardapi-volume-aa666b3a-d608-42ed-ae34-1667e2a7e1ae container client-container: <nil>
  STEP: delete the pod @ 11/09/24 13:47:48.936
  I1109 13:47:48.951880 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9025" for this suite. @ 11/09/24 13:47:48.955
â€¢ [2.079 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:673
  STEP: Creating a kubernetes client @ 11/09/24 13:47:48.963
  I1109 13:47:48.963513 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename validating-admission-policy @ 11/09/24 13:47:48.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:47:48.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:47:48.979
  STEP: getting /apis @ 11/09/24 13:47:48.987
  STEP: getting /apis/admissionregistration.k8s.io @ 11/09/24 13:47:48.99
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 11/09/24 13:47:48.991
  STEP: creating @ 11/09/24 13:47:48.992
  STEP: getting @ 11/09/24 13:47:49.011
  STEP: listing @ 11/09/24 13:47:49.014
  STEP: watching @ 11/09/24 13:47:49.018
  I1109 13:47:49.018261 20 validatingadmissionpolicy.go:768] starting watch
  STEP: patching @ 11/09/24 13:47:49.019
  STEP: updating @ 11/09/24 13:47:49.024
  I1109 13:47:49.031964 20 validatingadmissionpolicy.go:796] waiting for watch events with expected annotations
  STEP: deleting @ 11/09/24 13:47:49.032
  STEP: deleting a collection @ 11/09/24 13:47:49.043
  E1109 13:47:49.047368      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:47:49.061504 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-9587" for this suite. @ 11/09/24 13:47:49.064
â€¢ [0.107 seconds]
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2216
  STEP: Creating a kubernetes client @ 11/09/24 13:47:49.07
  I1109 13:47:49.070906 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename services @ 11/09/24 13:47:49.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:47:49.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:47:49.09
  STEP: creating service in namespace services-2659 @ 11/09/24 13:47:49.092
  STEP: creating service affinity-nodeport-transition in namespace services-2659 @ 11/09/24 13:47:49.092
  STEP: creating replication controller affinity-nodeport-transition in namespace services-2659 @ 11/09/24 13:47:49.107
  I1109 13:47:49.115059      20 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-2659, replica count: 3
  E1109 13:47:50.047541      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:51.048327      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:52.048382      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:47:52.166755      20 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1109 13:47:52.178071 20 resource.go:361] Creating new exec pod
  E1109 13:47:53.048511      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:54.048602      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:55.048679      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:47:55.197114 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-2659 exec execpod-affinity5czhz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I1109 13:47:55.288104 20 builder.go:146] stderr: "+ + echonc hostName -v\n -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  I1109 13:47:55.288148 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1109 13:47:55.288323 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-2659 exec execpod-affinity5czhz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.77 80'
  I1109 13:47:55.372773 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.77 80\nConnection to 10.152.183.77 80 port [tcp/http] succeeded!\n"
  I1109 13:47:55.372822 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1109 13:47:55.372912 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-2659 exec execpod-affinity5czhz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.26.237 30623'
  I1109 13:47:55.454713 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.26.237 30623\nConnection to 172.31.26.237 30623 port [tcp/*] succeeded!\n"
  I1109 13:47:55.454764 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1109 13:47:55.454844 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-2659 exec execpod-affinity5czhz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.94.169 30623'
  I1109 13:47:55.536589 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.94.169 30623\nConnection to 172.31.94.169 30623 port [tcp/*] succeeded!\n"
  I1109 13:47:55.536646 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1109 13:47:55.547134 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-2659 exec execpod-affinity5czhz -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.26.237:30623/ ; done'
  I1109 13:47:55.693260 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30623/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30623/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30623/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30623/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30623/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30623/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30623/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30623/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30623/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30623/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30623/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30623/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30623/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30623/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30623/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30623/\n"
  I1109 13:47:55.693308 20 builder.go:147] stdout: "\naffinity-nodeport-transition-87qqt\naffinity-nodeport-transition-87qqt\naffinity-nodeport-transition-87qqt\naffinity-nodeport-transition-cnq6q\naffinity-nodeport-transition-87qqt\naffinity-nodeport-transition-cvmsj\naffinity-nodeport-transition-cvmsj\naffinity-nodeport-transition-cnq6q\naffinity-nodeport-transition-87qqt\naffinity-nodeport-transition-87qqt\naffinity-nodeport-transition-cvmsj\naffinity-nodeport-transition-cnq6q\naffinity-nodeport-transition-87qqt\naffinity-nodeport-transition-cnq6q\naffinity-nodeport-transition-cnq6q\naffinity-nodeport-transition-87qqt"
  I1109 13:47:55.693321 20 service.go:242] Received response from host: affinity-nodeport-transition-87qqt
  I1109 13:47:55.693329 20 service.go:242] Received response from host: affinity-nodeport-transition-87qqt
  I1109 13:47:55.693352 20 service.go:242] Received response from host: affinity-nodeport-transition-87qqt
  I1109 13:47:55.693359 20 service.go:242] Received response from host: affinity-nodeport-transition-cnq6q
  I1109 13:47:55.693366 20 service.go:242] Received response from host: affinity-nodeport-transition-87qqt
  I1109 13:47:55.693377 20 service.go:242] Received response from host: affinity-nodeport-transition-cvmsj
  I1109 13:47:55.693382 20 service.go:242] Received response from host: affinity-nodeport-transition-cvmsj
  I1109 13:47:55.693405 20 service.go:242] Received response from host: affinity-nodeport-transition-cnq6q
  I1109 13:47:55.693487 20 service.go:242] Received response from host: affinity-nodeport-transition-87qqt
  I1109 13:47:55.693499 20 service.go:242] Received response from host: affinity-nodeport-transition-87qqt
  I1109 13:47:55.693508 20 service.go:242] Received response from host: affinity-nodeport-transition-cvmsj
  I1109 13:47:55.693514 20 service.go:242] Received response from host: affinity-nodeport-transition-cnq6q
  I1109 13:47:55.693521 20 service.go:242] Received response from host: affinity-nodeport-transition-87qqt
  I1109 13:47:55.693530 20 service.go:242] Received response from host: affinity-nodeport-transition-cnq6q
  I1109 13:47:55.693536 20 service.go:242] Received response from host: affinity-nodeport-transition-cnq6q
  I1109 13:47:55.693543 20 service.go:242] Received response from host: affinity-nodeport-transition-87qqt
  I1109 13:47:55.706256 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-2659 exec execpod-affinity5czhz -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.26.237:30623/ ; done'
  I1109 13:47:55.854698 20 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30623/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30623/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30623/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30623/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30623/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30623/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30623/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30623/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30623/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30623/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30623/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30623/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30623/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30623/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30623/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.26.237:30623/\n"
  I1109 13:47:55.854756 20 builder.go:147] stdout: "\naffinity-nodeport-transition-cnq6q\naffinity-nodeport-transition-cnq6q\naffinity-nodeport-transition-cnq6q\naffinity-nodeport-transition-cnq6q\naffinity-nodeport-transition-cnq6q\naffinity-nodeport-transition-cnq6q\naffinity-nodeport-transition-cnq6q\naffinity-nodeport-transition-cnq6q\naffinity-nodeport-transition-cnq6q\naffinity-nodeport-transition-cnq6q\naffinity-nodeport-transition-cnq6q\naffinity-nodeport-transition-cnq6q\naffinity-nodeport-transition-cnq6q\naffinity-nodeport-transition-cnq6q\naffinity-nodeport-transition-cnq6q\naffinity-nodeport-transition-cnq6q"
  I1109 13:47:55.854770 20 service.go:242] Received response from host: affinity-nodeport-transition-cnq6q
  I1109 13:47:55.854778 20 service.go:242] Received response from host: affinity-nodeport-transition-cnq6q
  I1109 13:47:55.854785 20 service.go:242] Received response from host: affinity-nodeport-transition-cnq6q
  I1109 13:47:55.854791 20 service.go:242] Received response from host: affinity-nodeport-transition-cnq6q
  I1109 13:47:55.854797 20 service.go:242] Received response from host: affinity-nodeport-transition-cnq6q
  I1109 13:47:55.854803 20 service.go:242] Received response from host: affinity-nodeport-transition-cnq6q
  I1109 13:47:55.854808 20 service.go:242] Received response from host: affinity-nodeport-transition-cnq6q
  I1109 13:47:55.854815 20 service.go:242] Received response from host: affinity-nodeport-transition-cnq6q
  I1109 13:47:55.854821 20 service.go:242] Received response from host: affinity-nodeport-transition-cnq6q
  I1109 13:47:55.854826 20 service.go:242] Received response from host: affinity-nodeport-transition-cnq6q
  I1109 13:47:55.854832 20 service.go:242] Received response from host: affinity-nodeport-transition-cnq6q
  I1109 13:47:55.854837 20 service.go:242] Received response from host: affinity-nodeport-transition-cnq6q
  I1109 13:47:55.854849 20 service.go:242] Received response from host: affinity-nodeport-transition-cnq6q
  I1109 13:47:55.854855 20 service.go:242] Received response from host: affinity-nodeport-transition-cnq6q
  I1109 13:47:55.854861 20 service.go:242] Received response from host: affinity-nodeport-transition-cnq6q
  I1109 13:47:55.854867 20 service.go:242] Received response from host: affinity-nodeport-transition-cnq6q
  I1109 13:47:55.854937 20 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-2659, will wait for the garbage collector to delete the pods @ 11/09/24 13:47:55.872
  I1109 13:47:55.935513 20 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 7.78652ms
  I1109 13:47:56.035692 20 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 100.17303ms
  E1109 13:47:56.048859      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:57.049492      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:58.050056      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:47:59.050700      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:47:59.255420 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2659" for this suite. @ 11/09/24 13:47:59.259
â€¢ [10.194 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 11/09/24 13:47:59.269
  I1109 13:47:59.269639 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename secrets @ 11/09/24 13:47:59.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:47:59.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:47:59.288
  STEP: Creating secret with name secret-test-map-627691d2-4d22-443c-993f-25e90cd0a480 @ 11/09/24 13:47:59.291
  STEP: Creating a pod to test consume secrets @ 11/09/24 13:47:59.296
  E1109 13:48:00.050849      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:01.051008      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:02.052017      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:03.052259      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:48:03.317
  I1109 13:48:03.321043 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-secrets-f1cd94c1-a784-4454-8c7c-1ca2803fd3e2 container secret-volume-test: <nil>
  STEP: delete the pod @ 11/09/24 13:48:03.328
  I1109 13:48:03.348793 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9949" for this suite. @ 11/09/24 13:48:03.352
â€¢ [4.089 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1148
  STEP: Creating a kubernetes client @ 11/09/24 13:48:03.358
  I1109 13:48:03.358381 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename job @ 11/09/24 13:48:03.358
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:48:03.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:48:03.377
  STEP: Creating a suspended job @ 11/09/24 13:48:03.382
  STEP: Patching the Job @ 11/09/24 13:48:03.387
  STEP: Watching for Job to be patched @ 11/09/24 13:48:03.476
  I1109 13:48:03.477873 20 job.go:1330] Event ADDED observed for Job e2e-nlv5q in namespace job-3581 with labels: map[e2e-job-label:e2e-nlv5q] and annotations: map[]
  I1109 13:48:03.477924 20 job.go:1330] Event MODIFIED observed for Job e2e-nlv5q in namespace job-3581 with labels: map[e2e-job-label:e2e-nlv5q] and annotations: map[]
  I1109 13:48:03.477939 20 job.go:1333] Event MODIFIED found for Job e2e-nlv5q in namespace job-3581 with labels: map[e2e-job-label:e2e-nlv5q e2e-nlv5q:patched] and annotations: map[]
  STEP: Updating the job @ 11/09/24 13:48:03.477
  STEP: Watching for Job to be updated @ 11/09/24 13:48:03.488
  I1109 13:48:03.489504 20 job.go:1333] Event MODIFIED found for Job e2e-nlv5q in namespace job-3581 with labels: map[e2e-job-label:e2e-nlv5q e2e-nlv5q:patched] and annotations: map[updated:true]
  I1109 13:48:03.489546 20 job.go:1226] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 11/09/24 13:48:03.489
  I1109 13:48:03.492198 20 job.go:1233] Job: e2e-nlv5q as labels: map[e2e-job-label:e2e-nlv5q e2e-nlv5q:patched]
  STEP: Waiting for job to complete @ 11/09/24 13:48:03.492
  E1109 13:48:04.052397      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:05.052506      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:06.052690      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:07.053438      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:08.054394      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:09.054644      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:10.054745      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:11.055176      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:12.055508      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:13.055623      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 11/09/24 13:48:13.501
  STEP: Watching for Job to be deleted @ 11/09/24 13:48:13.508
  I1109 13:48:13.509773 20 job.go:1330] Event MODIFIED observed for Job e2e-nlv5q in namespace job-3581 with labels: map[e2e-job-label:e2e-nlv5q e2e-nlv5q:patched] and annotations: map[updated:true]
  I1109 13:48:13.509843 20 job.go:1330] Event MODIFIED observed for Job e2e-nlv5q in namespace job-3581 with labels: map[e2e-job-label:e2e-nlv5q e2e-nlv5q:patched] and annotations: map[updated:true]
  I1109 13:48:13.509861 20 job.go:1330] Event MODIFIED observed for Job e2e-nlv5q in namespace job-3581 with labels: map[e2e-job-label:e2e-nlv5q e2e-nlv5q:patched] and annotations: map[updated:true]
  I1109 13:48:13.509873 20 job.go:1330] Event MODIFIED observed for Job e2e-nlv5q in namespace job-3581 with labels: map[e2e-job-label:e2e-nlv5q e2e-nlv5q:patched] and annotations: map[updated:true]
  I1109 13:48:13.509900 20 job.go:1330] Event MODIFIED observed for Job e2e-nlv5q in namespace job-3581 with labels: map[e2e-job-label:e2e-nlv5q e2e-nlv5q:patched] and annotations: map[updated:true]
  I1109 13:48:13.509948 20 job.go:1333] Event DELETED found for Job e2e-nlv5q in namespace job-3581 with labels: map[e2e-job-label:e2e-nlv5q e2e-nlv5q:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 11/09/24 13:48:13.51
  I1109 13:48:13.513301 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3581" for this suite. @ 11/09/24 13:48:13.516
â€¢ [10.172 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 11/09/24 13:48:13.53
  I1109 13:48:13.530641 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename custom-resource-definition @ 11/09/24 13:48:13.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:48:13.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:48:13.55
  I1109 13:48:13.552759 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  E1109 13:48:14.055715      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:48:14.573343 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5107" for this suite. @ 11/09/24 13:48:14.578
â€¢ [1.055 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1858
  STEP: Creating a kubernetes client @ 11/09/24 13:48:14.585
  I1109 13:48:14.585377 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename kubectl @ 11/09/24 13:48:14.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:48:14.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:48:14.603
  STEP: Starting the proxy @ 11/09/24 13:48:14.605
  I1109 13:48:14.605845 20 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-5792 proxy --unix-socket=/tmp/kubectl-proxy-unix2889148651/test'
  STEP: retrieving proxy /api/ output @ 11/09/24 13:48:14.639
  I1109 13:48:14.639705 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5792" for this suite. @ 11/09/24 13:48:14.643
â€¢ [0.065 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 11/09/24 13:48:14.65
  I1109 13:48:14.650653 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename projected @ 11/09/24 13:48:14.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:48:14.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:48:14.667
  STEP: Creating projection with secret that has name projected-secret-test-6d16d87e-92ac-4f73-87c7-0888856d65b2 @ 11/09/24 13:48:14.67
  STEP: Creating a pod to test consume secrets @ 11/09/24 13:48:14.674
  E1109 13:48:15.056205      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:16.056485      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:17.057018      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:18.057118      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:48:18.696
  I1109 13:48:18.699788 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-projected-secrets-d4cbef0b-6868-4003-9799-cbb56efc0ed2 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 11/09/24 13:48:18.707
  I1109 13:48:18.720568 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-69" for this suite. @ 11/09/24 13:48:18.725
â€¢ [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 11/09/24 13:48:18.731
  I1109 13:48:18.731407 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename apf @ 11/09/24 13:48:18.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:48:18.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:48:18.748
  STEP: getting /apis @ 11/09/24 13:48:18.751
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 11/09/24 13:48:18.754
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 11/09/24 13:48:18.755
  STEP: creating @ 11/09/24 13:48:18.755
  STEP: getting @ 11/09/24 13:48:18.774
  STEP: listing @ 11/09/24 13:48:18.784
  STEP: watching @ 11/09/24 13:48:18.788
  I1109 13:48:18.788063 20 flowcontrol.go:394] starting watch
  STEP: patching @ 11/09/24 13:48:18.789
  STEP: updating @ 11/09/24 13:48:18.793
  I1109 13:48:18.803510 20 flowcontrol.go:422] waiting for watch events with expected annotations
  STEP: getting /status @ 11/09/24 13:48:18.803
  STEP: patching /status @ 11/09/24 13:48:18.806
  STEP: updating /status @ 11/09/24 13:48:18.811
  STEP: deleting @ 11/09/24 13:48:18.825
  STEP: deleting a collection @ 11/09/24 13:48:18.839
  I1109 13:48:18.856286 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-7586" for this suite. @ 11/09/24 13:48:18.861
â€¢ [0.137 seconds]
------------------------------
SSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 11/09/24 13:48:18.868
  I1109 13:48:18.868048 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename disruption @ 11/09/24 13:48:18.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:48:18.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:48:18.885
  STEP: Creating a pdb that targets all three pods in a test replica set @ 11/09/24 13:48:18.889
  STEP: Waiting for the pdb to be processed @ 11/09/24 13:48:18.895
  E1109 13:48:19.057383      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:20.057484      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 11/09/24 13:48:20.91
  STEP: Waiting for all pods to be running @ 11/09/24 13:48:20.91
  I1109 13:48:20.917400 20 disruption.go:680] pods: 1 < 3
  E1109 13:48:21.057569      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:22.057667      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 11/09/24 13:48:22.915
  STEP: Updating the pdb to allow a pod to be evicted @ 11/09/24 13:48:22.925
  STEP: Waiting for the pdb to be processed @ 11/09/24 13:48:22.933
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 11/09/24 13:48:22.942
  STEP: Waiting for all pods to be running @ 11/09/24 13:48:22.942
  STEP: Waiting for the pdb to observed all healthy pods @ 11/09/24 13:48:22.945
  STEP: Patching the pdb to disallow a pod to be evicted @ 11/09/24 13:48:22.974
  STEP: Waiting for the pdb to be processed @ 11/09/24 13:48:22.997
  E1109 13:48:23.058592      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:24.058699      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 11/09/24 13:48:25.002
  STEP: locating a running pod @ 11/09/24 13:48:25.005
  STEP: Deleting the pdb to allow a pod to be evicted @ 11/09/24 13:48:25.014
  STEP: Waiting for the pdb to be deleted @ 11/09/24 13:48:25.021
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 11/09/24 13:48:25.024
  STEP: Waiting for all pods to be running @ 11/09/24 13:48:25.024
  I1109 13:48:25.044352 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2937" for this suite. @ 11/09/24 13:48:25.053
  E1109 13:48:25.059119      20 retrywatcher.go:131] "Watch failed" err="context canceled"
â€¢ [6.198 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1365
  STEP: Creating a kubernetes client @ 11/09/24 13:48:25.066
  I1109 13:48:25.066251 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename kubectl @ 11/09/24 13:48:25.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:48:25.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:48:25.084
  STEP: validating cluster-info @ 11/09/24 13:48:25.087
  I1109 13:48:25.087433 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-5620 cluster-info'
  I1109 13:48:25.156027 20 builder.go:146] stderr: ""
  I1109 13:48:25.156165 20 builder.go:147] stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I1109 13:48:25.156306 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5620" for this suite. @ 11/09/24 13:48:25.16
â€¢ [0.100 seconds]
------------------------------
S
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3184
  STEP: Creating a kubernetes client @ 11/09/24 13:48:25.166
  I1109 13:48:25.166601 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename services @ 11/09/24 13:48:25.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:48:25.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:48:25.187
  STEP: fetching services @ 11/09/24 13:48:25.189
  I1109 13:48:25.192913 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8676" for this suite. @ 11/09/24 13:48:25.196
â€¢ [0.040 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 11/09/24 13:48:25.213
  I1109 13:48:25.213087 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename secrets @ 11/09/24 13:48:25.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:48:25.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:48:25.241
  STEP: Creating secret with name secret-test-map-e5294e91-d38c-45ac-95df-a7c4c9a2bc1c @ 11/09/24 13:48:25.243
  STEP: Creating a pod to test consume secrets @ 11/09/24 13:48:25.255
  E1109 13:48:26.059194      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:27.059390      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:28.059751      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:29.060613      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:48:29.28
  I1109 13:48:29.284782 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-secrets-a994f4b5-10bb-4427-a2c7-4071a4edbf5f container secret-volume-test: <nil>
  STEP: delete the pod @ 11/09/24 13:48:29.291
  I1109 13:48:29.305057 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1591" for this suite. @ 11/09/24 13:48:29.308
â€¢ [4.103 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 11/09/24 13:48:29.314
  I1109 13:48:29.314257 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename aggregateddiscovery @ 11/09/24 13:48:29.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:48:29.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:48:29.333
  I1109 13:48:29.335666 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  E1109 13:48:30.061164      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:31.061415      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:32.061857      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:48:32.384828 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-6923" for this suite. @ 11/09/24 13:48:32.388
â€¢ [3.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 11/09/24 13:48:32.395
  I1109 13:48:32.395487 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename var-expansion @ 11/09/24 13:48:32.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:48:32.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:48:32.41
  STEP: Creating a pod to test env composition @ 11/09/24 13:48:32.413
  E1109 13:48:33.062391      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:34.062603      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:35.063446      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:36.064451      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:48:36.435
  I1109 13:48:36.438911 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod var-expansion-e2f6a8c9-a791-4baa-a5de-8c6eb0e83636 container dapi-container: <nil>
  STEP: delete the pod @ 11/09/24 13:48:36.446
  I1109 13:48:36.463403 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9585" for this suite. @ 11/09/24 13:48:36.467
â€¢ [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:107
  STEP: Creating a kubernetes client @ 11/09/24 13:48:36.473
  I1109 13:48:36.474030 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename job @ 11/09/24 13:48:36.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:48:36.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:48:36.492
  STEP: Looking for a node to schedule job pod @ 11/09/24 13:48:36.496
  STEP: Creating a job @ 11/09/24 13:48:36.499
  STEP: Ensuring job fails @ 11/09/24 13:48:36.504
  E1109 13:48:37.065046      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:38.065289      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:39.066098      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:40.066655      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:48:40.513150 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9417" for this suite. @ 11/09/24 13:48:40.516
â€¢ [4.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 11/09/24 13:48:40.523
  I1109 13:48:40.523125 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename lease-test @ 11/09/24 13:48:40.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:48:40.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:48:40.54
  I1109 13:48:40.595311 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-3756" for this suite. @ 11/09/24 13:48:40.599
â€¢ [0.083 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 11/09/24 13:48:40.606
  I1109 13:48:40.606507 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename configmap @ 11/09/24 13:48:40.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:48:40.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:48:40.625
  STEP: Creating configMap with name configmap-test-volume-map-f625f896-191a-4208-a1fd-3f4c15c2b781 @ 11/09/24 13:48:40.628
  STEP: Creating a pod to test consume configMaps @ 11/09/24 13:48:40.634
  E1109 13:48:41.067379      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:42.067478      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:43.067570      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:44.068433      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:48:44.656
  I1109 13:48:44.659285 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-configmaps-48d6b996-26c0-4f2c-a66a-bcd0eadd4ada container agnhost-container: <nil>
  STEP: delete the pod @ 11/09/24 13:48:44.666
  I1109 13:48:44.682217 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5050" for this suite. @ 11/09/24 13:48:44.685
â€¢ [4.086 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 11/09/24 13:48:44.692
  I1109 13:48:44.692216 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename var-expansion @ 11/09/24 13:48:44.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:48:44.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:48:44.707
  STEP: Creating a pod to test substitution in container's args @ 11/09/24 13:48:44.71
  E1109 13:48:45.068542      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:46.068619      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:47.069347      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:48.069404      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:48:48.733
  I1109 13:48:48.736474 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod var-expansion-785f9143-3c4b-482a-abeb-b14f51a66d3c container dapi-container: <nil>
  STEP: delete the pod @ 11/09/24 13:48:48.743
  I1109 13:48:48.760146 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5074" for this suite. @ 11/09/24 13:48:48.765
â€¢ [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 11/09/24 13:48:48.772
  I1109 13:48:48.772926 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename server-version @ 11/09/24 13:48:48.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:48:48.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:48:48.79
  STEP: Request ServerVersion @ 11/09/24 13:48:48.793
  STEP: Confirm major version @ 11/09/24 13:48:48.794
  I1109 13:48:48.794640 20 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 11/09/24 13:48:48.794
  I1109 13:48:48.794713 20 server_version.go:58] cleanMinorVersion: 31
  I1109 13:48:48.794723 20 server_version.go:62] Minor version: 31
  I1109 13:48:48.794845 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-3873" for this suite. @ 11/09/24 13:48:48.798
â€¢ [0.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 11/09/24 13:48:48.804
  I1109 13:48:48.804328 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename namespaces @ 11/09/24 13:48:48.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:48:48.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:48:48.822
  STEP: Creating a test namespace @ 11/09/24 13:48:48.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:48:48.841
  STEP: Creating a pod in the namespace @ 11/09/24 13:48:48.845
  STEP: Waiting for the pod to have running status @ 11/09/24 13:48:48.853
  E1109 13:48:49.069604      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:50.070465      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 11/09/24 13:48:50.865
  STEP: Waiting for the namespace to be removed. @ 11/09/24 13:48:50.873
  E1109 13:48:51.070643      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:52.071467      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:53.072350      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:54.073099      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:55.073308      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:56.074128      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:57.074267      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:58.074943      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:48:59.075066      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:49:00.076098      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:49:01.076185      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 11/09/24 13:49:01.877
  STEP: Verifying there are no pods in the namespace @ 11/09/24 13:49:01.899
  I1109 13:49:01.903352 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9636" for this suite. @ 11/09/24 13:49:01.908
  STEP: Destroying namespace "nsdeletetest-9533" for this suite. @ 11/09/24 13:49:01.914
  I1109 13:49:01.917851 20 framework.go:370] Namespace nsdeletetest-9533 was already deleted
  STEP: Destroying namespace "nsdeletetest-2847" for this suite. @ 11/09/24 13:49:01.917
â€¢ [13.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 11/09/24 13:49:01.925
  I1109 13:49:01.925073 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename subjectreview @ 11/09/24 13:49:01.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:49:01.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:49:01.944
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-4549" @ 11/09/24 13:49:01.946
  I1109 13:49:01.956018 20 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-4549:e2e"
  I1109 13:49:01.956050 20 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-4549"}
  I1109 13:49:01.956058 20 subjectreviews.go:71] saUID: "06f91840-c674-4fca-b661-04768e812d20"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-4549:e2e" @ 11/09/24 13:49:01.956
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-4549:e2e" @ 11/09/24 13:49:01.956
  I1109 13:49:01.957996 20 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-4549:e2e" api 'list' configmaps in "subjectreview-4549" namespace @ 11/09/24 13:49:01.958
  I1109 13:49:01.959303 20 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-4549:e2e" @ 11/09/24 13:49:01.959
  I1109 13:49:01.960792 20 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I1109 13:49:01.960809 20 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I1109 13:49:01.960934 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-4549" for this suite. @ 11/09/24 13:49:01.964
â€¢ [0.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 11/09/24 13:49:01.97
  I1109 13:49:01.970595 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename field-validation @ 11/09/24 13:49:01.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:49:01.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:49:01.987
  I1109 13:49:01.989983 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  E1109 13:49:02.077109      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:49:03.077886      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:49:04.077982      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  W1109 13:49:04.526978      20 warnings.go:70] unknown field "alpha"
  W1109 13:49:04.526998      20 warnings.go:70] unknown field "beta"
  W1109 13:49:04.527002      20 warnings.go:70] unknown field "delta"
  W1109 13:49:04.527005      20 warnings.go:70] unknown field "epsilon"
  W1109 13:49:04.527008      20 warnings.go:70] unknown field "gamma"
  I1109 13:49:05.068345 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1867" for this suite. @ 11/09/24 13:49:05.071
  E1109 13:49:05.078558      20 retrywatcher.go:131] "Watch failed" err="context canceled"
â€¢ [3.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:859
  STEP: Creating a kubernetes client @ 11/09/24 13:49:05.079
  I1109 13:49:05.079705 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename resourcequota @ 11/09/24 13:49:05.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:49:05.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:49:05.094
  STEP: Creating a ResourceQuota with best effort scope @ 11/09/24 13:49:05.097
  STEP: Ensuring ResourceQuota status is calculated @ 11/09/24 13:49:05.101
  E1109 13:49:06.079611      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:49:07.079698      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 11/09/24 13:49:07.105
  STEP: Ensuring ResourceQuota status is calculated @ 11/09/24 13:49:07.114
  E1109 13:49:08.080398      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:49:09.080649      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 11/09/24 13:49:09.119
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 11/09/24 13:49:09.133
  E1109 13:49:10.080839      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:49:11.080893      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 11/09/24 13:49:11.138
  E1109 13:49:12.081116      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:49:13.081400      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 11/09/24 13:49:13.142
  STEP: Ensuring resource quota status released the pod usage @ 11/09/24 13:49:13.153
  E1109 13:49:14.081491      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:49:15.081699      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 11/09/24 13:49:15.157
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 11/09/24 13:49:15.168
  E1109 13:49:16.082600      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:49:17.082732      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 11/09/24 13:49:17.173
  E1109 13:49:18.082867      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:49:19.083116      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 11/09/24 13:49:19.18
  STEP: Ensuring resource quota status released the pod usage @ 11/09/24 13:49:19.195
  E1109 13:49:20.083216      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:49:21.083504      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:49:21.201929 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9376" for this suite. @ 11/09/24 13:49:21.205
â€¢ [16.132 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 11/09/24 13:49:21.211
  I1109 13:49:21.211973 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename sysctl @ 11/09/24 13:49:21.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:49:21.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:49:21.231
  STEP: Creating a pod with one valid and two invalid sysctls @ 11/09/24 13:49:21.234
  I1109 13:49:21.239209 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-3814" for this suite. @ 11/09/24 13:49:21.242
â€¢ [0.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 11/09/24 13:49:21.248
  I1109 13:49:21.248394 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename emptydir-wrapper @ 11/09/24 13:49:21.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:49:21.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:49:21.263
  STEP: Creating 50 configmaps @ 11/09/24 13:49:21.267
  STEP: Creating RC which spawns configmap-volume pods @ 11/09/24 13:49:21.532
  I1109 13:49:21.648851 20 resource.go:87] Pod name wrapped-volume-race-e8cb3a67-9b00-4328-aa8b-2e24387f4f3c: Found 3 pods out of 5
  E1109 13:49:22.084308      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:49:23.084424      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:49:24.084524      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:49:25.084615      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:49:26.084718      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:49:26.654519 20 resource.go:87] Pod name wrapped-volume-race-e8cb3a67-9b00-4328-aa8b-2e24387f4f3c: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 11/09/24 13:49:26.654
  STEP: Creating RC which spawns configmap-volume pods @ 11/09/24 13:49:26.674
  I1109 13:49:26.686804 20 resource.go:87] Pod name wrapped-volume-race-8ca2ef70-0009-4ab8-8ff2-4ad9ec88e16d: Found 0 pods out of 5
  E1109 13:49:27.085394      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:49:28.086478      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:49:29.086567      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:49:30.086705      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:49:31.086767      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:49:31.694131 20 resource.go:87] Pod name wrapped-volume-race-8ca2ef70-0009-4ab8-8ff2-4ad9ec88e16d: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 11/09/24 13:49:31.694
  STEP: Creating RC which spawns configmap-volume pods @ 11/09/24 13:49:31.716
  I1109 13:49:31.730148 20 resource.go:87] Pod name wrapped-volume-race-a9b39634-f9e5-4642-939e-556f864320ed: Found 0 pods out of 5
  E1109 13:49:32.087494      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:49:33.087585      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:49:34.087715      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:49:35.088451      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:49:36.088544      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:49:36.737279 20 resource.go:87] Pod name wrapped-volume-race-a9b39634-f9e5-4642-939e-556f864320ed: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 11/09/24 13:49:36.737
  STEP: deleting ReplicationController wrapped-volume-race-a9b39634-f9e5-4642-939e-556f864320ed in namespace emptydir-wrapper-8370, will wait for the garbage collector to delete the pods @ 11/09/24 13:49:36.755
  I1109 13:49:36.815748 20 resources.go:139] Deleting ReplicationController wrapped-volume-race-a9b39634-f9e5-4642-939e-556f864320ed took: 6.346676ms
  I1109 13:49:36.916247 20 resources.go:163] Terminating ReplicationController wrapped-volume-race-a9b39634-f9e5-4642-939e-556f864320ed pods took: 100.469734ms
  E1109 13:49:37.088674      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:49:38.089445      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-8ca2ef70-0009-4ab8-8ff2-4ad9ec88e16d in namespace emptydir-wrapper-8370, will wait for the garbage collector to delete the pods @ 11/09/24 13:49:38.517
  I1109 13:49:38.579613 20 resources.go:139] Deleting ReplicationController wrapped-volume-race-8ca2ef70-0009-4ab8-8ff2-4ad9ec88e16d took: 7.005867ms
  I1109 13:49:38.679952 20 resources.go:163] Terminating ReplicationController wrapped-volume-race-8ca2ef70-0009-4ab8-8ff2-4ad9ec88e16d pods took: 100.335593ms
  E1109 13:49:39.090040      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-e8cb3a67-9b00-4328-aa8b-2e24387f4f3c in namespace emptydir-wrapper-8370, will wait for the garbage collector to delete the pods @ 11/09/24 13:49:39.98
  I1109 13:49:40.044503 20 resources.go:139] Deleting ReplicationController wrapped-volume-race-e8cb3a67-9b00-4328-aa8b-2e24387f4f3c took: 8.803517ms
  E1109 13:49:40.090256      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:49:40.145486 20 resources.go:163] Terminating ReplicationController wrapped-volume-race-e8cb3a67-9b00-4328-aa8b-2e24387f4f3c pods took: 100.980162ms
  E1109 13:49:41.091335      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 11/09/24 13:49:41.746
  I1109 13:49:42.048176 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-8370" for this suite. @ 11/09/24 13:49:42.052
â€¢ [20.811 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 11/09/24 13:49:42.059
  I1109 13:49:42.059220 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename subpath @ 11/09/24 13:49:42.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:49:42.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:49:42.081
  STEP: Setting up data @ 11/09/24 13:49:42.083
  E1109 13:49:42.091491      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating pod pod-subpath-test-downwardapi-z5m5 @ 11/09/24 13:49:42.091
  STEP: Creating a pod to test atomic-volume-subpath @ 11/09/24 13:49:42.091
  E1109 13:49:43.091649      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:49:44.091809      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:49:45.091969      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:49:46.093030      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:49:47.093436      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:49:48.093626      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:49:49.093751      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:49:50.094534      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:49:51.094619      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:49:52.094875      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:49:53.094985      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:49:54.095205      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:49:55.095425      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:49:56.095892      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:49:57.096417      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:49:58.096690      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:49:59.097422      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:50:00.098492      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:50:01.099460      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:50:02.100472      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:50:03.100774      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:50:04.101610      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:50:04.156
  I1109 13:50:04.160434 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-subpath-test-downwardapi-z5m5 container test-container-subpath-downwardapi-z5m5: <nil>
  STEP: delete the pod @ 11/09/24 13:50:04.166
  STEP: Deleting pod pod-subpath-test-downwardapi-z5m5 @ 11/09/24 13:50:04.181
  I1109 13:50:04.181358 20 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-z5m5" in namespace "subpath-47"
  I1109 13:50:04.185475 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-47" for this suite. @ 11/09/24 13:50:04.188
â€¢ [22.135 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:907
  STEP: Creating a kubernetes client @ 11/09/24 13:50:04.194
  I1109 13:50:04.194889 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename job @ 11/09/24 13:50:04.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:50:04.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:50:04.211
  STEP: Creating a job @ 11/09/24 13:50:04.213
  STEP: Ensuring active pods == parallelism @ 11/09/24 13:50:04.218
  E1109 13:50:05.101835      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:50:06.102014      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 11/09/24 13:50:06.223
  I1109 13:50:06.740375 20 pod_client.go:173] Successfully updated pod "adopt-release-56c9l"
  STEP: Checking that the Job readopts the Pod @ 11/09/24 13:50:06.74
  E1109 13:50:07.102925      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:50:08.103854      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 11/09/24 13:50:08.749
  E1109 13:50:09.104112      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:50:09.261095 20 pod_client.go:173] Successfully updated pod "adopt-release-56c9l"
  STEP: Checking that the Job releases the Pod @ 11/09/24 13:50:09.261
  E1109 13:50:10.104898      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:50:11.105919      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:50:11.269449 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3638" for this suite. @ 11/09/24 13:50:11.273
â€¢ [7.086 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 11/09/24 13:50:11.28
  I1109 13:50:11.280925 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename projected @ 11/09/24 13:50:11.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:50:11.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:50:11.299
  STEP: Creating a pod to test downward API volume plugin @ 11/09/24 13:50:11.301
  E1109 13:50:12.106330      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:50:13.106204      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:50:14.106431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:50:15.107439      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:50:15.327
  I1109 13:50:15.330745 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod downwardapi-volume-4e60f36c-a01e-47ca-93f0-622cb03cdd4c container client-container: <nil>
  STEP: delete the pod @ 11/09/24 13:50:15.338
  I1109 13:50:15.352513 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4775" for this suite. @ 11/09/24 13:50:15.355
â€¢ [4.081 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 11/09/24 13:50:15.362
  I1109 13:50:15.362136 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename watch @ 11/09/24 13:50:15.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:50:15.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:50:15.381
  STEP: getting a starting resourceVersion @ 11/09/24 13:50:15.384
  STEP: starting a background goroutine to produce watch events @ 11/09/24 13:50:15.387
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 11/09/24 13:50:15.387
  E1109 13:50:16.107997      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:50:17.109058      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:50:18.109075      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:50:18.170415 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4048" for this suite. @ 11/09/24 13:50:18.218
â€¢ [2.909 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 11/09/24 13:50:18.271
  I1109 13:50:18.271616 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename security-context-test @ 11/09/24 13:50:18.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:50:18.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:50:18.291
  E1109 13:50:19.110032      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:50:20.110609      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:50:20.310539 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4982" for this suite. @ 11/09/24 13:50:20.314
â€¢ [2.050 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 11/09/24 13:50:20.322
  I1109 13:50:20.322178 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename daemonsets @ 11/09/24 13:50:20.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:50:20.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:50:20.338
  STEP: Creating simple DaemonSet "daemon-set" @ 11/09/24 13:50:20.357
  STEP: Check that daemon pods launch on every node of the cluster. @ 11/09/24 13:50:20.363
  I1109 13:50:20.367362 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-177 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 13:50:20.367408 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-95-130 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 13:50:20.371543 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1109 13:50:20.371568 20 fixtures.go:130] Node ip-172-31-26-237 is running 0 daemon pod, expected 1
  E1109 13:50:21.110785      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:50:21.368269 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-177 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 13:50:21.368319 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-95-130 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 13:50:21.371974 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1109 13:50:21.371994 20 fixtures.go:130] Node ip-172-31-26-237 is running 0 daemon pod, expected 1
  E1109 13:50:22.111460      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:50:22.369913 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-177 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 13:50:22.369960 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-95-130 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 13:50:22.373463 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1109 13:50:22.373488 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 11/09/24 13:50:22.377
  STEP: DeleteCollection of the DaemonSets @ 11/09/24 13:50:22.38
  STEP: Verify that ReplicaSets have been deleted @ 11/09/24 13:50:22.389
  I1109 13:50:22.403130 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"43363"},"items":null}

  I1109 13:50:22.409614 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"43364"},"items":[{"metadata":{"name":"daemon-set-75h8d","generateName":"daemon-set-","namespace":"daemonsets-7476","uid":"c3c62ba0-8d10-442b-b8d1-5e7f8482ec79","resourceVersion":"43364","creationTimestamp":"2024-11-09T13:50:20Z","deletionTimestamp":"2024-11-09T13:50:52Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"67d6e49f-e757-4302-b8f8-017180a9a5a7","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-11-09T13:50:20Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"67d6e49f-e757-4302-b8f8-017180a9a5a7\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-11-09T13:50:21Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.35.122\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-jfcm6","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-jfcm6","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-65-76","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-65-76"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-09T13:50:21Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-09T13:50:20Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-09T13:50:21Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-09T13:50:21Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-09T13:50:20Z"}],"hostIP":"172.31.65.76","hostIPs":[{"ip":"172.31.65.76"}],"podIP":"192.168.35.122","podIPs":[{"ip":"192.168.35.122"}],"startTime":"2024-11-09T13:50:20Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-11-09T13:50:20Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://1382ee45df33a051a32ec9d30efb2dc591d175f6a119036bb705a1b067cff9f3","started":true,"volumeMounts":[{"name":"kube-api-access-jfcm6","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-fl6mn","generateName":"daemon-set-","namespace":"daemonsets-7476","uid":"d14de4ed-6f17-4935-a169-74370b320a4a","resourceVersion":"43363","creationTimestamp":"2024-11-09T13:50:20Z","deletionTimestamp":"2024-11-09T13:50:52Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"67d6e49f-e757-4302-b8f8-017180a9a5a7","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-11-09T13:50:20Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"67d6e49f-e757-4302-b8f8-017180a9a5a7\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-11-09T13:50:21Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.122.50\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-4qhnb","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-4qhnb","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-26-237","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-26-237"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-09T13:50:21Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-09T13:50:20Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-09T13:50:21Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-09T13:50:21Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-09T13:50:20Z"}],"hostIP":"172.31.26.237","hostIPs":[{"ip":"172.31.26.237"}],"podIP":"192.168.122.50","podIPs":[{"ip":"192.168.122.50"}],"startTime":"2024-11-09T13:50:20Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-11-09T13:50:20Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://5ff53919ae0c362799832d821d5f962d8344f0837e5c8ef90983720f10a14b7b","started":true,"volumeMounts":[{"name":"kube-api-access-4qhnb","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-s9dwj","generateName":"daemon-set-","namespace":"daemonsets-7476","uid":"0dbe7848-b00a-4e33-9f91-0aa0f5bae24a","resourceVersion":"43355","creationTimestamp":"2024-11-09T13:50:20Z","labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"67d6e49f-e757-4302-b8f8-017180a9a5a7","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-11-09T13:50:20Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"67d6e49f-e757-4302-b8f8-017180a9a5a7\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-11-09T13:50:21Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.187.20\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-j8nbj","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-j8nbj","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-94-169","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-94-169"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-09T13:50:21Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-09T13:50:20Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-09T13:50:21Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-09T13:50:21Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-11-09T13:50:20Z"}],"hostIP":"172.31.94.169","hostIPs":[{"ip":"172.31.94.169"}],"podIP":"192.168.187.20","podIPs":[{"ip":"192.168.187.20"}],"startTime":"2024-11-09T13:50:20Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-11-09T13:50:20Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://479067680b79c84e97f1fef0b48cad8eb904762635aa530315810ed2f1d885c7","started":true,"volumeMounts":[{"name":"kube-api-access-j8nbj","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I1109 13:50:22.421121 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7476" for this suite. @ 11/09/24 13:50:22.424
â€¢ [2.109 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:495
  STEP: Creating a kubernetes client @ 11/09/24 13:50:22.431
  I1109 13:50:22.431656 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename webhook @ 11/09/24 13:50:22.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:50:22.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:50:22.451
  STEP: Setting up server cert @ 11/09/24 13:50:22.471
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/09/24 13:50:22.864
  STEP: Deploying the webhook pod @ 11/09/24 13:50:22.871
  STEP: Wait for the deployment to be ready @ 11/09/24 13:50:22.882
  I1109 13:50:22.890475 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1109 13:50:23.111569      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:50:24.112474      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/09/24 13:50:24.901
  STEP: Verifying the service has paired with the endpoint @ 11/09/24 13:50:24.912
  E1109 13:50:25.112788      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:50:25.912839 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 11/09/24 13:50:25.921
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 11/09/24 13:50:25.937
  STEP: Creating a configMap that should not be mutated @ 11/09/24 13:50:25.943
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 11/09/24 13:50:25.955
  STEP: Creating a configMap that should be mutated @ 11/09/24 13:50:25.963
  I1109 13:50:26.017051 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9271" for this suite. @ 11/09/24 13:50:26.02
  STEP: Destroying namespace "webhook-markers-5994" for this suite. @ 11/09/24 13:50:26.029
â€¢ [3.604 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 11/09/24 13:50:26.035
  I1109 13:50:26.035572 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename gc @ 11/09/24 13:50:26.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:50:26.05
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:50:26.055
  STEP: create the rc1 @ 11/09/24 13:50:26.061
  STEP: create the rc2 @ 11/09/24 13:50:26.067
  E1109 13:50:26.113272      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:50:27.113624      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:50:28.114394      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:50:29.114464      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:50:30.116819      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:50:31.115478      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 11/09/24 13:50:32.089
  E1109 13:50:32.116947      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 11/09/24 13:50:32.612
  STEP: wait for the rc to be deleted @ 11/09/24 13:50:32.62
  E1109 13:50:33.117172      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:50:34.117301      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:50:35.122496      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:50:36.119022      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:50:37.119716      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:50:37.630924 20 garbage_collector.go:762] 72 pods remaining
  I1109 13:50:37.630954 20 garbage_collector.go:769] 72 pods has nil DeletionTimestamp
  I1109 13:50:37.630960 20 garbage_collector.go:770] 
  E1109 13:50:38.119866      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:50:39.120065      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:50:40.120164      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:50:41.120932      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:50:42.121093      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 11/09/24 13:50:42.631
  W1109 13:50:42.636363      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1109 13:50:42.636392 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1109 13:50:42.636445 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2ng7f" in namespace "gc-4413"
  I1109 13:50:42.648551 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2pfnx" in namespace "gc-4413"
  I1109 13:50:42.665477 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2rsdn" in namespace "gc-4413"
  I1109 13:50:42.676153 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2wq5r" in namespace "gc-4413"
  I1109 13:50:42.688431 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4dgwp" in namespace "gc-4413"
  I1109 13:50:42.699308 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4p4bk" in namespace "gc-4413"
  I1109 13:50:42.712125 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4pcqq" in namespace "gc-4413"
  I1109 13:50:42.723805 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4sbxf" in namespace "gc-4413"
  I1109 13:50:42.734904 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4wx2z" in namespace "gc-4413"
  I1109 13:50:42.747700 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5hdrd" in namespace "gc-4413"
  I1109 13:50:42.760678 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5rxtj" in namespace "gc-4413"
  I1109 13:50:42.773512 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5s96f" in namespace "gc-4413"
  I1109 13:50:42.782377 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5thmj" in namespace "gc-4413"
  I1109 13:50:42.796685 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-62k4v" in namespace "gc-4413"
  I1109 13:50:42.811960 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6cmkc" in namespace "gc-4413"
  I1109 13:50:42.826464 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6gj2x" in namespace "gc-4413"
  I1109 13:50:42.839589 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6k7hm" in namespace "gc-4413"
  I1109 13:50:42.850366 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6lq4s" in namespace "gc-4413"
  I1109 13:50:42.864537 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6lxsw" in namespace "gc-4413"
  I1109 13:50:42.901321 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6nr8s" in namespace "gc-4413"
  I1109 13:50:42.995781 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6qq5b" in namespace "gc-4413"
  I1109 13:50:43.007161 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6wntt" in namespace "gc-4413"
  I1109 13:50:43.020333 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7bt7d" in namespace "gc-4413"
  I1109 13:50:43.038502 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7l5hc" in namespace "gc-4413"
  I1109 13:50:43.051109 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-87cmf" in namespace "gc-4413"
  I1109 13:50:43.064768 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-87kwt" in namespace "gc-4413"
  I1109 13:50:43.081340 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8b59c" in namespace "gc-4413"
  I1109 13:50:43.102916 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8f6mq" in namespace "gc-4413"
  I1109 13:50:43.118453 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8rsj9" in namespace "gc-4413"
  E1109 13:50:43.122829      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:50:43.131387 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8wrht" in namespace "gc-4413"
  I1109 13:50:43.147169 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9974h" in namespace "gc-4413"
  I1109 13:50:43.161089 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9bm8j" in namespace "gc-4413"
  I1109 13:50:43.175457 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9fgxx" in namespace "gc-4413"
  I1109 13:50:43.188316 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9k9kq" in namespace "gc-4413"
  I1109 13:50:43.199522 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bhwbn" in namespace "gc-4413"
  I1109 13:50:43.214501 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-blmsh" in namespace "gc-4413"
  I1109 13:50:43.228023 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bs8xf" in namespace "gc-4413"
  I1109 13:50:43.245975 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c9tpk" in namespace "gc-4413"
  I1109 13:50:43.265471 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cgw79" in namespace "gc-4413"
  I1109 13:50:43.277202 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ck4d4" in namespace "gc-4413"
  I1109 13:50:43.291394 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cq2mk" in namespace "gc-4413"
  I1109 13:50:43.304851 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-crzp8" in namespace "gc-4413"
  I1109 13:50:43.338131 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cx7qv" in namespace "gc-4413"
  I1109 13:50:43.350167 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dd425" in namespace "gc-4413"
  I1109 13:50:43.363961 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dgp5h" in namespace "gc-4413"
  I1109 13:50:43.377288 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dxml6" in namespace "gc-4413"
  I1109 13:50:43.388586 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f68w5" in namespace "gc-4413"
  I1109 13:50:43.401673 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fgngn" in namespace "gc-4413"
  I1109 13:50:43.413209 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fq6fk" in namespace "gc-4413"
  I1109 13:50:43.426546 20 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fvp9f" in namespace "gc-4413"
  I1109 13:50:43.437389 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4413" for this suite. @ 11/09/24 13:50:43.442
â€¢ [17.417 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 11/09/24 13:50:43.454
  I1109 13:50:43.454476 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename proxy @ 11/09/24 13:50:43.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:50:43.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:50:43.482
  I1109 13:50:43.485544 20 proxy.go:293] Creating pod...
  E1109 13:50:44.123634      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:50:45.124559      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:50:46.125507      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:50:47.125648      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:50:47.516208 20 proxy.go:317] Creating service...
  I1109 13:50:47.525467 20 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2899/pods/agnhost/proxy/some/path/with/DELETE
  I1109 13:50:47.531091 20 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1109 13:50:47.531128 20 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2899/pods/agnhost/proxy/some/path/with/GET
  I1109 13:50:47.535117 20 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I1109 13:50:47.535417 20 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2899/pods/agnhost/proxy/some/path/with/HEAD
  I1109 13:50:47.538978 20 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I1109 13:50:47.539007 20 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2899/pods/agnhost/proxy/some/path/with/OPTIONS
  I1109 13:50:47.543659 20 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1109 13:50:47.543685 20 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2899/pods/agnhost/proxy/some/path/with/PATCH
  I1109 13:50:47.547004 20 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1109 13:50:47.547028 20 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2899/pods/agnhost/proxy/some/path/with/POST
  I1109 13:50:47.549960 20 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1109 13:50:47.549991 20 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2899/pods/agnhost/proxy/some/path/with/PUT
  I1109 13:50:47.553208 20 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1109 13:50:47.553383 20 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2899/services/test-service/proxy/some/path/with/DELETE
  I1109 13:50:47.560942 20 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1109 13:50:47.560971 20 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2899/services/test-service/proxy/some/path/with/GET
  I1109 13:50:47.565962 20 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I1109 13:50:47.566059 20 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2899/services/test-service/proxy/some/path/with/HEAD
  I1109 13:50:47.570340 20 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I1109 13:50:47.570369 20 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2899/services/test-service/proxy/some/path/with/OPTIONS
  I1109 13:50:47.574770 20 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1109 13:50:47.574889 20 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2899/services/test-service/proxy/some/path/with/PATCH
  I1109 13:50:47.580776 20 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1109 13:50:47.580803 20 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2899/services/test-service/proxy/some/path/with/POST
  I1109 13:50:47.584723 20 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1109 13:50:47.584747 20 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2899/services/test-service/proxy/some/path/with/PUT
  I1109 13:50:47.589286 20 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1109 13:50:47.589393 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-2899" for this suite. @ 11/09/24 13:50:47.593
â€¢ [4.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 11/09/24 13:50:47.6
  I1109 13:50:47.600868 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename daemonsets @ 11/09/24 13:50:47.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:50:47.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:50:47.618
  I1109 13:50:47.638665 20 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I1109 13:50:47.644050 20 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I1109 13:50:47.647452 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-177 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 13:50:47.647496 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-95-130 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 13:50:47.650326 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1109 13:50:47.650375 20 fixtures.go:130] Node ip-172-31-26-237 is running 0 daemon pod, expected 1
  E1109 13:50:48.126505      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:50:48.648586 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-177 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 13:50:48.648670 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-95-130 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 13:50:48.653081 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1109 13:50:48.653108 20 fixtures.go:130] Node ip-172-31-26-237 is running 0 daemon pod, expected 1
  E1109 13:50:49.126895      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:50:49.647764 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-177 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 13:50:49.647833 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-95-130 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 13:50:49.651512 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1109 13:50:49.651547 20 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  I1109 13:50:49.651585 20 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I1109 13:50:49.661306 20 daemon_set.go:102] Updating DaemonSet daemon-set
  E1109 13:50:50.126925      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:50:50.673196 20 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I1109 13:50:50.680276 20 daemon_set.go:102] Updating DaemonSet daemon-set
  I1109 13:50:50.680311 20 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I1109 13:50:50.684105 20 daemon_set.go:1193] Wrong image for pod: daemon-set-pbv5b. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I1109 13:50:50.684133 20 daemon_set.go:1198] Pod daemon-set-pbv5b is not available
  I1109 13:50:50.689205 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-177 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 13:50:50.689290 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-95-130 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1109 13:50:51.126977      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:50:51.687817 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-177 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 13:50:51.687871 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-95-130 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1109 13:50:52.127113      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:50:52.685764 20 daemon_set.go:1198] Pod daemon-set-sl2cm is not available
  I1109 13:50:52.689153 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-14-177 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1109 13:50:52.689225 20 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-95-130 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 11/09/24 13:50:52.699
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7266, will wait for the garbage collector to delete the pods @ 11/09/24 13:50:52.699
  I1109 13:50:52.758792 20 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 5.8037ms
  I1109 13:50:52.859624 20 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.810352ms
  E1109 13:50:53.127909      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:50:54.128286      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:50:54.263932 20 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1109 13:50:54.263970 20 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1109 13:50:54.266401 20 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"46196"},"items":null}

  I1109 13:50:54.269441 20 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"46196"},"items":null}

  I1109 13:50:54.284651 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7266" for this suite. @ 11/09/24 13:50:54.288
â€¢ [6.694 seconds]
------------------------------
SSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 11/09/24 13:50:54.295
  I1109 13:50:54.295100 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename init-container @ 11/09/24 13:50:54.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:50:54.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:50:54.313
  STEP: creating the pod @ 11/09/24 13:50:54.316
  I1109 13:50:54.316212 20 init_container.go:294] PodSpec: initContainers in spec.initContainers
  E1109 13:50:55.128334      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:50:56.128439      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:50:57.129254      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:50:57.694443 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2923" for this suite. @ 11/09/24 13:50:57.699
â€¢ [3.413 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:350
  STEP: Creating a kubernetes client @ 11/09/24 13:50:57.708
  I1109 13:50:57.708149 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename kubectl @ 11/09/24 13:50:57.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:50:57.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:50:57.73
  STEP: creating a replication controller @ 11/09/24 13:50:57.732
  I1109 13:50:57.732440 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-4061 create -f -'
  I1109 13:50:57.821298 20 builder.go:146] stderr: ""
  I1109 13:50:57.821348 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 11/09/24 13:50:57.821
  I1109 13:50:57.821459 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-4061 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1109 13:50:57.872647 20 builder.go:146] stderr: ""
  I1109 13:50:57.872688 20 builder.go:147] stdout: "update-demo-nautilus-27x8b update-demo-nautilus-4jd7j "
  I1109 13:50:57.872736 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-4061 get pods update-demo-nautilus-27x8b -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1109 13:50:57.916265 20 builder.go:146] stderr: ""
  I1109 13:50:57.916305 20 builder.go:147] stdout: ""
  I1109 13:50:57.916322 20 kubectl.go:2502] update-demo-nautilus-27x8b is created but not running
  E1109 13:50:58.129481      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:50:59.129648      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:00.129745      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:01.129877      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:02.130566      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:51:02.916505 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-4061 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1109 13:51:02.962666 20 builder.go:146] stderr: ""
  I1109 13:51:02.962708 20 builder.go:147] stdout: "update-demo-nautilus-27x8b update-demo-nautilus-4jd7j "
  I1109 13:51:02.962757 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-4061 get pods update-demo-nautilus-27x8b -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1109 13:51:03.007722 20 builder.go:146] stderr: ""
  I1109 13:51:03.007760 20 builder.go:147] stdout: "true"
  I1109 13:51:03.007814 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-4061 get pods update-demo-nautilus-27x8b -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1109 13:51:03.051877 20 builder.go:146] stderr: ""
  I1109 13:51:03.051913 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1109 13:51:03.051926 20 kubectl.go:2393] validating pod update-demo-nautilus-27x8b
  I1109 13:51:03.056660 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1109 13:51:03.056714 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1109 13:51:03.056740 20 kubectl.go:2520] update-demo-nautilus-27x8b is verified up and running
  I1109 13:51:03.056780 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-4061 get pods update-demo-nautilus-4jd7j -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1109 13:51:03.101322 20 builder.go:146] stderr: ""
  I1109 13:51:03.101362 20 builder.go:147] stdout: "true"
  I1109 13:51:03.101406 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-4061 get pods update-demo-nautilus-4jd7j -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  E1109 13:51:03.130890      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:51:03.145515 20 builder.go:146] stderr: ""
  I1109 13:51:03.145554 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1109 13:51:03.145566 20 kubectl.go:2393] validating pod update-demo-nautilus-4jd7j
  I1109 13:51:03.150616 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1109 13:51:03.150665 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1109 13:51:03.150677 20 kubectl.go:2520] update-demo-nautilus-4jd7j is verified up and running
  STEP: scaling down the replication controller @ 11/09/24 13:51:03.15
  I1109 13:51:03.151560 20 kubectl.go:319] scanned /root for discovery docs: <nil>
  I1109 13:51:03.151594 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-4061 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E1109 13:51:04.131902      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:51:04.212916 20 builder.go:146] stderr: ""
  I1109 13:51:04.212954 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 11/09/24 13:51:04.212
  I1109 13:51:04.213114 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-4061 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1109 13:51:04.264004 20 builder.go:146] stderr: ""
  I1109 13:51:04.264046 20 builder.go:147] stdout: "update-demo-nautilus-27x8b "
  I1109 13:51:04.264083 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-4061 get pods update-demo-nautilus-27x8b -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1109 13:51:04.308456 20 builder.go:146] stderr: ""
  I1109 13:51:04.308504 20 builder.go:147] stdout: "true"
  I1109 13:51:04.308558 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-4061 get pods update-demo-nautilus-27x8b -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1109 13:51:04.354206 20 builder.go:146] stderr: ""
  I1109 13:51:04.354264 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1109 13:51:04.354277 20 kubectl.go:2393] validating pod update-demo-nautilus-27x8b
  I1109 13:51:04.358403 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1109 13:51:04.358445 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1109 13:51:04.358461 20 kubectl.go:2520] update-demo-nautilus-27x8b is verified up and running
  STEP: scaling up the replication controller @ 11/09/24 13:51:04.358
  I1109 13:51:04.359267 20 kubectl.go:319] scanned /root for discovery docs: <nil>
  I1109 13:51:04.359297 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-4061 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E1109 13:51:05.132038      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:51:05.422080 20 builder.go:146] stderr: ""
  I1109 13:51:05.422119 20 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 11/09/24 13:51:05.422
  I1109 13:51:05.422211 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-4061 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1109 13:51:05.468911 20 builder.go:146] stderr: ""
  I1109 13:51:05.468957 20 builder.go:147] stdout: "update-demo-nautilus-27x8b update-demo-nautilus-hks6q "
  I1109 13:51:05.469037 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-4061 get pods update-demo-nautilus-27x8b -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1109 13:51:05.513502 20 builder.go:146] stderr: ""
  I1109 13:51:05.513541 20 builder.go:147] stdout: "true"
  I1109 13:51:05.513590 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-4061 get pods update-demo-nautilus-27x8b -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1109 13:51:05.559403 20 builder.go:146] stderr: ""
  I1109 13:51:05.559446 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1109 13:51:05.559457 20 kubectl.go:2393] validating pod update-demo-nautilus-27x8b
  I1109 13:51:05.563342 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1109 13:51:05.563377 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1109 13:51:05.563404 20 kubectl.go:2520] update-demo-nautilus-27x8b is verified up and running
  I1109 13:51:05.563459 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-4061 get pods update-demo-nautilus-hks6q -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1109 13:51:05.608584 20 builder.go:146] stderr: ""
  I1109 13:51:05.608622 20 builder.go:147] stdout: "true"
  I1109 13:51:05.608667 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-4061 get pods update-demo-nautilus-hks6q -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1109 13:51:05.652875 20 builder.go:146] stderr: ""
  I1109 13:51:05.652914 20 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1109 13:51:05.652928 20 kubectl.go:2393] validating pod update-demo-nautilus-hks6q
  I1109 13:51:05.658609 20 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1109 13:51:05.658657 20 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1109 13:51:05.658668 20 kubectl.go:2520] update-demo-nautilus-hks6q is verified up and running
  STEP: using delete to clean up resources @ 11/09/24 13:51:05.658
  I1109 13:51:05.658743 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-4061 delete --grace-period=0 --force -f -'
  I1109 13:51:05.711165 20 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1109 13:51:05.711201 20 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I1109 13:51:05.711335 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-4061 get rc,svc -l name=update-demo --no-headers'
  I1109 13:51:05.765746 20 builder.go:146] stderr: "No resources found in kubectl-4061 namespace.\n"
  I1109 13:51:05.765787 20 builder.go:147] stdout: ""
  I1109 13:51:05.765834 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-4061 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1109 13:51:05.812426 20 builder.go:146] stderr: ""
  I1109 13:51:05.812468 20 builder.go:147] stdout: ""
  I1109 13:51:05.812597 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4061" for this suite. @ 11/09/24 13:51:05.816
â€¢ [8.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 11/09/24 13:51:05.822
  I1109 13:51:05.822689 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename svcaccounts @ 11/09/24 13:51:05.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:51:05.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:51:05.843
  STEP: creating a ServiceAccount @ 11/09/24 13:51:05.845
  STEP: watching for the ServiceAccount to be added @ 11/09/24 13:51:05.852
  STEP: patching the ServiceAccount @ 11/09/24 13:51:05.853
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 11/09/24 13:51:05.858
  STEP: deleting the ServiceAccount @ 11/09/24 13:51:05.861
  I1109 13:51:05.876086 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3299" for this suite. @ 11/09/24 13:51:05.882
â€¢ [0.070 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:246
  STEP: Creating a kubernetes client @ 11/09/24 13:51:05.892
  I1109 13:51:05.892854 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename dns @ 11/09/24 13:51:05.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:51:05.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:51:05.913
  STEP: Creating a test headless service @ 11/09/24 13:51:05.916
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-3536.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-3536.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 11/09/24 13:51:05.92
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-3536.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-3536.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 11/09/24 13:51:05.92
  STEP: creating a pod to probe DNS @ 11/09/24 13:51:05.92
  STEP: submitting the pod to kubernetes @ 11/09/24 13:51:05.92
  E1109 13:51:06.132978      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:07.133595      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 11/09/24 13:51:07.945
  STEP: looking for the results for each expected name from probers @ 11/09/24 13:51:07.948
  I1109 13:51:07.964454 20 dns_common.go:527] DNS probes using dns-3536/dns-test-791b10c0-d65b-4b99-b057-1835a17e7d07 succeeded

  STEP: deleting the pod @ 11/09/24 13:51:07.964
  STEP: deleting the test headless service @ 11/09/24 13:51:07.99
  I1109 13:51:08.013657 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3536" for this suite. @ 11/09/24 13:51:08.022
â€¢ [2.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 11/09/24 13:51:08.038
  I1109 13:51:08.038130 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename projected @ 11/09/24 13:51:08.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:51:08.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:51:08.106
  STEP: Creating a pod to test downward API volume plugin @ 11/09/24 13:51:08.109
  E1109 13:51:08.133869      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:09.133972      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:10.134259      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:11.134514      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:51:12.13
  I1109 13:51:12.134426 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod downwardapi-volume-f6440c32-8ea7-404c-96a7-ce18b49bae64 container client-container: <nil>
  E1109 13:51:12.134562      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the pod @ 11/09/24 13:51:12.14
  I1109 13:51:12.155016 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7530" for this suite. @ 11/09/24 13:51:12.158
â€¢ [4.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 11/09/24 13:51:12.165
  I1109 13:51:12.165723 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename projected @ 11/09/24 13:51:12.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:51:12.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:51:12.183
  STEP: Creating configMap with name projected-configmap-test-volume-map-8da397bd-6c34-4e60-a9a2-46fe841c323b @ 11/09/24 13:51:12.185
  STEP: Creating a pod to test consume configMaps @ 11/09/24 13:51:12.193
  E1109 13:51:13.134760      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:14.135729      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:15.136422      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:16.136721      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:51:16.218
  I1109 13:51:16.222405 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-projected-configmaps-ed96d680-0bf9-4eb2-8070-e1551268062f container agnhost-container: <nil>
  STEP: delete the pod @ 11/09/24 13:51:16.229
  I1109 13:51:16.243521 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2744" for this suite. @ 11/09/24 13:51:16.246
â€¢ [4.088 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1833
  STEP: Creating a kubernetes client @ 11/09/24 13:51:16.253
  I1109 13:51:16.253447 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename kubectl @ 11/09/24 13:51:16.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:51:16.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:51:16.273
  STEP: starting the proxy server @ 11/09/24 13:51:16.275
  I1109 13:51:16.275536 20 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=kubectl-2818 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 11/09/24 13:51:16.308
  I1109 13:51:16.313910 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  I1109 13:51:16.315300 20 kubectl.go:2224] kubectl proxy stdout: Starting to serve on 127.0.0.1:36395

  I1109 13:51:16.315303 20 kubectl.go:2229] kubectl proxy stderr: W1109 13:51:16.306979     905 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-2818" for this suite. @ 11/09/24 13:51:16.321
â€¢ [0.077 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:324
  STEP: Creating a kubernetes client @ 11/09/24 13:51:16.331
  I1109 13:51:16.331462 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename statefulset @ 11/09/24 13:51:16.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:51:16.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:51:16.347
  STEP: Creating service test in namespace statefulset-6335 @ 11/09/24 13:51:16.352
  STEP: Creating a new StatefulSet @ 11/09/24 13:51:16.361
  I1109 13:51:16.371452 20 wait.go:40] Found 0 stateful pods, waiting for 3
  E1109 13:51:17.137186      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:18.138110      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:19.138931      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:20.139004      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:21.139312      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:22.139536      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:23.139897      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:24.140189      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:25.140419      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:26.140663      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:51:26.371658 20 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1109 13:51:26.371697 20 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1109 13:51:26.371706 20 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I1109 13:51:26.380352 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=statefulset-6335 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1109 13:51:26.472924 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1109 13:51:26.472966 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1109 13:51:26.472976 20 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E1109 13:51:27.140782      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:28.140896      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:29.141096      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:30.141353      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:31.141406      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:32.141544      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:33.141654      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:34.141756      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:35.141980      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:36.142926      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 11/09/24 13:51:36.481
  I1109 13:51:36.491727 20 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 11/09/24 13:51:36.491
  E1109 13:51:37.143774      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:38.143907      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:39.144197      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:40.144373      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:41.144551      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:42.145505      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:43.145729      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:44.145834      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:45.145905      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:46.145939      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 11/09/24 13:51:46.501
  I1109 13:51:46.504893 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=statefulset-6335 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1109 13:51:46.584603 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1109 13:51:46.584643 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1109 13:51:46.584656 20 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E1109 13:51:47.146054      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:48.147012      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:49.147430      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:50.148446      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:51.149445      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:52.150419      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:53.150644      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:54.151472      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:55.151764      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:56.151926      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 11/09/24 13:51:56.598
  I1109 13:51:56.598578 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=statefulset-6335 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1109 13:51:56.678324 20 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1109 13:51:56.678377 20 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1109 13:51:56.678387 20 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E1109 13:51:57.152053      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:58.152148      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:51:59.152353      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:00.152589      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:01.152708      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:02.152806      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:03.152889      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:04.153017      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:05.153111      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:06.153397      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:52:06.695769 20 statefulset.go:2507] Updating stateful set ss2
  E1109 13:52:07.154398      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:08.154631      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:09.155514      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:10.155726      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:11.155860      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:12.155979      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:13.156083      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:14.156313      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:15.156384      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:16.156620      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 11/09/24 13:52:16.703
  I1109 13:52:16.707146 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=statefulset-6335 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1109 13:52:16.781687 20 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1109 13:52:16.781726 20 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1109 13:52:16.781737 20 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E1109 13:52:17.157643      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:18.157865      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:19.158670      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:20.158745      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:21.158928      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:22.159133      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:23.159432      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:24.159668      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:25.160431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:26.160737      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:52:26.796828 20 statefulset.go:138] Deleting all statefulset in ns statefulset-6335
  I1109 13:52:26.800289 20 rest.go:150] Scaling statefulset ss2 to 0
  E1109 13:52:27.160861      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:28.160976      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:29.161069      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:30.161378      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:31.161662      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:32.161802      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:33.161918      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:34.162018      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:35.162220      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:36.162462      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:52:36.813060 20 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1109 13:52:36.815470 20 rest.go:88] Deleting statefulset ss2
  I1109 13:52:36.827646 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6335" for this suite. @ 11/09/24 13:52:36.83
â€¢ [80.509 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 11/09/24 13:52:36.84
  I1109 13:52:36.840543 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename watch @ 11/09/24 13:52:36.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:52:36.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:52:36.857
  STEP: creating a watch on configmaps with label A @ 11/09/24 13:52:36.86
  STEP: creating a watch on configmaps with label B @ 11/09/24 13:52:36.861
  STEP: creating a watch on configmaps with label A or B @ 11/09/24 13:52:36.862
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 11/09/24 13:52:36.863
  I1109 13:52:36.868044 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9507  dfd5f869-c469-4ef6-8175-edab6bca8a50 47132 0 2024-11-09 13:52:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-11-09 13:52:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1109 13:52:36.868142 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9507  dfd5f869-c469-4ef6-8175-edab6bca8a50 47132 0 2024-11-09 13:52:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-11-09 13:52:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 11/09/24 13:52:36.868
  I1109 13:52:36.875418 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9507  dfd5f869-c469-4ef6-8175-edab6bca8a50 47133 0 2024-11-09 13:52:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-11-09 13:52:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1109 13:52:36.875581 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9507  dfd5f869-c469-4ef6-8175-edab6bca8a50 47133 0 2024-11-09 13:52:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-11-09 13:52:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 11/09/24 13:52:36.875
  I1109 13:52:36.883357 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9507  dfd5f869-c469-4ef6-8175-edab6bca8a50 47134 0 2024-11-09 13:52:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-11-09 13:52:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1109 13:52:36.883452 20 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9507  dfd5f869-c469-4ef6-8175-edab6bca8a50 47134 0 2024-11-09 13:52:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-11-09 13:52:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 11/09/24 13:52:36.883
  I1109 13:52:36.889175 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9507  dfd5f869-c469-4ef6-8175-edab6bca8a50 47135 0 2024-11-09 13:52:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-11-09 13:52:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1109 13:52:36.889208 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9507  dfd5f869-c469-4ef6-8175-edab6bca8a50 47135 0 2024-11-09 13:52:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-11-09 13:52:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 11/09/24 13:52:36.889
  I1109 13:52:36.895627 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9507  97dd74f9-707e-4bd6-993b-23489ddfb14c 47136 0 2024-11-09 13:52:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-11-09 13:52:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1109 13:52:36.895753 20 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9507  97dd74f9-707e-4bd6-993b-23489ddfb14c 47136 0 2024-11-09 13:52:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-11-09 13:52:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E1109 13:52:37.163057      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:38.163353      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:39.163572      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:40.163915      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:41.163935      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:42.164054      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:43.164300      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:44.164416      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:45.164612      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:46.164754      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 11/09/24 13:52:46.896
  I1109 13:52:46.904781 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9507  97dd74f9-707e-4bd6-993b-23489ddfb14c 47218 0 2024-11-09 13:52:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-11-09 13:52:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1109 13:52:46.905008 20 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9507  97dd74f9-707e-4bd6-993b-23489ddfb14c 47218 0 2024-11-09 13:52:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-11-09 13:52:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E1109 13:52:47.164790      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:48.165007      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:49.165517      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:50.165745      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:51.165882      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:52.166452      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:53.166564      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:54.166641      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:55.166782      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:56.166852      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:52:56.905815 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9507" for this suite. @ 11/09/24 13:52:56.911
â€¢ [20.078 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 11/09/24 13:52:56.918
  I1109 13:52:56.918248 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename downward-api @ 11/09/24 13:52:56.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:52:56.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:52:56.933
  STEP: Creating a pod to test downward API volume plugin @ 11/09/24 13:52:56.936
  E1109 13:52:57.167830      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:58.167903      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:52:59.168754      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:00.169453      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:53:00.956
  I1109 13:53:00.960618 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod downwardapi-volume-6660df86-3ba6-430f-973a-d1ddee360b79 container client-container: <nil>
  STEP: delete the pod @ 11/09/24 13:53:00.977
  I1109 13:53:00.992214 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2823" for this suite. @ 11/09/24 13:53:00.995
â€¢ [4.084 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 11/09/24 13:53:01.002
  I1109 13:53:01.002244 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename downward-api @ 11/09/24 13:53:01.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:53:01.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:53:01.016
  STEP: Creating a pod to test downward API volume plugin @ 11/09/24 13:53:01.019
  E1109 13:53:01.169831      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:02.170177      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:03.170826      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:04.170951      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:53:05.039
  I1109 13:53:05.042254 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod downwardapi-volume-9bdea215-48ad-4422-845a-03a03a691363 container client-container: <nil>
  STEP: delete the pod @ 11/09/24 13:53:05.048
  I1109 13:53:05.067690 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1174" for this suite. @ 11/09/24 13:53:05.071
â€¢ [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:490
  STEP: Creating a kubernetes client @ 11/09/24 13:53:05.076
  I1109 13:53:05.076998 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename job @ 11/09/24 13:53:05.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:53:05.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:53:05.095
  STEP: Creating Indexed job @ 11/09/24 13:53:05.098
  STEP: Ensuring job reaches completions @ 11/09/24 13:53:05.104
  E1109 13:53:05.171719      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:06.171895      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:07.172775      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:08.172875      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:09.173384      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:10.173520      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:11.173869      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:12.174105      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:13.174221      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:14.174473      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 11/09/24 13:53:15.114
  I1109 13:53:15.118948 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8463" for this suite. @ 11/09/24 13:53:15.122
â€¢ [10.054 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 11/09/24 13:53:15.13
  I1109 13:53:15.130759 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename pod-network-test @ 11/09/24 13:53:15.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:53:15.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:53:15.149
  STEP: Performing setup for networking test in namespace pod-network-test-4617 @ 11/09/24 13:53:15.151
  STEP: creating a selector @ 11/09/24 13:53:15.151
  STEP: Creating the service pods in kubernetes @ 11/09/24 13:53:15.151
  I1109 13:53:15.151815 20 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1109 13:53:15.175243      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:16.175412      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:17.175713      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:18.176712      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:19.177361      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:20.177456      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:21.178433      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:22.179369      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:23.180416      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:24.180550      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:25.180745      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:26.180871      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:27.181435      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 11/09/24 13:53:27.236
  E1109 13:53:28.181597      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:29.181690      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:53:29.298973 20 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1109 13:53:29.299007 20 utils.go:496] Going to poll 192.168.122.59 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I1109 13:53:29.302929 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.122.59 8081 | grep -v '^\s*$'] Namespace:pod-network-test-4617 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1109 13:53:29.302958 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  I1109 13:53:29.303388 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1109 13:53:29.303433 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4617/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.122.59+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1109 13:53:30.181740      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:53:30.349495 20 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I1109 13:53:30.349536 20 utils.go:496] Going to poll 192.168.35.97 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I1109 13:53:30.353199 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.35.97 8081 | grep -v '^\s*$'] Namespace:pod-network-test-4617 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1109 13:53:30.353221 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  I1109 13:53:30.353727 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1109 13:53:30.353776 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4617/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.35.97+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1109 13:53:31.181854      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:53:31.396360 20 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I1109 13:53:31.396408 20 utils.go:496] Going to poll 192.168.187.63 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I1109 13:53:31.400780 20 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.187.63 8081 | grep -v '^\s*$'] Namespace:pod-network-test-4617 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1109 13:53:31.400804 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  I1109 13:53:31.401269 20 exec_util.go:66] ExecWithOptions: Clientset creation
  I1109 13:53:31.401312 20 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4617/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.187.63+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1109 13:53:32.182903      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:53:32.441510 20 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I1109 13:53:32.441632 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4617" for this suite. @ 11/09/24 13:53:32.447
â€¢ [17.323 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:643
  STEP: Creating a kubernetes client @ 11/09/24 13:53:32.453
  I1109 13:53:32.453605 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename webhook @ 11/09/24 13:53:32.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:53:32.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:53:32.473
  STEP: Setting up server cert @ 11/09/24 13:53:32.497
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/09/24 13:53:32.762
  STEP: Deploying the webhook pod @ 11/09/24 13:53:32.77
  STEP: Wait for the deployment to be ready @ 11/09/24 13:53:32.783
  I1109 13:53:32.792072 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1109 13:53:33.183649      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:34.183897      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/09/24 13:53:34.803
  STEP: Verifying the service has paired with the endpoint @ 11/09/24 13:53:34.813
  E1109 13:53:35.184899      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:53:35.813492 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 11/09/24 13:53:35.883
  STEP: Creating a configMap that should be mutated @ 11/09/24 13:53:35.891
  STEP: Deleting the collection of validation webhooks @ 11/09/24 13:53:35.913
  STEP: Creating a configMap that should not be mutated @ 11/09/24 13:53:35.962
  I1109 13:53:36.009335 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4456" for this suite. @ 11/09/24 13:53:36.013
  STEP: Destroying namespace "webhook-markers-6252" for this suite. @ 11/09/24 13:53:36.018
â€¢ [3.570 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 11/09/24 13:53:36.024
  I1109 13:53:36.024500 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename apf @ 11/09/24 13:53:36.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:53:36.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:53:36.042
  STEP: getting /apis @ 11/09/24 13:53:36.045
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 11/09/24 13:53:36.047
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 11/09/24 13:53:36.048
  STEP: creating @ 11/09/24 13:53:36.049
  STEP: getting @ 11/09/24 13:53:36.064
  STEP: listing @ 11/09/24 13:53:36.067
  STEP: watching @ 11/09/24 13:53:36.069
  I1109 13:53:36.069798 20 flowcontrol.go:620] starting watch
  STEP: patching @ 11/09/24 13:53:36.07
  STEP: updating @ 11/09/24 13:53:36.075
  I1109 13:53:36.082900 20 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 11/09/24 13:53:36.082
  STEP: patching /status @ 11/09/24 13:53:36.086
  STEP: updating /status @ 11/09/24 13:53:36.091
  STEP: deleting @ 11/09/24 13:53:36.099
  STEP: deleting a collection @ 11/09/24 13:53:36.111
  I1109 13:53:36.131318 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-7071" for this suite. @ 11/09/24 13:53:36.134
â€¢ [0.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 11/09/24 13:53:36.14
  I1109 13:53:36.140767 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename emptydir @ 11/09/24 13:53:36.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:53:36.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:53:36.159
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 11/09/24 13:53:36.161
  E1109 13:53:36.185315      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:37.185584      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:38.186163      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:39.186395      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 11/09/24 13:53:40.185
  E1109 13:53:40.187238      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:53:40.189564 20 output.go:196] Trying to get logs from node ip-172-31-65-76 pod pod-11b2d9d3-60d6-4968-baf4-70008e99d568 container test-container: <nil>
  STEP: delete the pod @ 11/09/24 13:53:40.197
  I1109 13:53:40.212180 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5069" for this suite. @ 11/09/24 13:53:40.215
â€¢ [4.081 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 11/09/24 13:53:40.221
  I1109 13:53:40.221637 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename gc @ 11/09/24 13:53:40.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:53:40.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:53:40.24
  STEP: create the deployment @ 11/09/24 13:53:40.242
  W1109 13:53:40.248355      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 11/09/24 13:53:40.248
  STEP: delete the deployment @ 11/09/24 13:53:40.252
  STEP: wait for all rs to be garbage collected @ 11/09/24 13:53:40.269
  STEP: expected 0 rs, got 1 rs @ 11/09/24 13:53:40.281
  STEP: expected 0 pods, got 2 pods @ 11/09/24 13:53:40.289
  STEP: Gathering metrics @ 11/09/24 13:53:40.78
  W1109 13:53:40.785941      20 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1109 13:53:40.785973 20 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1109 13:53:40.786112 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3892" for this suite. @ 11/09/24 13:53:40.79
â€¢ [0.575 seconds]
------------------------------
SSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 11/09/24 13:53:40.796
  I1109 13:53:40.796668 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename taint-single-pod @ 11/09/24 13:53:40.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:53:40.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:53:40.81
  I1109 13:53:40.814123 20 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1109 13:53:41.187781      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:42.188433      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:43.188554      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:44.188697      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:45.189457      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:46.189683      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:47.190448      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:48.191455      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:49.191745      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:50.191951      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:51.192729      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:52.192834      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:53.192914      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:54.193163      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:55.193259      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:56.193512      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:57.194267      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:58.194379      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:53:59.195273      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:00.195766      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:01.196532      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:02.196934      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:03.197056      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:04.197157      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:05.197294      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:06.197648      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:07.198418      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:08.198516      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:09.198760      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:10.199014      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:11.199429      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:12.199486      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:13.199584      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:14.199677      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:15.200449      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:16.200769      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:17.201750      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:18.202426      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:19.203424      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:20.203557      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:21.203801      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:22.203900      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:23.204816      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:24.204917      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:25.205442      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:26.205713      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:27.206210      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:28.206973      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:29.207443      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:30.208436      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:31.209419      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:32.209502      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:33.210445      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:34.210679      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:35.210710      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:36.210900      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:37.211944      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:38.212151      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:39.212349      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:40.212580      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:54:40.815157 20 util.go:393] Waiting for terminating namespaces to be deleted...
  I1109 13:54:40.818961 20 taints.go:144] Starting informer...
  STEP: Starting pod... @ 11/09/24 13:54:40.818
  I1109 13:54:41.033679 20 taints.go:294] Pod is running on ip-172-31-65-76. Tainting Node
  STEP: Trying to apply a taint on the Node @ 11/09/24 13:54:41.033
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 11/09/24 13:54:41.044
  STEP: Waiting short time to make sure Pod is queued for deletion @ 11/09/24 13:54:41.055
  I1109 13:54:41.055588 20 taints.go:313] Pod wasn't evicted. Proceeding
  I1109 13:54:41.055604 20 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 11/09/24 13:54:41.084
  STEP: Waiting some time to make sure that toleration time passed. @ 11/09/24 13:54:41.095
  E1109 13:54:41.213134      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:42.213643      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:43.213735      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:44.213836      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:45.213938      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:46.214600      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:47.214806      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:48.214895      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:49.215029      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:50.215260      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:51.216178      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:52.216268      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:53.216368      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:54.216460      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:55.216660      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:56.217679      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:57.217788      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:58.218432      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:54:59.219426      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:00.219532      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:01.220428      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:02.221472      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:03.221627      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:04.221822      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:05.222015      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:06.222121      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:07.222421      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:08.223420      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:09.223599      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:10.223791      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:11.223970      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:12.224208      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:13.224403      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:14.224514      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:15.224629      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:16.225462      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:17.225735      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:18.225959      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:19.226001      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:20.226089      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:21.227010      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:22.227111      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:23.227865      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:24.227958      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:25.228431      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:26.228678      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:27.229438      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:28.230449      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:29.230655      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:30.230852      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:31.231007      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:32.231426      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:33.231648      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:34.231838      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:35.232078      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:36.233063      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:37.233292      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:38.233553      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:39.234348      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:40.234428      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:41.234555      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:42.235615      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:43.235755      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:44.236522      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:45.236657      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:46.237456      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:47.237551      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:48.238421      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:49.239428      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:50.240418      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:51.240650      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:52.240865      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:53.241076      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:54.241366      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:55.241573      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:55:56.096868 20 taints.go:329] Pod wasn't evicted. Test successful
  I1109 13:55:56.097148 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-894" for this suite. @ 11/09/24 13:55:56.102
â€¢ [135.313 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:838
  STEP: Creating a kubernetes client @ 11/09/24 13:55:56.11
  I1109 13:55:56.110032 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename webhook @ 11/09/24 13:55:56.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:55:56.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:55:56.128
  STEP: Setting up server cert @ 11/09/24 13:55:56.152
  E1109 13:55:56.241625      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 11/09/24 13:55:56.418
  STEP: Deploying the webhook pod @ 11/09/24 13:55:56.427
  STEP: Wait for the deployment to be ready @ 11/09/24 13:55:56.441
  I1109 13:55:56.448445 20 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1109 13:55:57.241970      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:55:58.242115      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/09/24 13:55:58.458
  STEP: Verifying the service has paired with the endpoint @ 11/09/24 13:55:58.469
  E1109 13:55:59.242246      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:55:59.470661 20 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 11/09/24 13:55:59.478
  I1109 13:55:59.517652 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-44" for this suite. @ 11/09/24 13:55:59.52
  STEP: Destroying namespace "webhook-markers-889" for this suite. @ 11/09/24 13:55:59.527
â€¢ [3.425 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 11/09/24 13:55:59.535
  I1109 13:55:59.535729 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename crd-webhook @ 11/09/24 13:55:59.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:55:59.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:55:59.556
  STEP: Setting up server cert @ 11/09/24 13:55:59.558
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 11/09/24 13:55:59.704
  STEP: Deploying the custom resource conversion webhook pod @ 11/09/24 13:55:59.71
  STEP: Wait for the deployment to be ready @ 11/09/24 13:55:59.721
  I1109 13:55:59.735174 20 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E1109 13:56:00.242395      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:01.242920      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 11/09/24 13:56:01.747
  STEP: Verifying the service has paired with the endpoint @ 11/09/24 13:56:01.756
  E1109 13:56:02.243801      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:56:02.757281 20 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I1109 13:56:02.765265 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  E1109 13:56:03.244670      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:04.245350      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 11/09/24 13:56:04.841
  STEP: Create a v2 custom resource @ 11/09/24 13:56:04.856
  STEP: List CRs in v1 @ 11/09/24 13:56:04.882
  STEP: List CRs in v2 @ 11/09/24 13:56:04.887
  E1109 13:56:05.246463      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:56:05.445595 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-3605" for this suite. @ 11/09/24 13:56:05.451
â€¢ [5.923 seconds]
------------------------------
SSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 11/09/24 13:56:05.458
  I1109 13:56:05.458449 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename conformance-tests @ 11/09/24 13:56:05.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:56:05.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:56:05.475
  STEP: Getting node addresses @ 11/09/24 13:56:05.477
  I1109 13:56:05.477444 20 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I1109 13:56:05.483082 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-4860" for this suite. @ 11/09/24 13:56:05.486
â€¢ [0.034 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 11/09/24 13:56:05.492
  I1109 13:56:05.492064 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename configmap @ 11/09/24 13:56:05.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:56:05.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:56:05.508
  STEP: Creating configMap with name configmap-test-upd-27a770f2-1ad4-47f5-ab95-f830bc5e71b7 @ 11/09/24 13:56:05.517
  STEP: Creating the pod @ 11/09/24 13:56:05.521
  E1109 13:56:06.247437      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:07.248465      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-27a770f2-1ad4-47f5-ab95-f830bc5e71b7 @ 11/09/24 13:56:07.553
  STEP: waiting to observe update in volume @ 11/09/24 13:56:07.559
  E1109 13:56:08.249152      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:09.249587      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:10.249703      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:11.249948      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:12.250683      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:13.251065      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:14.251331      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:15.251546      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:16.252480      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:17.252748      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:18.253471      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:19.254437      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:20.255130      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:21.255165      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:22.256007      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:23.256121      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:24.256311      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:25.256375      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:26.257287      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:27.257374      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:28.258340      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:29.258368      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:30.258858      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:31.258982      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:32.259552      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:33.259694      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:34.260358      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:35.260519      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:36.261191      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:37.261367      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:38.261495      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:39.261693      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:40.262615      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:41.263435      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:42.263532      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:43.263730      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:44.263914      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:45.264039      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:46.264354      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:47.264570      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:48.265016      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:49.265309      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:50.266309      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:51.266395      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:52.267499      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:53.267589      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:54.267884      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:55.268422      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:56.269360      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:57.269417      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:58.269530      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:56:59.269635      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:57:00.269740      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:57:01.269853      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:57:02.270158      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:57:03.270398      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:57:04.271249      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:57:05.271473      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:57:06.271617      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:57:07.271876      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:57:08.272473      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:57:09.272694      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:57:10.272754      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:57:11.273154      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:57:12.273357      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:57:13.273578      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:57:14.273753      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:57:15.273859      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:57:16.274200      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:57:17.274420      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:57:18.275449      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:57:19.275676      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:57:20.276308      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:57:21.276611      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:57:22.277463      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:57:23.278467      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:57:24.279070      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:57:25.279544      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:57:26.280472      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:57:27.280568      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:57:28.280701      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:57:29.280818      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:57:30.281851      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:57:31.282221      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:57:32.282852      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:57:33.283079      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:57:33.916679 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3023" for this suite. @ 11/09/24 13:57:33.921
â€¢ [88.435 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 11/09/24 13:57:33.927
  I1109 13:57:33.927625 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename validating-admission-policy @ 11/09/24 13:57:33.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:57:33.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:57:33.946
  STEP: creating the policy @ 11/09/24 13:57:33.953
  STEP: waiting until the marker is denied @ 11/09/24 13:57:33.966
  E1109 13:57:34.283725      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: testing a replicated Deployment to be allowed @ 11/09/24 13:57:34.573
  STEP: testing a non-replicated ReplicaSet not to be denied @ 11/09/24 13:57:34.594
  I1109 13:57:34.639637 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-9565" for this suite. @ 11/09/24 13:57:34.647
â€¢ [0.729 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 11/09/24 13:57:34.657
  I1109 13:57:34.657091 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename events @ 11/09/24 13:57:34.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:57:34.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:57:34.671
  STEP: Create set of events @ 11/09/24 13:57:34.674
  STEP: get a list of Events with a label in the current namespace @ 11/09/24 13:57:34.686
  STEP: delete a list of events @ 11/09/24 13:57:34.689
  I1109 13:57:34.689613 20 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 11/09/24 13:57:34.711
  I1109 13:57:34.714152 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4860" for this suite. @ 11/09/24 13:57:34.717
â€¢ [0.066 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:760
  STEP: Creating a kubernetes client @ 11/09/24 13:57:34.722
  I1109 13:57:34.722926 20 util.go:499] >>> kubeConfig: /tmp/kubeconfig-3452731055
  STEP: Building a namespace api object, basename services @ 11/09/24 13:57:34.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 11/09/24 13:57:34.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 11/09/24 13:57:34.742
  STEP: creating service endpoint-test2 in namespace services-5765 @ 11/09/24 13:57:34.744
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5765 to expose endpoints map[] @ 11/09/24 13:57:34.753
  I1109 13:57:34.761665 20 service.go:4267] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E1109 13:57:35.284316      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:57:35.770419 20 service.go:4299] successfully validated that service endpoint-test2 in namespace services-5765 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-5765 @ 11/09/24 13:57:35.77
  E1109 13:57:36.284599      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:57:37.284827      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5765 to expose endpoints map[pod1:[80]] @ 11/09/24 13:57:37.794
  I1109 13:57:37.805725 20 service.go:4299] successfully validated that service endpoint-test2 in namespace services-5765 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 11/09/24 13:57:37.805
  I1109 13:57:37.805799 20 resource.go:361] Creating new exec pod
  E1109 13:57:38.285025      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:57:39.285129      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:57:40.285505      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:57:40.818366 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-5765 exec execpodgw68l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1109 13:57:40.929996 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1109 13:57:40.930037 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1109 13:57:40.930119 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-5765 exec execpodgw68l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.219 80'
  I1109 13:57:41.008345 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.219 80\nConnection to 10.152.183.219 80 port [tcp/http] succeeded!\n"
  I1109 13:57:41.008404 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-5765 @ 11/09/24 13:57:41.008
  E1109 13:57:41.285595      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1109 13:57:42.285815      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5765 to expose endpoints map[pod1:[80] pod2:[80]] @ 11/09/24 13:57:43.026
  I1109 13:57:43.041771 20 service.go:4299] successfully validated that service endpoint-test2 in namespace services-5765 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 11/09/24 13:57:43.041
  E1109 13:57:43.286724      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:57:44.042094 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-5765 exec execpodgw68l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1109 13:57:44.128554 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1109 13:57:44.128607 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1109 13:57:44.128693 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-5765 exec execpodgw68l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.219 80'
  I1109 13:57:44.206046 20 builder.go:146] stderr: "+ + nc -v -t -w 2 10.152.183.219 80\necho hostName\nConnection to 10.152.183.219 80 port [tcp/http] succeeded!\n"
  I1109 13:57:44.206097 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-5765 @ 11/09/24 13:57:44.206
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5765 to expose endpoints map[pod2:[80]] @ 11/09/24 13:57:44.222
  I1109 13:57:44.234152 20 service.go:4299] successfully validated that service endpoint-test2 in namespace services-5765 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 11/09/24 13:57:44.234
  E1109 13:57:44.287542      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:57:45.234772 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-5765 exec execpodgw68l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E1109 13:57:45.288186      20 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1109 13:57:45.314920 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1109 13:57:45.314961 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1109 13:57:45.315051 20 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3452731055 --namespace=services-5765 exec execpodgw68l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.219 80'
  I1109 13:57:45.398782 20 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.219 80\nConnection to 10.152.183.219 80 port [tcp/http] succeeded!\n"
  I1109 13:57:45.398837 20 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-5765 @ 11/09/24 13:57:45.398
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5765 to expose endpoints map[] @ 11/09/24 13:57:45.416
  I1109 13:57:45.427440 20 service.go:4299] successfully validated that service endpoint-test2 in namespace services-5765 exposes endpoints map[]
  I1109 13:57:45.444184 20 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5765" for this suite. @ 11/09/24 13:57:45.447
â€¢ [10.732 seconds]
------------------------------
SSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I1109 13:57:45.455407 20 suites.go:34] Running AfterSuite actions on node 1
  I1109 13:57:45.455428 20 util.go:607] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:158
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:612
[ReportAfterSuite] PASSED [0.047 seconds]
------------------------------

Ran 404 of 6605 Specs in 6344.578 seconds
SUCCESS! -- 404 Passed | 0 Failed | 0 Pending | 6201 Skipped
PASS

Ginkgo ran 1 suite in 1h45m45.292143537s
Test Suite Passed
