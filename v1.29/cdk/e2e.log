  I0601 12:18:46.448158      21 e2e.go:117] Starting e2e run "088858f1-e658-49b1-9467-76dc152b106f" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1717244325 - will randomize all specs

Will run 388 of 7408 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:77
  Jun  1 12:18:46.600: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 12:18:46.602: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Jun  1 12:18:46.640: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Jun  1 12:18:46.644: INFO: 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  Jun  1 12:18:46.645: INFO: e2e test version: v1.29.5
  Jun  1 12:18:46.646: INFO: kube-apiserver version: v1.29.5
  Jun  1 12:18:46.646: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 12:18:46.650: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:793
  STEP: Creating a kubernetes client @ 06/01/24 12:18:46.877
  Jun  1 12:18:46.877: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename statefulset @ 06/01/24 12:18:46.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:18:46.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:18:46.899
  STEP: Creating service test in namespace statefulset-1393 @ 06/01/24 12:18:46.901
  STEP: Looking for a node to schedule stateful set and pod @ 06/01/24 12:18:46.905
  STEP: Creating pod with conflicting port in namespace statefulset-1393 @ 06/01/24 12:18:46.908
  STEP: Waiting until pod test-pod will start running in namespace statefulset-1393 @ 06/01/24 12:18:46.921
  STEP: Creating statefulset with conflicting port in namespace statefulset-1393 @ 06/01/24 12:18:50.933
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-1393 @ 06/01/24 12:18:50.943
  Jun  1 12:18:50.963: INFO: Observed stateful pod in namespace: statefulset-1393, name: ss-0, uid: ebbf5976-f8a5-402d-b477-281fb39a9b73, status phase: Pending. Waiting for statefulset controller to delete.
  Jun  1 12:18:50.981: INFO: Observed stateful pod in namespace: statefulset-1393, name: ss-0, uid: ebbf5976-f8a5-402d-b477-281fb39a9b73, status phase: Failed. Waiting for statefulset controller to delete.
  Jun  1 12:18:50.988: INFO: Observed stateful pod in namespace: statefulset-1393, name: ss-0, uid: ebbf5976-f8a5-402d-b477-281fb39a9b73, status phase: Failed. Waiting for statefulset controller to delete.
  Jun  1 12:18:50.996: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-1393
  STEP: Removing pod with conflicting port in namespace statefulset-1393 @ 06/01/24 12:18:50.996
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-1393 and will be in running state @ 06/01/24 12:18:51.017
  Jun  1 12:18:53.026: INFO: Deleting all statefulset in ns statefulset-1393
  Jun  1 12:18:53.029: INFO: Scaling statefulset ss to 0
  Jun  1 12:19:03.043: INFO: Waiting for statefulset status.replicas updated to 0
  Jun  1 12:19:03.047: INFO: Deleting statefulset ss
  Jun  1 12:19:03.060: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1393" for this suite. @ 06/01/24 12:19:03.064
â€¢ [16.193 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 06/01/24 12:19:03.071
  Jun  1 12:19:03.071: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename svc-latency @ 06/01/24 12:19:03.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:19:03.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:19:03.09
  Jun  1 12:19:03.092: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-4250 @ 06/01/24 12:19:03.093
  I0601 12:19:03.099972      21 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-4250, replica count: 1
  I0601 12:19:04.152034      21 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun  1 12:19:04.270: INFO: Created: latency-svc-69dn5
  Jun  1 12:19:04.273: INFO: Got endpoints: latency-svc-69dn5 [20.695332ms]
  Jun  1 12:19:04.282: INFO: Created: latency-svc-b6s5g
  Jun  1 12:19:04.289: INFO: Got endpoints: latency-svc-b6s5g [15.381524ms]
  Jun  1 12:19:04.292: INFO: Created: latency-svc-jc5jc
  Jun  1 12:19:04.299: INFO: Got endpoints: latency-svc-jc5jc [25.811114ms]
  Jun  1 12:19:04.300: INFO: Created: latency-svc-27d86
  Jun  1 12:19:04.305: INFO: Got endpoints: latency-svc-27d86 [31.104938ms]
  Jun  1 12:19:04.307: INFO: Created: latency-svc-5dhrn
  Jun  1 12:19:04.315: INFO: Got endpoints: latency-svc-5dhrn [40.841214ms]
  Jun  1 12:19:04.317: INFO: Created: latency-svc-jsp4w
  Jun  1 12:19:04.321: INFO: Created: latency-svc-2njwz
  Jun  1 12:19:04.325: INFO: Got endpoints: latency-svc-2njwz [51.208151ms]
  Jun  1 12:19:04.325: INFO: Got endpoints: latency-svc-jsp4w [51.242618ms]
  Jun  1 12:19:04.328: INFO: Created: latency-svc-t676q
  Jun  1 12:19:04.339: INFO: Created: latency-svc-qntpz
  Jun  1 12:19:04.339: INFO: Got endpoints: latency-svc-t676q [65.035941ms]
  Jun  1 12:19:04.344: INFO: Got endpoints: latency-svc-qntpz [70.197476ms]
  Jun  1 12:19:04.346: INFO: Created: latency-svc-hmwlx
  Jun  1 12:19:04.351: INFO: Created: latency-svc-4h2vv
  Jun  1 12:19:04.352: INFO: Got endpoints: latency-svc-hmwlx [78.447397ms]
  Jun  1 12:19:04.358: INFO: Got endpoints: latency-svc-4h2vv [84.018475ms]
  Jun  1 12:19:04.361: INFO: Created: latency-svc-zk598
  Jun  1 12:19:04.367: INFO: Got endpoints: latency-svc-zk598 [92.533297ms]
  Jun  1 12:19:04.369: INFO: Created: latency-svc-9nvzb
  Jun  1 12:19:04.372: INFO: Got endpoints: latency-svc-9nvzb [98.122793ms]
  Jun  1 12:19:04.375: INFO: Created: latency-svc-wtvpc
  Jun  1 12:19:04.380: INFO: Got endpoints: latency-svc-wtvpc [106.172335ms]
  Jun  1 12:19:04.385: INFO: Created: latency-svc-xcgxw
  Jun  1 12:19:04.389: INFO: Created: latency-svc-f448s
  Jun  1 12:19:04.391: INFO: Got endpoints: latency-svc-xcgxw [116.285799ms]
  Jun  1 12:19:04.393: INFO: Got endpoints: latency-svc-f448s [118.526909ms]
  Jun  1 12:19:04.396: INFO: Created: latency-svc-7b7kv
  Jun  1 12:19:04.402: INFO: Got endpoints: latency-svc-7b7kv [112.476337ms]
  Jun  1 12:19:04.406: INFO: Created: latency-svc-zc4fv
  Jun  1 12:19:04.409: INFO: Created: latency-svc-qhj9q
  Jun  1 12:19:04.410: INFO: Got endpoints: latency-svc-zc4fv [110.866265ms]
  Jun  1 12:19:04.414: INFO: Got endpoints: latency-svc-qhj9q [108.632837ms]
  Jun  1 12:19:04.415: INFO: Created: latency-svc-sjt26
  Jun  1 12:19:04.423: INFO: Got endpoints: latency-svc-sjt26 [107.761694ms]
  Jun  1 12:19:04.426: INFO: Created: latency-svc-vhzq8
  Jun  1 12:19:04.433: INFO: Got endpoints: latency-svc-vhzq8 [107.386736ms]
  Jun  1 12:19:04.435: INFO: Created: latency-svc-fl9zp
  Jun  1 12:19:04.443: INFO: Got endpoints: latency-svc-fl9zp [117.979798ms]
  Jun  1 12:19:04.444: INFO: Created: latency-svc-4qfc4
  Jun  1 12:19:04.445: INFO: Got endpoints: latency-svc-4qfc4 [106.049093ms]
  Jun  1 12:19:04.453: INFO: Created: latency-svc-58d54
  Jun  1 12:19:04.457: INFO: Got endpoints: latency-svc-58d54 [112.647035ms]
  Jun  1 12:19:04.460: INFO: Created: latency-svc-8g784
  Jun  1 12:19:04.464: INFO: Got endpoints: latency-svc-8g784 [111.560461ms]
  Jun  1 12:19:04.466: INFO: Created: latency-svc-bq6tw
  Jun  1 12:19:04.473: INFO: Got endpoints: latency-svc-bq6tw [114.630152ms]
  Jun  1 12:19:04.475: INFO: Created: latency-svc-92wwm
  Jun  1 12:19:04.481: INFO: Created: latency-svc-t966m
  Jun  1 12:19:04.481: INFO: Got endpoints: latency-svc-92wwm [114.209177ms]
  Jun  1 12:19:04.485: INFO: Created: latency-svc-p6p6t
  Jun  1 12:19:04.486: INFO: Got endpoints: latency-svc-t966m [113.594414ms]
  Jun  1 12:19:04.493: INFO: Got endpoints: latency-svc-p6p6t [113.075302ms]
  Jun  1 12:19:04.497: INFO: Created: latency-svc-t6ljj
  Jun  1 12:19:04.501: INFO: Got endpoints: latency-svc-t6ljj [110.123492ms]
  Jun  1 12:19:04.505: INFO: Created: latency-svc-6vfpr
  Jun  1 12:19:04.508: INFO: Got endpoints: latency-svc-6vfpr [114.947265ms]
  Jun  1 12:19:04.512: INFO: Created: latency-svc-2kz2t
  Jun  1 12:19:04.517: INFO: Got endpoints: latency-svc-2kz2t [114.589788ms]
  Jun  1 12:19:04.523: INFO: Created: latency-svc-gmnxt
  Jun  1 12:19:04.528: INFO: Got endpoints: latency-svc-gmnxt [117.34113ms]
  Jun  1 12:19:04.529: INFO: Created: latency-svc-xnd8d
  Jun  1 12:19:04.533: INFO: Created: latency-svc-l2r9h
  Jun  1 12:19:04.535: INFO: Got endpoints: latency-svc-xnd8d [121.149124ms]
  Jun  1 12:19:04.543: INFO: Got endpoints: latency-svc-l2r9h [119.935773ms]
  Jun  1 12:19:04.610: INFO: Created: latency-svc-cbcgt
  Jun  1 12:19:04.612: INFO: Created: latency-svc-cfdk6
  Jun  1 12:19:04.612: INFO: Created: latency-svc-nspdq
  Jun  1 12:19:04.614: INFO: Created: latency-svc-5zczt
  Jun  1 12:19:04.614: INFO: Created: latency-svc-5szbc
  Jun  1 12:19:04.615: INFO: Created: latency-svc-5t9wv
  Jun  1 12:19:04.615: INFO: Created: latency-svc-hbtvl
  Jun  1 12:19:04.616: INFO: Created: latency-svc-2xvcl
  Jun  1 12:19:04.616: INFO: Created: latency-svc-6n2df
  Jun  1 12:19:04.617: INFO: Created: latency-svc-ktmcp
  Jun  1 12:19:04.618: INFO: Created: latency-svc-rppgt
  Jun  1 12:19:04.618: INFO: Created: latency-svc-t7mwh
  Jun  1 12:19:04.618: INFO: Got endpoints: latency-svc-cbcgt [174.933006ms]
  Jun  1 12:19:04.619: INFO: Created: latency-svc-2fnt2
  Jun  1 12:19:04.620: INFO: Created: latency-svc-zgm2q
  Jun  1 12:19:04.620: INFO: Created: latency-svc-hzz2f
  Jun  1 12:19:04.629: INFO: Got endpoints: latency-svc-cfdk6 [184.336946ms]
  Jun  1 12:19:04.632: INFO: Created: latency-svc-vc7bg
  Jun  1 12:19:04.638: INFO: Created: latency-svc-njxsv
  Jun  1 12:19:04.673: INFO: Got endpoints: latency-svc-nspdq [179.21678ms]
  Jun  1 12:19:04.681: INFO: Created: latency-svc-x6g5z
  Jun  1 12:19:04.722: INFO: Got endpoints: latency-svc-hbtvl [214.399129ms]
  Jun  1 12:19:04.734: INFO: Created: latency-svc-pmjnf
  Jun  1 12:19:04.773: INFO: Got endpoints: latency-svc-5zczt [238.298808ms]
  Jun  1 12:19:04.784: INFO: Created: latency-svc-q8pgr
  Jun  1 12:19:04.821: INFO: Got endpoints: latency-svc-2xvcl [388.167914ms]
  Jun  1 12:19:04.828: INFO: Created: latency-svc-2gqdg
  Jun  1 12:19:04.873: INFO: Got endpoints: latency-svc-2fnt2 [400.475287ms]
  Jun  1 12:19:04.886: INFO: Created: latency-svc-rl2tr
  Jun  1 12:19:04.922: INFO: Got endpoints: latency-svc-6n2df [436.51965ms]
  Jun  1 12:19:04.932: INFO: Created: latency-svc-62qxb
  Jun  1 12:19:04.972: INFO: Got endpoints: latency-svc-ktmcp [471.284608ms]
  Jun  1 12:19:04.980: INFO: Created: latency-svc-6s9dl
  Jun  1 12:19:05.021: INFO: Got endpoints: latency-svc-rppgt [493.15292ms]
  Jun  1 12:19:05.032: INFO: Created: latency-svc-brxr6
  Jun  1 12:19:05.072: INFO: Got endpoints: latency-svc-t7mwh [607.608111ms]
  Jun  1 12:19:05.081: INFO: Created: latency-svc-2cmp9
  Jun  1 12:19:05.121: INFO: Got endpoints: latency-svc-hzz2f [578.616883ms]
  Jun  1 12:19:05.129: INFO: Created: latency-svc-cqzv8
  Jun  1 12:19:05.172: INFO: Got endpoints: latency-svc-5szbc [715.135439ms]
  Jun  1 12:19:05.184: INFO: Created: latency-svc-5fv74
  Jun  1 12:19:05.223: INFO: Got endpoints: latency-svc-zgm2q [741.836789ms]
  Jun  1 12:19:05.232: INFO: Created: latency-svc-rbttx
  Jun  1 12:19:05.271: INFO: Got endpoints: latency-svc-5t9wv [754.439513ms]
  Jun  1 12:19:05.286: INFO: Created: latency-svc-plr76
  Jun  1 12:19:05.321: INFO: Got endpoints: latency-svc-vc7bg [702.511593ms]
  Jun  1 12:19:05.333: INFO: Created: latency-svc-zptt6
  Jun  1 12:19:05.373: INFO: Got endpoints: latency-svc-njxsv [743.248067ms]
  Jun  1 12:19:05.383: INFO: Created: latency-svc-hg49c
  Jun  1 12:19:05.423: INFO: Got endpoints: latency-svc-x6g5z [749.75814ms]
  Jun  1 12:19:05.431: INFO: Created: latency-svc-7n82s
  Jun  1 12:19:05.476: INFO: Got endpoints: latency-svc-pmjnf [753.64196ms]
  Jun  1 12:19:05.493: INFO: Created: latency-svc-wb5vm
  Jun  1 12:19:05.523: INFO: Got endpoints: latency-svc-q8pgr [750.483838ms]
  Jun  1 12:19:05.534: INFO: Created: latency-svc-4d5kj
  Jun  1 12:19:05.580: INFO: Got endpoints: latency-svc-2gqdg [758.899467ms]
  Jun  1 12:19:05.588: INFO: Created: latency-svc-bwjbd
  Jun  1 12:19:05.621: INFO: Got endpoints: latency-svc-rl2tr [747.493444ms]
  Jun  1 12:19:05.633: INFO: Created: latency-svc-ts7jq
  Jun  1 12:19:05.671: INFO: Got endpoints: latency-svc-62qxb [748.52287ms]
  Jun  1 12:19:05.681: INFO: Created: latency-svc-cxcrs
  Jun  1 12:19:05.724: INFO: Got endpoints: latency-svc-6s9dl [751.571159ms]
  Jun  1 12:19:05.732: INFO: Created: latency-svc-v7csn
  Jun  1 12:19:05.772: INFO: Got endpoints: latency-svc-brxr6 [751.613364ms]
  Jun  1 12:19:05.783: INFO: Created: latency-svc-d8jdh
  Jun  1 12:19:05.821: INFO: Got endpoints: latency-svc-2cmp9 [749.557085ms]
  Jun  1 12:19:05.832: INFO: Created: latency-svc-whnfn
  Jun  1 12:19:05.871: INFO: Got endpoints: latency-svc-cqzv8 [749.969755ms]
  Jun  1 12:19:05.879: INFO: Created: latency-svc-wsp4v
  Jun  1 12:19:05.922: INFO: Got endpoints: latency-svc-5fv74 [749.441354ms]
  Jun  1 12:19:05.932: INFO: Created: latency-svc-5zr9f
  Jun  1 12:19:05.972: INFO: Got endpoints: latency-svc-rbttx [748.874171ms]
  Jun  1 12:19:05.982: INFO: Created: latency-svc-5kgp7
  Jun  1 12:19:06.023: INFO: Got endpoints: latency-svc-plr76 [751.399221ms]
  Jun  1 12:19:06.031: INFO: Created: latency-svc-fgzgd
  Jun  1 12:19:06.073: INFO: Got endpoints: latency-svc-zptt6 [751.598374ms]
  Jun  1 12:19:06.085: INFO: Created: latency-svc-tfgl8
  Jun  1 12:19:06.122: INFO: Got endpoints: latency-svc-hg49c [749.265577ms]
  Jun  1 12:19:06.132: INFO: Created: latency-svc-t4s2s
  Jun  1 12:19:06.172: INFO: Got endpoints: latency-svc-7n82s [749.109698ms]
  Jun  1 12:19:06.180: INFO: Created: latency-svc-n2v8j
  Jun  1 12:19:06.220: INFO: Got endpoints: latency-svc-wb5vm [744.425516ms]
  Jun  1 12:19:06.231: INFO: Created: latency-svc-mffjq
  Jun  1 12:19:06.273: INFO: Got endpoints: latency-svc-4d5kj [749.017249ms]
  Jun  1 12:19:06.286: INFO: Created: latency-svc-hwnkz
  Jun  1 12:19:06.322: INFO: Got endpoints: latency-svc-bwjbd [741.838054ms]
  Jun  1 12:19:06.330: INFO: Created: latency-svc-mvzgs
  Jun  1 12:19:06.372: INFO: Got endpoints: latency-svc-ts7jq [751.075918ms]
  Jun  1 12:19:06.384: INFO: Created: latency-svc-4dsnp
  Jun  1 12:19:06.422: INFO: Got endpoints: latency-svc-cxcrs [750.478973ms]
  Jun  1 12:19:06.433: INFO: Created: latency-svc-p76m5
  Jun  1 12:19:06.473: INFO: Got endpoints: latency-svc-v7csn [748.9014ms]
  Jun  1 12:19:06.482: INFO: Created: latency-svc-kwcl4
  Jun  1 12:19:06.522: INFO: Got endpoints: latency-svc-d8jdh [749.388795ms]
  Jun  1 12:19:06.533: INFO: Created: latency-svc-dxqfk
  Jun  1 12:19:06.572: INFO: Got endpoints: latency-svc-whnfn [750.69733ms]
  Jun  1 12:19:06.581: INFO: Created: latency-svc-k4w5c
  Jun  1 12:19:06.622: INFO: Got endpoints: latency-svc-wsp4v [750.710381ms]
  Jun  1 12:19:06.633: INFO: Created: latency-svc-vz2dt
  Jun  1 12:19:06.671: INFO: Got endpoints: latency-svc-5zr9f [749.599383ms]
  Jun  1 12:19:06.682: INFO: Created: latency-svc-6vkc5
  Jun  1 12:19:06.723: INFO: Got endpoints: latency-svc-5kgp7 [751.620869ms]
  Jun  1 12:19:06.735: INFO: Created: latency-svc-bcrlt
  Jun  1 12:19:06.772: INFO: Got endpoints: latency-svc-fgzgd [749.449087ms]
  Jun  1 12:19:06.781: INFO: Created: latency-svc-grpk5
  Jun  1 12:19:06.822: INFO: Got endpoints: latency-svc-tfgl8 [749.112569ms]
  Jun  1 12:19:06.835: INFO: Created: latency-svc-lzt82
  Jun  1 12:19:06.872: INFO: Got endpoints: latency-svc-t4s2s [749.520963ms]
  Jun  1 12:19:06.882: INFO: Created: latency-svc-gxbxm
  Jun  1 12:19:06.924: INFO: Got endpoints: latency-svc-n2v8j [752.061287ms]
  Jun  1 12:19:06.933: INFO: Created: latency-svc-nn5tz
  Jun  1 12:19:06.973: INFO: Got endpoints: latency-svc-mffjq [752.258494ms]
  Jun  1 12:19:06.984: INFO: Created: latency-svc-rr425
  Jun  1 12:19:07.023: INFO: Got endpoints: latency-svc-hwnkz [750.743327ms]
  Jun  1 12:19:07.034: INFO: Created: latency-svc-m9wq5
  Jun  1 12:19:07.072: INFO: Got endpoints: latency-svc-mvzgs [750.176285ms]
  Jun  1 12:19:07.082: INFO: Created: latency-svc-sbk5p
  Jun  1 12:19:07.129: INFO: Got endpoints: latency-svc-4dsnp [757.319872ms]
  Jun  1 12:19:07.140: INFO: Created: latency-svc-97mkk
  Jun  1 12:19:07.172: INFO: Got endpoints: latency-svc-p76m5 [750.636656ms]
  Jun  1 12:19:07.182: INFO: Created: latency-svc-qcb8g
  Jun  1 12:19:07.223: INFO: Got endpoints: latency-svc-kwcl4 [750.522904ms]
  Jun  1 12:19:07.231: INFO: Created: latency-svc-w9w65
  Jun  1 12:19:07.272: INFO: Got endpoints: latency-svc-dxqfk [749.800908ms]
  Jun  1 12:19:07.285: INFO: Created: latency-svc-m9qc8
  Jun  1 12:19:07.323: INFO: Got endpoints: latency-svc-k4w5c [750.866998ms]
  Jun  1 12:19:07.333: INFO: Created: latency-svc-nlz76
  Jun  1 12:19:07.371: INFO: Got endpoints: latency-svc-vz2dt [748.645228ms]
  Jun  1 12:19:07.379: INFO: Created: latency-svc-r975v
  Jun  1 12:19:07.422: INFO: Got endpoints: latency-svc-6vkc5 [750.982508ms]
  Jun  1 12:19:07.433: INFO: Created: latency-svc-p9xvd
  Jun  1 12:19:07.472: INFO: Got endpoints: latency-svc-bcrlt [748.827226ms]
  Jun  1 12:19:07.481: INFO: Created: latency-svc-gcpxc
  Jun  1 12:19:07.522: INFO: Got endpoints: latency-svc-grpk5 [749.456238ms]
  Jun  1 12:19:07.533: INFO: Created: latency-svc-kmcz7
  Jun  1 12:19:07.572: INFO: Got endpoints: latency-svc-lzt82 [749.661701ms]
  Jun  1 12:19:07.586: INFO: Created: latency-svc-qw5gr
  Jun  1 12:19:07.623: INFO: Got endpoints: latency-svc-gxbxm [750.648221ms]
  Jun  1 12:19:07.633: INFO: Created: latency-svc-wh6fx
  Jun  1 12:19:07.673: INFO: Got endpoints: latency-svc-nn5tz [748.654931ms]
  Jun  1 12:19:07.681: INFO: Created: latency-svc-4xrjc
  Jun  1 12:19:07.722: INFO: Got endpoints: latency-svc-rr425 [749.326122ms]
  Jun  1 12:19:07.734: INFO: Created: latency-svc-hjs2m
  Jun  1 12:19:07.773: INFO: Got endpoints: latency-svc-m9wq5 [749.541706ms]
  Jun  1 12:19:07.783: INFO: Created: latency-svc-hnqgl
  Jun  1 12:19:07.822: INFO: Got endpoints: latency-svc-sbk5p [749.58862ms]
  Jun  1 12:19:07.830: INFO: Created: latency-svc-x8vrk
  Jun  1 12:19:07.873: INFO: Got endpoints: latency-svc-97mkk [743.946698ms]
  Jun  1 12:19:07.885: INFO: Created: latency-svc-mct7g
  Jun  1 12:19:07.923: INFO: Got endpoints: latency-svc-qcb8g [750.515093ms]
  Jun  1 12:19:07.932: INFO: Created: latency-svc-hd6ds
  Jun  1 12:19:07.971: INFO: Got endpoints: latency-svc-w9w65 [748.221461ms]
  Jun  1 12:19:07.984: INFO: Created: latency-svc-99zxq
  Jun  1 12:19:08.020: INFO: Got endpoints: latency-svc-m9qc8 [748.36348ms]
  Jun  1 12:19:08.031: INFO: Created: latency-svc-wm2p6
  Jun  1 12:19:08.072: INFO: Got endpoints: latency-svc-nlz76 [749.212695ms]
  Jun  1 12:19:08.082: INFO: Created: latency-svc-42wv2
  Jun  1 12:19:08.121: INFO: Got endpoints: latency-svc-r975v [749.899881ms]
  Jun  1 12:19:08.129: INFO: Created: latency-svc-d7c6x
  Jun  1 12:19:08.176: INFO: Got endpoints: latency-svc-p9xvd [753.158492ms]
  Jun  1 12:19:08.186: INFO: Created: latency-svc-rct99
  Jun  1 12:19:08.221: INFO: Got endpoints: latency-svc-gcpxc [748.505869ms]
  Jun  1 12:19:08.231: INFO: Created: latency-svc-4q4b2
  Jun  1 12:19:08.270: INFO: Got endpoints: latency-svc-kmcz7 [747.742506ms]
  Jun  1 12:19:08.282: INFO: Created: latency-svc-28x2w
  Jun  1 12:19:08.321: INFO: Got endpoints: latency-svc-qw5gr [749.155235ms]
  Jun  1 12:19:08.332: INFO: Created: latency-svc-hr6c5
  Jun  1 12:19:08.372: INFO: Got endpoints: latency-svc-wh6fx [748.713148ms]
  Jun  1 12:19:08.380: INFO: Created: latency-svc-lpgxf
  Jun  1 12:19:08.420: INFO: Got endpoints: latency-svc-4xrjc [747.03081ms]
  Jun  1 12:19:08.428: INFO: Created: latency-svc-zl5xf
  Jun  1 12:19:08.472: INFO: Got endpoints: latency-svc-hjs2m [750.183611ms]
  Jun  1 12:19:08.484: INFO: Created: latency-svc-dsn9j
  Jun  1 12:19:08.523: INFO: Got endpoints: latency-svc-hnqgl [749.977716ms]
  Jun  1 12:19:08.532: INFO: Created: latency-svc-dg46g
  Jun  1 12:19:08.572: INFO: Got endpoints: latency-svc-x8vrk [750.269335ms]
  Jun  1 12:19:08.581: INFO: Created: latency-svc-8bk4w
  Jun  1 12:19:08.622: INFO: Got endpoints: latency-svc-mct7g [748.180664ms]
  Jun  1 12:19:08.633: INFO: Created: latency-svc-hlcrl
  Jun  1 12:19:08.672: INFO: Got endpoints: latency-svc-hd6ds [748.968624ms]
  Jun  1 12:19:08.682: INFO: Created: latency-svc-tchxp
  Jun  1 12:19:08.723: INFO: Got endpoints: latency-svc-99zxq [752.002911ms]
  Jun  1 12:19:08.732: INFO: Created: latency-svc-qw5xf
  Jun  1 12:19:08.773: INFO: Got endpoints: latency-svc-wm2p6 [752.958483ms]
  Jun  1 12:19:08.784: INFO: Created: latency-svc-5trw8
  Jun  1 12:19:08.821: INFO: Got endpoints: latency-svc-42wv2 [748.816535ms]
  Jun  1 12:19:08.833: INFO: Created: latency-svc-2qq89
  Jun  1 12:19:08.922: INFO: Got endpoints: latency-svc-d7c6x [800.938704ms]
  Jun  1 12:19:08.931: INFO: Created: latency-svc-lnv4m
  Jun  1 12:19:08.972: INFO: Got endpoints: latency-svc-rct99 [795.885159ms]
  Jun  1 12:19:08.982: INFO: Created: latency-svc-t6qmx
  Jun  1 12:19:09.023: INFO: Got endpoints: latency-svc-4q4b2 [802.188986ms]
  Jun  1 12:19:09.034: INFO: Created: latency-svc-tqrkd
  Jun  1 12:19:09.073: INFO: Got endpoints: latency-svc-28x2w [802.869421ms]
  Jun  1 12:19:09.083: INFO: Created: latency-svc-znsdf
  Jun  1 12:19:09.121: INFO: Got endpoints: latency-svc-hr6c5 [799.740201ms]
  Jun  1 12:19:09.133: INFO: Created: latency-svc-ckh78
  Jun  1 12:19:09.171: INFO: Got endpoints: latency-svc-lpgxf [799.606142ms]
  Jun  1 12:19:09.182: INFO: Created: latency-svc-8p72x
  Jun  1 12:19:09.221: INFO: Got endpoints: latency-svc-zl5xf [800.114445ms]
  Jun  1 12:19:09.229: INFO: Created: latency-svc-fchtv
  Jun  1 12:19:09.271: INFO: Got endpoints: latency-svc-dsn9j [798.60786ms]
  Jun  1 12:19:09.285: INFO: Created: latency-svc-qtpfl
  Jun  1 12:19:09.323: INFO: Got endpoints: latency-svc-dg46g [800.383318ms]
  Jun  1 12:19:09.335: INFO: Created: latency-svc-7cklh
  Jun  1 12:19:09.373: INFO: Got endpoints: latency-svc-8bk4w [800.968349ms]
  Jun  1 12:19:09.381: INFO: Created: latency-svc-58wjv
  Jun  1 12:19:09.422: INFO: Got endpoints: latency-svc-hlcrl [800.370043ms]
  Jun  1 12:19:09.434: INFO: Created: latency-svc-7c62t
  Jun  1 12:19:09.472: INFO: Got endpoints: latency-svc-tchxp [800.320554ms]
  Jun  1 12:19:09.483: INFO: Created: latency-svc-6lnzb
  Jun  1 12:19:09.521: INFO: Got endpoints: latency-svc-qw5xf [797.281465ms]
  Jun  1 12:19:09.529: INFO: Created: latency-svc-n8t8n
  Jun  1 12:19:09.572: INFO: Got endpoints: latency-svc-5trw8 [799.221602ms]
  Jun  1 12:19:09.584: INFO: Created: latency-svc-dhtjv
  Jun  1 12:19:09.623: INFO: Got endpoints: latency-svc-2qq89 [801.61131ms]
  Jun  1 12:19:09.635: INFO: Created: latency-svc-djql2
  Jun  1 12:19:09.673: INFO: Got endpoints: latency-svc-lnv4m [751.647971ms]
  Jun  1 12:19:09.681: INFO: Created: latency-svc-z42rj
  Jun  1 12:19:09.721: INFO: Got endpoints: latency-svc-t6qmx [749.92521ms]
  Jun  1 12:19:09.734: INFO: Created: latency-svc-fwdpw
  Jun  1 12:19:09.772: INFO: Got endpoints: latency-svc-tqrkd [748.83146ms]
  Jun  1 12:19:09.782: INFO: Created: latency-svc-zkqqz
  Jun  1 12:19:09.823: INFO: Got endpoints: latency-svc-znsdf [750.392452ms]
  Jun  1 12:19:09.832: INFO: Created: latency-svc-l8gh9
  Jun  1 12:19:09.873: INFO: Got endpoints: latency-svc-ckh78 [752.455169ms]
  Jun  1 12:19:09.884: INFO: Created: latency-svc-jzc8c
  Jun  1 12:19:09.922: INFO: Got endpoints: latency-svc-8p72x [750.386341ms]
  Jun  1 12:19:09.932: INFO: Created: latency-svc-m5xg6
  Jun  1 12:19:09.972: INFO: Got endpoints: latency-svc-fchtv [750.81024ms]
  Jun  1 12:19:09.981: INFO: Created: latency-svc-4knqd
  Jun  1 12:19:10.021: INFO: Got endpoints: latency-svc-qtpfl [750.043399ms]
  Jun  1 12:19:10.032: INFO: Created: latency-svc-kxct4
  Jun  1 12:19:10.073: INFO: Got endpoints: latency-svc-7cklh [749.290514ms]
  Jun  1 12:19:10.083: INFO: Created: latency-svc-cbrb5
  Jun  1 12:19:10.123: INFO: Got endpoints: latency-svc-58wjv [750.436797ms]
  Jun  1 12:19:10.131: INFO: Created: latency-svc-mbtx5
  Jun  1 12:19:10.173: INFO: Got endpoints: latency-svc-7c62t [750.69889ms]
  Jun  1 12:19:10.186: INFO: Created: latency-svc-m4ghc
  Jun  1 12:19:10.224: INFO: Got endpoints: latency-svc-6lnzb [751.362593ms]
  Jun  1 12:19:10.234: INFO: Created: latency-svc-dg6p7
  Jun  1 12:19:10.271: INFO: Got endpoints: latency-svc-n8t8n [749.687329ms]
  Jun  1 12:19:10.280: INFO: Created: latency-svc-8mwht
  Jun  1 12:19:10.321: INFO: Got endpoints: latency-svc-dhtjv [748.400365ms]
  Jun  1 12:19:10.332: INFO: Created: latency-svc-rt6k9
  Jun  1 12:19:10.373: INFO: Got endpoints: latency-svc-djql2 [750.162075ms]
  Jun  1 12:19:10.383: INFO: Created: latency-svc-bvntw
  Jun  1 12:19:10.423: INFO: Got endpoints: latency-svc-z42rj [749.086621ms]
  Jun  1 12:19:10.430: INFO: Created: latency-svc-558d8
  Jun  1 12:19:10.471: INFO: Got endpoints: latency-svc-fwdpw [749.729719ms]
  Jun  1 12:19:10.482: INFO: Created: latency-svc-wnt4g
  Jun  1 12:19:10.523: INFO: Got endpoints: latency-svc-zkqqz [751.129569ms]
  Jun  1 12:19:10.534: INFO: Created: latency-svc-7vbvj
  Jun  1 12:19:10.571: INFO: Got endpoints: latency-svc-l8gh9 [748.117842ms]
  Jun  1 12:19:10.579: INFO: Created: latency-svc-jv2xr
  Jun  1 12:19:10.623: INFO: Got endpoints: latency-svc-jzc8c [749.639447ms]
  Jun  1 12:19:10.634: INFO: Created: latency-svc-l5hmw
  Jun  1 12:19:10.673: INFO: Got endpoints: latency-svc-m5xg6 [751.34026ms]
  Jun  1 12:19:10.684: INFO: Created: latency-svc-cssd6
  Jun  1 12:19:10.722: INFO: Got endpoints: latency-svc-4knqd [750.231253ms]
  Jun  1 12:19:10.731: INFO: Created: latency-svc-2s8fk
  Jun  1 12:19:10.771: INFO: Got endpoints: latency-svc-kxct4 [749.977127ms]
  Jun  1 12:19:10.783: INFO: Created: latency-svc-6v8xm
  Jun  1 12:19:10.824: INFO: Got endpoints: latency-svc-cbrb5 [750.763877ms]
  Jun  1 12:19:10.834: INFO: Created: latency-svc-smjlt
  Jun  1 12:19:10.874: INFO: Got endpoints: latency-svc-mbtx5 [750.824628ms]
  Jun  1 12:19:10.883: INFO: Created: latency-svc-zzvnd
  Jun  1 12:19:10.921: INFO: Got endpoints: latency-svc-m4ghc [748.441329ms]
  Jun  1 12:19:10.933: INFO: Created: latency-svc-dwdtn
  Jun  1 12:19:10.971: INFO: Got endpoints: latency-svc-dg6p7 [747.832031ms]
  Jun  1 12:19:10.985: INFO: Created: latency-svc-qx5nm
  Jun  1 12:19:11.021: INFO: Got endpoints: latency-svc-8mwht [750.009993ms]
  Jun  1 12:19:11.029: INFO: Created: latency-svc-gbnnb
  Jun  1 12:19:11.071: INFO: Got endpoints: latency-svc-rt6k9 [749.846885ms]
  Jun  1 12:19:11.081: INFO: Created: latency-svc-rr8m9
  Jun  1 12:19:11.122: INFO: Got endpoints: latency-svc-bvntw [749.285833ms]
  Jun  1 12:19:11.132: INFO: Created: latency-svc-mdwnn
  Jun  1 12:19:11.173: INFO: Got endpoints: latency-svc-558d8 [750.265461ms]
  Jun  1 12:19:11.185: INFO: Created: latency-svc-4tvgs
  Jun  1 12:19:11.221: INFO: Got endpoints: latency-svc-wnt4g [749.763745ms]
  Jun  1 12:19:11.234: INFO: Created: latency-svc-h2fz6
  Jun  1 12:19:11.271: INFO: Got endpoints: latency-svc-7vbvj [747.577708ms]
  Jun  1 12:19:11.284: INFO: Created: latency-svc-bx2k6
  Jun  1 12:19:11.323: INFO: Got endpoints: latency-svc-jv2xr [751.247267ms]
  Jun  1 12:19:11.330: INFO: Created: latency-svc-62s7p
  Jun  1 12:19:11.372: INFO: Got endpoints: latency-svc-l5hmw [749.244346ms]
  Jun  1 12:19:11.384: INFO: Created: latency-svc-xqcq6
  Jun  1 12:19:11.422: INFO: Got endpoints: latency-svc-cssd6 [749.141218ms]
  Jun  1 12:19:11.436: INFO: Created: latency-svc-s9g8z
  Jun  1 12:19:11.471: INFO: Got endpoints: latency-svc-2s8fk [749.310764ms]
  Jun  1 12:19:11.480: INFO: Created: latency-svc-r5cpk
  Jun  1 12:19:11.521: INFO: Got endpoints: latency-svc-6v8xm [749.880047ms]
  Jun  1 12:19:11.533: INFO: Created: latency-svc-dxqzd
  Jun  1 12:19:11.573: INFO: Got endpoints: latency-svc-smjlt [748.910881ms]
  Jun  1 12:19:11.583: INFO: Created: latency-svc-55hsk
  Jun  1 12:19:11.623: INFO: Got endpoints: latency-svc-zzvnd [748.881306ms]
  Jun  1 12:19:11.632: INFO: Created: latency-svc-59794
  Jun  1 12:19:11.676: INFO: Got endpoints: latency-svc-dwdtn [754.222384ms]
  Jun  1 12:19:11.691: INFO: Created: latency-svc-6qp9v
  Jun  1 12:19:11.722: INFO: Got endpoints: latency-svc-qx5nm [750.226917ms]
  Jun  1 12:19:11.732: INFO: Created: latency-svc-k5lpw
  Jun  1 12:19:11.772: INFO: Got endpoints: latency-svc-gbnnb [751.223547ms]
  Jun  1 12:19:11.781: INFO: Created: latency-svc-vvk99
  Jun  1 12:19:11.822: INFO: Got endpoints: latency-svc-rr8m9 [751.523485ms]
  Jun  1 12:19:11.833: INFO: Created: latency-svc-x586r
  Jun  1 12:19:11.874: INFO: Got endpoints: latency-svc-mdwnn [751.53441ms]
  Jun  1 12:19:11.883: INFO: Created: latency-svc-c69hb
  Jun  1 12:19:11.923: INFO: Got endpoints: latency-svc-4tvgs [749.305588ms]
  Jun  1 12:19:11.931: INFO: Created: latency-svc-dpb49
  Jun  1 12:19:11.972: INFO: Got endpoints: latency-svc-h2fz6 [750.620295ms]
  Jun  1 12:19:11.984: INFO: Created: latency-svc-g4scp
  Jun  1 12:19:12.022: INFO: Got endpoints: latency-svc-bx2k6 [750.648255ms]
  Jun  1 12:19:12.036: INFO: Created: latency-svc-7c4nd
  Jun  1 12:19:12.073: INFO: Got endpoints: latency-svc-62s7p [750.023855ms]
  Jun  1 12:19:12.080: INFO: Created: latency-svc-vrq6f
  Jun  1 12:19:12.121: INFO: Got endpoints: latency-svc-xqcq6 [748.606341ms]
  Jun  1 12:19:12.132: INFO: Created: latency-svc-c9lbr
  Jun  1 12:19:12.172: INFO: Got endpoints: latency-svc-s9g8z [749.743116ms]
  Jun  1 12:19:12.222: INFO: Got endpoints: latency-svc-r5cpk [750.419515ms]
  Jun  1 12:19:12.272: INFO: Got endpoints: latency-svc-dxqzd [750.696621ms]
  Jun  1 12:19:12.324: INFO: Got endpoints: latency-svc-55hsk [750.728593ms]
  Jun  1 12:19:12.372: INFO: Got endpoints: latency-svc-59794 [748.752146ms]
  Jun  1 12:19:12.421: INFO: Got endpoints: latency-svc-6qp9v [745.250624ms]
  Jun  1 12:19:12.473: INFO: Got endpoints: latency-svc-k5lpw [751.400539ms]
  Jun  1 12:19:12.522: INFO: Got endpoints: latency-svc-vvk99 [750.311877ms]
  Jun  1 12:19:12.572: INFO: Got endpoints: latency-svc-x586r [749.802619ms]
  Jun  1 12:19:12.622: INFO: Got endpoints: latency-svc-c69hb [748.030285ms]
  Jun  1 12:19:12.673: INFO: Got endpoints: latency-svc-dpb49 [750.12802ms]
  Jun  1 12:19:12.723: INFO: Got endpoints: latency-svc-g4scp [750.945952ms]
  Jun  1 12:19:12.773: INFO: Got endpoints: latency-svc-7c4nd [750.948992ms]
  Jun  1 12:19:12.821: INFO: Got endpoints: latency-svc-vrq6f [748.548728ms]
  Jun  1 12:19:12.872: INFO: Got endpoints: latency-svc-c9lbr [751.088769ms]
  Jun  1 12:19:12.872: INFO: Latencies: [15.381524ms 25.811114ms 31.104938ms 40.841214ms 51.208151ms 51.242618ms 65.035941ms 70.197476ms 78.447397ms 84.018475ms 92.533297ms 98.122793ms 106.049093ms 106.172335ms 107.386736ms 107.761694ms 108.632837ms 110.123492ms 110.866265ms 111.560461ms 112.476337ms 112.647035ms 113.075302ms 113.594414ms 114.209177ms 114.589788ms 114.630152ms 114.947265ms 116.285799ms 117.34113ms 117.979798ms 118.526909ms 119.935773ms 121.149124ms 174.933006ms 179.21678ms 184.336946ms 214.399129ms 238.298808ms 388.167914ms 400.475287ms 436.51965ms 471.284608ms 493.15292ms 578.616883ms 607.608111ms 702.511593ms 715.135439ms 741.836789ms 741.838054ms 743.248067ms 743.946698ms 744.425516ms 745.250624ms 747.03081ms 747.493444ms 747.577708ms 747.742506ms 747.832031ms 748.030285ms 748.117842ms 748.180664ms 748.221461ms 748.36348ms 748.400365ms 748.441329ms 748.505869ms 748.52287ms 748.548728ms 748.606341ms 748.645228ms 748.654931ms 748.713148ms 748.752146ms 748.816535ms 748.827226ms 748.83146ms 748.874171ms 748.881306ms 748.9014ms 748.910881ms 748.968624ms 749.017249ms 749.086621ms 749.109698ms 749.112569ms 749.141218ms 749.155235ms 749.212695ms 749.244346ms 749.265577ms 749.285833ms 749.290514ms 749.305588ms 749.310764ms 749.326122ms 749.388795ms 749.441354ms 749.449087ms 749.456238ms 749.520963ms 749.541706ms 749.557085ms 749.58862ms 749.599383ms 749.639447ms 749.661701ms 749.687329ms 749.729719ms 749.743116ms 749.75814ms 749.763745ms 749.800908ms 749.802619ms 749.846885ms 749.880047ms 749.899881ms 749.92521ms 749.969755ms 749.977127ms 749.977716ms 750.009993ms 750.023855ms 750.043399ms 750.12802ms 750.162075ms 750.176285ms 750.183611ms 750.226917ms 750.231253ms 750.265461ms 750.269335ms 750.311877ms 750.386341ms 750.392452ms 750.419515ms 750.436797ms 750.478973ms 750.483838ms 750.515093ms 750.522904ms 750.620295ms 750.636656ms 750.648221ms 750.648255ms 750.696621ms 750.69733ms 750.69889ms 750.710381ms 750.728593ms 750.743327ms 750.763877ms 750.81024ms 750.824628ms 750.866998ms 750.945952ms 750.948992ms 750.982508ms 751.075918ms 751.088769ms 751.129569ms 751.223547ms 751.247267ms 751.34026ms 751.362593ms 751.399221ms 751.400539ms 751.523485ms 751.53441ms 751.571159ms 751.598374ms 751.613364ms 751.620869ms 751.647971ms 752.002911ms 752.061287ms 752.258494ms 752.455169ms 752.958483ms 753.158492ms 753.64196ms 754.222384ms 754.439513ms 757.319872ms 758.899467ms 795.885159ms 797.281465ms 798.60786ms 799.221602ms 799.606142ms 799.740201ms 800.114445ms 800.320554ms 800.370043ms 800.383318ms 800.938704ms 800.968349ms 801.61131ms 802.188986ms 802.869421ms]
  Jun  1 12:19:12.872: INFO: 50 %ile: 749.520963ms
  Jun  1 12:19:12.872: INFO: 90 %ile: 753.64196ms
  Jun  1 12:19:12.872: INFO: 99 %ile: 802.188986ms
  Jun  1 12:19:12.872: INFO: Total sample count: 200
  Jun  1 12:19:12.873: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-4250" for this suite. @ 06/01/24 12:19:12.877
â€¢ [9.812 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 06/01/24 12:19:12.884
  Jun  1 12:19:12.884: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename resourcequota @ 06/01/24 12:19:12.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:19:12.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:19:12.906
  STEP: Counting existing ResourceQuota @ 06/01/24 12:19:12.908
  STEP: Creating a ResourceQuota @ 06/01/24 12:19:17.914
  STEP: Ensuring resource quota status is calculated @ 06/01/24 12:19:17.92
  Jun  1 12:19:19.925: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-719" for this suite. @ 06/01/24 12:19:19.929
â€¢ [7.054 seconds]
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 06/01/24 12:19:19.938
  Jun  1 12:19:19.938: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename sysctl @ 06/01/24 12:19:19.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:19:19.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:19:19.968
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 06/01/24 12:19:19.971
  STEP: Watching for error events or started pod @ 06/01/24 12:19:19.978
  STEP: Waiting for pod completion @ 06/01/24 12:19:21.985
  STEP: Checking that the pod succeeded @ 06/01/24 12:19:23.998
  STEP: Getting logs from the pod @ 06/01/24 12:19:23.998
  STEP: Checking that the sysctl is actually updated @ 06/01/24 12:19:24.013
  Jun  1 12:19:24.013: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-1908" for this suite. @ 06/01/24 12:19:24.017
â€¢ [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 06/01/24 12:19:24.025
  Jun  1 12:19:24.025: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename configmap @ 06/01/24 12:19:24.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:19:24.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:19:24.046
  STEP: Creating configMap with name configmap-test-volume-37acf0d0-b618-4160-b524-0cd0db13f81a @ 06/01/24 12:19:24.049
  STEP: Creating a pod to test consume configMaps @ 06/01/24 12:19:24.053
  STEP: Saw pod success @ 06/01/24 12:19:30.078
  Jun  1 12:19:30.082: INFO: Trying to get logs from node ip-172-31-74-111 pod pod-configmaps-77a1a1ea-cb9b-4ed2-8199-159d6bbbdc03 container agnhost-container: <nil>
  STEP: delete the pod @ 06/01/24 12:19:30.088
  Jun  1 12:19:30.101: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5978" for this suite. @ 06/01/24 12:19:30.104
â€¢ [6.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 06/01/24 12:19:30.111
  Jun  1 12:19:30.111: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename dns @ 06/01/24 12:19:30.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:19:30.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:19:30.128
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 06/01/24 12:19:30.13
  Jun  1 12:19:30.138: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-5170  ca90c007-6c6b-467c-a67b-8a8682a3e8d9 6407 0 2024-06-01 12:19:30 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-06-01 12:19:30 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-rkhqd,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.47,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-rkhqd,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 06/01/24 12:19:32.146
  Jun  1 12:19:32.146: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-5170 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  1 12:19:32.146: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 12:19:32.146: INFO: ExecWithOptions: Clientset creation
  Jun  1 12:19:32.147: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-5170/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 06/01/24 12:19:32.211
  Jun  1 12:19:32.211: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-5170 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  1 12:19:32.211: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 12:19:32.212: INFO: ExecWithOptions: Clientset creation
  Jun  1 12:19:32.212: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-5170/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun  1 12:19:32.262: INFO: Deleting pod test-dns-nameservers...
  Jun  1 12:19:32.275: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5170" for this suite. @ 06/01/24 12:19:32.279
â€¢ [2.176 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 06/01/24 12:19:32.287
  Jun  1 12:19:32.287: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename webhook @ 06/01/24 12:19:32.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:19:32.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:19:32.307
  STEP: Setting up server cert @ 06/01/24 12:19:32.331
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/01/24 12:19:32.556
  STEP: Deploying the webhook pod @ 06/01/24 12:19:32.563
  STEP: Wait for the deployment to be ready @ 06/01/24 12:19:32.575
  Jun  1 12:19:32.581: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/01/24 12:19:34.593
  STEP: Verifying the service has paired with the endpoint @ 06/01/24 12:19:34.602
  Jun  1 12:19:35.602: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 06/01/24 12:19:35.609
  STEP: create a pod that should be denied by the webhook @ 06/01/24 12:19:35.623
  STEP: create a pod that causes the webhook to hang @ 06/01/24 12:19:35.634
  STEP: create a configmap that should be denied by the webhook @ 06/01/24 12:19:45.64
  STEP: create a configmap that should be admitted by the webhook @ 06/01/24 12:19:45.673
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 06/01/24 12:19:45.681
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 06/01/24 12:19:45.688
  STEP: create a namespace that bypass the webhook @ 06/01/24 12:19:45.693
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 06/01/24 12:19:45.712
  Jun  1 12:19:45.759: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9462" for this suite. @ 06/01/24 12:19:45.762
  STEP: Destroying namespace "webhook-markers-1615" for this suite. @ 06/01/24 12:19:45.767
  STEP: Destroying namespace "exempted-namespace-6648" for this suite. @ 06/01/24 12:19:45.779
â€¢ [13.497 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 06/01/24 12:19:45.785
  Jun  1 12:19:45.785: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename projected @ 06/01/24 12:19:45.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:19:45.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:19:45.803
  STEP: Creating a pod to test downward API volume plugin @ 06/01/24 12:19:45.806
  STEP: Saw pod success @ 06/01/24 12:19:49.824
  Jun  1 12:19:49.829: INFO: Trying to get logs from node ip-172-31-74-111 pod downwardapi-volume-6ec0b7dc-f206-48cd-a972-9588c63e7728 container client-container: <nil>
  STEP: delete the pod @ 06/01/24 12:19:49.836
  Jun  1 12:19:49.857: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4379" for this suite. @ 06/01/24 12:19:49.86
â€¢ [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 06/01/24 12:19:49.868
  Jun  1 12:19:49.868: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename configmap @ 06/01/24 12:19:49.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:19:49.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:19:49.886
  STEP: Creating configMap with name configmap-test-upd-094a787f-abd4-43b0-a81c-68d62f8d5103 @ 06/01/24 12:19:49.891
  STEP: Creating the pod @ 06/01/24 12:19:49.894
  STEP: Waiting for pod with text data @ 06/01/24 12:19:51.912
  STEP: Waiting for pod with binary data @ 06/01/24 12:19:51.918
  Jun  1 12:19:51.924: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-868" for this suite. @ 06/01/24 12:19:51.927
â€¢ [2.066 seconds]
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 06/01/24 12:19:51.934
  Jun  1 12:19:51.934: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename replicaset @ 06/01/24 12:19:51.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:19:51.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:19:51.956
  Jun  1 12:19:51.970: INFO: Pod name sample-pod: Found 0 pods out of 1
  Jun  1 12:19:56.975: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/01/24 12:19:56.975
  STEP: Scaling up "test-rs" replicaset @ 06/01/24 12:19:56.975
  Jun  1 12:19:56.985: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 06/01/24 12:19:56.985
  Jun  1 12:19:56.994: INFO: observed ReplicaSet test-rs in namespace replicaset-8723 with ReadyReplicas 1, AvailableReplicas 1
  Jun  1 12:19:57.008: INFO: observed ReplicaSet test-rs in namespace replicaset-8723 with ReadyReplicas 1, AvailableReplicas 1
  Jun  1 12:19:57.022: INFO: observed ReplicaSet test-rs in namespace replicaset-8723 with ReadyReplicas 1, AvailableReplicas 1
  Jun  1 12:19:57.031: INFO: observed ReplicaSet test-rs in namespace replicaset-8723 with ReadyReplicas 1, AvailableReplicas 1
  Jun  1 12:19:59.861: INFO: observed ReplicaSet test-rs in namespace replicaset-8723 with ReadyReplicas 2, AvailableReplicas 2
  Jun  1 12:20:00.133: INFO: observed Replicaset test-rs in namespace replicaset-8723 with ReadyReplicas 3 found true
  Jun  1 12:20:00.133: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8723" for this suite. @ 06/01/24 12:20:00.138
â€¢ [8.211 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 06/01/24 12:20:00.145
  Jun  1 12:20:00.145: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename webhook @ 06/01/24 12:20:00.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:20:00.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:20:00.162
  STEP: Setting up server cert @ 06/01/24 12:20:00.185
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/01/24 12:20:00.38
  STEP: Deploying the webhook pod @ 06/01/24 12:20:00.384
  STEP: Wait for the deployment to be ready @ 06/01/24 12:20:00.396
  Jun  1 12:20:00.406: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/01/24 12:20:02.417
  STEP: Verifying the service has paired with the endpoint @ 06/01/24 12:20:02.426
  Jun  1 12:20:03.427: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 06/01/24 12:20:03.435
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/01/24 12:20:03.451
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 06/01/24 12:20:03.457
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/01/24 12:20:03.466
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 06/01/24 12:20:03.478
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/01/24 12:20:03.485
  Jun  1 12:20:03.524: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8474" for this suite. @ 06/01/24 12:20:03.527
  STEP: Destroying namespace "webhook-markers-4275" for this suite. @ 06/01/24 12:20:03.537
â€¢ [3.398 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 06/01/24 12:20:03.543
  Jun  1 12:20:03.543: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename resourcequota @ 06/01/24 12:20:03.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:20:03.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:20:03.564
  STEP: Creating a ResourceQuota with best effort scope @ 06/01/24 12:20:03.566
  STEP: Ensuring ResourceQuota status is calculated @ 06/01/24 12:20:03.57
  STEP: Creating a ResourceQuota with not best effort scope @ 06/01/24 12:20:05.574
  STEP: Ensuring ResourceQuota status is calculated @ 06/01/24 12:20:05.58
  STEP: Creating a best-effort pod @ 06/01/24 12:20:07.585
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 06/01/24 12:20:07.598
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 06/01/24 12:20:09.603
  STEP: Deleting the pod @ 06/01/24 12:20:11.608
  STEP: Ensuring resource quota status released the pod usage @ 06/01/24 12:20:11.628
  STEP: Creating a not best-effort pod @ 06/01/24 12:20:13.632
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 06/01/24 12:20:13.643
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 06/01/24 12:20:15.648
  STEP: Deleting the pod @ 06/01/24 12:20:17.652
  STEP: Ensuring resource quota status released the pod usage @ 06/01/24 12:20:17.665
  Jun  1 12:20:19.671: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1473" for this suite. @ 06/01/24 12:20:19.675
â€¢ [16.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 06/01/24 12:20:19.683
  Jun  1 12:20:19.683: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename disruption @ 06/01/24 12:20:19.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:20:19.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:20:19.701
  STEP: Waiting for the pdb to be processed @ 06/01/24 12:20:19.708
  STEP: Waiting for all pods to be running @ 06/01/24 12:20:21.733
  Jun  1 12:20:21.740: INFO: running pods: 0 < 3
  Jun  1 12:20:23.740: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5863" for this suite. @ 06/01/24 12:20:23.744
â€¢ [4.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 06/01/24 12:20:23.751
  Jun  1 12:20:23.751: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename downward-api @ 06/01/24 12:20:23.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:20:23.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:20:23.77
  STEP: Creating the pod @ 06/01/24 12:20:23.773
  Jun  1 12:20:26.313: INFO: Successfully updated pod "labelsupdate022b980f-f486-407f-9774-180ed2450c1d"
  Jun  1 12:20:30.334: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6992" for this suite. @ 06/01/24 12:20:30.337
â€¢ [6.594 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:447
  STEP: Creating a kubernetes client @ 06/01/24 12:20:30.344
  Jun  1 12:20:30.344: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename sched-pred @ 06/01/24 12:20:30.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:20:30.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:20:30.363
  Jun  1 12:20:30.365: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jun  1 12:20:30.372: INFO: Waiting for terminating namespaces to be deleted...
  Jun  1 12:20:30.375: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-17-129 before test
  Jun  1 12:20:30.380: INFO: nginx-ingress-controller-kubernetes-worker-k4zlz from ingress-nginx-kubernetes-worker started at 2024-06-01 12:06:08 +0000 UTC (1 container statuses recorded)
  Jun  1 12:20:30.380: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 1
  Jun  1 12:20:30.380: INFO: calico-node-zwmhv from kube-system started at 2024-06-01 12:14:42 +0000 UTC (1 container statuses recorded)
  Jun  1 12:20:30.380: INFO: 	Container calico-node ready: true, restart count 0
  Jun  1 12:20:30.380: INFO: coredns-bddfd76d7-7mj9q from kube-system started at 2024-06-01 12:06:08 +0000 UTC (1 container statuses recorded)
  Jun  1 12:20:30.380: INFO: 	Container coredns ready: true, restart count 0
  Jun  1 12:20:30.380: INFO: kube-state-metrics-6f48cdd76-llxcr from kube-system started at 2024-06-01 12:06:08 +0000 UTC (1 container statuses recorded)
  Jun  1 12:20:30.380: INFO: 	Container kube-state-metrics ready: true, restart count 6
  Jun  1 12:20:30.380: INFO: metrics-server-v0.6.3-69d7fbfdf8-ggp9k from kube-system started at 2024-06-01 12:06:08 +0000 UTC (2 container statuses recorded)
  Jun  1 12:20:30.380: INFO: 	Container metrics-server ready: true, restart count 4
  Jun  1 12:20:30.380: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Jun  1 12:20:30.380: INFO: dashboard-metrics-scraper-5dd7cb5fc-chxdj from kubernetes-dashboard started at 2024-06-01 12:06:08 +0000 UTC (1 container statuses recorded)
  Jun  1 12:20:30.380: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Jun  1 12:20:30.380: INFO: kubernetes-dashboard-7b899cb9d9-6z8mc from kubernetes-dashboard started at 2024-06-01 12:06:08 +0000 UTC (1 container statuses recorded)
  Jun  1 12:20:30.380: INFO: 	Container kubernetes-dashboard ready: true, restart count 4
  Jun  1 12:20:30.380: INFO: sonobuoy-systemd-logs-daemon-set-6b74001505cc4012-w6grx from sonobuoy started at 2024-06-01 12:18:35 +0000 UTC (2 container statuses recorded)
  Jun  1 12:20:30.380: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  1 12:20:30.380: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun  1 12:20:30.380: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-74-111 before test
  Jun  1 12:20:30.386: INFO: labelsupdate022b980f-f486-407f-9774-180ed2450c1d from downward-api-6992 started at 2024-06-01 12:20:23 +0000 UTC (1 container statuses recorded)
  Jun  1 12:20:30.386: INFO: 	Container client-container ready: true, restart count 0
  Jun  1 12:20:30.386: INFO: nginx-ingress-controller-kubernetes-worker-22ds2 from ingress-nginx-kubernetes-worker started at 2024-06-01 12:12:32 +0000 UTC (1 container statuses recorded)
  Jun  1 12:20:30.386: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jun  1 12:20:30.386: INFO: calico-node-x7lqm from kube-system started at 2024-06-01 12:16:31 +0000 UTC (1 container statuses recorded)
  Jun  1 12:20:30.386: INFO: 	Container calico-node ready: true, restart count 0
  Jun  1 12:20:30.386: INFO: sonobuoy from sonobuoy started at 2024-06-01 12:18:33 +0000 UTC (1 container statuses recorded)
  Jun  1 12:20:30.386: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jun  1 12:20:30.386: INFO: sonobuoy-systemd-logs-daemon-set-6b74001505cc4012-t4fhp from sonobuoy started at 2024-06-01 12:18:35 +0000 UTC (2 container statuses recorded)
  Jun  1 12:20:30.386: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  1 12:20:30.386: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun  1 12:20:30.386: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-80-202 before test
  Jun  1 12:20:30.391: INFO: nginx-ingress-controller-kubernetes-worker-8v98c from ingress-nginx-kubernetes-worker started at 2024-06-01 12:15:51 +0000 UTC (1 container statuses recorded)
  Jun  1 12:20:30.391: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jun  1 12:20:30.391: INFO: calico-node-lr4nv from kube-system started at 2024-06-01 12:16:31 +0000 UTC (1 container statuses recorded)
  Jun  1 12:20:30.391: INFO: 	Container calico-node ready: true, restart count 0
  Jun  1 12:20:30.391: INFO: sonobuoy-e2e-job-65c4f8adab634956 from sonobuoy started at 2024-06-01 12:18:35 +0000 UTC (2 container statuses recorded)
  Jun  1 12:20:30.391: INFO: 	Container e2e ready: true, restart count 0
  Jun  1 12:20:30.391: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  1 12:20:30.391: INFO: sonobuoy-systemd-logs-daemon-set-6b74001505cc4012-pwg5w from sonobuoy started at 2024-06-01 12:18:35 +0000 UTC (2 container statuses recorded)
  Jun  1 12:20:30.391: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  1 12:20:30.391: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 06/01/24 12:20:30.391
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17d4e0b60b173069], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.] @ 06/01/24 12:20:30.414
  Jun  1 12:20:31.414: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3546" for this suite. @ 06/01/24 12:20:31.417
â€¢ [1.079 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 06/01/24 12:20:31.424
  Jun  1 12:20:31.424: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename taint-single-pod @ 06/01/24 12:20:31.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:20:31.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:20:31.448
  Jun  1 12:20:31.450: INFO: Waiting up to 1m0s for all nodes to be ready
  Jun  1 12:21:31.451: INFO: Waiting for terminating namespaces to be deleted...
  Jun  1 12:21:31.456: INFO: Starting informer...
  STEP: Starting pod... @ 06/01/24 12:21:31.456
  Jun  1 12:21:31.670: INFO: Pod is running on ip-172-31-74-111. Tainting Node
  STEP: Trying to apply a taint on the Node @ 06/01/24 12:21:31.67
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/01/24 12:21:31.681
  STEP: Waiting short time to make sure Pod is queued for deletion @ 06/01/24 12:21:31.684
  Jun  1 12:21:31.684: INFO: Pod wasn't evicted. Proceeding
  Jun  1 12:21:31.684: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/01/24 12:21:31.693
  STEP: Waiting some time to make sure that toleration time passed. @ 06/01/24 12:21:31.7
  Jun  1 12:22:46.701: INFO: Pod wasn't evicted. Test successful
  Jun  1 12:22:46.701: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-1411" for this suite. @ 06/01/24 12:22:46.705
â€¢ [135.288 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 06/01/24 12:22:46.713
  Jun  1 12:22:46.713: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename disruption @ 06/01/24 12:22:46.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:22:46.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:22:46.731
  STEP: Waiting for the pdb to be processed @ 06/01/24 12:22:46.737
  STEP: Updating PodDisruptionBudget status @ 06/01/24 12:22:48.741
  STEP: Waiting for all pods to be running @ 06/01/24 12:22:48.749
  Jun  1 12:22:48.752: INFO: running pods: 0 < 1
  STEP: locating a running pod @ 06/01/24 12:22:50.753
  STEP: Waiting for the pdb to be processed @ 06/01/24 12:22:50.766
  STEP: Patching PodDisruptionBudget status @ 06/01/24 12:22:50.773
  STEP: Waiting for the pdb to be processed @ 06/01/24 12:22:50.781
  Jun  1 12:22:50.784: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2853" for this suite. @ 06/01/24 12:22:50.787
â€¢ [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:558
  STEP: Creating a kubernetes client @ 06/01/24 12:22:50.795
  Jun  1 12:22:50.795: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename ingress @ 06/01/24 12:22:50.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:22:50.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:22:50.817
  STEP: getting /apis @ 06/01/24 12:22:50.82
  STEP: getting /apis/networking.k8s.io @ 06/01/24 12:22:50.823
  STEP: getting /apis/networking.k8s.iov1 @ 06/01/24 12:22:50.824
  STEP: creating @ 06/01/24 12:22:50.825
  STEP: getting @ 06/01/24 12:22:50.843
  STEP: listing @ 06/01/24 12:22:50.848
  STEP: watching @ 06/01/24 12:22:50.851
  Jun  1 12:22:50.852: INFO: starting watch
  STEP: cluster-wide listing @ 06/01/24 12:22:50.854
  STEP: cluster-wide watching @ 06/01/24 12:22:50.857
  Jun  1 12:22:50.857: INFO: starting watch
  STEP: patching @ 06/01/24 12:22:50.858
  STEP: updating @ 06/01/24 12:22:50.864
  Jun  1 12:22:50.872: INFO: waiting for watch events with expected annotations
  Jun  1 12:22:50.872: INFO: saw patched and updated annotations
  STEP: patching /status @ 06/01/24 12:22:50.872
  STEP: updating /status @ 06/01/24 12:22:50.881
  STEP: get /status @ 06/01/24 12:22:50.89
  STEP: deleting @ 06/01/24 12:22:50.894
  STEP: deleting a collection @ 06/01/24 12:22:50.917
  Jun  1 12:22:50.933: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-2453" for this suite. @ 06/01/24 12:22:50.936
â€¢ [0.150 seconds]
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:170
  STEP: Creating a kubernetes client @ 06/01/24 12:22:50.945
  Jun  1 12:22:50.945: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename configmap @ 06/01/24 12:22:50.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:22:50.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:22:50.968
  STEP: creating a ConfigMap @ 06/01/24 12:22:50.97
  STEP: fetching the ConfigMap @ 06/01/24 12:22:50.974
  STEP: patching the ConfigMap @ 06/01/24 12:22:50.977
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 06/01/24 12:22:50.983
  STEP: deleting the ConfigMap by collection with a label selector @ 06/01/24 12:22:50.986
  STEP: listing all ConfigMaps in test namespace @ 06/01/24 12:22:50.995
  Jun  1 12:22:50.997: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-703" for this suite. @ 06/01/24 12:22:50.999
â€¢ [0.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 06/01/24 12:22:51.007
  Jun  1 12:22:51.007: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename emptydir @ 06/01/24 12:22:51.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:22:51.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:22:51.024
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 06/01/24 12:22:51.026
  STEP: Saw pod success @ 06/01/24 12:22:57.05
  Jun  1 12:22:57.053: INFO: Trying to get logs from node ip-172-31-80-202 pod pod-a7ec99ab-5725-4644-818a-23c4d69b7a7a container test-container: <nil>
  STEP: delete the pod @ 06/01/24 12:22:57.068
  Jun  1 12:22:57.085: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8235" for this suite. @ 06/01/24 12:22:57.088
â€¢ [6.088 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:902
  STEP: Creating a kubernetes client @ 06/01/24 12:22:57.096
  Jun  1 12:22:57.096: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename statefulset @ 06/01/24 12:22:57.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:22:57.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:22:57.116
  STEP: Creating service test in namespace statefulset-4726 @ 06/01/24 12:22:57.118
  STEP: Creating statefulset ss in namespace statefulset-4726 @ 06/01/24 12:22:57.122
  Jun  1 12:22:57.131: INFO: Found 0 stateful pods, waiting for 1
  Jun  1 12:23:07.136: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 06/01/24 12:23:07.142
  STEP: updating a scale subresource @ 06/01/24 12:23:07.144
  STEP: verifying the statefulset Spec.Replicas was modified @ 06/01/24 12:23:07.151
  STEP: Patch a scale subresource @ 06/01/24 12:23:07.154
  STEP: verifying the statefulset Spec.Replicas was modified @ 06/01/24 12:23:07.16
  Jun  1 12:23:07.164: INFO: Deleting all statefulset in ns statefulset-4726
  Jun  1 12:23:07.170: INFO: Scaling statefulset ss to 0
  Jun  1 12:23:17.184: INFO: Waiting for statefulset status.replicas updated to 0
  Jun  1 12:23:17.187: INFO: Deleting statefulset ss
  Jun  1 12:23:17.202: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4726" for this suite. @ 06/01/24 12:23:17.205
â€¢ [20.119 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 06/01/24 12:23:17.215
  Jun  1 12:23:17.215: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename dns @ 06/01/24 12:23:17.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:23:17.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:23:17.235
  STEP: Creating a test headless service @ 06/01/24 12:23:17.237
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-8208.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-8208.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 06/01/24 12:23:17.242
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-8208.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-8208.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 06/01/24 12:23:17.242
  STEP: creating a pod to probe DNS @ 06/01/24 12:23:17.242
  STEP: submitting the pod to kubernetes @ 06/01/24 12:23:17.242
  STEP: retrieving the pod @ 06/01/24 12:23:23.273
  STEP: looking for the results for each expected name from probers @ 06/01/24 12:23:23.277
  Jun  1 12:23:23.294: INFO: DNS probes using dns-8208/dns-test-ba0a6c14-a1d3-4e7c-81ba-01fd201b50ef succeeded

  STEP: deleting the pod @ 06/01/24 12:23:23.294
  STEP: deleting the test headless service @ 06/01/24 12:23:23.311
  Jun  1 12:23:23.321: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8208" for this suite. @ 06/01/24 12:23:23.326
â€¢ [6.117 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 06/01/24 12:23:23.332
  Jun  1 12:23:23.332: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename discovery @ 06/01/24 12:23:23.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:23:23.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:23:23.349
  STEP: Setting up server cert @ 06/01/24 12:23:23.353
  STEP: Requesting APIResourceList from "/api/v1" @ 06/01/24 12:23:23.526
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 06/01/24 12:23:23.528
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 06/01/24 12:23:23.529
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 06/01/24 12:23:23.53
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 06/01/24 12:23:23.531
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 06/01/24 12:23:23.532
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 06/01/24 12:23:23.533
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 06/01/24 12:23:23.533
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 06/01/24 12:23:23.534
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 06/01/24 12:23:23.535
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 06/01/24 12:23:23.536
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 06/01/24 12:23:23.537
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 06/01/24 12:23:23.538
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 06/01/24 12:23:23.539
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 06/01/24 12:23:23.539
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 06/01/24 12:23:23.54
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 06/01/24 12:23:23.541
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 06/01/24 12:23:23.542
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 06/01/24 12:23:23.543
  Jun  1 12:23:23.544: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-5946" for this suite. @ 06/01/24 12:23:23.547
â€¢ [0.222 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 06/01/24 12:23:23.554
  Jun  1 12:23:23.554: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename containers @ 06/01/24 12:23:23.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:23:23.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:23:23.574
  STEP: Creating a pod to test override all @ 06/01/24 12:23:23.576
  STEP: Saw pod success @ 06/01/24 12:23:29.603
  Jun  1 12:23:29.607: INFO: Trying to get logs from node ip-172-31-74-111 pod client-containers-7afe4dc1-6e3e-4c9b-8b2a-fbbd7667e3ce container agnhost-container: <nil>
  STEP: delete the pod @ 06/01/24 12:23:29.615
  Jun  1 12:23:29.633: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9900" for this suite. @ 06/01/24 12:23:29.637
â€¢ [6.091 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 06/01/24 12:23:29.645
  Jun  1 12:23:29.645: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename daemonsets @ 06/01/24 12:23:29.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:23:29.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:23:29.664
  Jun  1 12:23:29.682: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 06/01/24 12:23:29.689
  Jun  1 12:23:29.693: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  1 12:23:29.693: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 06/01/24 12:23:29.693
  Jun  1 12:23:29.711: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  1 12:23:29.711: INFO: Node ip-172-31-17-129 is running 0 daemon pod, expected 1
  Jun  1 12:23:30.711: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  1 12:23:30.711: INFO: Node ip-172-31-17-129 is running 0 daemon pod, expected 1
  Jun  1 12:23:31.713: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun  1 12:23:31.713: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 06/01/24 12:23:31.717
  Jun  1 12:23:31.730: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun  1 12:23:31.730: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  Jun  1 12:23:32.732: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  1 12:23:32.732: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 06/01/24 12:23:32.732
  Jun  1 12:23:32.744: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  1 12:23:32.745: INFO: Node ip-172-31-17-129 is running 0 daemon pod, expected 1
  Jun  1 12:23:33.746: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  1 12:23:33.746: INFO: Node ip-172-31-17-129 is running 0 daemon pod, expected 1
  Jun  1 12:23:34.745: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun  1 12:23:34.745: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 06/01/24 12:23:34.752
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8318, will wait for the garbage collector to delete the pods @ 06/01/24 12:23:34.752
  Jun  1 12:23:34.811: INFO: Deleting DaemonSet.extensions daemon-set took: 6.100418ms
  Jun  1 12:23:34.911: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.300681ms
  Jun  1 12:23:36.316: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  1 12:23:36.316: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun  1 12:23:36.320: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"7949"},"items":null}

  Jun  1 12:23:36.322: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"7949"},"items":null}

  Jun  1 12:23:36.345: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8318" for this suite. @ 06/01/24 12:23:36.349
â€¢ [6.709 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3129
  STEP: Creating a kubernetes client @ 06/01/24 12:23:36.354
  Jun  1 12:23:36.354: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename services @ 06/01/24 12:23:36.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:23:36.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:23:36.373
  STEP: fetching services @ 06/01/24 12:23:36.375
  Jun  1 12:23:36.379: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4008" for this suite. @ 06/01/24 12:23:36.382
â€¢ [0.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 06/01/24 12:23:36.388
  Jun  1 12:23:36.388: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename projected @ 06/01/24 12:23:36.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:23:36.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:23:36.409
  STEP: Creating configMap with name projected-configmap-test-volume-map-28d40b15-f08b-4bca-9e88-f29fbb2e6373 @ 06/01/24 12:23:36.411
  STEP: Creating a pod to test consume configMaps @ 06/01/24 12:23:36.415
  STEP: Saw pod success @ 06/01/24 12:23:40.441
  Jun  1 12:23:40.445: INFO: Trying to get logs from node ip-172-31-74-111 pod pod-projected-configmaps-6497239e-98d1-4baf-a536-d94cee9bb842 container agnhost-container: <nil>
  STEP: delete the pod @ 06/01/24 12:23:40.451
  Jun  1 12:23:40.464: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3608" for this suite. @ 06/01/24 12:23:40.467
â€¢ [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 06/01/24 12:23:40.474
  Jun  1 12:23:40.474: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename deployment @ 06/01/24 12:23:40.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:23:40.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:23:40.492
  Jun  1 12:23:40.495: INFO: Creating simple deployment test-new-deployment
  Jun  1 12:23:40.510: INFO: deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 06/01/24 12:23:42.525
  STEP: updating a scale subresource @ 06/01/24 12:23:42.528
  STEP: verifying the deployment Spec.Replicas was modified @ 06/01/24 12:23:42.534
  STEP: Patch a scale subresource @ 06/01/24 12:23:42.537
  Jun  1 12:23:42.557: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-230",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "632360a7-ebad-4ab9-af2a-76e09381549d",
      ResourceVersion: (string) (len=4) "8049",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852841420,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun  1 12:23:42.564: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-230",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "13721d66-824d-436b-9d52-c41cfa310d75",
      ResourceVersion: (string) (len=4) "8053",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852841420,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "632360a7-ebad-4ab9-af2a-76e09381549d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 33 32 33 36 30  61 37 2d 65 62 61 64 2d  |\"632360a7-ebad-|
              00000120  34 61 62 39 2d 61 66 32  61 2d 37 36 65 30 39 33  |4ab9-af2a-76e093|
              00000130  38 31 35 34 39 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |81549d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun  1 12:23:42.573: INFO: Pod "test-new-deployment-557759b7c7-8d8t4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-8d8t4",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-230",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4daf96f3-143d-4877-91c8-a9403c818a62",
      ResourceVersion: (string) (len=4) "8027",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852841420,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "13721d66-824d-436b-9d52-c41cfa310d75",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 33  37 32 31 64 36 36 2d 38  |d\":\"13721d66-8|
              00000090  32 34 64 2d 34 33 36 62  2d 39 64 35 32 2d 63 34  |24d-436b-9d52-c4|
              000000a0  31 63 66 61 33 31 30 64  37 35 5c 22 7d 22 3a 7b  |1cfa310d75\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 31  38 2e 31 34 38 5c 22 7d  |2.168.118.148\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jsj4j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jsj4j",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-74-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841420,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.74.111",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.74.111"
        }
      },
      PodIP: (string) (len=15) "192.168.118.148",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.118.148"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852841420,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852841421,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://20add428b697ab8ea8ed9faac7f798a3c3d56d3a5745c851e9902b7fe40696fa",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  1 12:23:42.575: INFO: Pod "test-new-deployment-557759b7c7-vbkpr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-vbkpr",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-230",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b4cc554d-38e1-4fa0-9e16-986b6ea482cd",
      ResourceVersion: (string) (len=4) "8054",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852841422,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "13721d66-824d-436b-9d52-c41cfa310d75",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 33  37 32 31 64 36 36 2d 38  |d\":\"13721d66-8|
              00000090  32 34 64 2d 34 33 36 62  2d 39 64 35 32 2d 63 34  |24d-436b-9d52-c4|
              000000a0  31 63 66 61 33 31 30 64  37 35 5c 22 7d 22 3a 7b  |1cfa310d75\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fgx6l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fgx6l",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-80-202",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  1 12:23:42.577: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-230" for this suite. @ 06/01/24 12:23:42.58
â€¢ [2.122 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 06/01/24 12:23:42.596
  Jun  1 12:23:42.596: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename emptydir-wrapper @ 06/01/24 12:23:42.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:23:42.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:23:42.629
  STEP: Cleaning up the secret @ 06/01/24 12:23:44.66
  STEP: Cleaning up the configmap @ 06/01/24 12:23:44.666
  STEP: Cleaning up the pod @ 06/01/24 12:23:44.672
  Jun  1 12:23:44.683: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-4810" for this suite. @ 06/01/24 12:23:44.686
â€¢ [2.096 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 06/01/24 12:23:44.692
  Jun  1 12:23:44.692: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename csiinlinevolumes @ 06/01/24 12:23:44.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:23:44.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:23:44.711
  STEP: Creating two CSIDrivers @ 06/01/24 12:23:44.713
  STEP: Getting "inline-driver-54917536-1421-460d-ba08-c081f8136ce3" & "inline-driver-4a09018a-6085-40a4-a0a6-cb6639933743" @ 06/01/24 12:23:44.727
  STEP: Patching the CSIDriver "inline-driver-4a09018a-6085-40a4-a0a6-cb6639933743" @ 06/01/24 12:23:44.732
  STEP: Updating the CSIDriver "inline-driver-4a09018a-6085-40a4-a0a6-cb6639933743" @ 06/01/24 12:23:44.739
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-6993" @ 06/01/24 12:23:44.749
  STEP: Deleting CSIDriver "inline-driver-54917536-1421-460d-ba08-c081f8136ce3" @ 06/01/24 12:23:44.752
  STEP: Confirm deletion of CSIDriver "inline-driver-54917536-1421-460d-ba08-c081f8136ce3" @ 06/01/24 12:23:44.759
  STEP: Deleting CSIDriver "inline-driver-4a09018a-6085-40a4-a0a6-cb6639933743" via DeleteCollection @ 06/01/24 12:23:44.762
  STEP: Confirm deletion of CSIDriver "inline-driver-4a09018a-6085-40a4-a0a6-cb6639933743" @ 06/01/24 12:23:44.77
  Jun  1 12:23:44.772: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-6993" for this suite. @ 06/01/24 12:23:44.776
â€¢ [0.091 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 06/01/24 12:23:44.783
  Jun  1 12:23:44.783: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename downward-api @ 06/01/24 12:23:44.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:23:44.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:23:44.801
  STEP: Creating a pod to test downward api env vars @ 06/01/24 12:23:44.804
  STEP: Saw pod success @ 06/01/24 12:23:46.821
  Jun  1 12:23:46.825: INFO: Trying to get logs from node ip-172-31-74-111 pod downward-api-8b646c83-ee6d-4005-a7e2-7e23f7d75e8d container dapi-container: <nil>
  STEP: delete the pod @ 06/01/24 12:23:46.832
  Jun  1 12:23:46.845: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8944" for this suite. @ 06/01/24 12:23:46.848
â€¢ [2.070 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 06/01/24 12:23:46.853
  Jun  1 12:23:46.853: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename pods @ 06/01/24 12:23:46.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:23:46.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:23:46.874
  STEP: creating the pod @ 06/01/24 12:23:46.876
  STEP: submitting the pod to kubernetes @ 06/01/24 12:23:46.876
  STEP: verifying QOS class is set on the pod @ 06/01/24 12:23:46.885
  Jun  1 12:23:46.891: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1109" for this suite. @ 06/01/24 12:23:46.895
â€¢ [0.047 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 06/01/24 12:23:46.901
  Jun  1 12:23:46.901: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename downward-api @ 06/01/24 12:23:46.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:23:46.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:23:46.921
  STEP: Creating a pod to test downward API volume plugin @ 06/01/24 12:23:46.923
  STEP: Saw pod success @ 06/01/24 12:23:50.943
  Jun  1 12:23:50.946: INFO: Trying to get logs from node ip-172-31-74-111 pod downwardapi-volume-6261f0d1-cf0c-47ca-a3ba-a42513f9a715 container client-container: <nil>
  STEP: delete the pod @ 06/01/24 12:23:50.951
  Jun  1 12:23:50.967: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2760" for this suite. @ 06/01/24 12:23:50.971
â€¢ [4.077 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 06/01/24 12:23:50.978
  Jun  1 12:23:50.978: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename events @ 06/01/24 12:23:50.978
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:23:50.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:23:50.997
  STEP: creating a test event @ 06/01/24 12:23:51.002
  STEP: listing all events in all namespaces @ 06/01/24 12:23:51.009
  STEP: patching the test event @ 06/01/24 12:23:51.02
  STEP: fetching the test event @ 06/01/24 12:23:51.026
  STEP: updating the test event @ 06/01/24 12:23:51.029
  STEP: getting the test event @ 06/01/24 12:23:51.039
  STEP: deleting the test event @ 06/01/24 12:23:51.041
  STEP: listing all events in all namespaces @ 06/01/24 12:23:51.048
  Jun  1 12:23:51.064: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1094" for this suite. @ 06/01/24 12:23:51.068
â€¢ [0.097 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 06/01/24 12:23:51.075
  Jun  1 12:23:51.075: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename downward-api @ 06/01/24 12:23:51.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:23:51.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:23:51.096
  STEP: Creating a pod to test downward API volume plugin @ 06/01/24 12:23:51.098
  STEP: Saw pod success @ 06/01/24 12:23:55.121
  Jun  1 12:23:55.124: INFO: Trying to get logs from node ip-172-31-74-111 pod downwardapi-volume-a72daa6d-6487-4e6f-a0ea-1330cf842aa2 container client-container: <nil>
  STEP: delete the pod @ 06/01/24 12:23:55.131
  Jun  1 12:23:55.148: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2841" for this suite. @ 06/01/24 12:23:55.154
â€¢ [4.085 seconds]
------------------------------
SS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 06/01/24 12:23:55.161
  Jun  1 12:23:55.161: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename csiinlinevolumes @ 06/01/24 12:23:55.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:23:55.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:23:55.184
  STEP: creating @ 06/01/24 12:23:55.187
  STEP: getting @ 06/01/24 12:23:55.215
  STEP: listing in namespace @ 06/01/24 12:23:55.22
  STEP: patching @ 06/01/24 12:23:55.223
  STEP: deleting @ 06/01/24 12:23:55.229
  Jun  1 12:23:55.239: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-4774" for this suite. @ 06/01/24 12:23:55.245
â€¢ [0.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 06/01/24 12:23:55.252
  Jun  1 12:23:55.252: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/01/24 12:23:55.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:23:55.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:23:55.271
  STEP: set up a multi version CRD @ 06/01/24 12:23:55.273
  Jun  1 12:23:55.274: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: rename a version @ 06/01/24 12:23:58.526
  STEP: check the new version name is served @ 06/01/24 12:23:58.537
  STEP: check the old version name is removed @ 06/01/24 12:23:59.317
  STEP: check the other version is not changed @ 06/01/24 12:23:59.912
  Jun  1 12:24:02.428: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5720" for this suite. @ 06/01/24 12:24:02.434
â€¢ [7.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 06/01/24 12:24:02.44
  Jun  1 12:24:02.440: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename pods @ 06/01/24 12:24:02.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:24:02.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:24:02.464
  STEP: creating the pod @ 06/01/24 12:24:02.466
  STEP: submitting the pod to kubernetes @ 06/01/24 12:24:02.466
  W0601 12:24:02.474695      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 06/01/24 12:24:04.486
  STEP: updating the pod @ 06/01/24 12:24:04.489
  Jun  1 12:24:05.008: INFO: Successfully updated pod "pod-update-activedeadlineseconds-d38c07ec-cd26-4c14-87ee-c0974e459b26"
  Jun  1 12:24:09.022: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4169" for this suite. @ 06/01/24 12:24:09.026
â€¢ [6.592 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 06/01/24 12:24:09.033
  Jun  1 12:24:09.033: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename projected @ 06/01/24 12:24:09.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:24:09.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:24:09.05
  STEP: Creating a pod to test downward API volume plugin @ 06/01/24 12:24:09.052
  STEP: Saw pod success @ 06/01/24 12:24:13.073
  Jun  1 12:24:13.076: INFO: Trying to get logs from node ip-172-31-74-111 pod downwardapi-volume-20776c80-96af-4c2d-9e61-c89604cb3e8a container client-container: <nil>
  STEP: delete the pod @ 06/01/24 12:24:13.082
  Jun  1 12:24:13.095: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3796" for this suite. @ 06/01/24 12:24:13.099
â€¢ [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 06/01/24 12:24:13.107
  Jun  1 12:24:13.107: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/01/24 12:24:13.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:24:13.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:24:13.126
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 06/01/24 12:24:13.128
  Jun  1 12:24:13.129: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 06/01/24 12:24:18.16
  Jun  1 12:24:18.160: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 12:24:19.418: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 12:24:24.345: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1133" for this suite. @ 06/01/24 12:24:24.352
â€¢ [11.253 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 06/01/24 12:24:24.36
  Jun  1 12:24:24.360: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename resourcequota @ 06/01/24 12:24:24.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:24:24.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:24:24.377
  STEP: Creating a ResourceQuota with terminating scope @ 06/01/24 12:24:24.379
  STEP: Ensuring ResourceQuota status is calculated @ 06/01/24 12:24:24.384
  STEP: Creating a ResourceQuota with not terminating scope @ 06/01/24 12:24:26.388
  STEP: Ensuring ResourceQuota status is calculated @ 06/01/24 12:24:26.396
  STEP: Creating a long running pod @ 06/01/24 12:24:28.401
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 06/01/24 12:24:28.414
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 06/01/24 12:24:30.42
  STEP: Deleting the pod @ 06/01/24 12:24:32.425
  STEP: Ensuring resource quota status released the pod usage @ 06/01/24 12:24:32.436
  STEP: Creating a terminating pod @ 06/01/24 12:24:34.44
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 06/01/24 12:24:34.453
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 06/01/24 12:24:36.458
  STEP: Deleting the pod @ 06/01/24 12:24:38.462
  STEP: Ensuring resource quota status released the pod usage @ 06/01/24 12:24:38.48
  Jun  1 12:24:40.487: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4345" for this suite. @ 06/01/24 12:24:40.49
â€¢ [16.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:169
  STEP: Creating a kubernetes client @ 06/01/24 12:24:40.5
  Jun  1 12:24:40.500: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/01/24 12:24:40.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:24:40.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:24:40.519
  STEP: create the container to handle the HTTPGet hook request. @ 06/01/24 12:24:40.526
  STEP: create the pod with lifecycle hook @ 06/01/24 12:24:44.55
  STEP: check poststart hook @ 06/01/24 12:24:46.566
  STEP: delete the pod with lifecycle hook @ 06/01/24 12:24:46.582
  Jun  1 12:24:48.597: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7016" for this suite. @ 06/01/24 12:24:48.6
â€¢ [8.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 06/01/24 12:24:48.607
  Jun  1 12:24:48.607: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename daemonsets @ 06/01/24 12:24:48.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:24:48.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:24:48.628
  Jun  1 12:24:48.650: INFO: Create a RollingUpdate DaemonSet
  Jun  1 12:24:48.655: INFO: Check that daemon pods launch on every node of the cluster
  Jun  1 12:24:48.658: INFO: DaemonSet pods can't tolerate node ip-172-31-13-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 12:24:48.658: INFO: DaemonSet pods can't tolerate node ip-172-31-68-201 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 12:24:48.661: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  1 12:24:48.661: INFO: Node ip-172-31-17-129 is running 0 daemon pod, expected 1
  Jun  1 12:24:49.660: INFO: DaemonSet pods can't tolerate node ip-172-31-13-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 12:24:49.660: INFO: DaemonSet pods can't tolerate node ip-172-31-68-201 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 12:24:49.662: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun  1 12:24:49.662: INFO: Node ip-172-31-80-202 is running 0 daemon pod, expected 1
  Jun  1 12:24:50.660: INFO: DaemonSet pods can't tolerate node ip-172-31-13-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 12:24:50.660: INFO: DaemonSet pods can't tolerate node ip-172-31-68-201 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 12:24:50.664: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun  1 12:24:50.664: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  Jun  1 12:24:50.664: INFO: Update the DaemonSet to trigger a rollout
  Jun  1 12:24:50.673: INFO: Updating DaemonSet daemon-set
  Jun  1 12:24:51.686: INFO: Roll back the DaemonSet before rollout is complete
  Jun  1 12:24:51.697: INFO: Updating DaemonSet daemon-set
  Jun  1 12:24:51.697: INFO: Make sure DaemonSet rollback is complete
  Jun  1 12:24:51.701: INFO: Wrong image for pod: daemon-set-j78g9. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Jun  1 12:24:51.701: INFO: Pod daemon-set-j78g9 is not available
  Jun  1 12:24:51.705: INFO: DaemonSet pods can't tolerate node ip-172-31-13-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 12:24:51.705: INFO: DaemonSet pods can't tolerate node ip-172-31-68-201 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 12:24:52.707: INFO: DaemonSet pods can't tolerate node ip-172-31-13-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 12:24:52.707: INFO: DaemonSet pods can't tolerate node ip-172-31-68-201 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 12:24:53.701: INFO: Pod daemon-set-9t9cg is not available
  Jun  1 12:24:53.705: INFO: DaemonSet pods can't tolerate node ip-172-31-13-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 12:24:53.705: INFO: DaemonSet pods can't tolerate node ip-172-31-68-201 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 06/01/24 12:24:53.711
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-403, will wait for the garbage collector to delete the pods @ 06/01/24 12:24:53.711
  Jun  1 12:24:53.769: INFO: Deleting DaemonSet.extensions daemon-set took: 6.26237ms
  Jun  1 12:24:53.870: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.785676ms
  Jun  1 12:24:55.375: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  1 12:24:55.375: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun  1 12:24:55.378: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"8847"},"items":null}

  Jun  1 12:24:55.380: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"8847"},"items":null}

  Jun  1 12:24:55.393: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-403" for this suite. @ 06/01/24 12:24:55.397
â€¢ [6.798 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 06/01/24 12:24:55.406
  Jun  1 12:24:55.406: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename replication-controller @ 06/01/24 12:24:55.407
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:24:55.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:24:55.425
  Jun  1 12:24:55.427: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 06/01/24 12:24:56.44
  STEP: Checking rc "condition-test" has the desired failure condition set @ 06/01/24 12:24:56.447
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 06/01/24 12:24:57.453
  Jun  1 12:24:57.464: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 06/01/24 12:24:57.464
  Jun  1 12:24:58.471: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2531" for this suite. @ 06/01/24 12:24:58.475
â€¢ [3.076 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 06/01/24 12:24:58.482
  Jun  1 12:24:58.482: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename pod-network-test @ 06/01/24 12:24:58.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:24:58.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:24:58.502
  STEP: Performing setup for networking test in namespace pod-network-test-7176 @ 06/01/24 12:24:58.504
  STEP: creating a selector @ 06/01/24 12:24:58.504
  STEP: Creating the service pods in kubernetes @ 06/01/24 12:24:58.504
  Jun  1 12:24:58.504: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 06/01/24 12:25:20.61
  Jun  1 12:25:22.624: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jun  1 12:25:22.624: INFO: Breadth first check of 192.168.86.78 on host 172.31.17.129...
  Jun  1 12:25:22.628: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.118.158:9080/dial?request=hostname&protocol=http&host=192.168.86.78&port=8083&tries=1'] Namespace:pod-network-test-7176 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  1 12:25:22.628: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 12:25:22.629: INFO: ExecWithOptions: Clientset creation
  Jun  1 12:25:22.629: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7176/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.118.158%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.86.78%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun  1 12:25:22.686: INFO: Waiting for responses: map[]
  Jun  1 12:25:22.686: INFO: reached 192.168.86.78 after 0/1 tries
  Jun  1 12:25:22.686: INFO: Breadth first check of 192.168.118.157 on host 172.31.74.111...
  Jun  1 12:25:22.689: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.118.158:9080/dial?request=hostname&protocol=http&host=192.168.118.157&port=8083&tries=1'] Namespace:pod-network-test-7176 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  1 12:25:22.689: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 12:25:22.689: INFO: ExecWithOptions: Clientset creation
  Jun  1 12:25:22.689: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7176/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.118.158%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.118.157%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun  1 12:25:22.723: INFO: Waiting for responses: map[]
  Jun  1 12:25:22.723: INFO: reached 192.168.118.157 after 0/1 tries
  Jun  1 12:25:22.723: INFO: Breadth first check of 192.168.126.73 on host 172.31.80.202...
  Jun  1 12:25:22.727: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.118.158:9080/dial?request=hostname&protocol=http&host=192.168.126.73&port=8083&tries=1'] Namespace:pod-network-test-7176 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  1 12:25:22.727: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 12:25:22.727: INFO: ExecWithOptions: Clientset creation
  Jun  1 12:25:22.727: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7176/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.118.158%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.126.73%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun  1 12:25:22.776: INFO: Waiting for responses: map[]
  Jun  1 12:25:22.776: INFO: reached 192.168.126.73 after 0/1 tries
  Jun  1 12:25:22.776: INFO: Going to retry 0 out of 3 pods....
  Jun  1 12:25:22.776: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7176" for this suite. @ 06/01/24 12:25:22.781
â€¢ [24.307 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 06/01/24 12:25:22.789
  Jun  1 12:25:22.789: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename configmap @ 06/01/24 12:25:22.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:25:22.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:25:22.809
  STEP: Creating configMap with name configmap-test-volume-map-7dc40257-ccca-49fa-9a71-2ee4e1e47273 @ 06/01/24 12:25:22.811
  STEP: Creating a pod to test consume configMaps @ 06/01/24 12:25:22.817
  STEP: Saw pod success @ 06/01/24 12:25:26.842
  Jun  1 12:25:26.845: INFO: Trying to get logs from node ip-172-31-80-202 pod pod-configmaps-66c6ccd3-0fed-4d17-b7a4-01ef8033de43 container agnhost-container: <nil>
  STEP: delete the pod @ 06/01/24 12:25:26.857
  Jun  1 12:25:26.873: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4712" for this suite. @ 06/01/24 12:25:26.876
â€¢ [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 06/01/24 12:25:26.884
  Jun  1 12:25:26.884: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename podtemplate @ 06/01/24 12:25:26.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:25:26.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:25:26.904
  STEP: Create set of pod templates @ 06/01/24 12:25:26.906
  Jun  1 12:25:26.911: INFO: created test-podtemplate-1
  Jun  1 12:25:26.917: INFO: created test-podtemplate-2
  Jun  1 12:25:26.921: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 06/01/24 12:25:26.921
  STEP: delete collection of pod templates @ 06/01/24 12:25:26.923
  Jun  1 12:25:26.923: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 06/01/24 12:25:26.941
  Jun  1 12:25:26.941: INFO: requesting list of pod templates to confirm quantity
  Jun  1 12:25:26.943: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3977" for this suite. @ 06/01/24 12:25:26.946
â€¢ [0.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 06/01/24 12:25:26.951
  Jun  1 12:25:26.951: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename configmap @ 06/01/24 12:25:26.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:25:26.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:25:26.972
  STEP: Creating configMap with name configmap-test-volume-map-9338c312-b2bf-438e-88f3-bd742a88ae83 @ 06/01/24 12:25:26.975
  STEP: Creating a pod to test consume configMaps @ 06/01/24 12:25:26.979
  STEP: Saw pod success @ 06/01/24 12:25:31.001
  Jun  1 12:25:31.004: INFO: Trying to get logs from node ip-172-31-80-202 pod pod-configmaps-d95e7bd1-60e0-49c3-946a-5c44bd779856 container agnhost-container: <nil>
  STEP: delete the pod @ 06/01/24 12:25:31.012
  Jun  1 12:25:31.028: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6781" for this suite. @ 06/01/24 12:25:31.031
â€¢ [4.086 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:470
  STEP: Creating a kubernetes client @ 06/01/24 12:25:31.038
  Jun  1 12:25:31.038: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename sched-pred @ 06/01/24 12:25:31.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:25:31.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:25:31.058
  Jun  1 12:25:31.060: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jun  1 12:25:31.068: INFO: Waiting for terminating namespaces to be deleted...
  Jun  1 12:25:31.070: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-17-129 before test
  Jun  1 12:25:31.075: INFO: nginx-ingress-controller-kubernetes-worker-k4zlz from ingress-nginx-kubernetes-worker started at 2024-06-01 12:06:08 +0000 UTC (1 container statuses recorded)
  Jun  1 12:25:31.075: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 1
  Jun  1 12:25:31.075: INFO: calico-node-zwmhv from kube-system started at 2024-06-01 12:14:42 +0000 UTC (1 container statuses recorded)
  Jun  1 12:25:31.075: INFO: 	Container calico-node ready: true, restart count 0
  Jun  1 12:25:31.076: INFO: coredns-bddfd76d7-7mj9q from kube-system started at 2024-06-01 12:06:08 +0000 UTC (1 container statuses recorded)
  Jun  1 12:25:31.076: INFO: 	Container coredns ready: true, restart count 0
  Jun  1 12:25:31.076: INFO: kube-state-metrics-6f48cdd76-llxcr from kube-system started at 2024-06-01 12:06:08 +0000 UTC (1 container statuses recorded)
  Jun  1 12:25:31.076: INFO: 	Container kube-state-metrics ready: true, restart count 6
  Jun  1 12:25:31.076: INFO: metrics-server-v0.6.3-69d7fbfdf8-ggp9k from kube-system started at 2024-06-01 12:06:08 +0000 UTC (2 container statuses recorded)
  Jun  1 12:25:31.076: INFO: 	Container metrics-server ready: true, restart count 4
  Jun  1 12:25:31.076: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Jun  1 12:25:31.076: INFO: dashboard-metrics-scraper-5dd7cb5fc-chxdj from kubernetes-dashboard started at 2024-06-01 12:06:08 +0000 UTC (1 container statuses recorded)
  Jun  1 12:25:31.076: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Jun  1 12:25:31.076: INFO: kubernetes-dashboard-7b899cb9d9-6z8mc from kubernetes-dashboard started at 2024-06-01 12:06:08 +0000 UTC (1 container statuses recorded)
  Jun  1 12:25:31.076: INFO: 	Container kubernetes-dashboard ready: true, restart count 4
  Jun  1 12:25:31.076: INFO: sonobuoy-systemd-logs-daemon-set-6b74001505cc4012-w6grx from sonobuoy started at 2024-06-01 12:18:35 +0000 UTC (2 container statuses recorded)
  Jun  1 12:25:31.076: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  1 12:25:31.076: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun  1 12:25:31.076: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-74-111 before test
  Jun  1 12:25:31.080: INFO: nginx-ingress-controller-kubernetes-worker-57r8s from ingress-nginx-kubernetes-worker started at 2024-06-01 12:21:42 +0000 UTC (1 container statuses recorded)
  Jun  1 12:25:31.080: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jun  1 12:25:31.080: INFO: calico-node-x7lqm from kube-system started at 2024-06-01 12:16:31 +0000 UTC (1 container statuses recorded)
  Jun  1 12:25:31.080: INFO: 	Container calico-node ready: true, restart count 0
  Jun  1 12:25:31.080: INFO: sonobuoy from sonobuoy started at 2024-06-01 12:18:33 +0000 UTC (1 container statuses recorded)
  Jun  1 12:25:31.080: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jun  1 12:25:31.080: INFO: sonobuoy-systemd-logs-daemon-set-6b74001505cc4012-t4fhp from sonobuoy started at 2024-06-01 12:18:35 +0000 UTC (2 container statuses recorded)
  Jun  1 12:25:31.080: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  1 12:25:31.080: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun  1 12:25:31.080: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-80-202 before test
  Jun  1 12:25:31.085: INFO: nginx-ingress-controller-kubernetes-worker-8v98c from ingress-nginx-kubernetes-worker started at 2024-06-01 12:15:51 +0000 UTC (1 container statuses recorded)
  Jun  1 12:25:31.085: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jun  1 12:25:31.085: INFO: calico-node-lr4nv from kube-system started at 2024-06-01 12:16:31 +0000 UTC (1 container statuses recorded)
  Jun  1 12:25:31.085: INFO: 	Container calico-node ready: true, restart count 0
  Jun  1 12:25:31.085: INFO: sonobuoy-e2e-job-65c4f8adab634956 from sonobuoy started at 2024-06-01 12:18:35 +0000 UTC (2 container statuses recorded)
  Jun  1 12:25:31.085: INFO: 	Container e2e ready: true, restart count 0
  Jun  1 12:25:31.085: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  1 12:25:31.085: INFO: sonobuoy-systemd-logs-daemon-set-6b74001505cc4012-pwg5w from sonobuoy started at 2024-06-01 12:18:35 +0000 UTC (2 container statuses recorded)
  Jun  1 12:25:31.085: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  1 12:25:31.085: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 06/01/24 12:25:31.085
  STEP: Explicitly delete pod here to free the resource it takes. @ 06/01/24 12:25:33.109
  STEP: Trying to apply a random label on the found node. @ 06/01/24 12:25:33.121
  STEP: verifying the node has the label kubernetes.io/e2e-7bc651c4-c615-411b-a1b5-62550714e7a7 42 @ 06/01/24 12:25:33.13
  STEP: Trying to relaunch the pod, now with labels. @ 06/01/24 12:25:33.133
  STEP: removing the label kubernetes.io/e2e-7bc651c4-c615-411b-a1b5-62550714e7a7 off the node ip-172-31-74-111 @ 06/01/24 12:25:35.15
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-7bc651c4-c615-411b-a1b5-62550714e7a7 @ 06/01/24 12:25:35.162
  Jun  1 12:25:35.164: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8860" for this suite. @ 06/01/24 12:25:35.169
â€¢ [4.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 06/01/24 12:25:35.175
  Jun  1 12:25:35.175: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename deployment @ 06/01/24 12:25:35.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:25:35.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:25:35.195
  Jun  1 12:25:35.206: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  Jun  1 12:25:40.212: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/01/24 12:25:40.212
  Jun  1 12:25:40.212: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 06/01/24 12:25:40.222
  Jun  1 12:25:40.232: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-404",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9bee1834-0015-48eb-b0fc-7aa918ec5f41",
      ResourceVersion: (string) (len=4) "9324",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852841540,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841540,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun  1 12:25:40.235: INFO: New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  Jun  1 12:25:40.235: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Jun  1 12:25:40.235: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-404",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4243d512-ffe3-4e20-9810-25e8ffe259c5",
      ResourceVersion: (string) (len=4) "9327",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852841535,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "9bee1834-0015-48eb-b0fc-7aa918ec5f41",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841536,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841540,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 39 62 65 65 31 38 33  |"uid\":\"9bee183|
              00000040  34 2d 30 30 31 35 2d 34  38 65 62 2d 62 30 66 63  |4-0015-48eb-b0fc|
              00000050  2d 37 61 61 39 31 38 65  63 35 66 34 31 5c 22 7d  |-7aa918ec5f41\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun  1 12:25:40.241: INFO: Pod "test-cleanup-controller-w6wxn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-w6wxn",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=14) "deployment-404",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c8ef779e-cb2b-43c2-af2d-b32f5ae870e9",
      ResourceVersion: (string) (len=4) "9313",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852841535,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "4243d512-ffe3-4e20-9810-25e8ffe259c5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  34 32 34 33 64 35 31 32  |uid\":\"4243d512|
              00000080  2d 66 66 65 33 2d 34 65  32 30 2d 39 38 31 30 2d  |-ffe3-4e20-9810-|
              00000090  32 35 65 38 66 66 65 32  35 39 63 35 5c 22 7d 22  |25e8ffe259c5\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841536,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 31  38 2e 31 36 31 5c 22 7d  |2.168.118.161\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kc8pp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kc8pp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-74-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841536,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841536,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841536,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.74.111",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.74.111"
        }
      },
      PodIP: (string) (len=15) "192.168.118.161",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.118.161"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852841535,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852841535,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d85a283f6ef18cf9229aa6aa2713ee35cee43f30ea095a2373e66243b89590e1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  1 12:25:40.242: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-404" for this suite. @ 06/01/24 12:25:40.249
â€¢ [5.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 06/01/24 12:25:40.268
  Jun  1 12:25:40.268: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename webhook @ 06/01/24 12:25:40.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:25:40.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:25:40.295
  STEP: Setting up server cert @ 06/01/24 12:25:40.318
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/01/24 12:25:40.597
  STEP: Deploying the webhook pod @ 06/01/24 12:25:40.604
  STEP: Wait for the deployment to be ready @ 06/01/24 12:25:40.616
  Jun  1 12:25:40.624: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/01/24 12:25:42.635
  STEP: Verifying the service has paired with the endpoint @ 06/01/24 12:25:42.644
  Jun  1 12:25:43.645: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun  1 12:25:43.652: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2478-crds.webhook.example.com via the AdmissionRegistration API @ 06/01/24 12:25:44.163
  STEP: Creating a custom resource while v1 is storage version @ 06/01/24 12:25:44.177
  STEP: Patching Custom Resource Definition to set v2 as storage @ 06/01/24 12:25:46.209
  STEP: Patching the custom resource while v2 is storage version @ 06/01/24 12:25:46.221
  Jun  1 12:25:46.809: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2515" for this suite. @ 06/01/24 12:25:46.812
  STEP: Destroying namespace "webhook-markers-3067" for this suite. @ 06/01/24 12:25:46.82
â€¢ [6.559 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:855
  STEP: Creating a kubernetes client @ 06/01/24 12:25:46.827
  Jun  1 12:25:46.827: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename job @ 06/01/24 12:25:46.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:25:46.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:25:46.846
  STEP: Creating a suspended job @ 06/01/24 12:25:46.851
  STEP: Patching the Job @ 06/01/24 12:25:46.858
  STEP: Watching for Job to be patched @ 06/01/24 12:25:46.864
  Jun  1 12:25:46.866: INFO: Event ADDED observed for Job e2e-22wxn in namespace job-1821 with labels: map[e2e-job-label:e2e-22wxn] and annotations: map[]
  Jun  1 12:25:46.866: INFO: Event MODIFIED found for Job e2e-22wxn in namespace job-1821 with labels: map[e2e-22wxn:patched e2e-job-label:e2e-22wxn] and annotations: map[]
  STEP: Updating the job @ 06/01/24 12:25:46.866
  STEP: Watching for Job to be updated @ 06/01/24 12:25:46.876
  Jun  1 12:25:46.877: INFO: Event MODIFIED found for Job e2e-22wxn in namespace job-1821 with labels: map[e2e-22wxn:patched e2e-job-label:e2e-22wxn] and annotations: map[updated:true]
  Jun  1 12:25:46.877: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 06/01/24 12:25:46.877
  Jun  1 12:25:46.880: INFO: Job: e2e-22wxn as labels: map[e2e-22wxn:patched e2e-job-label:e2e-22wxn]
  STEP: Waiting for job to complete @ 06/01/24 12:25:46.88
  STEP: Delete a job collection with a labelselector @ 06/01/24 12:25:54.885
  STEP: Watching for Job to be deleted @ 06/01/24 12:25:54.894
  Jun  1 12:25:54.895: INFO: Event MODIFIED observed for Job e2e-22wxn in namespace job-1821 with labels: map[e2e-22wxn:patched e2e-job-label:e2e-22wxn] and annotations: map[updated:true]
  Jun  1 12:25:54.895: INFO: Event MODIFIED observed for Job e2e-22wxn in namespace job-1821 with labels: map[e2e-22wxn:patched e2e-job-label:e2e-22wxn] and annotations: map[updated:true]
  Jun  1 12:25:54.895: INFO: Event MODIFIED observed for Job e2e-22wxn in namespace job-1821 with labels: map[e2e-22wxn:patched e2e-job-label:e2e-22wxn] and annotations: map[updated:true]
  Jun  1 12:25:54.895: INFO: Event MODIFIED observed for Job e2e-22wxn in namespace job-1821 with labels: map[e2e-22wxn:patched e2e-job-label:e2e-22wxn] and annotations: map[updated:true]
  Jun  1 12:25:54.895: INFO: Event MODIFIED observed for Job e2e-22wxn in namespace job-1821 with labels: map[e2e-22wxn:patched e2e-job-label:e2e-22wxn] and annotations: map[updated:true]
  Jun  1 12:25:54.895: INFO: Event MODIFIED observed for Job e2e-22wxn in namespace job-1821 with labels: map[e2e-22wxn:patched e2e-job-label:e2e-22wxn] and annotations: map[updated:true]
  Jun  1 12:25:54.895: INFO: Event MODIFIED observed for Job e2e-22wxn in namespace job-1821 with labels: map[e2e-22wxn:patched e2e-job-label:e2e-22wxn] and annotations: map[updated:true]
  Jun  1 12:25:54.896: INFO: Event MODIFIED observed for Job e2e-22wxn in namespace job-1821 with labels: map[e2e-22wxn:patched e2e-job-label:e2e-22wxn] and annotations: map[updated:true]
  Jun  1 12:25:54.896: INFO: Event MODIFIED observed for Job e2e-22wxn in namespace job-1821 with labels: map[e2e-22wxn:patched e2e-job-label:e2e-22wxn] and annotations: map[updated:true]
  Jun  1 12:25:54.896: INFO: Event MODIFIED observed for Job e2e-22wxn in namespace job-1821 with labels: map[e2e-22wxn:patched e2e-job-label:e2e-22wxn] and annotations: map[updated:true]
  Jun  1 12:25:54.896: INFO: Event DELETED found for Job e2e-22wxn in namespace job-1821 with labels: map[e2e-22wxn:patched e2e-job-label:e2e-22wxn] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 06/01/24 12:25:54.896
  Jun  1 12:25:54.899: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1821" for this suite. @ 06/01/24 12:25:54.903
â€¢ [8.099 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 06/01/24 12:25:54.926
  Jun  1 12:25:54.926: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename svcaccounts @ 06/01/24 12:25:54.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:25:54.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:25:54.944
  Jun  1 12:25:54.963: INFO: created pod pod-service-account-defaultsa
  Jun  1 12:25:54.963: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Jun  1 12:25:54.969: INFO: created pod pod-service-account-mountsa
  Jun  1 12:25:54.969: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Jun  1 12:25:54.973: INFO: created pod pod-service-account-nomountsa
  Jun  1 12:25:54.973: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Jun  1 12:25:54.981: INFO: created pod pod-service-account-defaultsa-mountspec
  Jun  1 12:25:54.981: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Jun  1 12:25:54.989: INFO: created pod pod-service-account-mountsa-mountspec
  Jun  1 12:25:54.989: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Jun  1 12:25:54.996: INFO: created pod pod-service-account-nomountsa-mountspec
  Jun  1 12:25:54.996: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Jun  1 12:25:55.002: INFO: created pod pod-service-account-defaultsa-nomountspec
  Jun  1 12:25:55.002: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Jun  1 12:25:55.011: INFO: created pod pod-service-account-mountsa-nomountspec
  Jun  1 12:25:55.012: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Jun  1 12:25:55.023: INFO: created pod pod-service-account-nomountsa-nomountspec
  Jun  1 12:25:55.023: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Jun  1 12:25:55.023: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3141" for this suite. @ 06/01/24 12:25:55.028
â€¢ [0.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 06/01/24 12:25:55.036
  Jun  1 12:25:55.036: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename field-validation @ 06/01/24 12:25:55.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:25:55.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:25:55.055
  Jun  1 12:25:55.057: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  W0601 12:25:57.605647      21 warnings.go:70] unknown field "alpha"
  W0601 12:25:57.605668      21 warnings.go:70] unknown field "beta"
  W0601 12:25:57.605671      21 warnings.go:70] unknown field "delta"
  W0601 12:25:57.605674      21 warnings.go:70] unknown field "epsilon"
  W0601 12:25:57.605677      21 warnings.go:70] unknown field "gamma"
  Jun  1 12:25:58.149: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8011" for this suite. @ 06/01/24 12:25:58.152
â€¢ [3.123 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 06/01/24 12:25:58.159
  Jun  1 12:25:58.159: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename controllerrevisions @ 06/01/24 12:25:58.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:25:58.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:25:58.178
  STEP: Creating DaemonSet "e2e-pfpfx-daemon-set" @ 06/01/24 12:25:58.199
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/01/24 12:25:58.205
  Jun  1 12:25:58.208: INFO: DaemonSet pods can't tolerate node ip-172-31-13-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 12:25:58.208: INFO: DaemonSet pods can't tolerate node ip-172-31-68-201 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 12:25:58.211: INFO: Number of nodes with available pods controlled by daemonset e2e-pfpfx-daemon-set: 0
  Jun  1 12:25:58.211: INFO: Node ip-172-31-17-129 is running 0 daemon pod, expected 1
  Jun  1 12:25:59.209: INFO: DaemonSet pods can't tolerate node ip-172-31-13-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 12:25:59.209: INFO: DaemonSet pods can't tolerate node ip-172-31-68-201 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 12:25:59.211: INFO: Number of nodes with available pods controlled by daemonset e2e-pfpfx-daemon-set: 1
  Jun  1 12:25:59.211: INFO: Node ip-172-31-17-129 is running 0 daemon pod, expected 1
  Jun  1 12:26:00.210: INFO: DaemonSet pods can't tolerate node ip-172-31-13-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 12:26:00.210: INFO: DaemonSet pods can't tolerate node ip-172-31-68-201 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 12:26:00.213: INFO: Number of nodes with available pods controlled by daemonset e2e-pfpfx-daemon-set: 3
  Jun  1 12:26:00.213: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-pfpfx-daemon-set
  STEP: Confirm DaemonSet "e2e-pfpfx-daemon-set" successfully created with "daemonset-name=e2e-pfpfx-daemon-set" label @ 06/01/24 12:26:00.216
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-pfpfx-daemon-set" @ 06/01/24 12:26:00.223
  Jun  1 12:26:00.231: INFO: Located ControllerRevision: "e2e-pfpfx-daemon-set-878668fd7"
  STEP: Patching ControllerRevision "e2e-pfpfx-daemon-set-878668fd7" @ 06/01/24 12:26:00.235
  Jun  1 12:26:00.240: INFO: e2e-pfpfx-daemon-set-878668fd7 has been patched
  STEP: Create a new ControllerRevision @ 06/01/24 12:26:00.24
  Jun  1 12:26:00.247: INFO: Created ControllerRevision: e2e-pfpfx-daemon-set-64d4d7dff5
  STEP: Confirm that there are two ControllerRevisions @ 06/01/24 12:26:00.247
  Jun  1 12:26:00.247: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jun  1 12:26:00.255: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-pfpfx-daemon-set-878668fd7" @ 06/01/24 12:26:00.255
  STEP: Confirm that there is only one ControllerRevision @ 06/01/24 12:26:00.263
  Jun  1 12:26:00.264: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jun  1 12:26:00.270: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-pfpfx-daemon-set-64d4d7dff5" @ 06/01/24 12:26:00.275
  Jun  1 12:26:00.285: INFO: e2e-pfpfx-daemon-set-64d4d7dff5 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 06/01/24 12:26:00.285
  W0601 12:26:00.295925      21 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 06/01/24 12:26:00.296
  Jun  1 12:26:00.296: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jun  1 12:26:01.296: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jun  1 12:26:01.299: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-pfpfx-daemon-set-64d4d7dff5=updated" @ 06/01/24 12:26:01.299
  STEP: Confirm that there is only one ControllerRevision @ 06/01/24 12:26:01.306
  Jun  1 12:26:01.306: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jun  1 12:26:01.310: INFO: Found 1 ControllerRevisions
  Jun  1 12:26:01.313: INFO: ControllerRevision "e2e-pfpfx-daemon-set-54bf78986" has revision 3
  STEP: Deleting DaemonSet "e2e-pfpfx-daemon-set" @ 06/01/24 12:26:01.316
  STEP: deleting DaemonSet.extensions e2e-pfpfx-daemon-set in namespace controllerrevisions-6391, will wait for the garbage collector to delete the pods @ 06/01/24 12:26:01.316
  Jun  1 12:26:01.378: INFO: Deleting DaemonSet.extensions e2e-pfpfx-daemon-set took: 8.264794ms
  Jun  1 12:26:01.479: INFO: Terminating DaemonSet.extensions e2e-pfpfx-daemon-set pods took: 100.646486ms
  Jun  1 12:26:02.883: INFO: Number of nodes with available pods controlled by daemonset e2e-pfpfx-daemon-set: 0
  Jun  1 12:26:02.883: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-pfpfx-daemon-set
  Jun  1 12:26:02.886: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"9908"},"items":null}

  Jun  1 12:26:02.888: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"9908"},"items":null}

  Jun  1 12:26:02.901: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-6391" for this suite. @ 06/01/24 12:26:02.904
â€¢ [4.752 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:153
  STEP: Creating a kubernetes client @ 06/01/24 12:26:02.911
  Jun  1 12:26:02.911: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/01/24 12:26:02.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:26:02.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:26:02.933
  STEP: create the container to handle the HTTPGet hook request. @ 06/01/24 12:26:02.94
  STEP: create the pod with lifecycle hook @ 06/01/24 12:26:04.959
  STEP: delete the pod with lifecycle hook @ 06/01/24 12:26:06.981
  STEP: check prestop hook @ 06/01/24 12:26:08.997
  Jun  1 12:26:09.004: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9608" for this suite. @ 06/01/24 12:26:09.007
â€¢ [6.102 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 06/01/24 12:26:09.014
  Jun  1 12:26:09.014: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename pods @ 06/01/24 12:26:09.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:26:09.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:26:09.035
  STEP: Saw pod success @ 06/01/24 12:26:13.085
  Jun  1 12:26:13.088: INFO: Trying to get logs from node ip-172-31-74-111 pod client-envvars-1e10344d-7fa9-4034-87e7-d02f0549406f container env3cont: <nil>
  STEP: delete the pod @ 06/01/24 12:26:13.105
  Jun  1 12:26:13.123: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-321" for this suite. @ 06/01/24 12:26:13.126
â€¢ [4.118 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 06/01/24 12:26:13.132
  Jun  1 12:26:13.132: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename projected @ 06/01/24 12:26:13.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:26:13.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:26:13.152
  STEP: Creating the pod @ 06/01/24 12:26:13.154
  Jun  1 12:26:15.697: INFO: Successfully updated pod "annotationupdateb40be802-5940-4227-87ea-052468af7083"
  Jun  1 12:26:19.721: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9702" for this suite. @ 06/01/24 12:26:19.725
â€¢ [6.602 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 06/01/24 12:26:19.735
  Jun  1 12:26:19.735: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename field-validation @ 06/01/24 12:26:19.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:26:19.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:26:19.754
  Jun  1 12:26:19.756: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 12:26:22.835: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6741" for this suite. @ 06/01/24 12:26:22.838
â€¢ [3.111 seconds]
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 06/01/24 12:26:22.846
  Jun  1 12:26:22.846: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename pods @ 06/01/24 12:26:22.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:26:22.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:26:22.864
  Jun  1 12:26:22.866: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: creating the pod @ 06/01/24 12:26:22.867
  STEP: submitting the pod to kubernetes @ 06/01/24 12:26:22.867
  Jun  1 12:26:24.950: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9751" for this suite. @ 06/01/24 12:26:24.953
â€¢ [2.115 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 06/01/24 12:26:24.961
  Jun  1 12:26:24.961: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename resourcequota @ 06/01/24 12:26:24.962
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:26:24.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:26:24.982
  STEP: Creating a ResourceQuota @ 06/01/24 12:26:24.984
  STEP: Getting a ResourceQuota @ 06/01/24 12:26:24.988
  STEP: Updating a ResourceQuota @ 06/01/24 12:26:24.992
  STEP: Verifying a ResourceQuota was modified @ 06/01/24 12:26:24.995
  STEP: Deleting a ResourceQuota @ 06/01/24 12:26:24.999
  STEP: Verifying the deleted ResourceQuota @ 06/01/24 12:26:25.004
  Jun  1 12:26:25.007: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6893" for this suite. @ 06/01/24 12:26:25.011
â€¢ [0.056 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 06/01/24 12:26:25.018
  Jun  1 12:26:25.018: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename discovery @ 06/01/24 12:26:25.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:26:25.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:26:25.036
  STEP: Setting up server cert @ 06/01/24 12:26:25.039
  Jun  1 12:26:25.142: INFO: Checking APIGroup: apiregistration.k8s.io
  Jun  1 12:26:25.143: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Jun  1 12:26:25.143: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Jun  1 12:26:25.143: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Jun  1 12:26:25.143: INFO: Checking APIGroup: apps
  Jun  1 12:26:25.144: INFO: PreferredVersion.GroupVersion: apps/v1
  Jun  1 12:26:25.144: INFO: Versions found [{apps/v1 v1}]
  Jun  1 12:26:25.144: INFO: apps/v1 matches apps/v1
  Jun  1 12:26:25.144: INFO: Checking APIGroup: events.k8s.io
  Jun  1 12:26:25.145: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Jun  1 12:26:25.145: INFO: Versions found [{events.k8s.io/v1 v1}]
  Jun  1 12:26:25.145: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Jun  1 12:26:25.145: INFO: Checking APIGroup: authentication.k8s.io
  Jun  1 12:26:25.146: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Jun  1 12:26:25.146: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Jun  1 12:26:25.146: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Jun  1 12:26:25.146: INFO: Checking APIGroup: authorization.k8s.io
  Jun  1 12:26:25.147: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Jun  1 12:26:25.147: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Jun  1 12:26:25.147: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Jun  1 12:26:25.147: INFO: Checking APIGroup: autoscaling
  Jun  1 12:26:25.148: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Jun  1 12:26:25.148: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Jun  1 12:26:25.148: INFO: autoscaling/v2 matches autoscaling/v2
  Jun  1 12:26:25.148: INFO: Checking APIGroup: batch
  Jun  1 12:26:25.149: INFO: PreferredVersion.GroupVersion: batch/v1
  Jun  1 12:26:25.149: INFO: Versions found [{batch/v1 v1}]
  Jun  1 12:26:25.149: INFO: batch/v1 matches batch/v1
  Jun  1 12:26:25.149: INFO: Checking APIGroup: certificates.k8s.io
  Jun  1 12:26:25.150: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Jun  1 12:26:25.150: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Jun  1 12:26:25.150: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Jun  1 12:26:25.150: INFO: Checking APIGroup: networking.k8s.io
  Jun  1 12:26:25.151: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Jun  1 12:26:25.151: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Jun  1 12:26:25.151: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Jun  1 12:26:25.151: INFO: Checking APIGroup: policy
  Jun  1 12:26:25.151: INFO: PreferredVersion.GroupVersion: policy/v1
  Jun  1 12:26:25.151: INFO: Versions found [{policy/v1 v1}]
  Jun  1 12:26:25.151: INFO: policy/v1 matches policy/v1
  Jun  1 12:26:25.151: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Jun  1 12:26:25.152: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Jun  1 12:26:25.152: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Jun  1 12:26:25.152: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Jun  1 12:26:25.152: INFO: Checking APIGroup: storage.k8s.io
  Jun  1 12:26:25.153: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Jun  1 12:26:25.153: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Jun  1 12:26:25.153: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Jun  1 12:26:25.153: INFO: Checking APIGroup: admissionregistration.k8s.io
  Jun  1 12:26:25.154: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Jun  1 12:26:25.154: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Jun  1 12:26:25.154: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Jun  1 12:26:25.154: INFO: Checking APIGroup: apiextensions.k8s.io
  Jun  1 12:26:25.155: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Jun  1 12:26:25.155: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Jun  1 12:26:25.155: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Jun  1 12:26:25.155: INFO: Checking APIGroup: scheduling.k8s.io
  Jun  1 12:26:25.156: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Jun  1 12:26:25.156: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Jun  1 12:26:25.156: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Jun  1 12:26:25.156: INFO: Checking APIGroup: coordination.k8s.io
  Jun  1 12:26:25.157: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Jun  1 12:26:25.157: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Jun  1 12:26:25.157: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Jun  1 12:26:25.157: INFO: Checking APIGroup: node.k8s.io
  Jun  1 12:26:25.158: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Jun  1 12:26:25.158: INFO: Versions found [{node.k8s.io/v1 v1}]
  Jun  1 12:26:25.158: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Jun  1 12:26:25.158: INFO: Checking APIGroup: discovery.k8s.io
  Jun  1 12:26:25.158: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Jun  1 12:26:25.158: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Jun  1 12:26:25.158: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Jun  1 12:26:25.158: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Jun  1 12:26:25.159: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  Jun  1 12:26:25.159: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  Jun  1 12:26:25.159: INFO: flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  Jun  1 12:26:25.159: INFO: Checking APIGroup: metrics.k8s.io
  Jun  1 12:26:25.160: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  Jun  1 12:26:25.160: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  Jun  1 12:26:25.160: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  Jun  1 12:26:25.160: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-9311" for this suite. @ 06/01/24 12:26:25.164
â€¢ [0.154 seconds]
------------------------------
SS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 06/01/24 12:26:25.172
  Jun  1 12:26:25.172: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename subpath @ 06/01/24 12:26:25.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:26:25.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:26:25.189
  STEP: Setting up data @ 06/01/24 12:26:25.191
  STEP: Creating pod pod-subpath-test-projected-wp5l @ 06/01/24 12:26:25.201
  STEP: Creating a pod to test atomic-volume-subpath @ 06/01/24 12:26:25.201
  STEP: Saw pod success @ 06/01/24 12:26:47.264
  Jun  1 12:26:47.267: INFO: Trying to get logs from node ip-172-31-74-111 pod pod-subpath-test-projected-wp5l container test-container-subpath-projected-wp5l: <nil>
  STEP: delete the pod @ 06/01/24 12:26:47.273
  STEP: Deleting pod pod-subpath-test-projected-wp5l @ 06/01/24 12:26:47.286
  Jun  1 12:26:47.286: INFO: Deleting pod "pod-subpath-test-projected-wp5l" in namespace "subpath-1225"
  Jun  1 12:26:47.289: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1225" for this suite. @ 06/01/24 12:26:47.293
â€¢ [22.128 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 06/01/24 12:26:47.3
  Jun  1 12:26:47.300: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename cronjob @ 06/01/24 12:26:47.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:26:47.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:26:47.32
  STEP: Creating a ReplaceConcurrent cronjob @ 06/01/24 12:26:47.322
  STEP: Ensuring a job is scheduled @ 06/01/24 12:26:47.328
  STEP: Ensuring exactly one is scheduled @ 06/01/24 12:27:01.335
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 06/01/24 12:27:01.339
  STEP: Ensuring the job is replaced with a new one @ 06/01/24 12:27:01.342
  STEP: Removing cronjob @ 06/01/24 12:28:01.349
  Jun  1 12:28:01.358: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7138" for this suite. @ 06/01/24 12:28:01.361
â€¢ [74.070 seconds]
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 06/01/24 12:28:01.37
  Jun  1 12:28:01.370: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename container-probe @ 06/01/24 12:28:01.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:28:01.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:28:01.392
  STEP: Creating pod busybox-6933b105-f362-4ae2-a27f-49fc0d24c9ec in namespace container-probe-9072 @ 06/01/24 12:28:01.394
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/01/24 12:28:03.414
  Jun  1 12:28:03.417: INFO: Initial restart count of pod busybox-6933b105-f362-4ae2-a27f-49fc0d24c9ec is 0
  Jun  1 12:28:03.420: INFO: Get pod busybox-6933b105-f362-4ae2-a27f-49fc0d24c9ec in namespace container-probe-9072
  Jun  1 12:28:05.425: INFO: Get pod busybox-6933b105-f362-4ae2-a27f-49fc0d24c9ec in namespace container-probe-9072
  Jun  1 12:28:07.430: INFO: Get pod busybox-6933b105-f362-4ae2-a27f-49fc0d24c9ec in namespace container-probe-9072
  Jun  1 12:28:09.435: INFO: Get pod busybox-6933b105-f362-4ae2-a27f-49fc0d24c9ec in namespace container-probe-9072
  Jun  1 12:28:11.441: INFO: Get pod busybox-6933b105-f362-4ae2-a27f-49fc0d24c9ec in namespace container-probe-9072
  Jun  1 12:28:13.446: INFO: Get pod busybox-6933b105-f362-4ae2-a27f-49fc0d24c9ec in namespace container-probe-9072
  Jun  1 12:28:15.451: INFO: Get pod busybox-6933b105-f362-4ae2-a27f-49fc0d24c9ec in namespace container-probe-9072
  Jun  1 12:28:17.455: INFO: Get pod busybox-6933b105-f362-4ae2-a27f-49fc0d24c9ec in namespace container-probe-9072
  Jun  1 12:28:19.459: INFO: Get pod busybox-6933b105-f362-4ae2-a27f-49fc0d24c9ec in namespace container-probe-9072
  Jun  1 12:28:21.464: INFO: Get pod busybox-6933b105-f362-4ae2-a27f-49fc0d24c9ec in namespace container-probe-9072
  Jun  1 12:28:23.469: INFO: Get pod busybox-6933b105-f362-4ae2-a27f-49fc0d24c9ec in namespace container-probe-9072
  Jun  1 12:28:25.475: INFO: Get pod busybox-6933b105-f362-4ae2-a27f-49fc0d24c9ec in namespace container-probe-9072
  Jun  1 12:28:27.480: INFO: Get pod busybox-6933b105-f362-4ae2-a27f-49fc0d24c9ec in namespace container-probe-9072
  Jun  1 12:28:29.485: INFO: Get pod busybox-6933b105-f362-4ae2-a27f-49fc0d24c9ec in namespace container-probe-9072
  Jun  1 12:28:31.489: INFO: Get pod busybox-6933b105-f362-4ae2-a27f-49fc0d24c9ec in namespace container-probe-9072
  Jun  1 12:28:33.495: INFO: Get pod busybox-6933b105-f362-4ae2-a27f-49fc0d24c9ec in namespace container-probe-9072
  Jun  1 12:28:35.500: INFO: Get pod busybox-6933b105-f362-4ae2-a27f-49fc0d24c9ec in namespace container-probe-9072
  Jun  1 12:28:37.505: INFO: Get pod busybox-6933b105-f362-4ae2-a27f-49fc0d24c9ec in namespace container-probe-9072
  Jun  1 12:28:39.510: INFO: Get pod busybox-6933b105-f362-4ae2-a27f-49fc0d24c9ec in namespace container-probe-9072
  Jun  1 12:28:41.515: INFO: Get pod busybox-6933b105-f362-4ae2-a27f-49fc0d24c9ec in namespace container-probe-9072
  Jun  1 12:28:43.521: INFO: Get pod busybox-6933b105-f362-4ae2-a27f-49fc0d24c9ec in namespace container-probe-9072
  Jun  1 12:28:45.526: INFO: Get pod busybox-6933b105-f362-4ae2-a27f-49fc0d24c9ec in namespace container-probe-9072
  Jun  1 12:28:47.532: INFO: Get pod busybox-6933b105-f362-4ae2-a27f-49fc0d24c9ec in namespace container-probe-9072
  Jun  1 12:28:49.537: INFO: Get pod busybox-6933b105-f362-4ae2-a27f-49fc0d24c9ec in namespace container-probe-9072
  Jun  1 12:28:51.542: INFO: Get pod busybox-6933b105-f362-4ae2-a27f-49fc0d24c9ec in namespace container-probe-9072
  Jun  1 12:28:53.547: INFO: Get pod busybox-6933b105-f362-4ae2-a27f-49fc0d24c9ec in namespace container-probe-9072
  Jun  1 12:28:53.547: INFO: Restart count of pod container-probe-9072/busybox-6933b105-f362-4ae2-a27f-49fc0d24c9ec is now 1 (50.129725631s elapsed)
  STEP: deleting the pod @ 06/01/24 12:28:53.547
  Jun  1 12:28:53.561: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9072" for this suite. @ 06/01/24 12:28:53.565
â€¢ [52.203 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 06/01/24 12:28:53.574
  Jun  1 12:28:53.574: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename hostport @ 06/01/24 12:28:53.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:28:53.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:28:53.593
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 06/01/24 12:28:53.598
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.17.129 on the node which pod1 resides and expect scheduled @ 06/01/24 12:28:55.613
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.17.129 but use UDP protocol on the node which pod2 resides @ 06/01/24 12:29:07.66
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 06/01/24 12:29:21.718
  Jun  1 12:29:21.718: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.17.129 http://127.0.0.1:54323/hostname] Namespace:hostport-6998 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  1 12:29:21.718: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 12:29:21.719: INFO: ExecWithOptions: Clientset creation
  Jun  1 12:29:21.719: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-6998/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.17.129+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.17.129, port: 54323 @ 06/01/24 12:29:21.769
  Jun  1 12:29:21.769: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.17.129:54323/hostname] Namespace:hostport-6998 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  1 12:29:21.769: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 12:29:21.769: INFO: ExecWithOptions: Clientset creation
  Jun  1 12:29:21.769: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-6998/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.17.129%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.17.129, port: 54323 UDP @ 06/01/24 12:29:21.82
  Jun  1 12:29:21.820: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.17.129 54323] Namespace:hostport-6998 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  1 12:29:21.820: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 12:29:21.820: INFO: ExecWithOptions: Clientset creation
  Jun  1 12:29:21.821: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-6998/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.17.129+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  Jun  1 12:29:26.875: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-6998" for this suite. @ 06/01/24 12:29:26.879
â€¢ [33.314 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 06/01/24 12:29:26.889
  Jun  1 12:29:26.889: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename projected @ 06/01/24 12:29:26.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:29:26.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:29:26.907
  STEP: Creating projection with secret that has name projected-secret-test-51414c2b-14cf-4946-ba88-a6e9282349a3 @ 06/01/24 12:29:26.909
  STEP: Creating a pod to test consume secrets @ 06/01/24 12:29:26.915
  STEP: Saw pod success @ 06/01/24 12:29:30.936
  Jun  1 12:29:30.939: INFO: Trying to get logs from node ip-172-31-74-111 pod pod-projected-secrets-85b5c1b9-1bc5-4edb-9c2a-171061c4611f container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/01/24 12:29:30.95
  Jun  1 12:29:30.967: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8947" for this suite. @ 06/01/24 12:29:30.97
â€¢ [4.086 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 06/01/24 12:29:30.975
  Jun  1 12:29:30.975: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename var-expansion @ 06/01/24 12:29:30.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:29:30.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:29:30.996
  Jun  1 12:29:33.014: INFO: Deleting pod "var-expansion-848c3a5c-fa82-491f-87e5-1608906253e5" in namespace "var-expansion-5828"
  Jun  1 12:29:33.023: INFO: Wait up to 5m0s for pod "var-expansion-848c3a5c-fa82-491f-87e5-1608906253e5" to be fully deleted
  Jun  1 12:29:35.030: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5828" for this suite. @ 06/01/24 12:29:35.034
â€¢ [4.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 06/01/24 12:29:35.041
  Jun  1 12:29:35.041: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/01/24 12:29:35.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:29:35.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:29:35.057
  Jun  1 12:29:35.060: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 12:29:41.254: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-600" for this suite. @ 06/01/24 12:29:41.258
â€¢ [6.225 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:641
  STEP: Creating a kubernetes client @ 06/01/24 12:29:41.267
  Jun  1 12:29:41.267: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename statefulset @ 06/01/24 12:29:41.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:29:41.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:29:41.286
  STEP: Creating service test in namespace statefulset-1011 @ 06/01/24 12:29:41.289
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 06/01/24 12:29:41.293
  STEP: Creating stateful set ss in namespace statefulset-1011 @ 06/01/24 12:29:41.296
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-1011 @ 06/01/24 12:29:41.304
  Jun  1 12:29:41.307: INFO: Found 0 stateful pods, waiting for 1
  Jun  1 12:29:51.309: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 06/01/24 12:29:51.309
  Jun  1 12:29:51.313: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=statefulset-1011 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun  1 12:29:51.410: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun  1 12:29:51.410: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun  1 12:29:51.410: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun  1 12:29:51.414: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Jun  1 12:30:01.416: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jun  1 12:30:01.416: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jun  1 12:30:01.436: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999817s
  Jun  1 12:30:02.441: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.997273067s
  Jun  1 12:30:03.445: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.991828196s
  Jun  1 12:30:04.451: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.987833568s
  Jun  1 12:30:05.455: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.982692808s
  Jun  1 12:30:06.460: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.977541938s
  Jun  1 12:30:07.465: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.973029193s
  Jun  1 12:30:08.472: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.967847318s
  Jun  1 12:30:09.477: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.961447607s
  Jun  1 12:30:10.482: INFO: Verifying statefulset ss doesn't scale past 1 for another 955.350228ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-1011 @ 06/01/24 12:30:11.483
  Jun  1 12:30:11.488: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=statefulset-1011 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun  1 12:30:11.583: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun  1 12:30:11.583: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun  1 12:30:11.583: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun  1 12:30:11.588: INFO: Found 1 stateful pods, waiting for 3
  Jun  1 12:30:21.589: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun  1 12:30:21.589: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun  1 12:30:21.589: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 06/01/24 12:30:21.589
  STEP: Scale down will halt with unhealthy stateful pod @ 06/01/24 12:30:21.589
  Jun  1 12:30:21.596: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=statefulset-1011 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun  1 12:30:21.754: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun  1 12:30:21.754: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun  1 12:30:21.754: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun  1 12:30:21.755: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=statefulset-1011 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun  1 12:30:21.860: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun  1 12:30:21.860: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun  1 12:30:21.860: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun  1 12:30:21.860: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=statefulset-1011 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun  1 12:30:21.950: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun  1 12:30:21.950: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun  1 12:30:21.950: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun  1 12:30:21.950: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jun  1 12:30:21.953: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  Jun  1 12:30:31.958: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jun  1 12:30:31.958: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Jun  1 12:30:31.958: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Jun  1 12:30:31.971: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999768s
  Jun  1 12:30:32.976: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.997222291s
  Jun  1 12:30:33.982: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.992091359s
  Jun  1 12:30:34.989: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.986384331s
  Jun  1 12:30:35.994: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.978679301s
  Jun  1 12:30:36.999: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.974082702s
  Jun  1 12:30:38.003: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.968980335s
  Jun  1 12:30:39.008: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.965375013s
  Jun  1 12:30:40.013: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.960174029s
  Jun  1 12:30:41.018: INFO: Verifying statefulset ss doesn't scale past 3 for another 954.914816ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-1011 @ 06/01/24 12:30:42.019
  Jun  1 12:30:42.024: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=statefulset-1011 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun  1 12:30:42.122: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun  1 12:30:42.122: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun  1 12:30:42.122: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun  1 12:30:42.122: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=statefulset-1011 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun  1 12:30:42.222: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun  1 12:30:42.222: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun  1 12:30:42.222: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun  1 12:30:42.222: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=statefulset-1011 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun  1 12:30:42.307: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun  1 12:30:42.307: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun  1 12:30:42.307: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun  1 12:30:42.307: INFO: Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 06/01/24 12:30:52.321
  Jun  1 12:30:52.321: INFO: Deleting all statefulset in ns statefulset-1011
  Jun  1 12:30:52.325: INFO: Scaling statefulset ss to 0
  Jun  1 12:30:52.335: INFO: Waiting for statefulset status.replicas updated to 0
  Jun  1 12:30:52.338: INFO: Deleting statefulset ss
  Jun  1 12:30:52.350: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1011" for this suite. @ 06/01/24 12:30:52.354
â€¢ [71.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 06/01/24 12:30:52.362
  Jun  1 12:30:52.362: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename gc @ 06/01/24 12:30:52.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:30:52.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:30:52.382
  STEP: create the deployment @ 06/01/24 12:30:52.384
  W0601 12:30:52.390968      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 06/01/24 12:30:52.391
  STEP: delete the deployment @ 06/01/24 12:30:52.501
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 06/01/24 12:30:52.507
  STEP: Gathering metrics @ 06/01/24 12:30:53.024
  W0601 12:30:53.028918      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jun  1 12:30:53.029: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun  1 12:30:53.029: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2664" for this suite. @ 06/01/24 12:30:53.033
â€¢ [0.677 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 06/01/24 12:30:53.04
  Jun  1 12:30:53.040: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename var-expansion @ 06/01/24 12:30:53.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:30:53.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:30:53.057
  STEP: creating the pod @ 06/01/24 12:30:53.059
  STEP: waiting for pod running @ 06/01/24 12:30:53.069
  STEP: creating a file in subpath @ 06/01/24 12:30:55.077
  Jun  1 12:30:55.081: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-9396 PodName:var-expansion-e404fff2-9236-4fb3-86d2-4f9012c1cc8e ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  1 12:30:55.081: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 12:30:55.081: INFO: ExecWithOptions: Clientset creation
  Jun  1 12:30:55.081: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-9396/pods/var-expansion-e404fff2-9236-4fb3-86d2-4f9012c1cc8e/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 06/01/24 12:30:55.138
  Jun  1 12:30:55.141: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-9396 PodName:var-expansion-e404fff2-9236-4fb3-86d2-4f9012c1cc8e ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  1 12:30:55.141: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 12:30:55.142: INFO: ExecWithOptions: Clientset creation
  Jun  1 12:30:55.142: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-9396/pods/var-expansion-e404fff2-9236-4fb3-86d2-4f9012c1cc8e/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 06/01/24 12:30:55.189
  Jun  1 12:30:55.702: INFO: Successfully updated pod "var-expansion-e404fff2-9236-4fb3-86d2-4f9012c1cc8e"
  STEP: waiting for annotated pod running @ 06/01/24 12:30:55.702
  STEP: deleting the pod gracefully @ 06/01/24 12:30:55.705
  Jun  1 12:30:55.705: INFO: Deleting pod "var-expansion-e404fff2-9236-4fb3-86d2-4f9012c1cc8e" in namespace "var-expansion-9396"
  Jun  1 12:30:55.714: INFO: Wait up to 5m0s for pod "var-expansion-e404fff2-9236-4fb3-86d2-4f9012c1cc8e" to be fully deleted
  Jun  1 12:31:27.798: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9396" for this suite. @ 06/01/24 12:31:27.802
â€¢ [34.768 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 06/01/24 12:31:27.808
  Jun  1 12:31:27.808: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename deployment @ 06/01/24 12:31:27.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:31:27.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:31:27.828
  Jun  1 12:31:27.840: INFO: Pod name rollover-pod: Found 0 pods out of 1
  Jun  1 12:31:32.843: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/01/24 12:31:32.843
  Jun  1 12:31:32.843: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  Jun  1 12:31:34.848: INFO: Creating deployment "test-rollover-deployment"
  Jun  1 12:31:34.861: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  Jun  1 12:31:36.870: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Jun  1 12:31:36.876: INFO: Ensure that both replica sets have 1 created replica
  Jun  1 12:31:36.883: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Jun  1 12:31:36.891: INFO: Updating deployment test-rollover-deployment
  Jun  1 12:31:36.891: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  Jun  1 12:31:38.898: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Jun  1 12:31:38.905: INFO: Make sure deployment "test-rollover-deployment" is complete
  Jun  1 12:31:38.912: INFO: all replica sets need to contain the pod-template-hash label
  Jun  1 12:31:38.912: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 1, 12, 31, 34, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 1, 12, 31, 34, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 1, 12, 31, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 1, 12, 31, 34, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun  1 12:31:40.920: INFO: all replica sets need to contain the pod-template-hash label
  Jun  1 12:31:40.920: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 1, 12, 31, 34, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 1, 12, 31, 34, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 1, 12, 31, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 1, 12, 31, 34, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun  1 12:31:42.920: INFO: all replica sets need to contain the pod-template-hash label
  Jun  1 12:31:42.921: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 1, 12, 31, 34, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 1, 12, 31, 34, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 1, 12, 31, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 1, 12, 31, 34, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun  1 12:31:44.922: INFO: all replica sets need to contain the pod-template-hash label
  Jun  1 12:31:44.922: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 1, 12, 31, 34, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 1, 12, 31, 34, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 1, 12, 31, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 1, 12, 31, 34, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun  1 12:31:46.919: INFO: all replica sets need to contain the pod-template-hash label
  Jun  1 12:31:46.919: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 1, 12, 31, 34, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 1, 12, 31, 34, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 1, 12, 31, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 1, 12, 31, 34, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun  1 12:31:48.922: INFO: 
  Jun  1 12:31:48.922: INFO: Ensure that both old replica sets have no replicas
  Jun  1 12:31:48.932: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7986",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0abdb2b1-0cb4-47f7-9b31-d018d4d4fa8f",
      ResourceVersion: (string) (len=5) "11701",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852841894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841907,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841907,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-68774655d5\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun  1 12:31:48.936: INFO: New ReplicaSet "test-rollover-deployment-68774655d5" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-68774655d5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7986",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "58f9e27b-e00b-40f3-88ff-7f62d6243635",
      ResourceVersion: (string) (len=5) "11689",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852841896,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "0abdb2b1-0cb4-47f7-9b31-d018d4d4fa8f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 61 62 64 62 32  62 31 2d 30 63 62 34 2d  |\"0abdb2b1-0cb4-|
              00000120  34 37 66 37 2d 39 62 33  31 2d 64 30 31 38 64 34  |47f7-9b31-d018d4|
              00000130  64 34 66 61 38 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |d4fa8f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841907,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun  1 12:31:48.938: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Jun  1 12:31:48.938: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7986",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f76dd18c-a5eb-4b1a-bc38-8a545ae7d2fb",
      ResourceVersion: (string) (len=5) "11700",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852841887,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "0abdb2b1-0cb4-47f7-9b31-d018d4d4fa8f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841887,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841907,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  30 61 62 64 62 32 62 31  2d 30 63 62 34 2d 34 37  |0abdb2b1-0cb4-47|
              000000c0  66 37 2d 39 62 33 31 2d  64 30 31 38 64 34 64 34  |f7-9b31-d018d4d4|
              000000d0  66 61 38 66 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |fa8f\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841907,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun  1 12:31:48.939: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7986",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9030e972-675a-4b33-9074-c8bad49c350e",
      ResourceVersion: (string) (len=5) "11653",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852841894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "0abdb2b1-0cb4-47f7-9b31-d018d4d4fa8f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 61 62 64 62 32  62 31 2d 30 63 62 34 2d  |\"0abdb2b1-0cb4-|
              00000120  34 37 66 37 2d 39 62 33  31 2d 64 30 31 38 64 34  |47f7-9b31-d018d4|
              00000130  64 34 66 61 38 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |d4fa8f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun  1 12:31:48.943: INFO: Pod "test-rollover-deployment-68774655d5-9ckpm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-68774655d5-9ckpm",
      GenerateName: (string) (len=36) "test-rollover-deployment-68774655d5-",
      Namespace: (string) (len=15) "deployment-7986",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a227d48f-e226-4ccb-827f-89d6c96efb04",
      ResourceVersion: (string) (len=5) "11669",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852841896,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-68774655d5",
          UID: (types.UID) (len=36) "58f9e27b-e00b-40f3-88ff-7f62d6243635",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 38  66 39 65 32 37 62 2d 65  |d\":\"58f9e27b-e|
              00000090  30 30 62 2d 34 30 66 33  2d 38 38 66 66 2d 37 66  |00b-40f3-88ff-7f|
              000000a0  36 32 64 36 32 34 33 36  33 35 5c 22 7d 22 3a 7b  |62d6243635\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841897,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  36 2e 38 37 5c 22 7d 22  |2.168.126.87\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bbcrc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bbcrc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-80-202",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841897,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841897,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841897,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852841896,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.80.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.80.202"
        }
      },
      PodIP: (string) (len=14) "192.168.126.87",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.126.87"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852841896,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852841897,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://45fb8498ca574339343e3a431ba80074948a65ad9174908c91926b4af06a2a23",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  1 12:31:48.945: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7986" for this suite. @ 06/01/24 12:31:48.948
â€¢ [21.148 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 06/01/24 12:31:48.956
  Jun  1 12:31:48.956: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename emptydir @ 06/01/24 12:31:48.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:31:48.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:31:48.975
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 06/01/24 12:31:48.978
  STEP: Saw pod success @ 06/01/24 12:31:53.003
  Jun  1 12:31:53.006: INFO: Trying to get logs from node ip-172-31-74-111 pod pod-7a4fdf41-be7f-4b9e-97f8-b565c4613d1e container test-container: <nil>
  STEP: delete the pod @ 06/01/24 12:31:53.022
  Jun  1 12:31:53.038: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1602" for this suite. @ 06/01/24 12:31:53.042
â€¢ [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 06/01/24 12:31:53.049
  Jun  1 12:31:53.049: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename resourcequota @ 06/01/24 12:31:53.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:31:53.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:31:53.069
  STEP: Creating resourceQuota "e2e-rq-status-7whhv" @ 06/01/24 12:31:53.075
  Jun  1 12:31:53.082: INFO: Resource quota "e2e-rq-status-7whhv" reports spec: hard cpu limit of 500m
  Jun  1 12:31:53.082: INFO: Resource quota "e2e-rq-status-7whhv" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-7whhv" /status @ 06/01/24 12:31:53.082
  STEP: Confirm /status for "e2e-rq-status-7whhv" resourceQuota via watch @ 06/01/24 12:31:53.088
  Jun  1 12:31:53.089: INFO: observed resourceQuota "e2e-rq-status-7whhv" in namespace "resourcequota-9035" with hard status: v1.ResourceList(nil)
  Jun  1 12:31:53.089: INFO: Found resourceQuota "e2e-rq-status-7whhv" in namespace "resourcequota-9035" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Jun  1 12:31:53.089: INFO: ResourceQuota "e2e-rq-status-7whhv" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 06/01/24 12:31:53.093
  Jun  1 12:31:53.100: INFO: Resource quota "e2e-rq-status-7whhv" reports spec: hard cpu limit of 1
  Jun  1 12:31:53.100: INFO: Resource quota "e2e-rq-status-7whhv" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-7whhv" /status @ 06/01/24 12:31:53.1
  STEP: Confirm /status for "e2e-rq-status-7whhv" resourceQuota via watch @ 06/01/24 12:31:53.106
  Jun  1 12:31:53.107: INFO: observed resourceQuota "e2e-rq-status-7whhv" in namespace "resourcequota-9035" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Jun  1 12:31:53.107: INFO: Found resourceQuota "e2e-rq-status-7whhv" in namespace "resourcequota-9035" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Jun  1 12:31:53.107: INFO: ResourceQuota "e2e-rq-status-7whhv" /status was patched
  STEP: Get "e2e-rq-status-7whhv" /status @ 06/01/24 12:31:53.107
  Jun  1 12:31:53.111: INFO: Resourcequota "e2e-rq-status-7whhv" reports status: hard cpu of 1
  Jun  1 12:31:53.111: INFO: Resourcequota "e2e-rq-status-7whhv" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-7whhv" /status before checking Spec is unchanged @ 06/01/24 12:31:53.114
  Jun  1 12:31:53.118: INFO: Resourcequota "e2e-rq-status-7whhv" reports status: hard cpu of 2
  Jun  1 12:31:53.118: INFO: Resourcequota "e2e-rq-status-7whhv" reports status: hard memory of 2Gi
  Jun  1 12:31:53.119: INFO: Found resourceQuota "e2e-rq-status-7whhv" in namespace "resourcequota-9035" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  Jun  1 12:31:53.123: INFO: ResourceQuota "e2e-rq-status-7whhv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7whhv", GenerateName:"", Namespace:"resourcequota-9035", SelfLink:"", UID:"12c0411c-2327-4a03-9cfc-a60d51fadad0", ResourceVersion:"11748", Generation:0, CreationTimestamp:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7whhv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f75080), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f750e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f75110), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  1 12:31:58.123: INFO: ResourceQuota "e2e-rq-status-7whhv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7whhv", GenerateName:"", Namespace:"resourcequota-9035", SelfLink:"", UID:"12c0411c-2327-4a03-9cfc-a60d51fadad0", ResourceVersion:"11748", Generation:0, CreationTimestamp:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7whhv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00576da28), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00576da58), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00576da88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  1 12:32:03.123: INFO: ResourceQuota "e2e-rq-status-7whhv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7whhv", GenerateName:"", Namespace:"resourcequota-9035", SelfLink:"", UID:"12c0411c-2327-4a03-9cfc-a60d51fadad0", ResourceVersion:"11748", Generation:0, CreationTimestamp:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7whhv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00576c0a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00576c0d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00576c108), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  1 12:32:08.124: INFO: ResourceQuota "e2e-rq-status-7whhv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7whhv", GenerateName:"", Namespace:"resourcequota-9035", SelfLink:"", UID:"12c0411c-2327-4a03-9cfc-a60d51fadad0", ResourceVersion:"11748", Generation:0, CreationTimestamp:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7whhv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f742e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f74330), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f74378), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  1 12:32:13.124: INFO: ResourceQuota "e2e-rq-status-7whhv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7whhv", GenerateName:"", Namespace:"resourcequota-9035", SelfLink:"", UID:"12c0411c-2327-4a03-9cfc-a60d51fadad0", ResourceVersion:"11748", Generation:0, CreationTimestamp:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7whhv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00576c2a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00576c2d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00576c300), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  1 12:32:18.124: INFO: ResourceQuota "e2e-rq-status-7whhv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7whhv", GenerateName:"", Namespace:"resourcequota-9035", SelfLink:"", UID:"12c0411c-2327-4a03-9cfc-a60d51fadad0", ResourceVersion:"11748", Generation:0, CreationTimestamp:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7whhv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f746d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f74720), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f74768), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  1 12:32:23.128: INFO: ResourceQuota "e2e-rq-status-7whhv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7whhv", GenerateName:"", Namespace:"resourcequota-9035", SelfLink:"", UID:"12c0411c-2327-4a03-9cfc-a60d51fadad0", ResourceVersion:"11748", Generation:0, CreationTimestamp:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7whhv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f74a50), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f74a98), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f74ae0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  1 12:32:28.124: INFO: ResourceQuota "e2e-rq-status-7whhv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7whhv", GenerateName:"", Namespace:"resourcequota-9035", SelfLink:"", UID:"12c0411c-2327-4a03-9cfc-a60d51fadad0", ResourceVersion:"11748", Generation:0, CreationTimestamp:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7whhv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00576c6a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00576c6d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00576c720), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  1 12:32:33.123: INFO: ResourceQuota "e2e-rq-status-7whhv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7whhv", GenerateName:"", Namespace:"resourcequota-9035", SelfLink:"", UID:"12c0411c-2327-4a03-9cfc-a60d51fadad0", ResourceVersion:"11748", Generation:0, CreationTimestamp:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7whhv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f74f18), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f74f48), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f74fa8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  1 12:32:38.126: INFO: ResourceQuota "e2e-rq-status-7whhv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7whhv", GenerateName:"", Namespace:"resourcequota-9035", SelfLink:"", UID:"12c0411c-2327-4a03-9cfc-a60d51fadad0", ResourceVersion:"11748", Generation:0, CreationTimestamp:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7whhv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f75278), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f752a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f75338), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  1 12:32:43.124: INFO: ResourceQuota "e2e-rq-status-7whhv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7whhv", GenerateName:"", Namespace:"resourcequota-9035", SelfLink:"", UID:"12c0411c-2327-4a03-9cfc-a60d51fadad0", ResourceVersion:"11748", Generation:0, CreationTimestamp:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7whhv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f75590), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f755d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f75608), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  1 12:32:48.124: INFO: ResourceQuota "e2e-rq-status-7whhv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7whhv", GenerateName:"", Namespace:"resourcequota-9035", SelfLink:"", UID:"12c0411c-2327-4a03-9cfc-a60d51fadad0", ResourceVersion:"11748", Generation:0, CreationTimestamp:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7whhv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f758f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f75938), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f75968), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  1 12:32:53.125: INFO: ResourceQuota "e2e-rq-status-7whhv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7whhv", GenerateName:"", Namespace:"resourcequota-9035", SelfLink:"", UID:"12c0411c-2327-4a03-9cfc-a60d51fadad0", ResourceVersion:"11748", Generation:0, CreationTimestamp:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7whhv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f75cb0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f75d28), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f75db8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  1 12:32:58.124: INFO: ResourceQuota "e2e-rq-status-7whhv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7whhv", GenerateName:"", Namespace:"resourcequota-9035", SelfLink:"", UID:"12c0411c-2327-4a03-9cfc-a60d51fadad0", ResourceVersion:"11748", Generation:0, CreationTimestamp:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7whhv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00576c978), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00576c9c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00576c9f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  1 12:33:03.124: INFO: ResourceQuota "e2e-rq-status-7whhv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7whhv", GenerateName:"", Namespace:"resourcequota-9035", SelfLink:"", UID:"12c0411c-2327-4a03-9cfc-a60d51fadad0", ResourceVersion:"11748", Generation:0, CreationTimestamp:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7whhv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00576cbd0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00576cc00), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00576cc30), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  1 12:33:08.124: INFO: ResourceQuota "e2e-rq-status-7whhv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7whhv", GenerateName:"", Namespace:"resourcequota-9035", SelfLink:"", UID:"12c0411c-2327-4a03-9cfc-a60d51fadad0", ResourceVersion:"11748", Generation:0, CreationTimestamp:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7whhv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00576ce88), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00576ceb8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00576cf00), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  1 12:33:13.123: INFO: ResourceQuota "e2e-rq-status-7whhv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7whhv", GenerateName:"", Namespace:"resourcequota-9035", SelfLink:"", UID:"12c0411c-2327-4a03-9cfc-a60d51fadad0", ResourceVersion:"11748", Generation:0, CreationTimestamp:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7whhv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050ca5a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050ca5e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050ca630), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  1 12:33:18.125: INFO: ResourceQuota "e2e-rq-status-7whhv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7whhv", GenerateName:"", Namespace:"resourcequota-9035", SelfLink:"", UID:"12c0411c-2327-4a03-9cfc-a60d51fadad0", ResourceVersion:"11748", Generation:0, CreationTimestamp:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7whhv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00576d0b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00576d0f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00576d128), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  1 12:33:23.124: INFO: ResourceQuota "e2e-rq-status-7whhv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7whhv", GenerateName:"", Namespace:"resourcequota-9035", SelfLink:"", UID:"12c0411c-2327-4a03-9cfc-a60d51fadad0", ResourceVersion:"11748", Generation:0, CreationTimestamp:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7whhv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00576d2a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00576d2f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00576d320), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  1 12:33:28.123: INFO: ResourceQuota "e2e-rq-status-7whhv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7whhv", GenerateName:"", Namespace:"resourcequota-9035", SelfLink:"", UID:"12c0411c-2327-4a03-9cfc-a60d51fadad0", ResourceVersion:"11748", Generation:0, CreationTimestamp:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7whhv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00576d5a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00576d680), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00576d6b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  1 12:33:33.123: INFO: ResourceQuota "e2e-rq-status-7whhv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7whhv", GenerateName:"", Namespace:"resourcequota-9035", SelfLink:"", UID:"12c0411c-2327-4a03-9cfc-a60d51fadad0", ResourceVersion:"11748", Generation:0, CreationTimestamp:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7whhv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050cac60), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050caca8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050cacf0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  1 12:33:38.126: INFO: ResourceQuota "e2e-rq-status-7whhv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7whhv", GenerateName:"", Namespace:"resourcequota-9035", SelfLink:"", UID:"12c0411c-2327-4a03-9cfc-a60d51fadad0", ResourceVersion:"11748", Generation:0, CreationTimestamp:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7whhv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050cafa8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050cafd8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050cb050), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  1 12:33:43.124: INFO: ResourceQuota "e2e-rq-status-7whhv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7whhv", GenerateName:"", Namespace:"resourcequota-9035", SelfLink:"", UID:"12c0411c-2327-4a03-9cfc-a60d51fadad0", ResourceVersion:"11748", Generation:0, CreationTimestamp:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7whhv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00576da40), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00576da70), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00576dad0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  1 12:33:48.125: INFO: ResourceQuota "e2e-rq-status-7whhv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7whhv", GenerateName:"", Namespace:"resourcequota-9035", SelfLink:"", UID:"12c0411c-2327-4a03-9cfc-a60d51fadad0", ResourceVersion:"11748", Generation:0, CreationTimestamp:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7whhv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00576dd40), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00576dd88), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00576ddb8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  1 12:33:53.125: INFO: ResourceQuota "e2e-rq-status-7whhv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7whhv", GenerateName:"", Namespace:"resourcequota-9035", SelfLink:"", UID:"12c0411c-2327-4a03-9cfc-a60d51fadad0", ResourceVersion:"11748", Generation:0, CreationTimestamp:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7whhv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050cb290), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050cb2d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050cb338), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  1 12:33:58.123: INFO: ResourceQuota "e2e-rq-status-7whhv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7whhv", GenerateName:"", Namespace:"resourcequota-9035", SelfLink:"", UID:"12c0411c-2327-4a03-9cfc-a60d51fadad0", ResourceVersion:"11748", Generation:0, CreationTimestamp:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7whhv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050cb698), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050cb6f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050cb740), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  1 12:34:03.126: INFO: ResourceQuota "e2e-rq-status-7whhv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7whhv", GenerateName:"", Namespace:"resourcequota-9035", SelfLink:"", UID:"12c0411c-2327-4a03-9cfc-a60d51fadad0", ResourceVersion:"11748", Generation:0, CreationTimestamp:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7whhv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0051501b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0051501e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005150210), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  1 12:34:08.124: INFO: ResourceQuota "e2e-rq-status-7whhv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7whhv", GenerateName:"", Namespace:"resourcequota-9035", SelfLink:"", UID:"12c0411c-2327-4a03-9cfc-a60d51fadad0", ResourceVersion:"11748", Generation:0, CreationTimestamp:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7whhv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0051505b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0051505e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005150630), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  1 12:34:13.123: INFO: ResourceQuota "e2e-rq-status-7whhv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7whhv", GenerateName:"", Namespace:"resourcequota-9035", SelfLink:"", UID:"12c0411c-2327-4a03-9cfc-a60d51fadad0", ResourceVersion:"11748", Generation:0, CreationTimestamp:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7whhv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005150990), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0051509d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005150a20), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  1 12:34:18.125: INFO: ResourceQuota "e2e-rq-status-7whhv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7whhv", GenerateName:"", Namespace:"resourcequota-9035", SelfLink:"", UID:"12c0411c-2327-4a03-9cfc-a60d51fadad0", ResourceVersion:"11748", Generation:0, CreationTimestamp:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7whhv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050ca3a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050ca408), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050ca438), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  1 12:34:23.124: INFO: ResourceQuota "e2e-rq-status-7whhv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7whhv", GenerateName:"", Namespace:"resourcequota-9035", SelfLink:"", UID:"12c0411c-2327-4a03-9cfc-a60d51fadad0", ResourceVersion:"11748", Generation:0, CreationTimestamp:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7whhv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050ca630), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050ca660), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050ca6c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  1 12:34:28.123: INFO: ResourceQuota "e2e-rq-status-7whhv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7whhv", GenerateName:"", Namespace:"resourcequota-9035", SelfLink:"", UID:"12c0411c-2327-4a03-9cfc-a60d51fadad0", ResourceVersion:"11748", Generation:0, CreationTimestamp:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7whhv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050caa38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050caa68), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050caac8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  1 12:34:33.125: INFO: ResourceQuota "e2e-rq-status-7whhv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7whhv", GenerateName:"", Namespace:"resourcequota-9035", SelfLink:"", UID:"12c0411c-2327-4a03-9cfc-a60d51fadad0", ResourceVersion:"11748", Generation:0, CreationTimestamp:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7whhv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050cadb0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050cae10), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050cae40), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  1 12:34:38.125: INFO: ResourceQuota "e2e-rq-status-7whhv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7whhv", GenerateName:"", Namespace:"resourcequota-9035", SelfLink:"", UID:"12c0411c-2327-4a03-9cfc-a60d51fadad0", ResourceVersion:"11748", Generation:0, CreationTimestamp:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7whhv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005150f30), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005150f60), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005150f90), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  1 12:34:43.124: INFO: ResourceQuota "e2e-rq-status-7whhv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7whhv", GenerateName:"", Namespace:"resourcequota-9035", SelfLink:"", UID:"12c0411c-2327-4a03-9cfc-a60d51fadad0", ResourceVersion:"11748", Generation:0, CreationTimestamp:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7whhv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050cb2d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050cb338), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050cb428), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  1 12:34:48.125: INFO: ResourceQuota "e2e-rq-status-7whhv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7whhv", GenerateName:"", Namespace:"resourcequota-9035", SelfLink:"", UID:"12c0411c-2327-4a03-9cfc-a60d51fadad0", ResourceVersion:"11748", Generation:0, CreationTimestamp:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7whhv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050cb620), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050cb668), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050cb698), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  1 12:34:53.123: INFO: ResourceQuota "e2e-rq-status-7whhv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7whhv", GenerateName:"", Namespace:"resourcequota-9035", SelfLink:"", UID:"12c0411c-2327-4a03-9cfc-a60d51fadad0", ResourceVersion:"11748", Generation:0, CreationTimestamp:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7whhv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0051514d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005151500), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 12, 31, 53, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005151560), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  1 12:34:58.125: INFO: ResourceQuota "e2e-rq-status-7whhv" Spec was unchanged and /status reset
  Jun  1 12:34:58.125: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9035" for this suite. @ 06/01/24 12:34:58.129
â€¢ [185.086 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 06/01/24 12:34:58.136
  Jun  1 12:34:58.136: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename subpath @ 06/01/24 12:34:58.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:34:58.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:34:58.156
  STEP: Setting up data @ 06/01/24 12:34:58.158
  STEP: Creating pod pod-subpath-test-downwardapi-dzrm @ 06/01/24 12:34:58.167
  STEP: Creating a pod to test atomic-volume-subpath @ 06/01/24 12:34:58.167
  STEP: Saw pod success @ 06/01/24 12:35:22.238
  Jun  1 12:35:22.241: INFO: Trying to get logs from node ip-172-31-74-111 pod pod-subpath-test-downwardapi-dzrm container test-container-subpath-downwardapi-dzrm: <nil>
  STEP: delete the pod @ 06/01/24 12:35:22.252
  STEP: Deleting pod pod-subpath-test-downwardapi-dzrm @ 06/01/24 12:35:22.269
  Jun  1 12:35:22.269: INFO: Deleting pod "pod-subpath-test-downwardapi-dzrm" in namespace "subpath-724"
  Jun  1 12:35:22.273: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-724" for this suite. @ 06/01/24 12:35:22.276
â€¢ [24.146 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 06/01/24 12:35:22.282
  Jun  1 12:35:22.282: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/01/24 12:35:22.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:35:22.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:35:22.301
  Jun  1 12:35:22.303: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 12:35:25.385: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3429" for this suite. @ 06/01/24 12:35:25.391
â€¢ [3.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 06/01/24 12:35:25.403
  Jun  1 12:35:25.403: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename projected @ 06/01/24 12:35:25.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:35:25.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:35:25.424
  STEP: Creating a pod to test downward API volume plugin @ 06/01/24 12:35:25.426
  STEP: Saw pod success @ 06/01/24 12:35:29.452
  Jun  1 12:35:29.455: INFO: Trying to get logs from node ip-172-31-74-111 pod downwardapi-volume-00434d4b-f44a-41f0-a538-e21058fabc51 container client-container: <nil>
  STEP: delete the pod @ 06/01/24 12:35:29.461
  Jun  1 12:35:29.474: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7429" for this suite. @ 06/01/24 12:35:29.477
â€¢ [4.081 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 06/01/24 12:35:29.484
  Jun  1 12:35:29.484: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename replication-controller @ 06/01/24 12:35:29.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:35:29.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:35:29.501
  STEP: Creating replication controller my-hostname-basic-ca2e9010-96cc-479c-89e7-7d298b15acb7 @ 06/01/24 12:35:29.504
  Jun  1 12:35:29.515: INFO: Pod name my-hostname-basic-ca2e9010-96cc-479c-89e7-7d298b15acb7: Found 0 pods out of 1
  Jun  1 12:35:34.520: INFO: Pod name my-hostname-basic-ca2e9010-96cc-479c-89e7-7d298b15acb7: Found 1 pods out of 1
  Jun  1 12:35:34.520: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-ca2e9010-96cc-479c-89e7-7d298b15acb7" are running
  Jun  1 12:35:34.523: INFO: Pod "my-hostname-basic-ca2e9010-96cc-479c-89e7-7d298b15acb7-v249w" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-01 12:35:30 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-01 12:35:29 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-01 12:35:30 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-01 12:35:30 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-01 12:35:29 +0000 UTC Reason: Message:}])
  Jun  1 12:35:34.523: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 06/01/24 12:35:34.523
  Jun  1 12:35:34.532: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7405" for this suite. @ 06/01/24 12:35:34.536
â€¢ [5.058 seconds]
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 06/01/24 12:35:34.542
  Jun  1 12:35:34.542: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename svcaccounts @ 06/01/24 12:35:34.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:35:34.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:35:34.564
  STEP: Creating ServiceAccount "e2e-sa-c6fdc"  @ 06/01/24 12:35:34.566
  Jun  1 12:35:34.572: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-c6fdc"  @ 06/01/24 12:35:34.572
  Jun  1 12:35:34.580: INFO: AutomountServiceAccountToken: true
  Jun  1 12:35:34.580: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8722" for this suite. @ 06/01/24 12:35:34.584
â€¢ [0.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 06/01/24 12:35:34.59
  Jun  1 12:35:34.590: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename server-version @ 06/01/24 12:35:34.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:35:34.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:35:34.61
  STEP: Request ServerVersion @ 06/01/24 12:35:34.613
  STEP: Confirm major version @ 06/01/24 12:35:34.613
  Jun  1 12:35:34.613: INFO: Major version: 1
  STEP: Confirm minor version @ 06/01/24 12:35:34.613
  Jun  1 12:35:34.613: INFO: cleanMinorVersion: 29
  Jun  1 12:35:34.614: INFO: Minor version: 29
  Jun  1 12:35:34.614: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-6273" for this suite. @ 06/01/24 12:35:34.617
â€¢ [0.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 06/01/24 12:35:34.623
  Jun  1 12:35:34.623: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename aggregator @ 06/01/24 12:35:34.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:35:34.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:35:34.642
  Jun  1 12:35:34.645: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Registering the sample API server. @ 06/01/24 12:35:34.645
  Jun  1 12:35:34.958: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Jun  1 12:35:34.984: INFO: new replicaset for deployment "sample-apiserver-deployment" is yet to be created
  Jun  1 12:35:37.028: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 1, 12, 35, 34, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 1, 12, 35, 34, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 1, 12, 35, 35, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 1, 12, 35, 34, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun  1 12:35:39.033: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 1, 12, 35, 34, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 1, 12, 35, 34, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 1, 12, 35, 35, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 1, 12, 35, 34, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun  1 12:35:41.032: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 1, 12, 35, 34, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 1, 12, 35, 34, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 1, 12, 35, 35, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 1, 12, 35, 34, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun  1 12:35:43.034: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 1, 12, 35, 34, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 1, 12, 35, 34, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 1, 12, 35, 35, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 1, 12, 35, 34, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun  1 12:35:45.033: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 1, 12, 35, 34, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 1, 12, 35, 34, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 1, 12, 35, 35, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 1, 12, 35, 34, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun  1 12:35:47.033: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 1, 12, 35, 34, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 1, 12, 35, 34, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 1, 12, 35, 35, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 1, 12, 35, 34, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun  1 12:35:49.034: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 1, 12, 35, 34, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 1, 12, 35, 34, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 1, 12, 35, 35, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 1, 12, 35, 34, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun  1 12:35:51.033: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 1, 12, 35, 34, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 1, 12, 35, 34, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 1, 12, 35, 35, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 1, 12, 35, 34, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun  1 12:35:53.033: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 1, 12, 35, 34, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 1, 12, 35, 34, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 1, 12, 35, 35, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 1, 12, 35, 34, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun  1 12:35:55.034: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 1, 12, 35, 34, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 1, 12, 35, 34, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 1, 12, 35, 35, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 1, 12, 35, 34, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun  1 12:35:57.152: INFO: Waited 112.77633ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 06/01/24 12:35:57.182
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 06/01/24 12:35:57.186
  STEP: List APIServices @ 06/01/24 12:35:57.192
  Jun  1 12:35:57.197: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 06/01/24 12:35:57.197
  Jun  1 12:35:57.208: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 06/01/24 12:35:57.208
  Jun  1 12:35:57.218: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.June, 1, 12, 35, 57, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 06/01/24 12:35:57.218
  Jun  1 12:35:57.220: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-06-01 12:35:57 +0000 UTC Passed all checks passed}
  Jun  1 12:35:57.221: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun  1 12:35:57.221: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 06/01/24 12:35:57.221
  Jun  1 12:35:57.231: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-998444534" @ 06/01/24 12:35:57.231
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 06/01/24 12:35:57.239
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 06/01/24 12:35:57.244
  STEP: Patch APIService Status @ 06/01/24 12:35:57.247
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 06/01/24 12:35:57.254
  Jun  1 12:35:57.257: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-06-01 12:35:57 +0000 UTC Passed all checks passed}
  Jun  1 12:35:57.257: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun  1 12:35:57.257: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Jun  1 12:35:57.257: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 06/01/24 12:35:57.257
  STEP: Confirm that the generated APIService has been deleted @ 06/01/24 12:35:57.268
  Jun  1 12:35:57.268: INFO: Requesting list of APIServices to confirm quantity
  Jun  1 12:35:57.271: INFO: Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  Jun  1 12:35:57.271: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Jun  1 12:35:57.365: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-2441" for this suite. @ 06/01/24 12:35:57.368
â€¢ [22.752 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 06/01/24 12:35:57.375
  Jun  1 12:35:57.375: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename webhook @ 06/01/24 12:35:57.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:35:57.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:35:57.395
  STEP: Setting up server cert @ 06/01/24 12:35:57.419
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/01/24 12:35:57.701
  STEP: Deploying the webhook pod @ 06/01/24 12:35:57.707
  STEP: Wait for the deployment to be ready @ 06/01/24 12:35:57.719
  Jun  1 12:35:57.730: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/01/24 12:35:59.741
  STEP: Verifying the service has paired with the endpoint @ 06/01/24 12:35:59.751
  Jun  1 12:36:00.752: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 06/01/24 12:36:00.759
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 06/01/24 12:36:00.775
  STEP: Creating a configMap that should not be mutated @ 06/01/24 12:36:00.782
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 06/01/24 12:36:00.791
  STEP: Creating a configMap that should be mutated @ 06/01/24 12:36:00.799
  Jun  1 12:36:00.852: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4882" for this suite. @ 06/01/24 12:36:00.855
  STEP: Destroying namespace "webhook-markers-6157" for this suite. @ 06/01/24 12:36:00.864
â€¢ [3.493 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 06/01/24 12:36:00.869
  Jun  1 12:36:00.869: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename webhook @ 06/01/24 12:36:00.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:36:00.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:36:00.891
  STEP: Setting up server cert @ 06/01/24 12:36:00.927
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/01/24 12:36:01.118
  STEP: Deploying the webhook pod @ 06/01/24 12:36:01.124
  STEP: Wait for the deployment to be ready @ 06/01/24 12:36:01.136
  Jun  1 12:36:01.142: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/01/24 12:36:03.156
  STEP: Verifying the service has paired with the endpoint @ 06/01/24 12:36:03.168
  Jun  1 12:36:04.168: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 06/01/24 12:36:04.176
  STEP: create a configmap that should be updated by the webhook @ 06/01/24 12:36:04.189
  Jun  1 12:36:04.240: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7228" for this suite. @ 06/01/24 12:36:04.245
  STEP: Destroying namespace "webhook-markers-4788" for this suite. @ 06/01/24 12:36:04.257
â€¢ [3.394 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1838
  STEP: Creating a kubernetes client @ 06/01/24 12:36:04.263
  Jun  1 12:36:04.263: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename kubectl @ 06/01/24 12:36:04.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:36:04.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:36:04.287
  STEP: starting the proxy server @ 06/01/24 12:36:04.289
  Jun  1 12:36:04.289: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-7350 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 06/01/24 12:36:04.321
  Jun  1 12:36:04.326: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7350" for this suite. @ 06/01/24 12:36:04.33
â€¢ [0.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 06/01/24 12:36:04.341
  Jun  1 12:36:04.341: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename container-probe @ 06/01/24 12:36:04.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:36:04.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:36:04.359
  Jun  1 12:36:26.438: INFO: Container started at 2024-06-01 12:36:05 +0000 UTC, pod became ready at 2024-06-01 12:36:24 +0000 UTC
  Jun  1 12:36:26.439: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3035" for this suite. @ 06/01/24 12:36:26.443
â€¢ [22.109 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1863
  STEP: Creating a kubernetes client @ 06/01/24 12:36:26.45
  Jun  1 12:36:26.450: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename kubectl @ 06/01/24 12:36:26.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:36:26.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:36:26.472
  STEP: Starting the proxy @ 06/01/24 12:36:26.474
  Jun  1 12:36:26.474: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-7251 proxy --unix-socket=/tmp/kubectl-proxy-unix3043244668/test'
  STEP: retrieving proxy /api/ output @ 06/01/24 12:36:26.509
  Jun  1 12:36:26.509: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7251" for this suite. @ 06/01/24 12:36:26.513
â€¢ [0.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 06/01/24 12:36:26.52
  Jun  1 12:36:26.520: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename csistoragecapacity @ 06/01/24 12:36:26.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:36:26.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:36:26.538
  STEP: getting /apis @ 06/01/24 12:36:26.54
  STEP: getting /apis/storage.k8s.io @ 06/01/24 12:36:26.543
  STEP: getting /apis/storage.k8s.io/v1 @ 06/01/24 12:36:26.544
  STEP: creating @ 06/01/24 12:36:26.545
  STEP: watching @ 06/01/24 12:36:26.563
  Jun  1 12:36:26.563: INFO: starting watch
  STEP: getting @ 06/01/24 12:36:26.57
  STEP: listing in namespace @ 06/01/24 12:36:26.572
  STEP: listing across namespaces @ 06/01/24 12:36:26.576
  STEP: patching @ 06/01/24 12:36:26.579
  STEP: updating @ 06/01/24 12:36:26.582
  Jun  1 12:36:26.587: INFO: waiting for watch events with expected annotations in namespace
  Jun  1 12:36:26.587: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 06/01/24 12:36:26.587
  STEP: deleting a collection @ 06/01/24 12:36:26.598
  Jun  1 12:36:26.612: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-2455" for this suite. @ 06/01/24 12:36:26.614
â€¢ [0.102 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 06/01/24 12:36:26.623
  Jun  1 12:36:26.623: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename services @ 06/01/24 12:36:26.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:36:26.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:36:26.643
  STEP: creating service nodeport-test with type=NodePort in namespace services-5214 @ 06/01/24 12:36:26.645
  STEP: creating replication controller nodeport-test in namespace services-5214 @ 06/01/24 12:36:26.659
  I0601 12:36:26.668634      21 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-5214, replica count: 2
  I0601 12:36:29.720287      21 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun  1 12:36:29.720: INFO: Creating new exec pod
  Jun  1 12:36:32.743: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-5214 exec execpodrv7f5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Jun  1 12:36:32.841: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Jun  1 12:36:32.841: INFO: stdout: ""
  Jun  1 12:36:33.744: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-5214 exec execpodrv7f5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Jun  1 12:36:33.836: INFO: stderr: "+ nc -v -t -w 2 nodeport-test 80\n+ echo hostName\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Jun  1 12:36:33.836: INFO: stdout: "nodeport-test-t5ccr"
  Jun  1 12:36:33.836: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-5214 exec execpodrv7f5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.108 80'
  Jun  1 12:36:33.924: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.108 80\nConnection to 10.152.183.108 80 port [tcp/http] succeeded!\n"
  Jun  1 12:36:33.924: INFO: stdout: "nodeport-test-t5ccr"
  Jun  1 12:36:33.924: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-5214 exec execpodrv7f5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.80.202 30421'
  Jun  1 12:36:34.018: INFO: stderr: "+ nc -v -t -w 2 172.31.80.202 30421\nConnection to 172.31.80.202 30421 port [tcp/*] succeeded!\n+ echo hostName\n"
  Jun  1 12:36:34.018: INFO: stdout: "nodeport-test-hxs9g"
  Jun  1 12:36:34.018: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-5214 exec execpodrv7f5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.74.111 30421'
  Jun  1 12:36:34.112: INFO: stderr: "+ nc -v -t -w 2 172.31.74.111 30421\n+ echo hostName\nConnection to 172.31.74.111 30421 port [tcp/*] succeeded!\n"
  Jun  1 12:36:34.112: INFO: stdout: "nodeport-test-hxs9g"
  Jun  1 12:36:34.112: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5214" for this suite. @ 06/01/24 12:36:34.116
â€¢ [7.499 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 06/01/24 12:36:34.122
  Jun  1 12:36:34.122: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename sched-preemption @ 06/01/24 12:36:34.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:36:34.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:36:34.145
  Jun  1 12:36:34.160: INFO: Waiting up to 1m0s for all nodes to be ready
  Jun  1 12:37:34.165: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 06/01/24 12:37:34.168
  Jun  1 12:37:34.184: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Jun  1 12:37:34.191: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Jun  1 12:37:34.209: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Jun  1 12:37:34.214: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Jun  1 12:37:34.232: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Jun  1 12:37:34.237: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 06/01/24 12:37:34.237
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 06/01/24 12:37:36.262
  Jun  1 12:37:40.356: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6076" for this suite. @ 06/01/24 12:37:40.359
â€¢ [66.244 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 06/01/24 12:37:40.367
  Jun  1 12:37:40.367: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename webhook @ 06/01/24 12:37:40.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:37:40.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:37:40.385
  STEP: Setting up server cert @ 06/01/24 12:37:40.41
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/01/24 12:37:40.536
  STEP: Deploying the webhook pod @ 06/01/24 12:37:40.542
  STEP: Wait for the deployment to be ready @ 06/01/24 12:37:40.558
  Jun  1 12:37:40.565: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/01/24 12:37:42.576
  STEP: Verifying the service has paired with the endpoint @ 06/01/24 12:37:42.587
  Jun  1 12:37:43.587: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 06/01/24 12:37:43.594
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 06/01/24 12:37:43.607
  STEP: Creating a dummy validating-webhook-configuration object @ 06/01/24 12:37:43.618
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 06/01/24 12:37:43.627
  STEP: Creating a dummy mutating-webhook-configuration object @ 06/01/24 12:37:43.633
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 06/01/24 12:37:43.64
  Jun  1 12:37:43.691: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9083" for this suite. @ 06/01/24 12:37:43.695
  STEP: Destroying namespace "webhook-markers-9532" for this suite. @ 06/01/24 12:37:43.701
â€¢ [3.340 seconds]
------------------------------
SSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 06/01/24 12:37:43.707
  Jun  1 12:37:43.707: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename events @ 06/01/24 12:37:43.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:37:43.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:37:43.727
  STEP: creating a test event @ 06/01/24 12:37:43.729
  STEP: listing events in all namespaces @ 06/01/24 12:37:43.737
  STEP: listing events in test namespace @ 06/01/24 12:37:43.75
  STEP: listing events with field selection filtering on source @ 06/01/24 12:37:43.753
  STEP: listing events with field selection filtering on reportingController @ 06/01/24 12:37:43.757
  STEP: getting the test event @ 06/01/24 12:37:43.76
  STEP: patching the test event @ 06/01/24 12:37:43.763
  STEP: getting the test event @ 06/01/24 12:37:43.772
  STEP: updating the test event @ 06/01/24 12:37:43.775
  STEP: getting the test event @ 06/01/24 12:37:43.781
  STEP: deleting the test event @ 06/01/24 12:37:43.784
  STEP: listing events in all namespaces @ 06/01/24 12:37:43.792
  STEP: listing events in test namespace @ 06/01/24 12:37:43.804
  Jun  1 12:37:43.806: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2002" for this suite. @ 06/01/24 12:37:43.809
â€¢ [0.109 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 06/01/24 12:37:43.816
  Jun  1 12:37:43.816: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename containers @ 06/01/24 12:37:43.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:37:43.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:37:43.836
  Jun  1 12:37:45.864: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7403" for this suite. @ 06/01/24 12:37:45.868
â€¢ [2.058 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 06/01/24 12:37:45.874
  Jun  1 12:37:45.874: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename svcaccounts @ 06/01/24 12:37:45.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:37:45.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:37:45.9
  STEP: reading a file in the container @ 06/01/24 12:37:47.922
  Jun  1 12:37:47.922: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4287 pod-service-account-051348a8-d648-40da-8740-2c8e0ec38718 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 06/01/24 12:37:48.006
  Jun  1 12:37:48.006: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4287 pod-service-account-051348a8-d648-40da-8740-2c8e0ec38718 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 06/01/24 12:37:48.094
  Jun  1 12:37:48.094: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4287 pod-service-account-051348a8-d648-40da-8740-2c8e0ec38718 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Jun  1 12:37:48.178: INFO: Got root ca configmap in namespace "svcaccounts-4287"
  Jun  1 12:37:48.180: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4287" for this suite. @ 06/01/24 12:37:48.183
â€¢ [2.315 seconds]
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 06/01/24 12:37:48.19
  Jun  1 12:37:48.190: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename cronjob @ 06/01/24 12:37:48.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:37:48.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:37:48.21
  STEP: Creating a cronjob @ 06/01/24 12:37:48.212
  STEP: creating @ 06/01/24 12:37:48.212
  STEP: getting @ 06/01/24 12:37:48.219
  STEP: listing @ 06/01/24 12:37:48.221
  STEP: watching @ 06/01/24 12:37:48.225
  Jun  1 12:37:48.225: INFO: starting watch
  STEP: cluster-wide listing @ 06/01/24 12:37:48.226
  STEP: cluster-wide watching @ 06/01/24 12:37:48.228
  Jun  1 12:37:48.228: INFO: starting watch
  STEP: patching @ 06/01/24 12:37:48.229
  STEP: updating @ 06/01/24 12:37:48.234
  Jun  1 12:37:48.244: INFO: waiting for watch events with expected annotations
  Jun  1 12:37:48.244: INFO: saw patched and updated annotations
  STEP: patching /status @ 06/01/24 12:37:48.244
  STEP: updating /status @ 06/01/24 12:37:48.248
  STEP: get /status @ 06/01/24 12:37:48.255
  STEP: deleting @ 06/01/24 12:37:48.257
  STEP: deleting a collection @ 06/01/24 12:37:48.273
  Jun  1 12:37:48.284: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4856" for this suite. @ 06/01/24 12:37:48.287
â€¢ [0.103 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 06/01/24 12:37:48.293
  Jun  1 12:37:48.293: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename svcaccounts @ 06/01/24 12:37:48.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:37:48.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:37:48.312
  STEP: Creating a pod to test service account token:  @ 06/01/24 12:37:48.314
  STEP: Saw pod success @ 06/01/24 12:37:50.332
  Jun  1 12:37:50.336: INFO: Trying to get logs from node ip-172-31-74-111 pod test-pod-8a1bd81d-1ec1-4fb4-853d-24bf460c45b2 container agnhost-container: <nil>
  STEP: delete the pod @ 06/01/24 12:37:50.342
  Jun  1 12:37:50.355: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2284" for this suite. @ 06/01/24 12:37:50.358
â€¢ [2.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 06/01/24 12:37:50.367
  Jun  1 12:37:50.367: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename emptydir @ 06/01/24 12:37:50.367
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:37:50.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:37:50.386
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 06/01/24 12:37:50.389
  STEP: Saw pod success @ 06/01/24 12:37:54.407
  Jun  1 12:37:54.410: INFO: Trying to get logs from node ip-172-31-74-111 pod pod-daad9265-bb74-42bf-89c1-fc57970135d4 container test-container: <nil>
  STEP: delete the pod @ 06/01/24 12:37:54.416
  Jun  1 12:37:54.432: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1053" for this suite. @ 06/01/24 12:37:54.438
â€¢ [4.077 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 06/01/24 12:37:54.444
  Jun  1 12:37:54.444: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename var-expansion @ 06/01/24 12:37:54.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:37:54.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:37:54.464
  STEP: Creating a pod to test substitution in container's command @ 06/01/24 12:37:54.467
  STEP: Saw pod success @ 06/01/24 12:37:58.491
  Jun  1 12:37:58.494: INFO: Trying to get logs from node ip-172-31-74-111 pod var-expansion-b745e151-3260-48b8-ac5f-000dda0e66b9 container dapi-container: <nil>
  STEP: delete the pod @ 06/01/24 12:37:58.501
  Jun  1 12:37:58.522: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5197" for this suite. @ 06/01/24 12:37:58.524
â€¢ [4.092 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1698
  STEP: Creating a kubernetes client @ 06/01/24 12:37:58.537
  Jun  1 12:37:58.537: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename kubectl @ 06/01/24 12:37:58.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:37:58.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:37:58.564
  STEP: creating Agnhost RC @ 06/01/24 12:37:58.566
  Jun  1 12:37:58.566: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-7156 create -f -'
  Jun  1 12:37:58.656: INFO: stderr: ""
  Jun  1 12:37:58.656: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 06/01/24 12:37:58.656
  Jun  1 12:37:59.660: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun  1 12:37:59.660: INFO: Found 0 / 1
  Jun  1 12:38:00.662: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun  1 12:38:00.662: INFO: Found 1 / 1
  Jun  1 12:38:00.662: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 06/01/24 12:38:00.662
  Jun  1 12:38:00.666: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun  1 12:38:00.666: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jun  1 12:38:00.666: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-7156 patch pod agnhost-primary-5k2w5 -p {"metadata":{"annotations":{"x":"y"}}}'
  Jun  1 12:38:00.719: INFO: stderr: ""
  Jun  1 12:38:00.719: INFO: stdout: "pod/agnhost-primary-5k2w5 patched\n"
  STEP: checking annotations @ 06/01/24 12:38:00.719
  Jun  1 12:38:00.721: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun  1 12:38:00.721: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jun  1 12:38:00.721: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7156" for this suite. @ 06/01/24 12:38:00.725
â€¢ [2.196 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 06/01/24 12:38:00.733
  Jun  1 12:38:00.733: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename runtimeclass @ 06/01/24 12:38:00.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:38:00.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:38:00.751
  STEP: Deleting RuntimeClass runtimeclass-3264-delete-me @ 06/01/24 12:38:00.757
  STEP: Waiting for the RuntimeClass to disappear @ 06/01/24 12:38:00.762
  Jun  1 12:38:00.771: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3264" for this suite. @ 06/01/24 12:38:00.781
â€¢ [0.057 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:335
  STEP: Creating a kubernetes client @ 06/01/24 12:38:00.791
  Jun  1 12:38:00.791: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename sched-pred @ 06/01/24 12:38:00.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:38:00.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:38:00.811
  Jun  1 12:38:00.813: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jun  1 12:38:00.820: INFO: Waiting for terminating namespaces to be deleted...
  Jun  1 12:38:00.823: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-17-129 before test
  Jun  1 12:38:00.829: INFO: nginx-ingress-controller-kubernetes-worker-k4zlz from ingress-nginx-kubernetes-worker started at 2024-06-01 12:06:08 +0000 UTC (1 container statuses recorded)
  Jun  1 12:38:00.829: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 1
  Jun  1 12:38:00.829: INFO: calico-node-zwmhv from kube-system started at 2024-06-01 12:14:42 +0000 UTC (1 container statuses recorded)
  Jun  1 12:38:00.829: INFO: 	Container calico-node ready: true, restart count 0
  Jun  1 12:38:00.829: INFO: coredns-bddfd76d7-7mj9q from kube-system started at 2024-06-01 12:06:08 +0000 UTC (1 container statuses recorded)
  Jun  1 12:38:00.829: INFO: 	Container coredns ready: true, restart count 0
  Jun  1 12:38:00.829: INFO: kube-state-metrics-6f48cdd76-llxcr from kube-system started at 2024-06-01 12:06:08 +0000 UTC (1 container statuses recorded)
  Jun  1 12:38:00.829: INFO: 	Container kube-state-metrics ready: true, restart count 6
  Jun  1 12:38:00.829: INFO: metrics-server-v0.6.3-69d7fbfdf8-ggp9k from kube-system started at 2024-06-01 12:06:08 +0000 UTC (2 container statuses recorded)
  Jun  1 12:38:00.829: INFO: 	Container metrics-server ready: true, restart count 4
  Jun  1 12:38:00.829: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Jun  1 12:38:00.829: INFO: dashboard-metrics-scraper-5dd7cb5fc-chxdj from kubernetes-dashboard started at 2024-06-01 12:06:08 +0000 UTC (1 container statuses recorded)
  Jun  1 12:38:00.829: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Jun  1 12:38:00.829: INFO: kubernetes-dashboard-7b899cb9d9-6z8mc from kubernetes-dashboard started at 2024-06-01 12:06:08 +0000 UTC (1 container statuses recorded)
  Jun  1 12:38:00.829: INFO: 	Container kubernetes-dashboard ready: true, restart count 4
  Jun  1 12:38:00.829: INFO: sonobuoy-systemd-logs-daemon-set-6b74001505cc4012-w6grx from sonobuoy started at 2024-06-01 12:18:35 +0000 UTC (2 container statuses recorded)
  Jun  1 12:38:00.829: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  1 12:38:00.829: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun  1 12:38:00.829: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-74-111 before test
  Jun  1 12:38:00.834: INFO: nginx-ingress-controller-kubernetes-worker-57r8s from ingress-nginx-kubernetes-worker started at 2024-06-01 12:21:42 +0000 UTC (1 container statuses recorded)
  Jun  1 12:38:00.834: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jun  1 12:38:00.834: INFO: calico-node-x7lqm from kube-system started at 2024-06-01 12:16:31 +0000 UTC (1 container statuses recorded)
  Jun  1 12:38:00.834: INFO: 	Container calico-node ready: true, restart count 0
  Jun  1 12:38:00.834: INFO: agnhost-primary-5k2w5 from kubectl-7156 started at 2024-06-01 12:37:58 +0000 UTC (1 container statuses recorded)
  Jun  1 12:38:00.834: INFO: 	Container agnhost-primary ready: true, restart count 0
  Jun  1 12:38:00.834: INFO: sonobuoy from sonobuoy started at 2024-06-01 12:18:33 +0000 UTC (1 container statuses recorded)
  Jun  1 12:38:00.834: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jun  1 12:38:00.834: INFO: sonobuoy-systemd-logs-daemon-set-6b74001505cc4012-t4fhp from sonobuoy started at 2024-06-01 12:18:35 +0000 UTC (2 container statuses recorded)
  Jun  1 12:38:00.834: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  1 12:38:00.834: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun  1 12:38:00.834: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-80-202 before test
  Jun  1 12:38:00.838: INFO: nginx-ingress-controller-kubernetes-worker-8v98c from ingress-nginx-kubernetes-worker started at 2024-06-01 12:15:51 +0000 UTC (1 container statuses recorded)
  Jun  1 12:38:00.838: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jun  1 12:38:00.838: INFO: calico-node-lr4nv from kube-system started at 2024-06-01 12:16:31 +0000 UTC (1 container statuses recorded)
  Jun  1 12:38:00.838: INFO: 	Container calico-node ready: true, restart count 0
  Jun  1 12:38:00.838: INFO: sonobuoy-e2e-job-65c4f8adab634956 from sonobuoy started at 2024-06-01 12:18:35 +0000 UTC (2 container statuses recorded)
  Jun  1 12:38:00.838: INFO: 	Container e2e ready: true, restart count 0
  Jun  1 12:38:00.838: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  1 12:38:00.838: INFO: sonobuoy-systemd-logs-daemon-set-6b74001505cc4012-pwg5w from sonobuoy started at 2024-06-01 12:18:35 +0000 UTC (2 container statuses recorded)
  Jun  1 12:38:00.839: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  1 12:38:00.839: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-17-129 @ 06/01/24 12:38:00.853
  STEP: verifying the node has the label node ip-172-31-74-111 @ 06/01/24 12:38:00.875
  STEP: verifying the node has the label node ip-172-31-80-202 @ 06/01/24 12:38:00.901
  Jun  1 12:38:00.916: INFO: Pod nginx-ingress-controller-kubernetes-worker-57r8s requesting resource cpu=0m on Node ip-172-31-74-111
  Jun  1 12:38:00.916: INFO: Pod nginx-ingress-controller-kubernetes-worker-8v98c requesting resource cpu=0m on Node ip-172-31-80-202
  Jun  1 12:38:00.916: INFO: Pod nginx-ingress-controller-kubernetes-worker-k4zlz requesting resource cpu=0m on Node ip-172-31-17-129
  Jun  1 12:38:00.916: INFO: Pod calico-node-lr4nv requesting resource cpu=250m on Node ip-172-31-80-202
  Jun  1 12:38:00.916: INFO: Pod calico-node-x7lqm requesting resource cpu=250m on Node ip-172-31-74-111
  Jun  1 12:38:00.916: INFO: Pod calico-node-zwmhv requesting resource cpu=250m on Node ip-172-31-17-129
  Jun  1 12:38:00.916: INFO: Pod coredns-bddfd76d7-7mj9q requesting resource cpu=100m on Node ip-172-31-17-129
  Jun  1 12:38:00.916: INFO: Pod kube-state-metrics-6f48cdd76-llxcr requesting resource cpu=0m on Node ip-172-31-17-129
  Jun  1 12:38:00.917: INFO: Pod metrics-server-v0.6.3-69d7fbfdf8-ggp9k requesting resource cpu=5m on Node ip-172-31-17-129
  Jun  1 12:38:00.917: INFO: Pod agnhost-primary-5k2w5 requesting resource cpu=0m on Node ip-172-31-74-111
  Jun  1 12:38:00.917: INFO: Pod dashboard-metrics-scraper-5dd7cb5fc-chxdj requesting resource cpu=0m on Node ip-172-31-17-129
  Jun  1 12:38:00.917: INFO: Pod kubernetes-dashboard-7b899cb9d9-6z8mc requesting resource cpu=0m on Node ip-172-31-17-129
  Jun  1 12:38:00.917: INFO: Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-74-111
  Jun  1 12:38:00.917: INFO: Pod sonobuoy-e2e-job-65c4f8adab634956 requesting resource cpu=0m on Node ip-172-31-80-202
  Jun  1 12:38:00.917: INFO: Pod sonobuoy-systemd-logs-daemon-set-6b74001505cc4012-pwg5w requesting resource cpu=0m on Node ip-172-31-80-202
  Jun  1 12:38:00.917: INFO: Pod sonobuoy-systemd-logs-daemon-set-6b74001505cc4012-t4fhp requesting resource cpu=0m on Node ip-172-31-74-111
  Jun  1 12:38:00.917: INFO: Pod sonobuoy-systemd-logs-daemon-set-6b74001505cc4012-w6grx requesting resource cpu=0m on Node ip-172-31-17-129
  STEP: Starting Pods to consume most of the cluster CPU. @ 06/01/24 12:38:00.917
  Jun  1 12:38:00.917: INFO: Creating a pod which consumes cpu=1151m on Node ip-172-31-17-129
  Jun  1 12:38:00.928: INFO: Creating a pod which consumes cpu=1225m on Node ip-172-31-74-111
  Jun  1 12:38:00.938: INFO: Creating a pod which consumes cpu=1225m on Node ip-172-31-80-202
  STEP: Creating another pod that requires unavailable amount of CPU. @ 06/01/24 12:38:02.962
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-7bbe6476-3de3-466f-b5fe-86a05187d8a6.17d4e1aaa391b979], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6158/filler-pod-7bbe6476-3de3-466f-b5fe-86a05187d8a6 to ip-172-31-74-111] @ 06/01/24 12:38:02.966
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-7bbe6476-3de3-466f-b5fe-86a05187d8a6.17d4e1aac1ec50f7], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 06/01/24 12:38:02.966
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-7bbe6476-3de3-466f-b5fe-86a05187d8a6.17d4e1aac30961ef], Reason = [Created], Message = [Created container filler-pod-7bbe6476-3de3-466f-b5fe-86a05187d8a6] @ 06/01/24 12:38:02.966
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-7bbe6476-3de3-466f-b5fe-86a05187d8a6.17d4e1aac69c2aca], Reason = [Started], Message = [Started container filler-pod-7bbe6476-3de3-466f-b5fe-86a05187d8a6] @ 06/01/24 12:38:02.966
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-96699369-1505-42ae-9174-96487e72374b.17d4e1aaa339ca0d], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6158/filler-pod-96699369-1505-42ae-9174-96487e72374b to ip-172-31-17-129] @ 06/01/24 12:38:02.966
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-96699369-1505-42ae-9174-96487e72374b.17d4e1aac1556a4b], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 06/01/24 12:38:02.966
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-96699369-1505-42ae-9174-96487e72374b.17d4e1aac21e0e22], Reason = [Created], Message = [Created container filler-pod-96699369-1505-42ae-9174-96487e72374b] @ 06/01/24 12:38:02.966
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-96699369-1505-42ae-9174-96487e72374b.17d4e1aac44f28ac], Reason = [Started], Message = [Started container filler-pod-96699369-1505-42ae-9174-96487e72374b] @ 06/01/24 12:38:02.966
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ab7b62ee-3ea7-49a3-b940-1da0e0f9fa8e.17d4e1aaa43c5725], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6158/filler-pod-ab7b62ee-3ea7-49a3-b940-1da0e0f9fa8e to ip-172-31-80-202] @ 06/01/24 12:38:02.966
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ab7b62ee-3ea7-49a3-b940-1da0e0f9fa8e.17d4e1aac2967d35], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 06/01/24 12:38:02.966
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ab7b62ee-3ea7-49a3-b940-1da0e0f9fa8e.17d4e1aac3b568aa], Reason = [Created], Message = [Created container filler-pod-ab7b62ee-3ea7-49a3-b940-1da0e0f9fa8e] @ 06/01/24 12:38:02.966
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ab7b62ee-3ea7-49a3-b940-1da0e0f9fa8e.17d4e1aac60cfe61], Reason = [Started], Message = [Started container filler-pod-ab7b62ee-3ea7-49a3-b940-1da0e0f9fa8e] @ 06/01/24 12:38:02.966
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17d4e1ab1cb922a7], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.] @ 06/01/24 12:38:02.98
  STEP: removing the label node off the node ip-172-31-17-129 @ 06/01/24 12:38:03.976
  STEP: verifying the node doesn't have the label node @ 06/01/24 12:38:03.992
  STEP: removing the label node off the node ip-172-31-74-111 @ 06/01/24 12:38:03.996
  STEP: verifying the node doesn't have the label node @ 06/01/24 12:38:04.009
  STEP: removing the label node off the node ip-172-31-80-202 @ 06/01/24 12:38:04.013
  STEP: verifying the node doesn't have the label node @ 06/01/24 12:38:04.024
  Jun  1 12:38:04.032: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6158" for this suite. @ 06/01/24 12:38:04.038
â€¢ [3.254 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 06/01/24 12:38:04.045
  Jun  1 12:38:04.045: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename downward-api @ 06/01/24 12:38:04.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:38:04.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:38:04.065
  STEP: Creating a pod to test downward API volume plugin @ 06/01/24 12:38:04.069
  STEP: Saw pod success @ 06/01/24 12:38:08.092
  Jun  1 12:38:08.096: INFO: Trying to get logs from node ip-172-31-74-111 pod downwardapi-volume-77c9ab66-4236-4664-8a1c-208b6ab44df8 container client-container: <nil>
  STEP: delete the pod @ 06/01/24 12:38:08.101
  Jun  1 12:38:08.115: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9839" for this suite. @ 06/01/24 12:38:08.119
â€¢ [4.081 seconds]
------------------------------
SS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 06/01/24 12:38:08.126
  Jun  1 12:38:08.126: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename ingressclass @ 06/01/24 12:38:08.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:38:08.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:38:08.146
  STEP: getting /apis @ 06/01/24 12:38:08.148
  STEP: getting /apis/networking.k8s.io @ 06/01/24 12:38:08.151
  STEP: getting /apis/networking.k8s.iov1 @ 06/01/24 12:38:08.152
  STEP: creating @ 06/01/24 12:38:08.153
  STEP: getting @ 06/01/24 12:38:08.168
  STEP: listing @ 06/01/24 12:38:08.17
  STEP: watching @ 06/01/24 12:38:08.174
  Jun  1 12:38:08.174: INFO: starting watch
  STEP: patching @ 06/01/24 12:38:08.175
  STEP: updating @ 06/01/24 12:38:08.181
  Jun  1 12:38:08.185: INFO: waiting for watch events with expected annotations
  Jun  1 12:38:08.185: INFO: saw patched and updated annotations
  STEP: deleting @ 06/01/24 12:38:08.185
  STEP: deleting a collection @ 06/01/24 12:38:08.197
  Jun  1 12:38:08.212: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-449" for this suite. @ 06/01/24 12:38:08.215
â€¢ [0.098 seconds]
------------------------------
S
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:141
  STEP: Creating a kubernetes client @ 06/01/24 12:38:08.224
  Jun  1 12:38:08.224: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename secrets @ 06/01/24 12:38:08.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:38:08.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:38:08.245
  STEP: Creating projection with secret that has name secret-emptykey-test-857e02fe-b64c-4484-989b-615c9025fdaa @ 06/01/24 12:38:08.247
  Jun  1 12:38:08.248: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6214" for this suite. @ 06/01/24 12:38:08.251
â€¢ [0.034 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 06/01/24 12:38:08.258
  Jun  1 12:38:08.258: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename replicaset @ 06/01/24 12:38:08.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:38:08.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:38:08.277
  Jun  1 12:38:08.280: INFO: Creating ReplicaSet my-hostname-basic-bd328e38-55ec-4fef-bac0-559e4ba484ec
  Jun  1 12:38:08.289: INFO: Pod name my-hostname-basic-bd328e38-55ec-4fef-bac0-559e4ba484ec: Found 0 pods out of 1
  Jun  1 12:38:13.294: INFO: Pod name my-hostname-basic-bd328e38-55ec-4fef-bac0-559e4ba484ec: Found 1 pods out of 1
  Jun  1 12:38:13.294: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-bd328e38-55ec-4fef-bac0-559e4ba484ec" is running
  Jun  1 12:38:13.297: INFO: Pod "my-hostname-basic-bd328e38-55ec-4fef-bac0-559e4ba484ec-zcsqj" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-01 12:38:10 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-01 12:38:08 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-01 12:38:10 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-01 12:38:10 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-01 12:38:08 +0000 UTC Reason: Message:}])
  Jun  1 12:38:13.297: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 06/01/24 12:38:13.297
  Jun  1 12:38:13.308: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5492" for this suite. @ 06/01/24 12:38:13.312
â€¢ [5.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 06/01/24 12:38:13.317
  Jun  1 12:38:13.317: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename gc @ 06/01/24 12:38:13.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:38:13.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:38:13.34
  STEP: create the rc @ 06/01/24 12:38:13.342
  W0601 12:38:13.348584      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 06/01/24 12:38:18.352
  STEP: wait for all pods to be garbage collected @ 06/01/24 12:38:18.357
  STEP: Gathering metrics @ 06/01/24 12:38:23.366
  W0601 12:38:23.370981      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jun  1 12:38:23.371: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun  1 12:38:23.371: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3630" for this suite. @ 06/01/24 12:38:23.374
â€¢ [10.064 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 06/01/24 12:38:23.382
  Jun  1 12:38:23.382: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename container-runtime @ 06/01/24 12:38:23.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:38:23.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:38:23.402
  STEP: create the container @ 06/01/24 12:38:23.405
  W0601 12:38:23.415434      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 06/01/24 12:38:23.415
  STEP: get the container status @ 06/01/24 12:38:25.429
  STEP: the container should be terminated @ 06/01/24 12:38:25.433
  STEP: the termination message should be set @ 06/01/24 12:38:25.433
  Jun  1 12:38:25.433: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 06/01/24 12:38:25.433
  Jun  1 12:38:25.450: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8190" for this suite. @ 06/01/24 12:38:25.452
â€¢ [2.077 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 06/01/24 12:38:25.46
  Jun  1 12:38:25.460: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename kubelet-test @ 06/01/24 12:38:25.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:38:25.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:38:25.474
  Jun  1 12:38:25.493: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1989" for this suite. @ 06/01/24 12:38:25.497
â€¢ [0.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2199
  STEP: Creating a kubernetes client @ 06/01/24 12:38:25.505
  Jun  1 12:38:25.505: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename services @ 06/01/24 12:38:25.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:38:25.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:38:25.523
  STEP: creating service in namespace services-3782 @ 06/01/24 12:38:25.525
  STEP: creating service affinity-clusterip-transition in namespace services-3782 @ 06/01/24 12:38:25.525
  STEP: creating replication controller affinity-clusterip-transition in namespace services-3782 @ 06/01/24 12:38:25.537
  I0601 12:38:25.543949      21 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-3782, replica count: 3
  I0601 12:38:28.594544      21 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun  1 12:38:28.600: INFO: Creating new exec pod
  Jun  1 12:38:31.616: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-3782 exec execpod-affinity62v9x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Jun  1 12:38:31.773: INFO: stderr: "+ nc -v -t -w 2 affinity-clusterip-transition 80\n+ echo hostName\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Jun  1 12:38:31.773: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  1 12:38:31.773: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-3782 exec execpod-affinity62v9x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.213 80'
  Jun  1 12:38:31.859: INFO: stderr: "+ nc -v -t -w 2 10.152.183.213 80\n+ echo hostName\nConnection to 10.152.183.213 80 port [tcp/http] succeeded!\n"
  Jun  1 12:38:31.859: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  1 12:38:31.868: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-3782 exec execpod-affinity62v9x -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.213:80/ ; done'
  Jun  1 12:38:32.010: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.213:80/\n"
  Jun  1 12:38:32.010: INFO: stdout: "\naffinity-clusterip-transition-4sl9j\naffinity-clusterip-transition-d6t5g\naffinity-clusterip-transition-7wvc8\naffinity-clusterip-transition-d6t5g\naffinity-clusterip-transition-7wvc8\naffinity-clusterip-transition-4sl9j\naffinity-clusterip-transition-d6t5g\naffinity-clusterip-transition-d6t5g\naffinity-clusterip-transition-4sl9j\naffinity-clusterip-transition-7wvc8\naffinity-clusterip-transition-7wvc8\naffinity-clusterip-transition-4sl9j\naffinity-clusterip-transition-4sl9j\naffinity-clusterip-transition-4sl9j\naffinity-clusterip-transition-4sl9j\naffinity-clusterip-transition-7wvc8"
  Jun  1 12:38:32.010: INFO: Received response from host: affinity-clusterip-transition-4sl9j
  Jun  1 12:38:32.010: INFO: Received response from host: affinity-clusterip-transition-d6t5g
  Jun  1 12:38:32.010: INFO: Received response from host: affinity-clusterip-transition-7wvc8
  Jun  1 12:38:32.010: INFO: Received response from host: affinity-clusterip-transition-d6t5g
  Jun  1 12:38:32.010: INFO: Received response from host: affinity-clusterip-transition-7wvc8
  Jun  1 12:38:32.010: INFO: Received response from host: affinity-clusterip-transition-4sl9j
  Jun  1 12:38:32.010: INFO: Received response from host: affinity-clusterip-transition-d6t5g
  Jun  1 12:38:32.010: INFO: Received response from host: affinity-clusterip-transition-d6t5g
  Jun  1 12:38:32.010: INFO: Received response from host: affinity-clusterip-transition-4sl9j
  Jun  1 12:38:32.010: INFO: Received response from host: affinity-clusterip-transition-7wvc8
  Jun  1 12:38:32.010: INFO: Received response from host: affinity-clusterip-transition-7wvc8
  Jun  1 12:38:32.010: INFO: Received response from host: affinity-clusterip-transition-4sl9j
  Jun  1 12:38:32.010: INFO: Received response from host: affinity-clusterip-transition-4sl9j
  Jun  1 12:38:32.010: INFO: Received response from host: affinity-clusterip-transition-4sl9j
  Jun  1 12:38:32.010: INFO: Received response from host: affinity-clusterip-transition-4sl9j
  Jun  1 12:38:32.010: INFO: Received response from host: affinity-clusterip-transition-7wvc8
  Jun  1 12:38:32.021: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-3782 exec execpod-affinity62v9x -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.213:80/ ; done'
  Jun  1 12:38:32.165: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.213:80/\n"
  Jun  1 12:38:32.166: INFO: stdout: "\naffinity-clusterip-transition-4sl9j\naffinity-clusterip-transition-4sl9j\naffinity-clusterip-transition-4sl9j\naffinity-clusterip-transition-4sl9j\naffinity-clusterip-transition-4sl9j\naffinity-clusterip-transition-4sl9j\naffinity-clusterip-transition-4sl9j\naffinity-clusterip-transition-4sl9j\naffinity-clusterip-transition-4sl9j\naffinity-clusterip-transition-4sl9j\naffinity-clusterip-transition-4sl9j\naffinity-clusterip-transition-4sl9j\naffinity-clusterip-transition-4sl9j\naffinity-clusterip-transition-4sl9j\naffinity-clusterip-transition-4sl9j\naffinity-clusterip-transition-4sl9j"
  Jun  1 12:38:32.166: INFO: Received response from host: affinity-clusterip-transition-4sl9j
  Jun  1 12:38:32.166: INFO: Received response from host: affinity-clusterip-transition-4sl9j
  Jun  1 12:38:32.166: INFO: Received response from host: affinity-clusterip-transition-4sl9j
  Jun  1 12:38:32.166: INFO: Received response from host: affinity-clusterip-transition-4sl9j
  Jun  1 12:38:32.166: INFO: Received response from host: affinity-clusterip-transition-4sl9j
  Jun  1 12:38:32.166: INFO: Received response from host: affinity-clusterip-transition-4sl9j
  Jun  1 12:38:32.166: INFO: Received response from host: affinity-clusterip-transition-4sl9j
  Jun  1 12:38:32.166: INFO: Received response from host: affinity-clusterip-transition-4sl9j
  Jun  1 12:38:32.166: INFO: Received response from host: affinity-clusterip-transition-4sl9j
  Jun  1 12:38:32.166: INFO: Received response from host: affinity-clusterip-transition-4sl9j
  Jun  1 12:38:32.166: INFO: Received response from host: affinity-clusterip-transition-4sl9j
  Jun  1 12:38:32.166: INFO: Received response from host: affinity-clusterip-transition-4sl9j
  Jun  1 12:38:32.166: INFO: Received response from host: affinity-clusterip-transition-4sl9j
  Jun  1 12:38:32.166: INFO: Received response from host: affinity-clusterip-transition-4sl9j
  Jun  1 12:38:32.166: INFO: Received response from host: affinity-clusterip-transition-4sl9j
  Jun  1 12:38:32.166: INFO: Received response from host: affinity-clusterip-transition-4sl9j
  Jun  1 12:38:32.166: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-3782, will wait for the garbage collector to delete the pods @ 06/01/24 12:38:32.181
  Jun  1 12:38:32.244: INFO: Deleting ReplicationController affinity-clusterip-transition took: 7.9237ms
  Jun  1 12:38:32.345: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.561222ms
  Jun  1 12:38:35.363: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3782" for this suite. @ 06/01/24 12:38:35.366
â€¢ [9.867 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 06/01/24 12:38:35.372
  Jun  1 12:38:35.372: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename projected @ 06/01/24 12:38:35.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:38:35.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:38:35.391
  STEP: Creating configMap with name projected-configmap-test-volume-map-1493657c-29c9-4830-8b24-e3d55d377112 @ 06/01/24 12:38:35.393
  STEP: Creating a pod to test consume configMaps @ 06/01/24 12:38:35.397
  STEP: Saw pod success @ 06/01/24 12:38:37.414
  Jun  1 12:38:37.417: INFO: Trying to get logs from node ip-172-31-74-111 pod pod-projected-configmaps-a6dd6a45-d316-44d6-ad69-085fda1a7b86 container agnhost-container: <nil>
  STEP: delete the pod @ 06/01/24 12:38:37.425
  Jun  1 12:38:37.441: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4893" for this suite. @ 06/01/24 12:38:37.445
â€¢ [2.079 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 06/01/24 12:38:37.451
  Jun  1 12:38:37.451: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename emptydir @ 06/01/24 12:38:37.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:38:37.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:38:37.47
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 06/01/24 12:38:37.473
  STEP: Saw pod success @ 06/01/24 12:38:39.49
  Jun  1 12:38:39.492: INFO: Trying to get logs from node ip-172-31-74-111 pod pod-9841641a-1646-4896-aad4-ba4cbe888a28 container test-container: <nil>
  STEP: delete the pod @ 06/01/24 12:38:39.499
  Jun  1 12:38:39.514: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4054" for this suite. @ 06/01/24 12:38:39.518
â€¢ [2.074 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 06/01/24 12:38:39.525
  Jun  1 12:38:39.525: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/01/24 12:38:39.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:38:39.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:38:39.544
  Jun  1 12:38:39.546: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 06/01/24 12:38:40.799
  Jun  1 12:38:40.799: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=crd-publish-openapi-2879 --namespace=crd-publish-openapi-2879 create -f -'
  Jun  1 12:38:42.869: INFO: stderr: ""
  Jun  1 12:38:42.869: INFO: stdout: "e2e-test-crd-publish-openapi-705-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Jun  1 12:38:42.870: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=crd-publish-openapi-2879 --namespace=crd-publish-openapi-2879 delete e2e-test-crd-publish-openapi-705-crds test-cr'
  Jun  1 12:38:42.920: INFO: stderr: ""
  Jun  1 12:38:42.920: INFO: stdout: "e2e-test-crd-publish-openapi-705-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Jun  1 12:38:42.920: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=crd-publish-openapi-2879 --namespace=crd-publish-openapi-2879 apply -f -'
  Jun  1 12:38:42.971: INFO: stderr: ""
  Jun  1 12:38:42.971: INFO: stdout: "e2e-test-crd-publish-openapi-705-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Jun  1 12:38:42.971: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=crd-publish-openapi-2879 --namespace=crd-publish-openapi-2879 delete e2e-test-crd-publish-openapi-705-crds test-cr'
  Jun  1 12:38:43.019: INFO: stderr: ""
  Jun  1 12:38:43.019: INFO: stdout: "e2e-test-crd-publish-openapi-705-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 06/01/24 12:38:43.019
  Jun  1 12:38:43.019: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=crd-publish-openapi-2879 explain e2e-test-crd-publish-openapi-705-crds'
  Jun  1 12:38:43.059: INFO: stderr: ""
  Jun  1 12:38:43.059: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-705-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  Jun  1 12:38:44.275: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2879" for this suite. @ 06/01/24 12:38:44.282
â€¢ [4.764 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 06/01/24 12:38:44.29
  Jun  1 12:38:44.290: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 06/01/24 12:38:44.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:38:44.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:38:44.308
  STEP: creating a target pod @ 06/01/24 12:38:44.311
  STEP: adding an ephemeral container @ 06/01/24 12:38:46.333
  STEP: checking pod container endpoints @ 06/01/24 12:38:48.351
  Jun  1 12:38:48.351: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-3222 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  1 12:38:48.351: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 12:38:48.352: INFO: ExecWithOptions: Clientset creation
  Jun  1 12:38:48.352: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-3222/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Jun  1 12:38:48.408: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 06/01/24 12:38:48.42
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 06/01/24 12:38:48.424
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 06/01/24 12:38:48.435
  Jun  1 12:38:48.438: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-3222" for this suite. @ 06/01/24 12:38:48.441
â€¢ [4.159 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 06/01/24 12:38:48.449
  Jun  1 12:38:48.449: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename container-probe @ 06/01/24 12:38:48.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:38:48.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:38:48.47
  STEP: Creating pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894 @ 06/01/24 12:38:48.473
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/01/24 12:38:50.489
  Jun  1 12:38:50.493: INFO: Initial restart count of pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 is 0
  Jun  1 12:38:50.498: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:38:52.503: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:38:54.508: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:38:56.514: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:38:58.519: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:39:00.524: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:39:02.528: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:39:04.534: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:39:06.539: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:39:08.543: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:39:10.549: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:39:12.553: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:39:14.558: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:39:16.564: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:39:18.568: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:39:20.573: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:39:22.579: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:39:24.585: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:39:26.590: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:39:28.594: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:39:30.599: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:39:32.605: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:39:34.609: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:39:36.613: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:39:38.618: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:39:40.621: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:39:42.627: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:39:44.633: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:39:46.637: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:39:48.642: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:39:50.647: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:39:52.653: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:39:54.658: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:39:56.664: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:39:58.670: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:40:00.676: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:40:02.682: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:40:04.690: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:40:06.695: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:40:08.702: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:40:10.707: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:40:12.711: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:40:14.717: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:40:16.721: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:40:18.726: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:40:20.731: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:40:22.734: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:40:24.741: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:40:26.744: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:40:28.748: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:40:30.754: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:40:32.759: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:40:34.762: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:40:36.767: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:40:38.773: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:40:40.784: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:40:42.790: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:40:44.797: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:40:46.801: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:40:48.806: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:40:50.811: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:40:52.815: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:40:54.821: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:40:56.825: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:40:58.830: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:41:00.836: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:41:02.841: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:41:04.846: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:41:06.851: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:41:08.856: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:41:10.860: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:41:12.864: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:41:14.869: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:41:16.874: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:41:18.879: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:41:20.883: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:41:22.888: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:41:24.893: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:41:26.899: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:41:28.904: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:41:30.908: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:41:32.914: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:41:34.918: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:41:36.923: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:41:38.928: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:41:40.932: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:41:42.938: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:41:44.943: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:41:46.947: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:41:48.953: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:41:50.958: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:41:52.963: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:41:54.968: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:41:56.974: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:41:58.978: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:42:00.983: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:42:02.989: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:42:04.994: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:42:07.001: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:42:09.005: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:42:11.009: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:42:13.015: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:42:15.019: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:42:17.025: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:42:19.030: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:42:21.034: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:42:23.039: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:42:25.044: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:42:27.048: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:42:29.054: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:42:31.059: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:42:33.064: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:42:35.070: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:42:37.074: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:42:39.078: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:42:41.084: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:42:43.089: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:42:45.095: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:42:47.102: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  Jun  1 12:42:49.107: INFO: Get pod liveness-cd29b255-512b-46d5-8d7c-9a3a855b6389 in namespace container-probe-3894
  STEP: deleting the pod @ 06/01/24 12:42:51.107
  Jun  1 12:42:51.121: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3894" for this suite. @ 06/01/24 12:42:51.128
â€¢ [242.684 seconds]
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 06/01/24 12:42:51.133
  Jun  1 12:42:51.133: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename init-container @ 06/01/24 12:42:51.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:42:51.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:42:51.151
  STEP: creating the pod @ 06/01/24 12:42:51.153
  Jun  1 12:42:51.153: INFO: PodSpec: initContainers in spec.initContainers
  Jun  1 12:42:55.724: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3610" for this suite. @ 06/01/24 12:42:55.728
â€¢ [4.600 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 06/01/24 12:42:55.734
  Jun  1 12:42:55.734: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename init-container @ 06/01/24 12:42:55.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:42:55.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:42:55.75
  STEP: creating the pod @ 06/01/24 12:42:55.753
  Jun  1 12:42:55.753: INFO: PodSpec: initContainers in spec.initContainers
  Jun  1 12:42:58.551: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4522" for this suite. @ 06/01/24 12:42:58.555
â€¢ [2.827 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 06/01/24 12:42:58.561
  Jun  1 12:42:58.561: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename containers @ 06/01/24 12:42:58.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:42:58.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:42:58.579
  STEP: Creating a pod to test override arguments @ 06/01/24 12:42:58.582
  STEP: Saw pod success @ 06/01/24 12:43:02.603
  Jun  1 12:43:02.606: INFO: Trying to get logs from node ip-172-31-80-202 pod client-containers-c38701f3-66b4-4188-a4a8-64e566459e50 container agnhost-container: <nil>
  STEP: delete the pod @ 06/01/24 12:43:02.621
  Jun  1 12:43:02.637: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6926" for this suite. @ 06/01/24 12:43:02.64
â€¢ [4.087 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 06/01/24 12:43:02.648
  Jun  1 12:43:02.648: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename projected @ 06/01/24 12:43:02.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:43:02.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:43:02.674
  STEP: Creating a pod to test downward API volume plugin @ 06/01/24 12:43:02.678
  STEP: Saw pod success @ 06/01/24 12:43:06.707
  Jun  1 12:43:06.711: INFO: Trying to get logs from node ip-172-31-80-202 pod downwardapi-volume-db05c82b-5732-457c-8898-1348a1c66b68 container client-container: <nil>
  STEP: delete the pod @ 06/01/24 12:43:06.716
  Jun  1 12:43:06.733: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2316" for this suite. @ 06/01/24 12:43:06.738
â€¢ [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 06/01/24 12:43:06.745
  Jun  1 12:43:06.745: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename pv @ 06/01/24 12:43:06.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:43:06.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:43:06.762
  STEP: Creating initial PV and PVC @ 06/01/24 12:43:06.764
  Jun  1 12:43:06.764: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-3792" @ 06/01/24 12:43:06.776
  STEP: Listing PVCs in namespace "pv-3792" @ 06/01/24 12:43:06.779
  STEP: Patching the PV "pv-3792-cvp9h" @ 06/01/24 12:43:06.783
  STEP: Patching the PVC "pvc-gt2r7" @ 06/01/24 12:43:06.793
  STEP: Getting PV "pv-3792-cvp9h" @ 06/01/24 12:43:06.799
  STEP: Getting PVC "pvc-gt2r7" @ 06/01/24 12:43:06.802
  STEP: Deleting PVC "pvc-gt2r7" @ 06/01/24 12:43:06.805
  STEP: Confirm deletion of PVC "pvc-gt2r7" @ 06/01/24 12:43:06.814
  STEP: Deleting PV "pv-3792-cvp9h" @ 06/01/24 12:43:08.821
  STEP: Confirm deletion of PV "pv-3792-cvp9h" @ 06/01/24 12:43:08.83
  STEP: Recreating another PV & PVC @ 06/01/24 12:43:10.836
  Jun  1 12:43:10.836: INFO: Creating a PV followed by a PVC
  STEP: Updating the PV "pv-3792-7l5wv" @ 06/01/24 12:43:10.849
  STEP: Updating the PVC "pvc-gjpdv" @ 06/01/24 12:43:10.876
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-gjpdv=updated" @ 06/01/24 12:43:10.884
  STEP: Deleting PVC "pvc-gjpdv" via DeleteCollection @ 06/01/24 12:43:10.892
  STEP: Confirm deletion of PVC "pvc-gjpdv" @ 06/01/24 12:43:10.902
  STEP: Deleting PV "pv-3792-7l5wv" via DeleteCollection @ 06/01/24 12:43:12.911
  STEP: Confirm deletion of PV "pv-3792-7l5wv" @ 06/01/24 12:43:12.921
  Jun  1 12:43:14.929: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Jun  1 12:43:14.929: INFO: Deleting PersistentVolumeClaim "pvc-gjpdv"
  Jun  1 12:43:14.931: INFO: Deleting PersistentVolume "pv-3792-7l5wv"
  Jun  1 12:43:14.934: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-3792" for this suite. @ 06/01/24 12:43:14.937
â€¢ [8.199 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 06/01/24 12:43:14.943
  Jun  1 12:43:14.943: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename kubelet-test @ 06/01/24 12:43:14.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:43:14.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:43:14.963
  Jun  1 12:43:17.001: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5331" for this suite. @ 06/01/24 12:43:17.003
â€¢ [2.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 06/01/24 12:43:17.011
  Jun  1 12:43:17.011: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename projected @ 06/01/24 12:43:17.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:43:17.027
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:43:17.03
  STEP: Creating the pod @ 06/01/24 12:43:17.033
  Jun  1 12:43:19.570: INFO: Successfully updated pod "labelsupdatee21021fe-3dd4-4850-89c8-690aac67d924"
  Jun  1 12:43:23.594: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1102" for this suite. @ 06/01/24 12:43:23.598
â€¢ [6.594 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:155
  STEP: Creating a kubernetes client @ 06/01/24 12:43:23.608
  Jun  1 12:43:23.608: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename secrets @ 06/01/24 12:43:23.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:43:23.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:43:23.627
  STEP: creating a secret @ 06/01/24 12:43:23.63
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 06/01/24 12:43:23.634
  STEP: patching the secret @ 06/01/24 12:43:23.636
  STEP: deleting the secret using a LabelSelector @ 06/01/24 12:43:23.644
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 06/01/24 12:43:23.65
  Jun  1 12:43:23.652: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5215" for this suite. @ 06/01/24 12:43:23.656
â€¢ [0.056 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 06/01/24 12:43:23.663
  Jun  1 12:43:23.663: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename emptydir @ 06/01/24 12:43:23.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:43:23.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:43:23.68
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 06/01/24 12:43:23.683
  STEP: Saw pod success @ 06/01/24 12:43:27.706
  Jun  1 12:43:27.711: INFO: Trying to get logs from node ip-172-31-80-202 pod pod-743fa65a-ba31-47f7-a9f4-0753398de67d container test-container: <nil>
  STEP: delete the pod @ 06/01/24 12:43:27.718
  Jun  1 12:43:27.732: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4699" for this suite. @ 06/01/24 12:43:27.735
â€¢ [4.078 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 06/01/24 12:43:27.741
  Jun  1 12:43:27.741: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename projected @ 06/01/24 12:43:27.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:43:27.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:43:27.759
  STEP: Creating projection with secret that has name projected-secret-test-map-fa2eef59-bfd0-40c0-9ad9-1a3b92e0f6b8 @ 06/01/24 12:43:27.764
  STEP: Creating a pod to test consume secrets @ 06/01/24 12:43:27.77
  STEP: Saw pod success @ 06/01/24 12:43:31.79
  Jun  1 12:43:31.794: INFO: Trying to get logs from node ip-172-31-80-202 pod pod-projected-secrets-a9f75a83-c6f2-4266-8b11-4cbb14e85126 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/01/24 12:43:31.8
  Jun  1 12:43:31.813: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6577" for this suite. @ 06/01/24 12:43:31.817
â€¢ [4.085 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:399
  STEP: Creating a kubernetes client @ 06/01/24 12:43:31.826
  Jun  1 12:43:31.826: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename kubectl @ 06/01/24 12:43:31.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:43:31.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:43:31.845
  STEP: creating all guestbook components @ 06/01/24 12:43:31.848
  Jun  1 12:43:31.848: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Jun  1 12:43:31.848: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-2922 create -f -'
  Jun  1 12:43:31.947: INFO: stderr: ""
  Jun  1 12:43:31.947: INFO: stdout: "service/agnhost-replica created\n"
  Jun  1 12:43:31.947: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Jun  1 12:43:31.947: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-2922 create -f -'
  Jun  1 12:43:32.039: INFO: stderr: ""
  Jun  1 12:43:32.039: INFO: stdout: "service/agnhost-primary created\n"
  Jun  1 12:43:32.039: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Jun  1 12:43:32.039: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-2922 create -f -'
  Jun  1 12:43:32.126: INFO: stderr: ""
  Jun  1 12:43:32.126: INFO: stdout: "service/frontend created\n"
  Jun  1 12:43:32.127: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Jun  1 12:43:32.127: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-2922 create -f -'
  Jun  1 12:43:32.194: INFO: stderr: ""
  Jun  1 12:43:32.194: INFO: stdout: "deployment.apps/frontend created\n"
  Jun  1 12:43:32.194: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Jun  1 12:43:32.194: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-2922 create -f -'
  Jun  1 12:43:32.260: INFO: stderr: ""
  Jun  1 12:43:32.260: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Jun  1 12:43:32.260: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Jun  1 12:43:32.260: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-2922 create -f -'
  Jun  1 12:43:32.321: INFO: stderr: ""
  Jun  1 12:43:32.321: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 06/01/24 12:43:32.321
  Jun  1 12:43:32.321: INFO: Waiting for all frontend pods to be Running.
  Jun  1 12:43:37.372: INFO: Waiting for frontend to serve content.
  Jun  1 12:43:37.382: INFO: Trying to add a new entry to the guestbook.
  Jun  1 12:43:37.394: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 06/01/24 12:43:37.402
  Jun  1 12:43:37.402: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-2922 delete --grace-period=0 --force -f -'
  Jun  1 12:43:37.459: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun  1 12:43:37.459: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 06/01/24 12:43:37.459
  Jun  1 12:43:37.459: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-2922 delete --grace-period=0 --force -f -'
  Jun  1 12:43:37.519: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun  1 12:43:37.519: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 06/01/24 12:43:37.519
  Jun  1 12:43:37.519: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-2922 delete --grace-period=0 --force -f -'
  Jun  1 12:43:37.579: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun  1 12:43:37.579: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 06/01/24 12:43:37.579
  Jun  1 12:43:37.580: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-2922 delete --grace-period=0 --force -f -'
  Jun  1 12:43:37.625: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun  1 12:43:37.625: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 06/01/24 12:43:37.625
  Jun  1 12:43:37.625: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-2922 delete --grace-period=0 --force -f -'
  Jun  1 12:43:37.687: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun  1 12:43:37.687: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 06/01/24 12:43:37.687
  Jun  1 12:43:37.687: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-2922 delete --grace-period=0 --force -f -'
  Jun  1 12:43:37.745: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun  1 12:43:37.745: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Jun  1 12:43:37.745: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2922" for this suite. @ 06/01/24 12:43:37.752
â€¢ [5.937 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 06/01/24 12:43:37.763
  Jun  1 12:43:37.763: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/01/24 12:43:37.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:43:37.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:43:37.785
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 06/01/24 12:43:37.789
  Jun  1 12:43:37.789: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 12:43:39.036: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 12:43:44.039: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2837" for this suite. @ 06/01/24 12:43:44.046
â€¢ [6.289 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 06/01/24 12:43:44.052
  Jun  1 12:43:44.052: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename deployment @ 06/01/24 12:43:44.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:43:44.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:43:44.071
  Jun  1 12:43:44.074: INFO: Creating deployment "webserver-deployment"
  Jun  1 12:43:44.078: INFO: Waiting for observed generation 1
  Jun  1 12:43:46.087: INFO: Waiting for all required pods to come up
  Jun  1 12:43:46.091: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 06/01/24 12:43:46.091
  Jun  1 12:43:46.091: INFO: Waiting for deployment "webserver-deployment" to complete
  Jun  1 12:43:46.098: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Jun  1 12:43:46.106: INFO: Updating deployment webserver-deployment
  Jun  1 12:43:46.106: INFO: Waiting for observed generation 2
  Jun  1 12:43:48.117: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Jun  1 12:43:48.119: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Jun  1 12:43:48.122: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Jun  1 12:43:48.131: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Jun  1 12:43:48.131: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Jun  1 12:43:48.134: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Jun  1 12:43:48.139: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Jun  1 12:43:48.139: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Jun  1 12:43:48.147: INFO: Updating deployment webserver-deployment
  Jun  1 12:43:48.147: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Jun  1 12:43:48.156: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Jun  1 12:43:48.158: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Jun  1 12:43:48.183: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3550",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ed26d9c4-3375-4411-9ccd-4ffc6847aa79",
      ResourceVersion: (string) (len=5) "15860",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842624,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun  1 12:43:48.214: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3550",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e91bcf9e-423d-4d1e-98a4-0cd65d2ed863",
      ResourceVersion: (string) (len=5) "15858",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842626,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "ed26d9c4-3375-4411-9ccd-4ffc6847aa79",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 64 32 36 64 39  63 34 2d 33 33 37 35 2d  |\"ed26d9c4-3375-|
              00000120  34 34 31 31 2d 39 63 63  64 2d 34 66 66 63 36 38  |4411-9ccd-4ffc68|
              00000130  34 37 61 61 37 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |47aa79\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun  1 12:43:48.215: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Jun  1 12:43:48.215: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3550",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6618d924-d244-4350-926a-618f3d1b7048",
      ResourceVersion: (string) (len=5) "15856",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842624,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "ed26d9c4-3375-4411-9ccd-4ffc6847aa79",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 64 32 36 64 39  63 34 2d 33 33 37 35 2d  |\"ed26d9c4-3375-|
              00000120  34 34 31 31 2d 39 63 63  64 2d 34 66 66 63 36 38  |4411-9ccd-4ffc68|
              00000130  34 37 61 61 37 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |47aa79\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun  1 12:43:48.231: INFO: Pod "webserver-deployment-557759b7c7-96g9m" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-96g9m",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3550",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0cc7c0d7-7903-4c79-8453-0c2858bf639a",
      ResourceVersion: (string) (len=5) "15864",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842628,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6618d924-d244-4350-926a-618f3d1b7048",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  31 38 64 39 32 34 2d 64  |d\":\"6618d924-d|
              00000090  32 34 34 2d 34 33 35 30  2d 39 32 36 61 2d 36 31  |244-4350-926a-61|
              000000a0  38 66 33 64 31 62 37 30  34 38 5c 22 7d 22 3a 7b  |8f3d1b7048\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qrv5p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qrv5p",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-80-202",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  1 12:43:48.234: INFO: Pod "webserver-deployment-557759b7c7-98bhs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-98bhs",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3550",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f5f5c67f-c0fb-4a33-aad7-119a7f128eba",
      ResourceVersion: (string) (len=5) "15887",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842628,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6618d924-d244-4350-926a-618f3d1b7048",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  31 38 64 39 32 34 2d 64  |d\":\"6618d924-d|
              00000090  32 34 34 2d 34 33 35 30  2d 39 32 36 61 2d 36 31  |244-4350-926a-61|
              000000a0  38 66 33 64 31 62 37 30  34 38 5c 22 7d 22 3a 7b  |8f3d1b7048\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-59qs2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-59qs2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-17-129",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  1 12:43:48.235: INFO: Pod "webserver-deployment-557759b7c7-c8qg2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-c8qg2",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3550",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c69ebc9b-af43-4bad-a9e8-78174a97786c",
      ResourceVersion: (string) (len=5) "15729",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842624,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6618d924-d244-4350-926a-618f3d1b7048",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  31 38 64 39 32 34 2d 64  |d\":\"6618d924-d|
              00000090  32 34 34 2d 34 33 35 30  2d 39 32 36 61 2d 36 31  |244-4350-926a-61|
              000000a0  38 66 33 64 31 62 37 30  34 38 5c 22 7d 22 3a 7b  |8f3d1b7048\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 31  38 2e 31 35 35 5c 22 7d  |2.168.118.155\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x2vrh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x2vrh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-74-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.74.111",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.74.111"
        }
      },
      PodIP: (string) (len=15) "192.168.118.155",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.118.155"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842624,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852842624,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://03a28a2371e10e3ca8a6ba2a324e1c8e5316e1345c093f97572eada5459afcf5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  1 12:43:48.238: INFO: Pod "webserver-deployment-557759b7c7-g47vt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-g47vt",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3550",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c3bab015-8e48-4754-8610-7fe408162fd4",
      ResourceVersion: (string) (len=5) "15716",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842624,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6618d924-d244-4350-926a-618f3d1b7048",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  31 38 64 39 32 34 2d 64  |d\":\"6618d924-d|
              00000090  32 34 34 2d 34 33 35 30  2d 39 32 36 61 2d 36 31  |244-4350-926a-61|
              000000a0  38 66 33 64 31 62 37 30  34 38 5c 22 7d 22 3a 7b  |8f3d1b7048\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 36  2e 39 33 5c 22 7d 22 3a  |2.168.86.93\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-snkd5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-snkd5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-17-129",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.17.129",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.17.129"
        }
      },
      PodIP: (string) (len=13) "192.168.86.93",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.86.93"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842624,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852842625,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9d438a8cf8360a1338cc592da64bb3ea32edfc145a838f1737633230e9f30941",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  1 12:43:48.239: INFO: Pod "webserver-deployment-557759b7c7-h27d5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-h27d5",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3550",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "03cb6309-4228-4d13-8750-4645e280e427",
      ResourceVersion: (string) (len=5) "15735",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842624,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6618d924-d244-4350-926a-618f3d1b7048",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  31 38 64 39 32 34 2d 64  |d\":\"6618d924-d|
              00000090  32 34 34 2d 34 33 35 30  2d 39 32 36 61 2d 36 31  |244-4350-926a-61|
              000000a0  38 66 33 64 31 62 37 30  34 38 5c 22 7d 22 3a 7b  |8f3d1b7048\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 31  38 2e 31 35 33 5c 22 7d  |2.168.118.153\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bzhcl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bzhcl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-74-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.74.111",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.74.111"
        }
      },
      PodIP: (string) (len=15) "192.168.118.153",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.118.153"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842624,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852842624,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://74f73a4c6c033aa074c8a88314f61c2cc9ac09d917c2e643ee576443a56f2f3a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  1 12:43:48.240: INFO: Pod "webserver-deployment-557759b7c7-hswv8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-hswv8",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3550",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "88ae9a90-333f-448e-84e4-e65b5cdf6835",
      ResourceVersion: (string) (len=5) "15741",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842624,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6618d924-d244-4350-926a-618f3d1b7048",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  31 38 64 39 32 34 2d 64  |d\":\"6618d924-d|
              00000090  32 34 34 2d 34 33 35 30  2d 39 32 36 61 2d 36 31  |244-4350-926a-61|
              000000a0  38 66 33 64 31 62 37 30  34 38 5c 22 7d 22 3a 7b  |8f3d1b7048\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  36 2e 31 30 34 5c 22 7d  |2.168.126.104\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gcdmn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gcdmn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-80-202",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.80.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.80.202"
        }
      },
      PodIP: (string) (len=15) "192.168.126.104",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.126.104"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842624,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852842624,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://cf3f36e392710e3c572f8db235b0ab9f7ceecaaa6695126b2a04fa87a56320ad",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  1 12:43:48.242: INFO: Pod "webserver-deployment-557759b7c7-jttvb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-jttvb",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3550",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a3a1ed3c-6297-4a17-8695-92841a8280ae",
      ResourceVersion: (string) (len=5) "15894",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842628,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6618d924-d244-4350-926a-618f3d1b7048",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  31 38 64 39 32 34 2d 64  |d\":\"6618d924-d|
              00000090  32 34 34 2d 34 33 35 30  2d 39 32 36 61 2d 36 31  |244-4350-926a-61|
              000000a0  38 66 33 64 31 62 37 30  34 38 5c 22 7d 22 3a 7b  |8f3d1b7048\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7975j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7975j",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  1 12:43:48.242: INFO: Pod "webserver-deployment-557759b7c7-l6gd5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-l6gd5",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3550",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b331ee45-391a-48ef-a60e-43b4eab80291",
      ResourceVersion: (string) (len=5) "15890",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842628,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6618d924-d244-4350-926a-618f3d1b7048",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  31 38 64 39 32 34 2d 64  |d\":\"6618d924-d|
              00000090  32 34 34 2d 34 33 35 30  2d 39 32 36 61 2d 36 31  |244-4350-926a-61|
              000000a0  38 66 33 64 31 62 37 30  34 38 5c 22 7d 22 3a 7b  |8f3d1b7048\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9sz27",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9sz27",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-80-202",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  1 12:43:48.248: INFO: Pod "webserver-deployment-557759b7c7-lrw96" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-lrw96",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3550",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "12c62803-97e5-4aae-9c96-7e6328f2cce4",
      ResourceVersion: (string) (len=5) "15885",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842628,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6618d924-d244-4350-926a-618f3d1b7048",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  31 38 64 39 32 34 2d 64  |d\":\"6618d924-d|
              00000090  32 34 34 2d 34 33 35 30  2d 39 32 36 61 2d 36 31  |244-4350-926a-61|
              000000a0  38 66 33 64 31 62 37 30  34 38 5c 22 7d 22 3a 7b  |8f3d1b7048\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kh48m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kh48m",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-74-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.74.111",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.74.111"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842628,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  1 12:43:48.254: INFO: Pod "webserver-deployment-557759b7c7-mdvw9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-mdvw9",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3550",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "93c287d5-0577-4676-8424-ce71596ae4af",
      ResourceVersion: (string) (len=5) "15731",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842624,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6618d924-d244-4350-926a-618f3d1b7048",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  31 38 64 39 32 34 2d 64  |d\":\"6618d924-d|
              00000090  32 34 34 2d 34 33 35 30  2d 39 32 36 61 2d 36 31  |244-4350-926a-61|
              000000a0  38 66 33 64 31 62 37 30  34 38 5c 22 7d 22 3a 7b  |8f3d1b7048\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 31  38 2e 31 35 34 5c 22 7d  |2.168.118.154\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rs8hh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rs8hh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-74-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.74.111",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.74.111"
        }
      },
      PodIP: (string) (len=15) "192.168.118.154",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.118.154"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842624,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852842624,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://eaff245775abe9285ca36332699f301ea64bf0a6f473b4d8d8d6cc03138c2db4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  1 12:43:48.259: INFO: Pod "webserver-deployment-557759b7c7-nct5x" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-nct5x",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3550",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bf3398dd-a1cb-4310-803e-993de6706ba2",
      ResourceVersion: (string) (len=5) "15718",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842624,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6618d924-d244-4350-926a-618f3d1b7048",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  31 38 64 39 32 34 2d 64  |d\":\"6618d924-d|
              00000090  32 34 34 2d 34 33 35 30  2d 39 32 36 61 2d 36 31  |244-4350-926a-61|
              000000a0  38 66 33 64 31 62 37 30  34 38 5c 22 7d 22 3a 7b  |8f3d1b7048\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 36  2e 39 31 5c 22 7d 22 3a  |2.168.86.91\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7vb5n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7vb5n",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-17-129",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.17.129",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.17.129"
        }
      },
      PodIP: (string) (len=13) "192.168.86.91",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.86.91"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842624,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852842624,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://028b03e9edc21cceff38e1c3854867f0235b4b6f62667225fa1c79e629bc3925",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  1 12:43:48.260: INFO: Pod "webserver-deployment-557759b7c7-pxjmg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-pxjmg",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3550",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d864b5c7-be8d-4b26-a3d1-3bcba446bacb",
      ResourceVersion: (string) (len=5) "15893",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842628,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6618d924-d244-4350-926a-618f3d1b7048",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  31 38 64 39 32 34 2d 64  |d\":\"6618d924-d|
              00000090  32 34 34 2d 34 33 35 30  2d 39 32 36 61 2d 36 31  |244-4350-926a-61|
              000000a0  38 66 33 64 31 62 37 30  34 38 5c 22 7d 22 3a 7b  |8f3d1b7048\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q5mdr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q5mdr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-17-129",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  1 12:43:48.261: INFO: Pod "webserver-deployment-557759b7c7-scdd7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-scdd7",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3550",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bc0365d1-bb59-4788-b5de-8f64df184766",
      ResourceVersion: (string) (len=5) "15722",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842624,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6618d924-d244-4350-926a-618f3d1b7048",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  31 38 64 39 32 34 2d 64  |d\":\"6618d924-d|
              00000090  32 34 34 2d 34 33 35 30  2d 39 32 36 61 2d 36 31  |244-4350-926a-61|
              000000a0  38 66 33 64 31 62 37 30  34 38 5c 22 7d 22 3a 7b  |8f3d1b7048\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 36  2e 39 32 5c 22 7d 22 3a  |2.168.86.92\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-g84hl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-g84hl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-17-129",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.17.129",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.17.129"
        }
      },
      PodIP: (string) (len=13) "192.168.86.92",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.86.92"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842624,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852842625,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d6a191eca95d169ec812cdd6335e921f7576d634bbaf5d7d48e3f06ba1bcb8d8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  1 12:43:48.263: INFO: Pod "webserver-deployment-557759b7c7-tvf4s" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-tvf4s",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3550",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "244b384e-c531-4d2c-8e53-32230eb0efb3",
      ResourceVersion: (string) (len=5) "15738",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842624,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6618d924-d244-4350-926a-618f3d1b7048",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  31 38 64 39 32 34 2d 64  |d\":\"6618d924-d|
              00000090  32 34 34 2d 34 33 35 30  2d 39 32 36 61 2d 36 31  |244-4350-926a-61|
              000000a0  38 66 33 64 31 62 37 30  34 38 5c 22 7d 22 3a 7b  |8f3d1b7048\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  36 2e 31 30 33 5c 22 7d  |2.168.126.103\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-klnlv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-klnlv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-80-202",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.80.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.80.202"
        }
      },
      PodIP: (string) (len=15) "192.168.126.103",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.126.103"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842624,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852842624,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://de06f465a8235ad7488e8f3e1c4da170db8713d7eb484a87ae38071028227511",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  1 12:43:48.264: INFO: Pod "webserver-deployment-557759b7c7-vtds5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-vtds5",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3550",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "faa1cada-02cb-43e9-a238-ccabf0693267",
      ResourceVersion: (string) (len=5) "15888",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842628,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6618d924-d244-4350-926a-618f3d1b7048",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  31 38 64 39 32 34 2d 64  |d\":\"6618d924-d|
              00000090  32 34 34 2d 34 33 35 30  2d 39 32 36 61 2d 36 31  |244-4350-926a-61|
              000000a0  38 66 33 64 31 62 37 30  34 38 5c 22 7d 22 3a 7b  |8f3d1b7048\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4xwbh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4xwbh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-74-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  1 12:43:48.265: INFO: Pod "webserver-deployment-557759b7c7-xhttt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-xhttt",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3550",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a5d7459a-f0f3-489b-9080-1814eee7cf5a",
      ResourceVersion: (string) (len=5) "15872",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842628,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6618d924-d244-4350-926a-618f3d1b7048",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  31 38 64 39 32 34 2d 64  |d\":\"6618d924-d|
              00000090  32 34 34 2d 34 33 35 30  2d 39 32 36 61 2d 36 31  |244-4350-926a-61|
              000000a0  38 66 33 64 31 62 37 30  34 38 5c 22 7d 22 3a 7b  |8f3d1b7048\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5z254",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5z254",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-80-202",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  1 12:43:48.266: INFO: Pod "webserver-deployment-9b4f5bf69-4kb8t" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-4kb8t",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3550",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "04610c02-7e2f-42f4-a93e-8db3ba47baa7",
      ResourceVersion: (string) (len=5) "15886",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842628,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e91bcf9e-423d-4d1e-98a4-0cd65d2ed863",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  31 62 63 66 39 65 2d 34  |d\":\"e91bcf9e-4|
              00000090  32 33 64 2d 34 64 31 65  2d 39 38 61 34 2d 30 63  |23d-4d1e-98a4-0c|
              000000a0  64 36 35 64 32 65 64 38  36 33 5c 22 7d 22 3a 7b  |d65d2ed863\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2pcn7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2pcn7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  1 12:43:48.267: INFO: Pod "webserver-deployment-9b4f5bf69-727zb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-727zb",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3550",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "82bd9004-5c1b-492a-b275-ec397fc07fff",
      ResourceVersion: (string) (len=5) "15828",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842626,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e91bcf9e-423d-4d1e-98a4-0cd65d2ed863",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  31 62 63 66 39 65 2d 34  |d\":\"e91bcf9e-4|
              00000090  32 33 64 2d 34 64 31 65  2d 39 38 61 34 2d 30 63  |23d-4d1e-98a4-0c|
              000000a0  64 36 35 64 32 65 64 38  36 33 5c 22 7d 22 3a 7b  |d65d2ed863\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 32 36 2e 31  30 38 5c 22 7d 22 3a 7b  |68.126.108\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x5fmn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x5fmn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-80-202",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.80.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.80.202"
        }
      },
      PodIP: (string) (len=15) "192.168.126.108",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.126.108"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842626,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  1 12:43:48.270: INFO: Pod "webserver-deployment-9b4f5bf69-b9f4b" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-b9f4b",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3550",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "43e9e6b5-a2fd-4275-aaaa-94cd80f11474",
      ResourceVersion: (string) (len=5) "15840",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842626,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e91bcf9e-423d-4d1e-98a4-0cd65d2ed863",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  31 62 63 66 39 65 2d 34  |d\":\"e91bcf9e-4|
              00000090  32 33 64 2d 34 64 31 65  2d 39 38 61 34 2d 30 63  |23d-4d1e-98a4-0c|
              000000a0  64 36 35 64 32 65 64 38  36 33 5c 22 7d 22 3a 7b  |d65d2ed863\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 38 36 2e 39 34  5c 22 7d 22 3a 7b 22 2e  |68.86.94\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-87wqt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-87wqt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-17-129",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.17.129",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.17.129"
        }
      },
      PodIP: (string) (len=13) "192.168.86.94",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.86.94"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842626,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  1 12:43:48.272: INFO: Pod "webserver-deployment-9b4f5bf69-f6lch" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-f6lch",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3550",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e995315e-6031-4ed9-baea-f2bc3369727f",
      ResourceVersion: (string) (len=5) "15884",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842628,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e91bcf9e-423d-4d1e-98a4-0cd65d2ed863",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  31 62 63 66 39 65 2d 34  |d\":\"e91bcf9e-4|
              00000090  32 33 64 2d 34 64 31 65  2d 39 38 61 34 2d 30 63  |23d-4d1e-98a4-0c|
              000000a0  64 36 35 64 32 65 64 38  36 33 5c 22 7d 22 3a 7b  |d65d2ed863\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-678ml",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-678ml",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  1 12:43:48.273: INFO: Pod "webserver-deployment-9b4f5bf69-gr65q" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-gr65q",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3550",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "823efa73-bb77-4e99-892f-d48db222f722",
      ResourceVersion: (string) (len=5) "15896",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842628,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e91bcf9e-423d-4d1e-98a4-0cd65d2ed863",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  31 62 63 66 39 65 2d 34  |d\":\"e91bcf9e-4|
              00000090  32 33 64 2d 34 64 31 65  2d 39 38 61 34 2d 30 63  |23d-4d1e-98a4-0c|
              000000a0  64 36 35 64 32 65 64 38  36 33 5c 22 7d 22 3a 7b  |d65d2ed863\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lwn7g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lwn7g",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-74-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  1 12:43:48.274: INFO: Pod "webserver-deployment-9b4f5bf69-k7wtm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-k7wtm",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3550",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8c81d77e-4f27-4bce-a8da-3cbc3a1f37ef",
      ResourceVersion: (string) (len=5) "15882",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842628,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e91bcf9e-423d-4d1e-98a4-0cd65d2ed863",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  31 62 63 66 39 65 2d 34  |d\":\"e91bcf9e-4|
              00000090  32 33 64 2d 34 64 31 65  2d 39 38 61 34 2d 30 63  |23d-4d1e-98a4-0c|
              000000a0  64 36 35 64 32 65 64 38  36 33 5c 22 7d 22 3a 7b  |d65d2ed863\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sb7d4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sb7d4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  1 12:43:48.275: INFO: Pod "webserver-deployment-9b4f5bf69-knqp9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-knqp9",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3550",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c4803bf1-735c-41f6-a186-0023147ce3ce",
      ResourceVersion: (string) (len=5) "15892",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842628,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e91bcf9e-423d-4d1e-98a4-0cd65d2ed863",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  31 62 63 66 39 65 2d 34  |d\":\"e91bcf9e-4|
              00000090  32 33 64 2d 34 64 31 65  2d 39 38 61 34 2d 30 63  |23d-4d1e-98a4-0c|
              000000a0  64 36 35 64 32 65 64 38  36 33 5c 22 7d 22 3a 7b  |d65d2ed863\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hpd97",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hpd97",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-74-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.74.111",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.74.111"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842628,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  1 12:43:48.276: INFO: Pod "webserver-deployment-9b4f5bf69-ksggx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-ksggx",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3550",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b38650a2-fe78-4675-bcff-6df7af264651",
      ResourceVersion: (string) (len=5) "15853",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842626,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e91bcf9e-423d-4d1e-98a4-0cd65d2ed863",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  31 62 63 66 39 65 2d 34  |d\":\"e91bcf9e-4|
              00000090  32 33 64 2d 34 64 31 65  2d 39 38 61 34 2d 30 63  |23d-4d1e-98a4-0c|
              000000a0  64 36 35 64 32 65 64 38  36 33 5c 22 7d 22 3a 7b  |d65d2ed863\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 31 38 2e 31  35 36 5c 22 7d 22 3a 7b  |68.118.156\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qwcf5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qwcf5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-74-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.74.111",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.74.111"
        }
      },
      PodIP: (string) (len=15) "192.168.118.156",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.118.156"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842626,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  1 12:43:48.278: INFO: Pod "webserver-deployment-9b4f5bf69-lgn4z" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-lgn4z",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3550",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "23e32b37-72ad-40e2-b184-25c3b0dde8a9",
      ResourceVersion: (string) (len=5) "15866",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842628,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e91bcf9e-423d-4d1e-98a4-0cd65d2ed863",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  31 62 63 66 39 65 2d 34  |d\":\"e91bcf9e-4|
              00000090  32 33 64 2d 34 64 31 65  2d 39 38 61 34 2d 30 63  |23d-4d1e-98a4-0c|
              000000a0  64 36 35 64 32 65 64 38  36 33 5c 22 7d 22 3a 7b  |d65d2ed863\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rfpww",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rfpww",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-17-129",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  1 12:43:48.280: INFO: Pod "webserver-deployment-9b4f5bf69-lrm59" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-lrm59",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3550",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "00447827-b011-4412-b15d-d1a5c0d4150e",
      ResourceVersion: (string) (len=5) "15850",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842626,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e91bcf9e-423d-4d1e-98a4-0cd65d2ed863",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  31 62 63 66 39 65 2d 34  |d\":\"e91bcf9e-4|
              00000090  32 33 64 2d 34 64 31 65  2d 39 38 61 34 2d 30 63  |23d-4d1e-98a4-0c|
              000000a0  64 36 35 64 32 65 64 38  36 33 5c 22 7d 22 3a 7b  |d65d2ed863\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 31 38 2e 31  35 37 5c 22 7d 22 3a 7b  |68.118.157\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8f7bq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8f7bq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-74-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.74.111",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.74.111"
        }
      },
      PodIP: (string) (len=15) "192.168.118.157",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.118.157"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842626,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  1 12:43:48.283: INFO: Pod "webserver-deployment-9b4f5bf69-qkl7t" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-qkl7t",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3550",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4447683f-94be-477e-8a77-4ebadd823f00",
      ResourceVersion: (string) (len=5) "15879",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842628,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e91bcf9e-423d-4d1e-98a4-0cd65d2ed863",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  31 62 63 66 39 65 2d 34  |d\":\"e91bcf9e-4|
              00000090  32 33 64 2d 34 64 31 65  2d 39 38 61 34 2d 30 63  |23d-4d1e-98a4-0c|
              000000a0  64 36 35 64 32 65 64 38  36 33 5c 22 7d 22 3a 7b  |d65d2ed863\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2dz4r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2dz4r",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-80-202",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  1 12:43:48.284: INFO: Pod "webserver-deployment-9b4f5bf69-ts7tl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-ts7tl",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3550",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "de83a01b-f6f3-4b4c-99c3-ddee8da89c86",
      ResourceVersion: (string) (len=5) "15832",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842626,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e91bcf9e-423d-4d1e-98a4-0cd65d2ed863",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  31 62 63 66 39 65 2d 34  |d\":\"e91bcf9e-4|
              00000090  32 33 64 2d 34 64 31 65  2d 39 38 61 34 2d 30 63  |23d-4d1e-98a4-0c|
              000000a0  64 36 35 64 32 65 64 38  36 33 5c 22 7d 22 3a 7b  |d65d2ed863\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 32 36 2e 31  30 37 5c 22 7d 22 3a 7b  |68.126.107\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cwrhb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cwrhb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-80-202",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852842626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.80.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.80.202"
        }
      },
      PodIP: (string) (len=15) "192.168.126.107",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.126.107"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852842626,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  1 12:43:48.285: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3550" for this suite. @ 06/01/24 12:43:48.298
â€¢ [4.257 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 06/01/24 12:43:48.31
  Jun  1 12:43:48.310: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename watch @ 06/01/24 12:43:48.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:43:48.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:43:48.336
  STEP: creating a new configmap @ 06/01/24 12:43:48.341
  STEP: modifying the configmap once @ 06/01/24 12:43:48.344
  STEP: modifying the configmap a second time @ 06/01/24 12:43:48.355
  STEP: deleting the configmap @ 06/01/24 12:43:48.363
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 06/01/24 12:43:48.371
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 06/01/24 12:43:48.372
  Jun  1 12:43:48.372: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-2813  d3cae0d4-85b2-4e46-bf7e-f41f4bf5bd01 15962 0 2024-06-01 12:43:48 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-06-01 12:43:48 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  1 12:43:48.372: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-2813  d3cae0d4-85b2-4e46-bf7e-f41f4bf5bd01 15965 0 2024-06-01 12:43:48 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-06-01 12:43:48 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  1 12:43:48.372: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2813" for this suite. @ 06/01/24 12:43:48.374
â€¢ [0.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:94
  STEP: Creating a kubernetes client @ 06/01/24 12:43:48.381
  Jun  1 12:43:48.381: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename configmap @ 06/01/24 12:43:48.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:43:48.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:43:48.399
  STEP: Creating configMap configmap-4190/configmap-test-7ea4280a-e5ad-4a80-9506-9478af3f28e6 @ 06/01/24 12:43:48.401
  STEP: Creating a pod to test consume configMaps @ 06/01/24 12:43:48.405
  STEP: Saw pod success @ 06/01/24 12:43:52.429
  Jun  1 12:43:52.433: INFO: Trying to get logs from node ip-172-31-80-202 pod pod-configmaps-156c0c8e-0a13-4d99-bc2c-5dceb689f836 container env-test: <nil>
  STEP: delete the pod @ 06/01/24 12:43:52.441
  Jun  1 12:43:52.454: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4190" for this suite. @ 06/01/24 12:43:52.457
â€¢ [4.084 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 06/01/24 12:43:52.465
  Jun  1 12:43:52.465: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename var-expansion @ 06/01/24 12:43:52.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:43:52.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:43:52.482
  STEP: creating the pod with failed condition @ 06/01/24 12:43:52.484
  STEP: updating the pod @ 06/01/24 12:45:52.494
  Jun  1 12:45:53.008: INFO: Successfully updated pod "var-expansion-f7b6f2af-0e4b-4e94-a88c-814da1c1fd94"
  STEP: waiting for pod running @ 06/01/24 12:45:53.008
  STEP: deleting the pod gracefully @ 06/01/24 12:45:55.02
  Jun  1 12:45:55.020: INFO: Deleting pod "var-expansion-f7b6f2af-0e4b-4e94-a88c-814da1c1fd94" in namespace "var-expansion-4066"
  Jun  1 12:45:55.030: INFO: Wait up to 5m0s for pod "var-expansion-f7b6f2af-0e4b-4e94-a88c-814da1c1fd94" to be fully deleted
  Jun  1 12:46:27.112: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4066" for this suite. @ 06/01/24 12:46:27.115
â€¢ [154.660 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 06/01/24 12:46:27.124
  Jun  1 12:46:27.124: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename secrets @ 06/01/24 12:46:27.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:46:27.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:46:27.144
  STEP: Creating secret with name secret-test-map-91578c46-1aa7-44e9-8a00-4c89e10dd8d3 @ 06/01/24 12:46:27.147
  STEP: Creating a pod to test consume secrets @ 06/01/24 12:46:27.151
  STEP: Saw pod success @ 06/01/24 12:46:29.17
  Jun  1 12:46:29.174: INFO: Trying to get logs from node ip-172-31-74-111 pod pod-secrets-d461ae47-4733-4c1c-91b5-c8904f0d6c68 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/01/24 12:46:29.191
  Jun  1 12:46:29.207: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4845" for this suite. @ 06/01/24 12:46:29.211
â€¢ [2.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:708
  STEP: Creating a kubernetes client @ 06/01/24 12:46:29.217
  Jun  1 12:46:29.217: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename sched-pred @ 06/01/24 12:46:29.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:46:29.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:46:29.238
  Jun  1 12:46:29.242: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jun  1 12:46:29.249: INFO: Waiting for terminating namespaces to be deleted...
  Jun  1 12:46:29.251: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-17-129 before test
  Jun  1 12:46:29.256: INFO: nginx-ingress-controller-kubernetes-worker-k4zlz from ingress-nginx-kubernetes-worker started at 2024-06-01 12:06:08 +0000 UTC (1 container statuses recorded)
  Jun  1 12:46:29.256: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 1
  Jun  1 12:46:29.256: INFO: calico-node-zwmhv from kube-system started at 2024-06-01 12:14:42 +0000 UTC (1 container statuses recorded)
  Jun  1 12:46:29.256: INFO: 	Container calico-node ready: true, restart count 0
  Jun  1 12:46:29.256: INFO: coredns-bddfd76d7-7mj9q from kube-system started at 2024-06-01 12:06:08 +0000 UTC (1 container statuses recorded)
  Jun  1 12:46:29.256: INFO: 	Container coredns ready: true, restart count 0
  Jun  1 12:46:29.256: INFO: kube-state-metrics-6f48cdd76-llxcr from kube-system started at 2024-06-01 12:06:08 +0000 UTC (1 container statuses recorded)
  Jun  1 12:46:29.256: INFO: 	Container kube-state-metrics ready: true, restart count 6
  Jun  1 12:46:29.256: INFO: metrics-server-v0.6.3-69d7fbfdf8-ggp9k from kube-system started at 2024-06-01 12:06:08 +0000 UTC (2 container statuses recorded)
  Jun  1 12:46:29.256: INFO: 	Container metrics-server ready: true, restart count 4
  Jun  1 12:46:29.256: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Jun  1 12:46:29.256: INFO: dashboard-metrics-scraper-5dd7cb5fc-chxdj from kubernetes-dashboard started at 2024-06-01 12:06:08 +0000 UTC (1 container statuses recorded)
  Jun  1 12:46:29.256: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Jun  1 12:46:29.256: INFO: kubernetes-dashboard-7b899cb9d9-6z8mc from kubernetes-dashboard started at 2024-06-01 12:06:08 +0000 UTC (1 container statuses recorded)
  Jun  1 12:46:29.256: INFO: 	Container kubernetes-dashboard ready: true, restart count 4
  Jun  1 12:46:29.256: INFO: sonobuoy-systemd-logs-daemon-set-6b74001505cc4012-w6grx from sonobuoy started at 2024-06-01 12:18:35 +0000 UTC (2 container statuses recorded)
  Jun  1 12:46:29.256: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  1 12:46:29.256: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun  1 12:46:29.256: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-74-111 before test
  Jun  1 12:46:29.259: INFO: nginx-ingress-controller-kubernetes-worker-57r8s from ingress-nginx-kubernetes-worker started at 2024-06-01 12:21:42 +0000 UTC (1 container statuses recorded)
  Jun  1 12:46:29.259: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jun  1 12:46:29.259: INFO: calico-node-x7lqm from kube-system started at 2024-06-01 12:16:31 +0000 UTC (1 container statuses recorded)
  Jun  1 12:46:29.259: INFO: 	Container calico-node ready: true, restart count 0
  Jun  1 12:46:29.259: INFO: sonobuoy from sonobuoy started at 2024-06-01 12:18:33 +0000 UTC (1 container statuses recorded)
  Jun  1 12:46:29.259: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jun  1 12:46:29.259: INFO: sonobuoy-systemd-logs-daemon-set-6b74001505cc4012-t4fhp from sonobuoy started at 2024-06-01 12:18:35 +0000 UTC (2 container statuses recorded)
  Jun  1 12:46:29.259: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  1 12:46:29.259: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun  1 12:46:29.259: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-80-202 before test
  Jun  1 12:46:29.264: INFO: nginx-ingress-controller-kubernetes-worker-8v98c from ingress-nginx-kubernetes-worker started at 2024-06-01 12:15:51 +0000 UTC (1 container statuses recorded)
  Jun  1 12:46:29.264: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jun  1 12:46:29.264: INFO: calico-node-lr4nv from kube-system started at 2024-06-01 12:16:31 +0000 UTC (1 container statuses recorded)
  Jun  1 12:46:29.264: INFO: 	Container calico-node ready: true, restart count 0
  Jun  1 12:46:29.264: INFO: sonobuoy-e2e-job-65c4f8adab634956 from sonobuoy started at 2024-06-01 12:18:35 +0000 UTC (2 container statuses recorded)
  Jun  1 12:46:29.264: INFO: 	Container e2e ready: true, restart count 0
  Jun  1 12:46:29.265: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  1 12:46:29.265: INFO: sonobuoy-systemd-logs-daemon-set-6b74001505cc4012-pwg5w from sonobuoy started at 2024-06-01 12:18:35 +0000 UTC (2 container statuses recorded)
  Jun  1 12:46:29.265: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  1 12:46:29.265: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 06/01/24 12:46:29.265
  STEP: Explicitly delete pod here to free the resource it takes. @ 06/01/24 12:46:31.284
  STEP: Trying to apply a random label on the found node. @ 06/01/24 12:46:31.302
  STEP: verifying the node has the label kubernetes.io/e2e-4cc8e6a2-a648-4583-a75a-64e82bcf6a96 95 @ 06/01/24 12:46:31.311
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 06/01/24 12:46:31.314
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.74.111 on the node which pod4 resides and expect not scheduled @ 06/01/24 12:46:33.327
  STEP: removing the label kubernetes.io/e2e-4cc8e6a2-a648-4583-a75a-64e82bcf6a96 off the node ip-172-31-74-111 @ 06/01/24 12:51:33.333
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-4cc8e6a2-a648-4583-a75a-64e82bcf6a96 @ 06/01/24 12:51:33.346
  Jun  1 12:51:33.352: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6855" for this suite. @ 06/01/24 12:51:33.356
â€¢ [304.144 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 06/01/24 12:51:33.361
  Jun  1 12:51:33.361: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename dns @ 06/01/24 12:51:33.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:51:33.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:51:33.382
  STEP: Creating a test headless service @ 06/01/24 12:51:33.384
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9812 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9812;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9812 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9812;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9812.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9812.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9812.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9812.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9812.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-9812.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9812.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-9812.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9812.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-9812.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9812.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-9812.svc;check="$$(dig +notcp +noall +answer +search 227.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.227_udp@PTR;check="$$(dig +tcp +noall +answer +search 227.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.227_tcp@PTR;sleep 1; done
   @ 06/01/24 12:51:33.402
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9812 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9812;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9812 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9812;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9812.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9812.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9812.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9812.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9812.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9812.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9812.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9812.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9812.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9812.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9812.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9812.svc;check="$$(dig +notcp +noall +answer +search 227.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.227_udp@PTR;check="$$(dig +tcp +noall +answer +search 227.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.227_tcp@PTR;sleep 1; done
   @ 06/01/24 12:51:33.402
  STEP: creating a pod to probe DNS @ 06/01/24 12:51:33.402
  STEP: submitting the pod to kubernetes @ 06/01/24 12:51:33.402
  STEP: retrieving the pod @ 06/01/24 12:51:39.443
  STEP: looking for the results for each expected name from probers @ 06/01/24 12:51:39.448
  Jun  1 12:51:39.452: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-9812/dns-test-29c747d8-87d8-4d14-a331-c6ae3bede6ac: the server could not find the requested resource (get pods dns-test-29c747d8-87d8-4d14-a331-c6ae3bede6ac)
  Jun  1 12:51:39.456: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-9812/dns-test-29c747d8-87d8-4d14-a331-c6ae3bede6ac: the server could not find the requested resource (get pods dns-test-29c747d8-87d8-4d14-a331-c6ae3bede6ac)
  Jun  1 12:51:39.460: INFO: Unable to read wheezy_udp@dns-test-service.dns-9812 from pod dns-9812/dns-test-29c747d8-87d8-4d14-a331-c6ae3bede6ac: the server could not find the requested resource (get pods dns-test-29c747d8-87d8-4d14-a331-c6ae3bede6ac)
  Jun  1 12:51:39.463: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9812 from pod dns-9812/dns-test-29c747d8-87d8-4d14-a331-c6ae3bede6ac: the server could not find the requested resource (get pods dns-test-29c747d8-87d8-4d14-a331-c6ae3bede6ac)
  Jun  1 12:51:39.473: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9812.svc from pod dns-9812/dns-test-29c747d8-87d8-4d14-a331-c6ae3bede6ac: the server could not find the requested resource (get pods dns-test-29c747d8-87d8-4d14-a331-c6ae3bede6ac)
  Jun  1 12:51:39.476: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9812.svc from pod dns-9812/dns-test-29c747d8-87d8-4d14-a331-c6ae3bede6ac: the server could not find the requested resource (get pods dns-test-29c747d8-87d8-4d14-a331-c6ae3bede6ac)
  Jun  1 12:51:39.527: INFO: Lookups using dns-9812/dns-test-29c747d8-87d8-4d14-a331-c6ae3bede6ac failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-9812 wheezy_tcp@dns-test-service.dns-9812 wheezy_udp@_http._tcp.dns-test-service.dns-9812.svc wheezy_tcp@_http._tcp.dns-test-service.dns-9812.svc]

  Jun  1 12:51:39.543: INFO: Pod client logs for webserver: 
  Jun  1 12:51:39.550: INFO: Pod client logs for querier: 
  Jun  1 12:51:39.556: INFO: Pod client logs for jessie-querier: 
  Jun  1 12:51:44.533: INFO: DNS probes using dns-9812/dns-test-29c747d8-87d8-4d14-a331-c6ae3bede6ac succeeded

  STEP: deleting the pod @ 06/01/24 12:51:44.533
  STEP: deleting the test service @ 06/01/24 12:51:44.557
  STEP: deleting the test headless service @ 06/01/24 12:51:44.587
  Jun  1 12:51:44.595: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9812" for this suite. @ 06/01/24 12:51:44.598
â€¢ [11.243 seconds]
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 06/01/24 12:51:44.605
  Jun  1 12:51:44.605: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename configmap @ 06/01/24 12:51:44.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:51:44.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:51:44.621
  STEP: Creating configMap with name cm-test-opt-del-c3a7ed8b-0dc3-49c1-a050-cbd4a1a0ace9 @ 06/01/24 12:51:44.63
  STEP: Creating configMap with name cm-test-opt-upd-02b71ef2-59a6-4b6c-9c28-3d6fe3faef5a @ 06/01/24 12:51:44.635
  STEP: Creating the pod @ 06/01/24 12:51:44.639
  STEP: Deleting configmap cm-test-opt-del-c3a7ed8b-0dc3-49c1-a050-cbd4a1a0ace9 @ 06/01/24 12:51:46.686
  STEP: Updating configmap cm-test-opt-upd-02b71ef2-59a6-4b6c-9c28-3d6fe3faef5a @ 06/01/24 12:51:46.692
  STEP: Creating configMap with name cm-test-opt-create-31a44fed-92c9-4b79-a4a7-571c93ad5859 @ 06/01/24 12:51:46.698
  STEP: waiting to observe update in volume @ 06/01/24 12:51:46.702
  Jun  1 12:52:52.998: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8688" for this suite. @ 06/01/24 12:52:53.002
â€¢ [68.405 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 06/01/24 12:52:53.01
  Jun  1 12:52:53.010: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename sched-preemption @ 06/01/24 12:52:53.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:52:53.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:52:53.027
  Jun  1 12:52:53.043: INFO: Waiting up to 1m0s for all nodes to be ready
  Jun  1 12:53:53.049: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 06/01/24 12:53:53.052
  Jun  1 12:53:53.052: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename sched-preemption-path @ 06/01/24 12:53:53.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:53:53.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:53:53.073
  Jun  1 12:53:53.088: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Jun  1 12:53:53.091: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Jun  1 12:53:53.161: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-7500" for this suite. @ 06/01/24 12:53:53.165
  Jun  1 12:53:53.172: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7429" for this suite. @ 06/01/24 12:53:53.174
â€¢ [60.170 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1731
  STEP: Creating a kubernetes client @ 06/01/24 12:53:53.181
  Jun  1 12:53:53.181: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename kubectl @ 06/01/24 12:53:53.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:53:53.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:53:53.2
  Jun  1 12:53:53.203: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-1115 version'
  Jun  1 12:53:53.241: INFO: stderr: ""
  Jun  1 12:53:53.241: INFO: stdout: "Client Version: v1.29.5\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.29.5\n"
  Jun  1 12:53:53.242: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1115" for this suite. @ 06/01/24 12:53:53.246
â€¢ [0.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 06/01/24 12:53:53.253
  Jun  1 12:53:53.253: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename replication-controller @ 06/01/24 12:53:53.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:53:53.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:53:53.271
  STEP: Creating ReplicationController "e2e-rc-wtb9n" @ 06/01/24 12:53:53.274
  Jun  1 12:53:53.280: INFO: Get Replication Controller "e2e-rc-wtb9n" to confirm replicas
  Jun  1 12:53:54.280: INFO: Get Replication Controller "e2e-rc-wtb9n" to confirm replicas
  Jun  1 12:53:54.285: INFO: Found 1 replicas for "e2e-rc-wtb9n" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-wtb9n" @ 06/01/24 12:53:54.285
  STEP: Updating a scale subresource @ 06/01/24 12:53:54.288
  STEP: Verifying replicas where modified for replication controller "e2e-rc-wtb9n" @ 06/01/24 12:53:54.295
  Jun  1 12:53:54.295: INFO: Get Replication Controller "e2e-rc-wtb9n" to confirm replicas
  Jun  1 12:53:55.295: INFO: Get Replication Controller "e2e-rc-wtb9n" to confirm replicas
  Jun  1 12:53:55.298: INFO: Found 2 replicas for "e2e-rc-wtb9n" replication controller
  Jun  1 12:53:55.298: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-958" for this suite. @ 06/01/24 12:53:55.301
â€¢ [2.057 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 06/01/24 12:53:55.311
  Jun  1 12:53:55.311: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename namespaces @ 06/01/24 12:53:55.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:53:55.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:53:55.334
  STEP: Creating namespace "e2e-ns-ffx2n" @ 06/01/24 12:53:55.336
  Jun  1 12:53:55.350: INFO: Namespace "e2e-ns-ffx2n-9851" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-ffx2n-9851" @ 06/01/24 12:53:55.35
  Jun  1 12:53:55.360: INFO: Namespace "e2e-ns-ffx2n-9851" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-ffx2n-9851" @ 06/01/24 12:53:55.36
  Jun  1 12:53:55.368: INFO: Namespace "e2e-ns-ffx2n-9851" has []v1.FinalizerName{"kubernetes"}
  Jun  1 12:53:55.368: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7153" for this suite. @ 06/01/24 12:53:55.372
  STEP: Destroying namespace "e2e-ns-ffx2n-9851" for this suite. @ 06/01/24 12:53:55.379
â€¢ [0.075 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 06/01/24 12:53:55.386
  Jun  1 12:53:55.386: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename replicaset @ 06/01/24 12:53:55.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:53:55.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:53:55.403
  STEP: Create a Replicaset @ 06/01/24 12:53:55.41
  STEP: Verify that the required pods have come up. @ 06/01/24 12:53:55.413
  Jun  1 12:53:55.416: INFO: Pod name sample-pod: Found 0 pods out of 1
  Jun  1 12:54:00.423: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/01/24 12:54:00.423
  STEP: Getting /status @ 06/01/24 12:54:00.423
  Jun  1 12:54:00.429: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 06/01/24 12:54:00.429
  Jun  1 12:54:00.445: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 06/01/24 12:54:00.445
  Jun  1 12:54:00.448: INFO: Observed &ReplicaSet event: ADDED
  Jun  1 12:54:00.451: INFO: Observed &ReplicaSet event: MODIFIED
  Jun  1 12:54:00.451: INFO: Observed &ReplicaSet event: MODIFIED
  Jun  1 12:54:00.452: INFO: Observed &ReplicaSet event: MODIFIED
  Jun  1 12:54:00.452: INFO: Found replicaset test-rs in namespace replicaset-2894 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jun  1 12:54:00.452: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 06/01/24 12:54:00.452
  Jun  1 12:54:00.452: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jun  1 12:54:00.461: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 06/01/24 12:54:00.461
  Jun  1 12:54:00.463: INFO: Observed &ReplicaSet event: ADDED
  Jun  1 12:54:00.463: INFO: Observed &ReplicaSet event: MODIFIED
  Jun  1 12:54:00.463: INFO: Observed &ReplicaSet event: MODIFIED
  Jun  1 12:54:00.463: INFO: Observed &ReplicaSet event: MODIFIED
  Jun  1 12:54:00.463: INFO: Observed replicaset test-rs in namespace replicaset-2894 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun  1 12:54:00.463: INFO: Observed &ReplicaSet event: MODIFIED
  Jun  1 12:54:00.463: INFO: Found replicaset test-rs in namespace replicaset-2894 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Jun  1 12:54:00.463: INFO: Replicaset test-rs has a patched status
  Jun  1 12:54:00.463: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2894" for this suite. @ 06/01/24 12:54:00.47
â€¢ [5.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 06/01/24 12:54:00.476
  Jun  1 12:54:00.476: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename webhook @ 06/01/24 12:54:00.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:54:00.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:54:00.497
  STEP: Setting up server cert @ 06/01/24 12:54:00.526
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/01/24 12:54:00.805
  STEP: Deploying the webhook pod @ 06/01/24 12:54:00.815
  STEP: Wait for the deployment to be ready @ 06/01/24 12:54:00.827
  Jun  1 12:54:00.839: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/01/24 12:54:02.852
  STEP: Verifying the service has paired with the endpoint @ 06/01/24 12:54:02.863
  Jun  1 12:54:03.863: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 06/01/24 12:54:03.872
  STEP: create a pod @ 06/01/24 12:54:03.886
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 06/01/24 12:54:05.899
  Jun  1 12:54:05.899: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=webhook-4360 attach --namespace=webhook-4360 to-be-attached-pod -i -c=container1'
  Jun  1 12:54:05.952: INFO: rc: 1
  Jun  1 12:54:06.009: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4360" for this suite. @ 06/01/24 12:54:06.014
  STEP: Destroying namespace "webhook-markers-619" for this suite. @ 06/01/24 12:54:06.021
â€¢ [5.551 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 06/01/24 12:54:06.027
  Jun  1 12:54:06.028: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename secrets @ 06/01/24 12:54:06.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:54:06.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:54:06.045
  STEP: Creating secret with name secret-test-3b464bcc-a35d-4029-ba78-b01c09bc14d2 @ 06/01/24 12:54:06.048
  STEP: Creating a pod to test consume secrets @ 06/01/24 12:54:06.051
  STEP: Saw pod success @ 06/01/24 12:54:08.071
  Jun  1 12:54:08.074: INFO: Trying to get logs from node ip-172-31-80-202 pod pod-secrets-553d5c07-ce95-4c3e-b92f-b31c94bf66d5 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/01/24 12:54:08.084
  Jun  1 12:54:08.100: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2550" for this suite. @ 06/01/24 12:54:08.104
â€¢ [2.082 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 06/01/24 12:54:08.11
  Jun  1 12:54:08.110: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename downward-api @ 06/01/24 12:54:08.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:54:08.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:54:08.131
  STEP: Creating a pod to test downward API volume plugin @ 06/01/24 12:54:08.133
  STEP: Saw pod success @ 06/01/24 12:54:10.153
  Jun  1 12:54:10.155: INFO: Trying to get logs from node ip-172-31-80-202 pod downwardapi-volume-90209437-1b2f-439a-a0f9-8f4ff0280528 container client-container: <nil>
  STEP: delete the pod @ 06/01/24 12:54:10.163
  Jun  1 12:54:10.180: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2992" for this suite. @ 06/01/24 12:54:10.184
â€¢ [2.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 06/01/24 12:54:10.191
  Jun  1 12:54:10.191: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename var-expansion @ 06/01/24 12:54:10.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:54:10.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:54:10.208
  STEP: Creating a pod to test substitution in container's args @ 06/01/24 12:54:10.21
  STEP: Saw pod success @ 06/01/24 12:54:12.229
  Jun  1 12:54:12.232: INFO: Trying to get logs from node ip-172-31-80-202 pod var-expansion-b80ed652-0070-42df-b5c1-74752a7afb9d container dapi-container: <nil>
  STEP: delete the pod @ 06/01/24 12:54:12.238
  Jun  1 12:54:12.255: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2501" for this suite. @ 06/01/24 12:54:12.258
â€¢ [2.076 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 06/01/24 12:54:12.267
  Jun  1 12:54:12.267: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename webhook @ 06/01/24 12:54:12.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:54:12.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:54:12.288
  STEP: Setting up server cert @ 06/01/24 12:54:12.313
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/01/24 12:54:12.507
  STEP: Deploying the webhook pod @ 06/01/24 12:54:12.514
  STEP: Wait for the deployment to be ready @ 06/01/24 12:54:12.526
  Jun  1 12:54:12.536: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/01/24 12:54:14.547
  STEP: Verifying the service has paired with the endpoint @ 06/01/24 12:54:14.557
  Jun  1 12:54:15.557: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun  1 12:54:15.565: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8891-crds.webhook.example.com via the AdmissionRegistration API @ 06/01/24 12:54:16.075
  STEP: Creating a custom resource that should be mutated by the webhook @ 06/01/24 12:54:16.088
  Jun  1 12:54:18.671: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-825" for this suite. @ 06/01/24 12:54:18.674
  STEP: Destroying namespace "webhook-markers-4915" for this suite. @ 06/01/24 12:54:18.682
â€¢ [6.421 seconds]
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 06/01/24 12:54:18.688
  Jun  1 12:54:18.688: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename subpath @ 06/01/24 12:54:18.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:54:18.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:54:18.71
  STEP: Setting up data @ 06/01/24 12:54:18.712
  STEP: Creating pod pod-subpath-test-configmap-bbx9 @ 06/01/24 12:54:18.722
  STEP: Creating a pod to test atomic-volume-subpath @ 06/01/24 12:54:18.722
  STEP: Saw pod success @ 06/01/24 12:54:42.796
  Jun  1 12:54:42.799: INFO: Trying to get logs from node ip-172-31-74-111 pod pod-subpath-test-configmap-bbx9 container test-container-subpath-configmap-bbx9: <nil>
  STEP: delete the pod @ 06/01/24 12:54:42.811
  STEP: Deleting pod pod-subpath-test-configmap-bbx9 @ 06/01/24 12:54:42.828
  Jun  1 12:54:42.828: INFO: Deleting pod "pod-subpath-test-configmap-bbx9" in namespace "subpath-6594"
  Jun  1 12:54:42.831: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6594" for this suite. @ 06/01/24 12:54:42.834
â€¢ [24.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:488
  STEP: Creating a kubernetes client @ 06/01/24 12:54:42.841
  Jun  1 12:54:42.841: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename security-context-test @ 06/01/24 12:54:42.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:54:42.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:54:42.862
  Jun  1 12:54:46.886: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3784" for this suite. @ 06/01/24 12:54:46.89
â€¢ [4.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2177
  STEP: Creating a kubernetes client @ 06/01/24 12:54:46.897
  Jun  1 12:54:46.897: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename services @ 06/01/24 12:54:46.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:54:46.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:54:46.916
  STEP: creating service in namespace services-4675 @ 06/01/24 12:54:46.918
  STEP: creating service affinity-clusterip in namespace services-4675 @ 06/01/24 12:54:46.919
  STEP: creating replication controller affinity-clusterip in namespace services-4675 @ 06/01/24 12:54:46.927
  I0601 12:54:46.936014      21 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-4675, replica count: 3
  I0601 12:54:49.986564      21 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun  1 12:54:49.993: INFO: Creating new exec pod
  Jun  1 12:54:53.010: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-4675 exec execpod-affinity46dmd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Jun  1 12:54:53.110: INFO: stderr: "+ nc -v -t -w 2 affinity-clusterip 80\n+ echo hostName\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Jun  1 12:54:53.111: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  1 12:54:53.111: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-4675 exec execpod-affinity46dmd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.237 80'
  Jun  1 12:54:53.203: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.237 80\nConnection to 10.152.183.237 80 port [tcp/http] succeeded!\n"
  Jun  1 12:54:53.203: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  1 12:54:53.203: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-4675 exec execpod-affinity46dmd -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.237:80/ ; done'
  Jun  1 12:54:53.363: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.237:80/\n"
  Jun  1 12:54:53.363: INFO: stdout: "\naffinity-clusterip-vxkcx\naffinity-clusterip-vxkcx\naffinity-clusterip-vxkcx\naffinity-clusterip-vxkcx\naffinity-clusterip-vxkcx\naffinity-clusterip-vxkcx\naffinity-clusterip-vxkcx\naffinity-clusterip-vxkcx\naffinity-clusterip-vxkcx\naffinity-clusterip-vxkcx\naffinity-clusterip-vxkcx\naffinity-clusterip-vxkcx\naffinity-clusterip-vxkcx\naffinity-clusterip-vxkcx\naffinity-clusterip-vxkcx\naffinity-clusterip-vxkcx"
  Jun  1 12:54:53.363: INFO: Received response from host: affinity-clusterip-vxkcx
  Jun  1 12:54:53.363: INFO: Received response from host: affinity-clusterip-vxkcx
  Jun  1 12:54:53.363: INFO: Received response from host: affinity-clusterip-vxkcx
  Jun  1 12:54:53.363: INFO: Received response from host: affinity-clusterip-vxkcx
  Jun  1 12:54:53.363: INFO: Received response from host: affinity-clusterip-vxkcx
  Jun  1 12:54:53.363: INFO: Received response from host: affinity-clusterip-vxkcx
  Jun  1 12:54:53.363: INFO: Received response from host: affinity-clusterip-vxkcx
  Jun  1 12:54:53.363: INFO: Received response from host: affinity-clusterip-vxkcx
  Jun  1 12:54:53.363: INFO: Received response from host: affinity-clusterip-vxkcx
  Jun  1 12:54:53.363: INFO: Received response from host: affinity-clusterip-vxkcx
  Jun  1 12:54:53.363: INFO: Received response from host: affinity-clusterip-vxkcx
  Jun  1 12:54:53.363: INFO: Received response from host: affinity-clusterip-vxkcx
  Jun  1 12:54:53.363: INFO: Received response from host: affinity-clusterip-vxkcx
  Jun  1 12:54:53.363: INFO: Received response from host: affinity-clusterip-vxkcx
  Jun  1 12:54:53.363: INFO: Received response from host: affinity-clusterip-vxkcx
  Jun  1 12:54:53.364: INFO: Received response from host: affinity-clusterip-vxkcx
  Jun  1 12:54:53.364: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-4675, will wait for the garbage collector to delete the pods @ 06/01/24 12:54:53.382
  Jun  1 12:54:53.442: INFO: Deleting ReplicationController affinity-clusterip took: 6.837455ms
  Jun  1 12:54:53.542: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.750131ms
  Jun  1 12:54:56.267: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4675" for this suite. @ 06/01/24 12:54:56.274
â€¢ [9.389 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 06/01/24 12:54:56.286
  Jun  1 12:54:56.286: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename projected @ 06/01/24 12:54:56.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:54:56.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:54:56.316
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-6532543e-a4dc-447f-bf2e-220dbd1d8a74 @ 06/01/24 12:54:56.335
  STEP: Creating the pod @ 06/01/24 12:54:56.345
  STEP: Updating configmap projected-configmap-test-upd-6532543e-a4dc-447f-bf2e-220dbd1d8a74 @ 06/01/24 12:54:58.375
  STEP: waiting to observe update in volume @ 06/01/24 12:54:58.382
  Jun  1 12:56:16.716: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4397" for this suite. @ 06/01/24 12:56:16.72
â€¢ [80.444 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 06/01/24 12:56:16.73
  Jun  1 12:56:16.730: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename var-expansion @ 06/01/24 12:56:16.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:56:16.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:56:16.753
  STEP: Creating a pod to test substitution in volume subpath @ 06/01/24 12:56:16.755
  STEP: Saw pod success @ 06/01/24 12:56:20.78
  Jun  1 12:56:20.783: INFO: Trying to get logs from node ip-172-31-80-202 pod var-expansion-56e4cc0a-6b2d-4c48-932d-a23ca6b893b3 container dapi-container: <nil>
  STEP: delete the pod @ 06/01/24 12:56:20.795
  Jun  1 12:56:20.813: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9422" for this suite. @ 06/01/24 12:56:20.816
â€¢ [4.094 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 06/01/24 12:56:20.824
  Jun  1 12:56:20.824: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename csi-storageclass @ 06/01/24 12:56:20.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:56:20.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:56:20.849
  STEP: Creating a StorageClass @ 06/01/24 12:56:20.852
  STEP: Get StorageClass "e2e-zlc5t" @ 06/01/24 12:56:20.855
  STEP: Patching the StorageClass "e2e-zlc5t" @ 06/01/24 12:56:20.859
  STEP: Delete StorageClass "e2e-zlc5t" @ 06/01/24 12:56:20.865
  STEP: Confirm deletion of StorageClass "e2e-zlc5t" @ 06/01/24 12:56:20.87
  STEP: Create a replacement StorageClass @ 06/01/24 12:56:20.873
  STEP: Updating StorageClass "e2e-v2-l6njq" @ 06/01/24 12:56:20.878
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-l6njq=updated" @ 06/01/24 12:56:20.885
  STEP: Deleting StorageClass "e2e-v2-l6njq" via DeleteCollection @ 06/01/24 12:56:20.887
  STEP: Confirm deletion of StorageClass "e2e-v2-l6njq" @ 06/01/24 12:56:20.894
  Jun  1 12:56:20.898: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-5794" for this suite. @ 06/01/24 12:56:20.906
â€¢ [0.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 06/01/24 12:56:20.913
  Jun  1 12:56:20.913: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename container-probe @ 06/01/24 12:56:20.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:56:20.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:56:20.93
  Jun  1 12:57:20.953: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5013" for this suite. @ 06/01/24 12:57:20.957
â€¢ [60.051 seconds]
------------------------------
SS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 06/01/24 12:57:20.964
  Jun  1 12:57:20.964: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename pod-network-test @ 06/01/24 12:57:20.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:57:20.98
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:57:20.983
  STEP: Performing setup for networking test in namespace pod-network-test-1135 @ 06/01/24 12:57:20.985
  STEP: creating a selector @ 06/01/24 12:57:20.986
  STEP: Creating the service pods in kubernetes @ 06/01/24 12:57:20.986
  Jun  1 12:57:20.986: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 06/01/24 12:57:33.068
  Jun  1 12:57:35.098: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jun  1 12:57:35.098: INFO: Going to poll 192.168.86.96 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Jun  1 12:57:35.102: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.86.96 8081 | grep -v '^\s*$'] Namespace:pod-network-test-1135 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  1 12:57:35.102: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 12:57:35.102: INFO: ExecWithOptions: Clientset creation
  Jun  1 12:57:35.102: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1135/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.86.96+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun  1 12:57:36.155: INFO: Found all 1 expected endpoints: [netserver-0]
  Jun  1 12:57:36.156: INFO: Going to poll 192.168.118.170 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Jun  1 12:57:36.161: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.118.170 8081 | grep -v '^\s*$'] Namespace:pod-network-test-1135 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  1 12:57:36.161: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 12:57:36.161: INFO: ExecWithOptions: Clientset creation
  Jun  1 12:57:36.161: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1135/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.118.170+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun  1 12:57:37.207: INFO: Found all 1 expected endpoints: [netserver-1]
  Jun  1 12:57:37.207: INFO: Going to poll 192.168.126.120 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Jun  1 12:57:37.213: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.126.120 8081 | grep -v '^\s*$'] Namespace:pod-network-test-1135 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  1 12:57:37.213: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 12:57:37.213: INFO: ExecWithOptions: Clientset creation
  Jun  1 12:57:37.213: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1135/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.126.120+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun  1 12:57:38.255: INFO: Found all 1 expected endpoints: [netserver-2]
  Jun  1 12:57:38.255: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1135" for this suite. @ 06/01/24 12:57:38.258
â€¢ [17.301 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 06/01/24 12:57:38.265
  Jun  1 12:57:38.265: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename namespaces @ 06/01/24 12:57:38.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:57:38.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:57:38.284
  STEP: Read namespace status @ 06/01/24 12:57:38.287
  Jun  1 12:57:38.290: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 06/01/24 12:57:38.29
  Jun  1 12:57:38.294: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 06/01/24 12:57:38.294
  Jun  1 12:57:38.304: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Jun  1 12:57:38.304: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-107" for this suite. @ 06/01/24 12:57:38.307
â€¢ [0.048 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 06/01/24 12:57:38.313
  Jun  1 12:57:38.313: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename var-expansion @ 06/01/24 12:57:38.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:57:38.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:57:38.33
  Jun  1 12:57:40.349: INFO: Deleting pod "var-expansion-9e7f5fcd-5041-4e49-8d1e-c1920c62f72b" in namespace "var-expansion-2267"
  Jun  1 12:57:40.361: INFO: Wait up to 5m0s for pod "var-expansion-9e7f5fcd-5041-4e49-8d1e-c1920c62f72b" to be fully deleted
  Jun  1 12:57:42.368: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2267" for this suite. @ 06/01/24 12:57:42.373
â€¢ [4.067 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 06/01/24 12:57:42.38
  Jun  1 12:57:42.380: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename configmap @ 06/01/24 12:57:42.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:57:42.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:57:42.398
  STEP: Creating configMap with name configmap-test-volume-map-f74e276a-b87a-4c83-8235-f7285483ddfd @ 06/01/24 12:57:42.401
  STEP: Creating a pod to test consume configMaps @ 06/01/24 12:57:42.407
  STEP: Saw pod success @ 06/01/24 12:57:46.428
  Jun  1 12:57:46.432: INFO: Trying to get logs from node ip-172-31-80-202 pod pod-configmaps-cd95314c-18b0-45f7-8c5f-2861e66573ae container agnhost-container: <nil>
  STEP: delete the pod @ 06/01/24 12:57:46.442
  Jun  1 12:57:46.459: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2741" for this suite. @ 06/01/24 12:57:46.463
â€¢ [4.089 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:887
  STEP: Creating a kubernetes client @ 06/01/24 12:57:46.47
  Jun  1 12:57:46.470: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename kubectl @ 06/01/24 12:57:46.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:57:46.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:57:46.496
  STEP: validating api versions @ 06/01/24 12:57:46.498
  Jun  1 12:57:46.498: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-5829 api-versions'
  Jun  1 12:57:46.540: INFO: stderr: ""
  Jun  1 12:57:46.540: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Jun  1 12:57:46.540: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5829" for this suite. @ 06/01/24 12:57:46.544
â€¢ [0.079 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 06/01/24 12:57:46.549
  Jun  1 12:57:46.549: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename pods @ 06/01/24 12:57:46.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:57:46.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:57:46.567
  Jun  1 12:57:46.570: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: creating the pod @ 06/01/24 12:57:46.57
  STEP: submitting the pod to kubernetes @ 06/01/24 12:57:46.57
  Jun  1 12:57:48.611: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4257" for this suite. @ 06/01/24 12:57:48.613
â€¢ [2.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 06/01/24 12:57:48.621
  Jun  1 12:57:48.621: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename downward-api @ 06/01/24 12:57:48.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:57:48.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:57:48.64
  STEP: Creating a pod to test downward api env vars @ 06/01/24 12:57:48.644
  STEP: Saw pod success @ 06/01/24 12:57:52.666
  Jun  1 12:57:52.675: INFO: Trying to get logs from node ip-172-31-80-202 pod downward-api-e690a6d7-1e00-4f55-9984-279a50251b46 container dapi-container: <nil>
  STEP: delete the pod @ 06/01/24 12:57:52.685
  Jun  1 12:57:52.703: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2099" for this suite. @ 06/01/24 12:57:52.706
â€¢ [4.093 seconds]
------------------------------
SSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 06/01/24 12:57:52.714
  Jun  1 12:57:52.714: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename podtemplate @ 06/01/24 12:57:52.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:57:52.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:57:52.733
  Jun  1 12:57:52.766: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-9567" for this suite. @ 06/01/24 12:57:52.77
â€¢ [0.063 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 06/01/24 12:57:52.776
  Jun  1 12:57:52.776: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename dns @ 06/01/24 12:57:52.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:57:52.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:57:52.797
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 06/01/24 12:57:52.799
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 06/01/24 12:57:52.799
  STEP: creating a pod to probe DNS @ 06/01/24 12:57:52.799
  STEP: submitting the pod to kubernetes @ 06/01/24 12:57:52.799
  STEP: retrieving the pod @ 06/01/24 12:57:54.818
  STEP: looking for the results for each expected name from probers @ 06/01/24 12:57:54.821
  Jun  1 12:57:54.837: INFO: DNS probes using dns-4283/dns-test-fab5414f-995c-4c37-8e72-5618a67a9a5e succeeded

  STEP: deleting the pod @ 06/01/24 12:57:54.837
  Jun  1 12:57:54.850: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4283" for this suite. @ 06/01/24 12:57:54.855
â€¢ [2.085 seconds]
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 06/01/24 12:57:54.862
  Jun  1 12:57:54.862: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename downward-api @ 06/01/24 12:57:54.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:57:54.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:57:54.881
  STEP: Creating a pod to test downward api env vars @ 06/01/24 12:57:54.883
  STEP: Saw pod success @ 06/01/24 12:57:58.909
  Jun  1 12:57:58.912: INFO: Trying to get logs from node ip-172-31-80-202 pod downward-api-497e0b4f-f2ef-48e7-bd85-62ab57fa81a1 container dapi-container: <nil>
  STEP: delete the pod @ 06/01/24 12:57:58.918
  Jun  1 12:57:58.935: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4713" for this suite. @ 06/01/24 12:57:58.938
â€¢ [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 06/01/24 12:57:58.945
  Jun  1 12:57:58.945: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename deployment @ 06/01/24 12:57:58.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:57:58.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:57:58.966
  STEP: creating a Deployment @ 06/01/24 12:57:58.972
  Jun  1 12:57:58.972: INFO: Creating simple deployment test-deployment-mp2qx
  Jun  1 12:57:58.982: INFO: new replicaset for deployment "test-deployment-mp2qx" is yet to be created
  STEP: Getting /status @ 06/01/24 12:58:00.998
  Jun  1 12:58:01.002: INFO: Deployment test-deployment-mp2qx has Conditions: [{Available True 2024-06-01 12:58:00 +0000 UTC 2024-06-01 12:58:00 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-06-01 12:58:00 +0000 UTC 2024-06-01 12:57:58 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-mp2qx-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 06/01/24 12:58:01.002
  Jun  1 12:58:01.012: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 1, 12, 58, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 1, 12, 58, 0, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 1, 12, 58, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 1, 12, 57, 58, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-mp2qx-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 06/01/24 12:58:01.012
  Jun  1 12:58:01.013: INFO: Observed &Deployment event: ADDED
  Jun  1 12:58:01.013: INFO: Observed Deployment test-deployment-mp2qx in namespace deployment-3366 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-01 12:57:58 +0000 UTC 2024-06-01 12:57:58 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-mp2qx-5d576bd769"}
  Jun  1 12:58:01.013: INFO: Observed &Deployment event: MODIFIED
  Jun  1 12:58:01.013: INFO: Observed Deployment test-deployment-mp2qx in namespace deployment-3366 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-01 12:57:58 +0000 UTC 2024-06-01 12:57:58 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-mp2qx-5d576bd769"}
  Jun  1 12:58:01.013: INFO: Observed Deployment test-deployment-mp2qx in namespace deployment-3366 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-06-01 12:57:59 +0000 UTC 2024-06-01 12:57:59 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jun  1 12:58:01.014: INFO: Observed &Deployment event: MODIFIED
  Jun  1 12:58:01.014: INFO: Observed Deployment test-deployment-mp2qx in namespace deployment-3366 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-06-01 12:57:59 +0000 UTC 2024-06-01 12:57:59 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jun  1 12:58:01.014: INFO: Observed Deployment test-deployment-mp2qx in namespace deployment-3366 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-01 12:57:59 +0000 UTC 2024-06-01 12:57:58 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-mp2qx-5d576bd769" is progressing.}
  Jun  1 12:58:01.014: INFO: Observed &Deployment event: MODIFIED
  Jun  1 12:58:01.014: INFO: Observed Deployment test-deployment-mp2qx in namespace deployment-3366 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-06-01 12:58:00 +0000 UTC 2024-06-01 12:58:00 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jun  1 12:58:01.014: INFO: Observed Deployment test-deployment-mp2qx in namespace deployment-3366 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-01 12:58:00 +0000 UTC 2024-06-01 12:57:58 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-mp2qx-5d576bd769" has successfully progressed.}
  Jun  1 12:58:01.014: INFO: Observed &Deployment event: MODIFIED
  Jun  1 12:58:01.014: INFO: Observed Deployment test-deployment-mp2qx in namespace deployment-3366 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-06-01 12:58:00 +0000 UTC 2024-06-01 12:58:00 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jun  1 12:58:01.014: INFO: Observed Deployment test-deployment-mp2qx in namespace deployment-3366 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-01 12:58:00 +0000 UTC 2024-06-01 12:57:58 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-mp2qx-5d576bd769" has successfully progressed.}
  Jun  1 12:58:01.014: INFO: Found Deployment test-deployment-mp2qx in namespace deployment-3366 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun  1 12:58:01.014: INFO: Deployment test-deployment-mp2qx has an updated status
  STEP: patching the Statefulset Status @ 06/01/24 12:58:01.014
  Jun  1 12:58:01.014: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jun  1 12:58:01.021: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 06/01/24 12:58:01.022
  Jun  1 12:58:01.023: INFO: Observed &Deployment event: ADDED
  Jun  1 12:58:01.023: INFO: Observed deployment test-deployment-mp2qx in namespace deployment-3366 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-01 12:57:58 +0000 UTC 2024-06-01 12:57:58 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-mp2qx-5d576bd769"}
  Jun  1 12:58:01.023: INFO: Observed &Deployment event: MODIFIED
  Jun  1 12:58:01.023: INFO: Observed deployment test-deployment-mp2qx in namespace deployment-3366 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-01 12:57:58 +0000 UTC 2024-06-01 12:57:58 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-mp2qx-5d576bd769"}
  Jun  1 12:58:01.023: INFO: Observed deployment test-deployment-mp2qx in namespace deployment-3366 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-06-01 12:57:59 +0000 UTC 2024-06-01 12:57:59 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jun  1 12:58:01.024: INFO: Observed &Deployment event: MODIFIED
  Jun  1 12:58:01.024: INFO: Observed deployment test-deployment-mp2qx in namespace deployment-3366 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-06-01 12:57:59 +0000 UTC 2024-06-01 12:57:59 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jun  1 12:58:01.024: INFO: Observed deployment test-deployment-mp2qx in namespace deployment-3366 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-01 12:57:59 +0000 UTC 2024-06-01 12:57:58 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-mp2qx-5d576bd769" is progressing.}
  Jun  1 12:58:01.024: INFO: Observed &Deployment event: MODIFIED
  Jun  1 12:58:01.024: INFO: Observed deployment test-deployment-mp2qx in namespace deployment-3366 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-06-01 12:58:00 +0000 UTC 2024-06-01 12:58:00 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jun  1 12:58:01.024: INFO: Observed deployment test-deployment-mp2qx in namespace deployment-3366 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-01 12:58:00 +0000 UTC 2024-06-01 12:57:58 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-mp2qx-5d576bd769" has successfully progressed.}
  Jun  1 12:58:01.024: INFO: Observed &Deployment event: MODIFIED
  Jun  1 12:58:01.024: INFO: Observed deployment test-deployment-mp2qx in namespace deployment-3366 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-06-01 12:58:00 +0000 UTC 2024-06-01 12:58:00 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jun  1 12:58:01.024: INFO: Observed deployment test-deployment-mp2qx in namespace deployment-3366 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-01 12:58:00 +0000 UTC 2024-06-01 12:57:58 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-mp2qx-5d576bd769" has successfully progressed.}
  Jun  1 12:58:01.024: INFO: Observed deployment test-deployment-mp2qx in namespace deployment-3366 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun  1 12:58:01.024: INFO: Observed &Deployment event: MODIFIED
  Jun  1 12:58:01.024: INFO: Found deployment test-deployment-mp2qx in namespace deployment-3366 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Jun  1 12:58:01.024: INFO: Deployment test-deployment-mp2qx has a patched status
  Jun  1 12:58:01.028: INFO: Deployment "test-deployment-mp2qx":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-mp2qx",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3366",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3b5a3805-65fc-47fb-9ced-d9c27ca022bb",
      ResourceVersion: (string) (len=5) "19400",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852843478,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852843478,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852843481,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852843481,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852843481,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852843481,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-mp2qx-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun  1 12:58:01.033: INFO: New ReplicaSet "test-deployment-mp2qx-5d576bd769" of Deployment "test-deployment-mp2qx":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-mp2qx-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3366",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "42b2cd84-91a6-407e-88ef-1c49f51e391f",
      ResourceVersion: (string) (len=5) "19393",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852843478,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-mp2qx",
          UID: (types.UID) (len=36) "3b5a3805-65fc-47fb-9ced-d9c27ca022bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852843478,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 33 62 35  |k:{\"uid\":\"3b5|
              00000120  61 33 38 30 35 2d 36 35  66 63 2d 34 37 66 62 2d  |a3805-65fc-47fb-|
              00000130  39 63 65 64 2d 64 39 63  32 37 63 61 30 32 32 62  |9ced-d9c27ca022b|
              00000140  62 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |b\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852843480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun  1 12:58:01.039: INFO: Pod "test-deployment-mp2qx-5d576bd769-wf6bp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-mp2qx-5d576bd769-wf6bp",
      GenerateName: (string) (len=33) "test-deployment-mp2qx-5d576bd769-",
      Namespace: (string) (len=15) "deployment-3366",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "be5433a5-bd85-4e80-ae31-b7987e0aa1af",
      ResourceVersion: (string) (len=5) "19392",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852843479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-mp2qx-5d576bd769",
          UID: (types.UID) (len=36) "42b2cd84-91a6-407e-88ef-1c49f51e391f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852843478,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 34 32 62 32 63 64 38  34 2d 39 31 61 36 2d 34  |"42b2cd84-91a6-4|
              000000a0  30 37 65 2d 38 38 65 66  2d 31 63 34 39 66 35 31  |07e-88ef-1c49f51|
              000000b0  65 33 39 31 66 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |e391f\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852843480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 31  38 2e 31 37 35 5c 22 7d  |2.168.118.175\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cxng4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cxng4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-74-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852843480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852843479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852843480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852843480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852843479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.74.111",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.74.111"
        }
      },
      PodIP: (string) (len=15) "192.168.118.175",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.118.175"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852843479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852843479,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6f3d5c7d834c4c452e86f1ef700c3698e3c9274f2781d351183ee956151fdaa1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  1 12:58:01.041: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3366" for this suite. @ 06/01/24 12:58:01.044
â€¢ [2.106 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 06/01/24 12:58:01.051
  Jun  1 12:58:01.051: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename projected @ 06/01/24 12:58:01.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:58:01.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:58:01.068
  STEP: Creating a pod to test downward API volume plugin @ 06/01/24 12:58:01.071
  STEP: Saw pod success @ 06/01/24 12:58:05.094
  Jun  1 12:58:05.098: INFO: Trying to get logs from node ip-172-31-80-202 pod downwardapi-volume-9a333b0d-5073-41fc-8aed-31014a0c8e85 container client-container: <nil>
  STEP: delete the pod @ 06/01/24 12:58:05.104
  Jun  1 12:58:05.120: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1073" for this suite. @ 06/01/24 12:58:05.123
â€¢ [4.080 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:357
  STEP: Creating a kubernetes client @ 06/01/24 12:58:05.131
  Jun  1 12:58:05.131: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename kubectl @ 06/01/24 12:58:05.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:58:05.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:58:05.151
  STEP: creating a replication controller @ 06/01/24 12:58:05.153
  Jun  1 12:58:05.153: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-5381 create -f -'
  Jun  1 12:58:05.238: INFO: stderr: ""
  Jun  1 12:58:05.238: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/01/24 12:58:05.238
  Jun  1 12:58:05.238: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-5381 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun  1 12:58:05.286: INFO: stderr: ""
  Jun  1 12:58:05.286: INFO: stdout: "update-demo-nautilus-cjvnj update-demo-nautilus-jkchw "
  Jun  1 12:58:05.286: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-5381 get pods update-demo-nautilus-cjvnj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun  1 12:58:05.332: INFO: stderr: ""
  Jun  1 12:58:05.332: INFO: stdout: ""
  Jun  1 12:58:05.332: INFO: update-demo-nautilus-cjvnj is created but not running
  Jun  1 12:58:10.333: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-5381 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun  1 12:58:10.380: INFO: stderr: ""
  Jun  1 12:58:10.380: INFO: stdout: "update-demo-nautilus-cjvnj update-demo-nautilus-jkchw "
  Jun  1 12:58:10.380: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-5381 get pods update-demo-nautilus-cjvnj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun  1 12:58:10.424: INFO: stderr: ""
  Jun  1 12:58:10.424: INFO: stdout: "true"
  Jun  1 12:58:10.424: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-5381 get pods update-demo-nautilus-cjvnj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun  1 12:58:10.468: INFO: stderr: ""
  Jun  1 12:58:10.468: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun  1 12:58:10.468: INFO: validating pod update-demo-nautilus-cjvnj
  Jun  1 12:58:10.472: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun  1 12:58:10.472: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun  1 12:58:10.472: INFO: update-demo-nautilus-cjvnj is verified up and running
  Jun  1 12:58:10.472: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-5381 get pods update-demo-nautilus-jkchw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun  1 12:58:10.514: INFO: stderr: ""
  Jun  1 12:58:10.514: INFO: stdout: "true"
  Jun  1 12:58:10.514: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-5381 get pods update-demo-nautilus-jkchw -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun  1 12:58:10.557: INFO: stderr: ""
  Jun  1 12:58:10.557: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun  1 12:58:10.557: INFO: validating pod update-demo-nautilus-jkchw
  Jun  1 12:58:10.562: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun  1 12:58:10.562: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun  1 12:58:10.562: INFO: update-demo-nautilus-jkchw is verified up and running
  STEP: scaling down the replication controller @ 06/01/24 12:58:10.563
  Jun  1 12:58:10.563: INFO: scanned /root for discovery docs: <nil>
  Jun  1 12:58:10.563: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-5381 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  Jun  1 12:58:11.627: INFO: stderr: ""
  Jun  1 12:58:11.627: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/01/24 12:58:11.627
  Jun  1 12:58:11.627: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-5381 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun  1 12:58:11.741: INFO: stderr: ""
  Jun  1 12:58:11.742: INFO: stdout: "update-demo-nautilus-cjvnj update-demo-nautilus-jkchw "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 06/01/24 12:58:11.742
  Jun  1 12:58:16.742: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-5381 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun  1 12:58:16.789: INFO: stderr: ""
  Jun  1 12:58:16.789: INFO: stdout: "update-demo-nautilus-cjvnj "
  Jun  1 12:58:16.789: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-5381 get pods update-demo-nautilus-cjvnj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun  1 12:58:16.832: INFO: stderr: ""
  Jun  1 12:58:16.832: INFO: stdout: "true"
  Jun  1 12:58:16.832: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-5381 get pods update-demo-nautilus-cjvnj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun  1 12:58:16.876: INFO: stderr: ""
  Jun  1 12:58:16.876: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun  1 12:58:16.876: INFO: validating pod update-demo-nautilus-cjvnj
  Jun  1 12:58:16.881: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun  1 12:58:16.881: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun  1 12:58:16.881: INFO: update-demo-nautilus-cjvnj is verified up and running
  STEP: scaling up the replication controller @ 06/01/24 12:58:16.881
  Jun  1 12:58:16.882: INFO: scanned /root for discovery docs: <nil>
  Jun  1 12:58:16.882: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-5381 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  Jun  1 12:58:17.944: INFO: stderr: ""
  Jun  1 12:58:17.944: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/01/24 12:58:17.944
  Jun  1 12:58:17.944: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-5381 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun  1 12:58:17.991: INFO: stderr: ""
  Jun  1 12:58:17.991: INFO: stdout: "update-demo-nautilus-4k85c update-demo-nautilus-cjvnj "
  Jun  1 12:58:17.991: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-5381 get pods update-demo-nautilus-4k85c -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun  1 12:58:18.034: INFO: stderr: ""
  Jun  1 12:58:18.034: INFO: stdout: ""
  Jun  1 12:58:18.034: INFO: update-demo-nautilus-4k85c is created but not running
  Jun  1 12:58:23.034: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-5381 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun  1 12:58:23.081: INFO: stderr: ""
  Jun  1 12:58:23.081: INFO: stdout: "update-demo-nautilus-4k85c update-demo-nautilus-cjvnj "
  Jun  1 12:58:23.082: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-5381 get pods update-demo-nautilus-4k85c -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun  1 12:58:23.126: INFO: stderr: ""
  Jun  1 12:58:23.126: INFO: stdout: "true"
  Jun  1 12:58:23.126: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-5381 get pods update-demo-nautilus-4k85c -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun  1 12:58:23.170: INFO: stderr: ""
  Jun  1 12:58:23.170: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun  1 12:58:23.170: INFO: validating pod update-demo-nautilus-4k85c
  Jun  1 12:58:23.175: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun  1 12:58:23.175: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun  1 12:58:23.176: INFO: update-demo-nautilus-4k85c is verified up and running
  Jun  1 12:58:23.176: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-5381 get pods update-demo-nautilus-cjvnj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun  1 12:58:23.219: INFO: stderr: ""
  Jun  1 12:58:23.219: INFO: stdout: "true"
  Jun  1 12:58:23.219: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-5381 get pods update-demo-nautilus-cjvnj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun  1 12:58:23.264: INFO: stderr: ""
  Jun  1 12:58:23.264: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun  1 12:58:23.264: INFO: validating pod update-demo-nautilus-cjvnj
  Jun  1 12:58:23.269: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun  1 12:58:23.269: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun  1 12:58:23.269: INFO: update-demo-nautilus-cjvnj is verified up and running
  STEP: using delete to clean up resources @ 06/01/24 12:58:23.269
  Jun  1 12:58:23.269: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-5381 delete --grace-period=0 --force -f -'
  Jun  1 12:58:23.318: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun  1 12:58:23.318: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Jun  1 12:58:23.318: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-5381 get rc,svc -l name=update-demo --no-headers'
  Jun  1 12:58:23.383: INFO: stderr: "No resources found in kubectl-5381 namespace.\n"
  Jun  1 12:58:23.383: INFO: stdout: ""
  Jun  1 12:58:23.383: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-5381 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jun  1 12:58:23.459: INFO: stderr: ""
  Jun  1 12:58:23.459: INFO: stdout: ""
  Jun  1 12:58:23.459: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5381" for this suite. @ 06/01/24 12:58:23.462
â€¢ [18.336 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 06/01/24 12:58:23.467
  Jun  1 12:58:23.467: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename crd-webhook @ 06/01/24 12:58:23.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:58:23.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:58:23.489
  STEP: Setting up server cert @ 06/01/24 12:58:23.497
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 06/01/24 12:58:23.688
  STEP: Deploying the custom resource conversion webhook pod @ 06/01/24 12:58:23.704
  STEP: Wait for the deployment to be ready @ 06/01/24 12:58:23.715
  Jun  1 12:58:23.723: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/01/24 12:58:25.736
  STEP: Verifying the service has paired with the endpoint @ 06/01/24 12:58:25.744
  Jun  1 12:58:26.744: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Jun  1 12:58:26.751: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Creating a v1 custom resource @ 06/01/24 12:58:29.303
  STEP: Create a v2 custom resource @ 06/01/24 12:58:29.318
  STEP: List CRs in v1 @ 06/01/24 12:58:29.322
  STEP: List CRs in v2 @ 06/01/24 12:58:29.341
  Jun  1 12:58:29.901: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-8692" for this suite. @ 06/01/24 12:58:29.904
â€¢ [6.445 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 06/01/24 12:58:29.913
  Jun  1 12:58:29.913: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename watch @ 06/01/24 12:58:29.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:58:29.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:58:29.934
  STEP: creating a watch on configmaps with a certain label @ 06/01/24 12:58:29.936
  STEP: creating a new configmap @ 06/01/24 12:58:29.937
  STEP: modifying the configmap once @ 06/01/24 12:58:29.941
  STEP: changing the label value of the configmap @ 06/01/24 12:58:29.95
  STEP: Expecting to observe a delete notification for the watched object @ 06/01/24 12:58:29.956
  Jun  1 12:58:29.956: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4251  781a5010-10ba-4377-b63e-996255c72444 19709 0 2024-06-01 12:58:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-01 12:58:29 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  1 12:58:29.957: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4251  781a5010-10ba-4377-b63e-996255c72444 19710 0 2024-06-01 12:58:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-01 12:58:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  1 12:58:29.957: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4251  781a5010-10ba-4377-b63e-996255c72444 19711 0 2024-06-01 12:58:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-01 12:58:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 06/01/24 12:58:29.957
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 06/01/24 12:58:29.966
  STEP: changing the label value of the configmap back @ 06/01/24 12:58:39.967
  STEP: modifying the configmap a third time @ 06/01/24 12:58:39.978
  STEP: deleting the configmap @ 06/01/24 12:58:39.985
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 06/01/24 12:58:39.992
  Jun  1 12:58:39.992: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4251  781a5010-10ba-4377-b63e-996255c72444 19751 0 2024-06-01 12:58:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-01 12:58:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  1 12:58:39.992: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4251  781a5010-10ba-4377-b63e-996255c72444 19752 0 2024-06-01 12:58:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-01 12:58:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  1 12:58:39.992: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4251  781a5010-10ba-4377-b63e-996255c72444 19753 0 2024-06-01 12:58:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-01 12:58:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  1 12:58:39.992: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4251" for this suite. @ 06/01/24 12:58:39.995
â€¢ [10.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 06/01/24 12:58:40.001
  Jun  1 12:58:40.001: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename crd-webhook @ 06/01/24 12:58:40.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:58:40.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:58:40.018
  STEP: Setting up server cert @ 06/01/24 12:58:40.021
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 06/01/24 12:58:40.233
  STEP: Deploying the custom resource conversion webhook pod @ 06/01/24 12:58:40.239
  STEP: Wait for the deployment to be ready @ 06/01/24 12:58:40.25
  Jun  1 12:58:40.259: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/01/24 12:58:42.27
  STEP: Verifying the service has paired with the endpoint @ 06/01/24 12:58:42.28
  Jun  1 12:58:43.280: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Jun  1 12:58:43.286: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Creating a v1 custom resource @ 06/01/24 12:58:45.837
  STEP: v2 custom resource should be converted @ 06/01/24 12:58:45.841
  Jun  1 12:58:46.399: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-8157" for this suite. @ 06/01/24 12:58:46.401
â€¢ [6.410 seconds]
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 06/01/24 12:58:46.411
  Jun  1 12:58:46.411: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename field-validation @ 06/01/24 12:58:46.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:58:46.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:58:46.435
  Jun  1 12:58:46.438: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  W0601 12:58:46.438784      21 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc003c3ef90 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W0601 12:58:48.972151      21 warnings.go:70] unknown field "alpha"
  W0601 12:58:48.972171      21 warnings.go:70] unknown field "beta"
  W0601 12:58:48.972174      21 warnings.go:70] unknown field "delta"
  W0601 12:58:48.972177      21 warnings.go:70] unknown field "epsilon"
  W0601 12:58:48.972180      21 warnings.go:70] unknown field "gamma"
  Jun  1 12:58:49.514: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6918" for this suite. @ 06/01/24 12:58:49.517
â€¢ [3.113 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 06/01/24 12:58:49.524
  Jun  1 12:58:49.524: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename emptydir @ 06/01/24 12:58:49.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:58:49.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:58:49.544
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 06/01/24 12:58:49.547
  STEP: Saw pod success @ 06/01/24 12:58:51.567
  Jun  1 12:58:51.570: INFO: Trying to get logs from node ip-172-31-74-111 pod pod-74ce7235-dfac-4595-b973-b10dd579d0a0 container test-container: <nil>
  STEP: delete the pod @ 06/01/24 12:58:51.576
  Jun  1 12:58:51.597: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3142" for this suite. @ 06/01/24 12:58:51.6
â€¢ [2.082 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1373
  STEP: Creating a kubernetes client @ 06/01/24 12:58:51.606
  Jun  1 12:58:51.606: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename kubectl @ 06/01/24 12:58:51.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:58:51.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:58:51.625
  STEP: validating cluster-info @ 06/01/24 12:58:51.627
  Jun  1 12:58:51.628: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-4322 cluster-info'
  Jun  1 12:58:51.734: INFO: stderr: ""
  Jun  1 12:58:51.734: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Jun  1 12:58:51.734: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4322" for this suite. @ 06/01/24 12:58:51.739
â€¢ [0.138 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 06/01/24 12:58:51.744
  Jun  1 12:58:51.744: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename secrets @ 06/01/24 12:58:51.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:58:51.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:58:51.763
  STEP: Creating secret with name secret-test-355e5ef4-ebf6-44ca-897e-d59d1cdab0c2 @ 06/01/24 12:58:51.767
  STEP: Creating a pod to test consume secrets @ 06/01/24 12:58:51.773
  STEP: Saw pod success @ 06/01/24 12:58:55.796
  Jun  1 12:58:55.800: INFO: Trying to get logs from node ip-172-31-74-111 pod pod-secrets-32de30ee-ac89-4479-b191-cd7af0284d02 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/01/24 12:58:55.805
  Jun  1 12:58:55.821: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3500" for this suite. @ 06/01/24 12:58:55.825
â€¢ [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 06/01/24 12:58:55.83
  Jun  1 12:58:55.830: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/01/24 12:58:55.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:58:55.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:58:55.848
  Jun  1 12:58:55.851: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 06/01/24 12:58:57.146
  Jun  1 12:58:57.146: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=crd-publish-openapi-9296 --namespace=crd-publish-openapi-9296 create -f -'
  Jun  1 12:58:57.223: INFO: stderr: ""
  Jun  1 12:58:57.223: INFO: stdout: "e2e-test-crd-publish-openapi-3810-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Jun  1 12:58:57.223: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=crd-publish-openapi-9296 --namespace=crd-publish-openapi-9296 delete e2e-test-crd-publish-openapi-3810-crds test-foo'
  Jun  1 12:58:57.275: INFO: stderr: ""
  Jun  1 12:58:57.275: INFO: stdout: "e2e-test-crd-publish-openapi-3810-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Jun  1 12:58:57.275: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=crd-publish-openapi-9296 --namespace=crd-publish-openapi-9296 apply -f -'
  Jun  1 12:58:57.333: INFO: stderr: ""
  Jun  1 12:58:57.333: INFO: stdout: "e2e-test-crd-publish-openapi-3810-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Jun  1 12:58:57.333: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=crd-publish-openapi-9296 --namespace=crd-publish-openapi-9296 delete e2e-test-crd-publish-openapi-3810-crds test-foo'
  Jun  1 12:58:57.384: INFO: stderr: ""
  Jun  1 12:58:57.384: INFO: stdout: "e2e-test-crd-publish-openapi-3810-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 06/01/24 12:58:57.384
  Jun  1 12:58:57.385: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=crd-publish-openapi-9296 --namespace=crd-publish-openapi-9296 create -f -'
  Jun  1 12:58:57.430: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 06/01/24 12:58:57.43
  Jun  1 12:58:57.430: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=crd-publish-openapi-9296 --namespace=crd-publish-openapi-9296 create -f -'
  Jun  1 12:58:57.473: INFO: rc: 1
  Jun  1 12:58:57.474: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=crd-publish-openapi-9296 --namespace=crd-publish-openapi-9296 apply -f -'
  Jun  1 12:58:57.526: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 06/01/24 12:58:57.526
  Jun  1 12:58:57.526: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=crd-publish-openapi-9296 --namespace=crd-publish-openapi-9296 create -f -'
  Jun  1 12:58:57.570: INFO: rc: 1
  Jun  1 12:58:57.570: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=crd-publish-openapi-9296 --namespace=crd-publish-openapi-9296 apply -f -'
  Jun  1 12:58:57.620: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 06/01/24 12:58:57.62
  Jun  1 12:58:57.620: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=crd-publish-openapi-9296 explain e2e-test-crd-publish-openapi-3810-crds'
  Jun  1 12:58:57.661: INFO: stderr: ""
  Jun  1 12:58:57.661: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3810-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 06/01/24 12:58:57.662
  Jun  1 12:58:57.662: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=crd-publish-openapi-9296 explain e2e-test-crd-publish-openapi-3810-crds.metadata'
  Jun  1 12:58:57.705: INFO: stderr: ""
  Jun  1 12:58:57.705: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3810-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Jun  1 12:58:57.705: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=crd-publish-openapi-9296 explain e2e-test-crd-publish-openapi-3810-crds.spec'
  Jun  1 12:58:57.748: INFO: stderr: ""
  Jun  1 12:58:57.748: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3810-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Jun  1 12:58:57.748: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=crd-publish-openapi-9296 explain e2e-test-crd-publish-openapi-3810-crds.spec.bars'
  Jun  1 12:58:57.795: INFO: stderr: ""
  Jun  1 12:58:57.795: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3810-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 06/01/24 12:58:57.795
  Jun  1 12:58:57.795: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=crd-publish-openapi-9296 explain e2e-test-crd-publish-openapi-3810-crds.spec.bars2'
  Jun  1 12:58:57.839: INFO: rc: 1
  Jun  1 12:58:59.085: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9296" for this suite. @ 06/01/24 12:58:59.092
â€¢ [3.268 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 06/01/24 12:58:59.098
  Jun  1 12:58:59.098: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename secrets @ 06/01/24 12:58:59.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 12:58:59.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 12:58:59.118
  STEP: Creating secret with name s-test-opt-del-a04593cd-8b00-44c2-8073-8b6cbe885a26 @ 06/01/24 12:58:59.125
  STEP: Creating secret with name s-test-opt-upd-9106c107-2c75-484b-9c8e-1182f171ded9 @ 06/01/24 12:58:59.128
  STEP: Creating the pod @ 06/01/24 12:58:59.133
  STEP: Deleting secret s-test-opt-del-a04593cd-8b00-44c2-8073-8b6cbe885a26 @ 06/01/24 12:59:01.178
  STEP: Updating secret s-test-opt-upd-9106c107-2c75-484b-9c8e-1182f171ded9 @ 06/01/24 12:59:01.187
  STEP: Creating secret with name s-test-opt-create-44db58ff-3bb2-452c-be1b-746a93a0f458 @ 06/01/24 12:59:01.193
  STEP: waiting to observe update in volume @ 06/01/24 12:59:01.198
  Jun  1 13:00:07.487: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-69" for this suite. @ 06/01/24 13:00:07.49
â€¢ [68.398 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 06/01/24 13:00:07.496
  Jun  1 13:00:07.496: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename projected @ 06/01/24 13:00:07.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:00:07.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:00:07.517
  STEP: Creating projection with secret that has name projected-secret-test-map-7e319204-bf3c-4af5-9685-142baa0d564e @ 06/01/24 13:00:07.519
  STEP: Creating a pod to test consume secrets @ 06/01/24 13:00:07.523
  STEP: Saw pod success @ 06/01/24 13:00:11.543
  Jun  1 13:00:11.546: INFO: Trying to get logs from node ip-172-31-80-202 pod pod-projected-secrets-58c99e45-2ab9-4108-b7b4-9480bacbb702 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/01/24 13:00:11.557
  Jun  1 13:00:11.573: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8619" for this suite. @ 06/01/24 13:00:11.576
â€¢ [4.087 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 06/01/24 13:00:11.583
  Jun  1 13:00:11.583: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename container-probe @ 06/01/24 13:00:11.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:00:11.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:00:11.61
  STEP: Creating pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343 @ 06/01/24 13:00:11.62
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/01/24 13:00:13.636
  Jun  1 13:00:13.638: INFO: Initial restart count of pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa is 0
  Jun  1 13:00:13.642: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:00:15.647: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:00:17.653: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:00:19.658: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:00:21.672: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:00:23.678: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:00:25.682: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:00:27.687: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:00:29.692: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:00:31.698: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:00:33.702: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:00:33.702: INFO: Restart count of pod container-probe-9343/liveness-5821e17f-7106-429c-bb81-89fa31d0faaa is now 1 (20.06386117s elapsed)
  Jun  1 13:00:35.706: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:00:37.711: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:00:39.715: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:00:41.720: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:00:43.725: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:00:45.731: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:00:47.736: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:00:49.742: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:00:51.746: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:00:53.751: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:00:53.751: INFO: Restart count of pod container-probe-9343/liveness-5821e17f-7106-429c-bb81-89fa31d0faaa is now 2 (40.112422976s elapsed)
  Jun  1 13:00:55.756: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:00:57.761: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:00:59.767: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:01:01.772: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:01:03.778: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:01:05.782: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:01:07.786: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:01:09.792: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:01:11.797: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:01:13.802: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:01:13.802: INFO: Restart count of pod container-probe-9343/liveness-5821e17f-7106-429c-bb81-89fa31d0faaa is now 3 (1m0.164076786s elapsed)
  Jun  1 13:01:15.808: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:01:17.812: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:01:19.817: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:01:21.822: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:01:23.826: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:01:25.833: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:01:27.837: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:01:29.842: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:01:31.846: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:01:33.850: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:01:33.850: INFO: Restart count of pod container-probe-9343/liveness-5821e17f-7106-429c-bb81-89fa31d0faaa is now 4 (1m20.212014892s elapsed)
  Jun  1 13:01:35.856: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:01:37.860: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:01:39.866: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:01:41.870: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:01:43.876: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:01:45.882: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:01:47.888: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:01:49.893: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:01:51.898: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:01:53.904: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:01:55.908: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:01:57.913: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:01:59.917: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:02:01.923: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:02:03.928: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:02:05.935: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:02:07.939: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:02:09.944: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:02:11.951: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:02:13.956: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:02:15.960: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:02:17.965: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:02:19.969: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:02:21.974: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:02:23.978: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:02:25.984: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:02:27.988: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:02:29.993: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:02:31.998: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:02:34.004: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:02:36.008: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:02:38.013: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:02:40.018: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:02:42.022: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:02:44.028: INFO: Get pod liveness-5821e17f-7106-429c-bb81-89fa31d0faaa in namespace container-probe-9343
  Jun  1 13:02:44.028: INFO: Restart count of pod container-probe-9343/liveness-5821e17f-7106-429c-bb81-89fa31d0faaa is now 5 (2m30.389608797s elapsed)
  STEP: deleting the pod @ 06/01/24 13:02:44.028
  Jun  1 13:02:44.040: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9343" for this suite. @ 06/01/24 13:02:44.044
â€¢ [152.467 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 06/01/24 13:02:44.05
  Jun  1 13:02:44.050: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename sched-preemption @ 06/01/24 13:02:44.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:02:44.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:02:44.072
  Jun  1 13:02:44.086: INFO: Waiting up to 1m0s for all nodes to be ready
  Jun  1 13:03:44.091: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 06/01/24 13:03:44.095
  Jun  1 13:03:44.095: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename sched-preemption-path @ 06/01/24 13:03:44.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:03:44.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:03:44.115
  STEP: Finding an available node @ 06/01/24 13:03:44.117
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 06/01/24 13:03:44.117
  STEP: Explicitly delete pod here to free the resource it takes. @ 06/01/24 13:03:46.135
  Jun  1 13:03:46.151: INFO: found a healthy node: ip-172-31-74-111
  Jun  1 13:03:52.211: INFO: pods created so far: [1 1 1]
  Jun  1 13:03:52.211: INFO: length of pods created so far: 3
  Jun  1 13:03:54.225: INFO: pods created so far: [2 2 1]
  Jun  1 13:04:01.292: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-4890" for this suite. @ 06/01/24 13:04:01.296
  Jun  1 13:04:01.303: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5393" for this suite. @ 06/01/24 13:04:01.306
â€¢ [77.263 seconds]
------------------------------
SSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 06/01/24 13:04:01.313
  Jun  1 13:04:01.314: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename downward-api @ 06/01/24 13:04:01.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:04:01.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:04:01.336
  STEP: Creating a pod to test downward api env vars @ 06/01/24 13:04:01.338
  STEP: Saw pod success @ 06/01/24 13:04:05.358
  Jun  1 13:04:05.361: INFO: Trying to get logs from node ip-172-31-80-202 pod downward-api-5762a44a-525c-4abd-8fc3-368f0ec605ae container dapi-container: <nil>
  STEP: delete the pod @ 06/01/24 13:04:05.377
  Jun  1 13:04:05.393: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-425" for this suite. @ 06/01/24 13:04:05.397
â€¢ [4.090 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 06/01/24 13:04:05.404
  Jun  1 13:04:05.404: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/01/24 13:04:05.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:04:05.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:04:05.423
  Jun  1 13:04:05.426: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 13:04:05.969: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1971" for this suite. @ 06/01/24 13:04:05.981
â€¢ [0.584 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:784
  STEP: Creating a kubernetes client @ 06/01/24 13:04:05.989
  Jun  1 13:04:05.989: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename job @ 06/01/24 13:04:05.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:04:06.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:04:06.007
  STEP: Creating a job @ 06/01/24 13:04:06.01
  STEP: Ensure pods equal to parallelism count is attached to the job @ 06/01/24 13:04:06.017
  STEP: patching /status @ 06/01/24 13:04:08.022
  STEP: updating /status @ 06/01/24 13:04:08.029
  STEP: get /status @ 06/01/24 13:04:08.035
  Jun  1 13:04:08.038: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1932" for this suite. @ 06/01/24 13:04:08.041
â€¢ [2.058 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 06/01/24 13:04:08.049
  Jun  1 13:04:08.049: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename container-probe @ 06/01/24 13:04:08.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:04:08.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:04:08.07
  STEP: Creating pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947 @ 06/01/24 13:04:08.072
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/01/24 13:04:10.091
  Jun  1 13:04:10.095: INFO: Initial restart count of pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef is 0
  Jun  1 13:04:10.098: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:04:12.103: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:04:14.109: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:04:16.113: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:04:18.119: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:04:20.124: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:04:22.128: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:04:24.133: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:04:26.137: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:04:28.142: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:04:30.147: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:04:32.152: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:04:34.157: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:04:36.161: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:04:38.166: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:04:40.169: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:04:42.175: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:04:44.180: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:04:46.185: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:04:48.191: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:04:50.195: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:04:52.199: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:04:54.203: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:04:56.208: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:04:58.213: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:05:00.219: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:05:02.224: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:05:04.230: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:05:06.235: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:05:08.241: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:05:10.246: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:05:12.250: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:05:14.254: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:05:16.260: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:05:18.264: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:05:20.270: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:05:22.275: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:05:24.280: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:05:26.285: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:05:28.291: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:05:30.296: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:05:32.301: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:05:34.305: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:05:36.311: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:05:38.315: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:05:40.320: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:05:42.325: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:05:44.330: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:05:46.336: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:05:48.342: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:05:50.347: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:05:52.353: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:05:54.357: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:05:56.362: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:05:58.367: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:06:00.372: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:06:02.376: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:06:04.381: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:06:06.385: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:06:08.390: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:06:10.395: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:06:12.399: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:06:14.403: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:06:16.408: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:06:18.413: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:06:20.418: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:06:22.423: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:06:24.428: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:06:26.433: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:06:28.438: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:06:30.444: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:06:32.448: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:06:34.452: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:06:36.456: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:06:38.461: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:06:40.466: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:06:42.470: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:06:44.474: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:06:46.481: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:06:48.486: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:06:50.492: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:06:52.496: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:06:54.500: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:06:56.505: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:06:58.509: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:07:00.515: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:07:02.520: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:07:04.525: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:07:06.530: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:07:08.534: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:07:10.539: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:07:12.545: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:07:14.548: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:07:16.554: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:07:18.559: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:07:20.564: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:07:22.571: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:07:24.577: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:07:26.581: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:07:28.586: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:07:30.590: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:07:32.595: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:07:34.600: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:07:36.604: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:07:38.611: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:07:40.616: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:07:42.620: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:07:44.625: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:07:46.631: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:07:48.635: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:07:50.640: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:07:52.644: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:07:54.649: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:07:56.652: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:07:58.657: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:08:00.661: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:08:02.666: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:08:04.671: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:08:06.678: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  Jun  1 13:08:08.683: INFO: Get pod busybox-1f3e609b-a4f7-46c3-981c-f349a4358aef in namespace container-probe-6947
  STEP: deleting the pod @ 06/01/24 13:08:10.683
  Jun  1 13:08:10.701: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6947" for this suite. @ 06/01/24 13:08:10.706
â€¢ [242.664 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 06/01/24 13:08:10.713
  Jun  1 13:08:10.713: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename namespaces @ 06/01/24 13:08:10.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:08:10.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:08:10.742
  STEP: Updating Namespace "namespaces-886" @ 06/01/24 13:08:10.744
  Jun  1 13:08:10.753: INFO: Namespace "namespaces-886" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"088858f1-e658-49b1-9467-76dc152b106f", "kubernetes.io/metadata.name":"namespaces-886", "namespaces-886":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Jun  1 13:08:10.753: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-886" for this suite. @ 06/01/24 13:08:10.756
â€¢ [0.053 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 06/01/24 13:08:10.767
  Jun  1 13:08:10.767: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename kubelet-test @ 06/01/24 13:08:10.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:08:10.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:08:10.784
  Jun  1 13:08:14.802: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4367" for this suite. @ 06/01/24 13:08:14.805
â€¢ [4.045 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 06/01/24 13:08:14.812
  Jun  1 13:08:14.812: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename replication-controller @ 06/01/24 13:08:14.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:08:14.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:08:14.833
  STEP: creating a ReplicationController @ 06/01/24 13:08:14.839
  STEP: waiting for RC to be added @ 06/01/24 13:08:14.844
  STEP: waiting for available Replicas @ 06/01/24 13:08:14.844
  STEP: patching ReplicationController @ 06/01/24 13:08:16.132
  STEP: waiting for RC to be modified @ 06/01/24 13:08:16.14
  STEP: patching ReplicationController status @ 06/01/24 13:08:16.14
  STEP: waiting for RC to be modified @ 06/01/24 13:08:16.147
  STEP: waiting for available Replicas @ 06/01/24 13:08:16.147
  STEP: fetching ReplicationController status @ 06/01/24 13:08:16.15
  STEP: patching ReplicationController scale @ 06/01/24 13:08:16.153
  STEP: waiting for RC to be modified @ 06/01/24 13:08:16.16
  STEP: waiting for ReplicationController's scale to be the max amount @ 06/01/24 13:08:16.16
  STEP: fetching ReplicationController; ensuring that it's patched @ 06/01/24 13:08:17.289
  STEP: updating ReplicationController status @ 06/01/24 13:08:17.292
  STEP: waiting for RC to be modified @ 06/01/24 13:08:17.297
  STEP: listing all ReplicationControllers @ 06/01/24 13:08:17.298
  STEP: checking that ReplicationController has expected values @ 06/01/24 13:08:17.303
  STEP: deleting ReplicationControllers by collection @ 06/01/24 13:08:17.303
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 06/01/24 13:08:17.311
  Jun  1 13:08:17.366: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0601 13:08:17.366996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-6165" for this suite. @ 06/01/24 13:08:17.371
â€¢ [2.565 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 06/01/24 13:08:17.378
  Jun  1 13:08:17.378: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename runtimeclass @ 06/01/24 13:08:17.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:08:17.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:08:17.397
  E0601 13:08:18.367621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:08:19.367971      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:08:19.426: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4618" for this suite. @ 06/01/24 13:08:19.429
â€¢ [2.058 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 06/01/24 13:08:19.436
  Jun  1 13:08:19.436: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename configmap @ 06/01/24 13:08:19.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:08:19.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:08:19.456
  Jun  1 13:08:19.494: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2760" for this suite. @ 06/01/24 13:08:19.497
â€¢ [0.067 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 06/01/24 13:08:19.503
  Jun  1 13:08:19.503: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename certificates @ 06/01/24 13:08:19.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:08:19.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:08:19.523
  STEP: getting /apis @ 06/01/24 13:08:20.013
  STEP: getting /apis/certificates.k8s.io @ 06/01/24 13:08:20.017
  STEP: getting /apis/certificates.k8s.io/v1 @ 06/01/24 13:08:20.018
  STEP: creating @ 06/01/24 13:08:20.019
  STEP: getting @ 06/01/24 13:08:20.04
  STEP: listing @ 06/01/24 13:08:20.044
  STEP: watching @ 06/01/24 13:08:20.048
  Jun  1 13:08:20.048: INFO: starting watch
  STEP: patching @ 06/01/24 13:08:20.049
  STEP: updating @ 06/01/24 13:08:20.056
  Jun  1 13:08:20.064: INFO: waiting for watch events with expected annotations
  Jun  1 13:08:20.064: INFO: saw patched and updated annotations
  STEP: getting /approval @ 06/01/24 13:08:20.064
  STEP: patching /approval @ 06/01/24 13:08:20.068
  STEP: updating /approval @ 06/01/24 13:08:20.073
  STEP: getting /status @ 06/01/24 13:08:20.082
  STEP: patching /status @ 06/01/24 13:08:20.086
  STEP: updating /status @ 06/01/24 13:08:20.094
  STEP: deleting @ 06/01/24 13:08:20.102
  STEP: deleting a collection @ 06/01/24 13:08:20.116
  Jun  1 13:08:20.134: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-1048" for this suite. @ 06/01/24 13:08:20.139
â€¢ [0.644 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 06/01/24 13:08:20.147
  Jun  1 13:08:20.147: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename projected @ 06/01/24 13:08:20.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:08:20.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:08:20.174
  STEP: Creating a pod to test downward API volume plugin @ 06/01/24 13:08:20.176
  E0601 13:08:20.368072      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:08:21.368275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:08:22.368721      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:08:23.369069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 13:08:24.198
  Jun  1 13:08:24.203: INFO: Trying to get logs from node ip-172-31-74-111 pod downwardapi-volume-24a0889d-1ffd-42cd-be38-c225387dd2c0 container client-container: <nil>
  STEP: delete the pod @ 06/01/24 13:08:24.217
  Jun  1 13:08:24.232: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-554" for this suite. @ 06/01/24 13:08:24.236
â€¢ [4.096 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 06/01/24 13:08:24.243
  Jun  1 13:08:24.243: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename container-probe @ 06/01/24 13:08:24.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:08:24.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:08:24.261
  STEP: Creating pod test-grpc-6ab97c9c-54f3-4ea2-aad8-9cf3d9aeea07 in namespace container-probe-5843 @ 06/01/24 13:08:24.264
  E0601 13:08:24.369157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:08:25.369284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/01/24 13:08:26.286
  Jun  1 13:08:26.290: INFO: Initial restart count of pod test-grpc-6ab97c9c-54f3-4ea2-aad8-9cf3d9aeea07 is 0
  Jun  1 13:08:26.293: INFO: Get pod test-grpc-6ab97c9c-54f3-4ea2-aad8-9cf3d9aeea07 in namespace container-probe-5843
  E0601 13:08:26.369736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:08:27.369855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:08:28.299: INFO: Get pod test-grpc-6ab97c9c-54f3-4ea2-aad8-9cf3d9aeea07 in namespace container-probe-5843
  E0601 13:08:28.370493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:08:29.370588      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:08:30.303: INFO: Get pod test-grpc-6ab97c9c-54f3-4ea2-aad8-9cf3d9aeea07 in namespace container-probe-5843
  E0601 13:08:30.370673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:08:31.370794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:08:32.308: INFO: Get pod test-grpc-6ab97c9c-54f3-4ea2-aad8-9cf3d9aeea07 in namespace container-probe-5843
  E0601 13:08:32.370870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:08:33.370984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:08:34.312: INFO: Get pod test-grpc-6ab97c9c-54f3-4ea2-aad8-9cf3d9aeea07 in namespace container-probe-5843
  E0601 13:08:34.371895      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:08:35.371982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:08:36.318: INFO: Get pod test-grpc-6ab97c9c-54f3-4ea2-aad8-9cf3d9aeea07 in namespace container-probe-5843
  E0601 13:08:36.372566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:08:37.372691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:08:38.322: INFO: Get pod test-grpc-6ab97c9c-54f3-4ea2-aad8-9cf3d9aeea07 in namespace container-probe-5843
  E0601 13:08:38.373603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:08:39.374534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:08:40.328: INFO: Get pod test-grpc-6ab97c9c-54f3-4ea2-aad8-9cf3d9aeea07 in namespace container-probe-5843
  E0601 13:08:40.375322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:08:41.375525      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:08:42.333: INFO: Get pod test-grpc-6ab97c9c-54f3-4ea2-aad8-9cf3d9aeea07 in namespace container-probe-5843
  E0601 13:08:42.375646      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:08:43.375729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:08:44.337: INFO: Get pod test-grpc-6ab97c9c-54f3-4ea2-aad8-9cf3d9aeea07 in namespace container-probe-5843
  E0601 13:08:44.376058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:08:45.376157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:08:46.341: INFO: Get pod test-grpc-6ab97c9c-54f3-4ea2-aad8-9cf3d9aeea07 in namespace container-probe-5843
  E0601 13:08:46.376926      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:08:47.377169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:08:48.345: INFO: Get pod test-grpc-6ab97c9c-54f3-4ea2-aad8-9cf3d9aeea07 in namespace container-probe-5843
  E0601 13:08:48.377938      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:08:49.378153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:08:50.351: INFO: Get pod test-grpc-6ab97c9c-54f3-4ea2-aad8-9cf3d9aeea07 in namespace container-probe-5843
  E0601 13:08:50.378985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:08:51.379226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:08:52.355: INFO: Get pod test-grpc-6ab97c9c-54f3-4ea2-aad8-9cf3d9aeea07 in namespace container-probe-5843
  E0601 13:08:52.380117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:08:53.380405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:08:54.360: INFO: Get pod test-grpc-6ab97c9c-54f3-4ea2-aad8-9cf3d9aeea07 in namespace container-probe-5843
  E0601 13:08:54.380928      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:08:55.381151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:08:56.364: INFO: Get pod test-grpc-6ab97c9c-54f3-4ea2-aad8-9cf3d9aeea07 in namespace container-probe-5843
  E0601 13:08:56.381696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:08:57.381794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:08:58.369: INFO: Get pod test-grpc-6ab97c9c-54f3-4ea2-aad8-9cf3d9aeea07 in namespace container-probe-5843
  E0601 13:08:58.382461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:08:59.382725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:09:00.373: INFO: Get pod test-grpc-6ab97c9c-54f3-4ea2-aad8-9cf3d9aeea07 in namespace container-probe-5843
  E0601 13:09:00.383673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:09:01.384346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:09:02.378: INFO: Get pod test-grpc-6ab97c9c-54f3-4ea2-aad8-9cf3d9aeea07 in namespace container-probe-5843
  E0601 13:09:02.384630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:09:03.384846      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:09:04.382: INFO: Get pod test-grpc-6ab97c9c-54f3-4ea2-aad8-9cf3d9aeea07 in namespace container-probe-5843
  E0601 13:09:04.385819      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:09:05.385980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:09:06.385990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:09:06.388: INFO: Get pod test-grpc-6ab97c9c-54f3-4ea2-aad8-9cf3d9aeea07 in namespace container-probe-5843
  E0601 13:09:07.386146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:09:08.386235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:09:08.392: INFO: Get pod test-grpc-6ab97c9c-54f3-4ea2-aad8-9cf3d9aeea07 in namespace container-probe-5843
  E0601 13:09:09.386346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:09:10.386572      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:09:10.398: INFO: Get pod test-grpc-6ab97c9c-54f3-4ea2-aad8-9cf3d9aeea07 in namespace container-probe-5843
  E0601 13:09:11.386728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:09:12.386834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:09:12.402: INFO: Get pod test-grpc-6ab97c9c-54f3-4ea2-aad8-9cf3d9aeea07 in namespace container-probe-5843
  E0601 13:09:13.386958      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:09:14.387167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:09:14.407: INFO: Get pod test-grpc-6ab97c9c-54f3-4ea2-aad8-9cf3d9aeea07 in namespace container-probe-5843
  E0601 13:09:15.388008      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:09:16.388086      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:09:16.412: INFO: Get pod test-grpc-6ab97c9c-54f3-4ea2-aad8-9cf3d9aeea07 in namespace container-probe-5843
  E0601 13:09:17.388213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:09:18.388278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:09:18.417: INFO: Get pod test-grpc-6ab97c9c-54f3-4ea2-aad8-9cf3d9aeea07 in namespace container-probe-5843
  E0601 13:09:19.389142      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:09:20.389280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:09:20.421: INFO: Get pod test-grpc-6ab97c9c-54f3-4ea2-aad8-9cf3d9aeea07 in namespace container-probe-5843
  E0601 13:09:21.390212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:09:22.390318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:09:22.426: INFO: Get pod test-grpc-6ab97c9c-54f3-4ea2-aad8-9cf3d9aeea07 in namespace container-probe-5843
  E0601 13:09:23.390691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:09:24.390505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:09:24.431: INFO: Get pod test-grpc-6ab97c9c-54f3-4ea2-aad8-9cf3d9aeea07 in namespace container-probe-5843
  E0601 13:09:25.390798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:09:26.391866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:09:26.437: INFO: Get pod test-grpc-6ab97c9c-54f3-4ea2-aad8-9cf3d9aeea07 in namespace container-probe-5843
  E0601 13:09:27.391961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:09:28.392162      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:09:28.442: INFO: Get pod test-grpc-6ab97c9c-54f3-4ea2-aad8-9cf3d9aeea07 in namespace container-probe-5843
  E0601 13:09:29.393113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:09:30.393222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:09:30.447: INFO: Get pod test-grpc-6ab97c9c-54f3-4ea2-aad8-9cf3d9aeea07 in namespace container-probe-5843
  Jun  1 13:09:30.447: INFO: Restart count of pod container-probe-5843/test-grpc-6ab97c9c-54f3-4ea2-aad8-9cf3d9aeea07 is now 1 (1m4.156997395s elapsed)
  STEP: deleting the pod @ 06/01/24 13:09:30.447
  Jun  1 13:09:30.460: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5843" for this suite. @ 06/01/24 13:09:30.463
â€¢ [66.227 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 06/01/24 13:09:30.47
  Jun  1 13:09:30.470: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename projected @ 06/01/24 13:09:30.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:09:30.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:09:30.491
  STEP: Creating configMap with name projected-configmap-test-volume-map-3b8a7f1e-d0ef-469d-9d73-33c8cc38e128 @ 06/01/24 13:09:30.493
  STEP: Creating a pod to test consume configMaps @ 06/01/24 13:09:30.497
  E0601 13:09:31.393344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:09:32.393616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 13:09:32.512
  Jun  1 13:09:32.516: INFO: Trying to get logs from node ip-172-31-74-111 pod pod-projected-configmaps-ecc82c38-9491-4a48-9ba6-c818789e7017 container agnhost-container: <nil>
  STEP: delete the pod @ 06/01/24 13:09:32.523
  Jun  1 13:09:32.537: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3474" for this suite. @ 06/01/24 13:09:32.541
â€¢ [2.078 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 06/01/24 13:09:32.548
  Jun  1 13:09:32.548: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename emptydir @ 06/01/24 13:09:32.548
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:09:32.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:09:32.569
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 06/01/24 13:09:32.571
  E0601 13:09:33.393951      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:09:34.394217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 13:09:34.591
  Jun  1 13:09:34.595: INFO: Trying to get logs from node ip-172-31-74-111 pod pod-1981f343-becb-494d-b37a-aec1debde503 container test-container: <nil>
  STEP: delete the pod @ 06/01/24 13:09:34.601
  Jun  1 13:09:34.614: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2920" for this suite. @ 06/01/24 13:09:34.617
â€¢ [2.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 06/01/24 13:09:34.623
  Jun  1 13:09:34.623: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/01/24 13:09:34.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:09:34.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:09:34.641
  STEP: set up a multi version CRD @ 06/01/24 13:09:34.643
  Jun  1 13:09:34.644: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  E0601 13:09:35.395200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:09:36.396381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:09:37.397166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 06/01/24 13:09:37.731
  STEP: check the unserved version gets removed @ 06/01/24 13:09:37.746
  E0601 13:09:38.397416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 06/01/24 13:09:38.551
  E0601 13:09:39.398256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:09:40.399237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:09:40.991: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1487" for this suite. @ 06/01/24 13:09:40.998
â€¢ [6.382 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 06/01/24 13:09:41.006
  Jun  1 13:09:41.006: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename gc @ 06/01/24 13:09:41.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:09:41.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:09:41.024
  STEP: create the rc @ 06/01/24 13:09:41.029
  W0601 13:09:41.034799      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0601 13:09:41.399295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:09:42.399934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:09:43.400186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:09:44.400511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:09:45.401085      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:09:46.405245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 06/01/24 13:09:47.045
  STEP: wait for the rc to be deleted @ 06/01/24 13:09:47.073
  E0601 13:09:47.405628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:09:48.133: INFO: 80 pods remaining
  Jun  1 13:09:48.133: INFO: 80 pods has nil DeletionTimestamp
  Jun  1 13:09:48.133: INFO: 
  E0601 13:09:48.405764      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:09:49.083: INFO: 70 pods remaining
  Jun  1 13:09:49.083: INFO: 70 pods has nil DeletionTimestamp
  Jun  1 13:09:49.083: INFO: 
  E0601 13:09:49.405786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:09:50.086: INFO: 60 pods remaining
  Jun  1 13:09:50.086: INFO: 60 pods has nil DeletionTimestamp
  Jun  1 13:09:50.086: INFO: 
  E0601 13:09:50.406205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:09:51.110: INFO: 40 pods remaining
  Jun  1 13:09:51.110: INFO: 40 pods has nil DeletionTimestamp
  Jun  1 13:09:51.110: INFO: 
  E0601 13:09:51.407150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:09:52.082: INFO: 30 pods remaining
  Jun  1 13:09:52.082: INFO: 30 pods has nil DeletionTimestamp
  Jun  1 13:09:52.082: INFO: 
  E0601 13:09:52.407278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:09:53.081: INFO: 20 pods remaining
  Jun  1 13:09:53.081: INFO: 20 pods has nil DeletionTimestamp
  Jun  1 13:09:53.081: INFO: 
  E0601 13:09:53.407952      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 06/01/24 13:09:54.081
  W0601 13:09:54.088675      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jun  1 13:09:54.088: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun  1 13:09:54.088: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6513" for this suite. @ 06/01/24 13:09:54.093
â€¢ [13.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 06/01/24 13:09:54.109
  Jun  1 13:09:54.109: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename services @ 06/01/24 13:09:54.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:09:54.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:09:54.187
  STEP: creating service multi-endpoint-test in namespace services-6444 @ 06/01/24 13:09:54.194
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6444 to expose endpoints map[] @ 06/01/24 13:09:54.207
  Jun  1 13:09:54.210: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0601 13:09:54.408797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:09:55.218: INFO: successfully validated that service multi-endpoint-test in namespace services-6444 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-6444 @ 06/01/24 13:09:55.218
  E0601 13:09:55.409729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:09:56.409832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6444 to expose endpoints map[pod1:[100]] @ 06/01/24 13:09:57.236
  Jun  1 13:09:57.245: INFO: successfully validated that service multi-endpoint-test in namespace services-6444 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-6444 @ 06/01/24 13:09:57.245
  E0601 13:09:57.410150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:09:58.410246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6444 to expose endpoints map[pod1:[100] pod2:[101]] @ 06/01/24 13:09:59.263
  Jun  1 13:09:59.275: INFO: successfully validated that service multi-endpoint-test in namespace services-6444 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 06/01/24 13:09:59.275
  Jun  1 13:09:59.275: INFO: Creating new exec pod
  E0601 13:09:59.411305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:00.411498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:01.411860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:10:02.293: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-6444 exec execpod27qzh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Jun  1 13:10:02.393: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Jun  1 13:10:02.393: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  1 13:10:02.393: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-6444 exec execpod27qzh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.232 80'
  E0601 13:10:02.411957      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:10:02.483: INFO: stderr: "+ nc -v -t -w 2 10.152.183.232 80\n+ echo hostName\nConnection to 10.152.183.232 80 port [tcp/http] succeeded!\n"
  Jun  1 13:10:02.483: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  1 13:10:02.483: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-6444 exec execpod27qzh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Jun  1 13:10:02.585: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Jun  1 13:10:02.585: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  1 13:10:02.585: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-6444 exec execpod27qzh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.232 81'
  Jun  1 13:10:02.684: INFO: stderr: "+ nc -v -t -w 2 10.152.183.232 81\n+ echo hostName\nConnection to 10.152.183.232 81 port [tcp/*] succeeded!\n"
  Jun  1 13:10:02.684: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-6444 @ 06/01/24 13:10:02.684
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6444 to expose endpoints map[pod2:[101]] @ 06/01/24 13:10:02.7
  E0601 13:10:03.412813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:10:03.721: INFO: successfully validated that service multi-endpoint-test in namespace services-6444 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-6444 @ 06/01/24 13:10:03.721
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6444 to expose endpoints map[] @ 06/01/24 13:10:03.738
  E0601 13:10:04.413136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:10:04.757: INFO: successfully validated that service multi-endpoint-test in namespace services-6444 exposes endpoints map[]
  Jun  1 13:10:04.774: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6444" for this suite. @ 06/01/24 13:10:04.779
â€¢ [10.682 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 06/01/24 13:10:04.787
  Jun  1 13:10:04.787: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename services @ 06/01/24 13:10:04.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:10:04.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:10:04.807
  STEP: creating service endpoint-test2 in namespace services-2759 @ 06/01/24 13:10:04.809
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2759 to expose endpoints map[] @ 06/01/24 13:10:04.82
  Jun  1 13:10:04.826: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E0601 13:10:05.414207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:10:05.834: INFO: successfully validated that service endpoint-test2 in namespace services-2759 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-2759 @ 06/01/24 13:10:05.834
  E0601 13:10:06.415055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:07.415085      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2759 to expose endpoints map[pod1:[80]] @ 06/01/24 13:10:07.854
  Jun  1 13:10:07.865: INFO: successfully validated that service endpoint-test2 in namespace services-2759 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 06/01/24 13:10:07.865
  Jun  1 13:10:07.865: INFO: Creating new exec pod
  E0601 13:10:08.416259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:09.416640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:10.417446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:10:10.878: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-2759 exec execpod9s5j6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jun  1 13:10:10.978: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jun  1 13:10:10.978: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  1 13:10:10.978: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-2759 exec execpod9s5j6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.231 80'
  Jun  1 13:10:11.076: INFO: stderr: "+ nc -v -t -w 2 10.152.183.231 80\n+ echo hostName\nConnection to 10.152.183.231 80 port [tcp/http] succeeded!\n"
  Jun  1 13:10:11.076: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-2759 @ 06/01/24 13:10:11.076
  E0601 13:10:11.418181      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:12.418555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2759 to expose endpoints map[pod1:[80] pod2:[80]] @ 06/01/24 13:10:13.092
  Jun  1 13:10:13.105: INFO: successfully validated that service endpoint-test2 in namespace services-2759 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 06/01/24 13:10:13.105
  E0601 13:10:13.419084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:10:14.106: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-2759 exec execpod9s5j6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jun  1 13:10:14.205: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jun  1 13:10:14.205: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  1 13:10:14.205: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-2759 exec execpod9s5j6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.231 80'
  Jun  1 13:10:14.300: INFO: stderr: "+ nc -v -t -w 2 10.152.183.231 80\n+ echo hostName\nConnection to 10.152.183.231 80 port [tcp/http] succeeded!\n"
  Jun  1 13:10:14.300: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-2759 @ 06/01/24 13:10:14.3
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2759 to expose endpoints map[pod2:[80]] @ 06/01/24 13:10:14.312
  Jun  1 13:10:14.325: INFO: successfully validated that service endpoint-test2 in namespace services-2759 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 06/01/24 13:10:14.325
  E0601 13:10:14.419840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:10:15.325: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-2759 exec execpod9s5j6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0601 13:10:15.420393      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:10:15.424: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jun  1 13:10:15.424: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  1 13:10:15.425: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-2759 exec execpod9s5j6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.231 80'
  Jun  1 13:10:15.520: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.231 80\nConnection to 10.152.183.231 80 port [tcp/http] succeeded!\n"
  Jun  1 13:10:15.520: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-2759 @ 06/01/24 13:10:15.52
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2759 to expose endpoints map[] @ 06/01/24 13:10:15.537
  Jun  1 13:10:15.549: INFO: successfully validated that service endpoint-test2 in namespace services-2759 exposes endpoints map[]
  Jun  1 13:10:15.563: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2759" for this suite. @ 06/01/24 13:10:15.567
â€¢ [10.787 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 06/01/24 13:10:15.574
  Jun  1 13:10:15.574: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename field-validation @ 06/01/24 13:10:15.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:10:15.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:10:15.594
  STEP: apply creating a deployment @ 06/01/24 13:10:15.596
  Jun  1 13:10:15.609: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-693" for this suite. @ 06/01/24 13:10:15.613
â€¢ [0.045 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 06/01/24 13:10:15.619
  Jun  1 13:10:15.619: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename downward-api @ 06/01/24 13:10:15.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:10:15.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:10:15.638
  STEP: Creating a pod to test downward API volume plugin @ 06/01/24 13:10:15.641
  E0601 13:10:16.421288      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:17.421391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 13:10:17.658
  Jun  1 13:10:17.661: INFO: Trying to get logs from node ip-172-31-74-111 pod downwardapi-volume-cf7fa896-27f5-45fb-9241-bb1cbfcc206f container client-container: <nil>
  STEP: delete the pod @ 06/01/24 13:10:17.667
  Jun  1 13:10:17.684: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7556" for this suite. @ 06/01/24 13:10:17.687
â€¢ [2.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 06/01/24 13:10:17.693
  Jun  1 13:10:17.693: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/01/24 13:10:17.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:10:17.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:10:17.711
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 06/01/24 13:10:17.713
  Jun  1 13:10:17.714: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  E0601 13:10:18.422223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:10:19.025: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  E0601 13:10:19.423038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:20.423089      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:21.424112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:22.424587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:23.425069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:10:24.063: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1469" for this suite. @ 06/01/24 13:10:24.07
â€¢ [6.382 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 06/01/24 13:10:24.076
  Jun  1 13:10:24.076: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename podtemplate @ 06/01/24 13:10:24.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:10:24.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:10:24.096
  STEP: Create a pod template @ 06/01/24 13:10:24.098
  STEP: Replace a pod template @ 06/01/24 13:10:24.102
  Jun  1 13:10:24.111: INFO: Found updated podtemplate annotation: "true"

  Jun  1 13:10:24.111: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6019" for this suite. @ 06/01/24 13:10:24.115
â€¢ [0.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 06/01/24 13:10:24.12
  Jun  1 13:10:24.120: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/01/24 13:10:24.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:10:24.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:10:24.137
  Jun  1 13:10:24.183: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  E0601 13:10:24.425117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:10:25.209: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4221" for this suite. @ 06/01/24 13:10:25.213
â€¢ [1.099 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 06/01/24 13:10:25.219
  Jun  1 13:10:25.219: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename gc @ 06/01/24 13:10:25.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:10:25.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:10:25.24
  STEP: create the rc @ 06/01/24 13:10:25.247
  W0601 13:10:25.254079      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0601 13:10:25.425471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:26.431035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:27.431130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:28.432718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:29.433185      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:30.433393      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 06/01/24 13:10:31.263
  STEP: wait for the rc to be deleted @ 06/01/24 13:10:31.271
  E0601 13:10:31.433603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:32.434044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:33.434132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:34.434327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:35.434380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 06/01/24 13:10:36.277
  E0601 13:10:36.435035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:37.435137      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:38.435259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:39.435338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:40.435527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:41.435696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:42.435791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:43.435880      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:44.435968      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:45.436074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:46.436192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:47.436268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:48.436395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:49.436955      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:50.437982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:51.438870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:52.439909      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:53.440850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:54.441356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:55.441457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:56.442207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:57.442654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:58.442864      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:10:59.443266      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:00.443368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:01.443789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:02.444163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:03.445231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:04.445327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:05.446185      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 06/01/24 13:11:06.287
  W0601 13:11:06.292541      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jun  1 13:11:06.292: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun  1 13:11:06.292: INFO: Deleting pod "simpletest.rc-26mdr" in namespace "gc-7726"
  Jun  1 13:11:06.305: INFO: Deleting pod "simpletest.rc-2747s" in namespace "gc-7726"
  Jun  1 13:11:06.317: INFO: Deleting pod "simpletest.rc-2gd5k" in namespace "gc-7726"
  Jun  1 13:11:06.329: INFO: Deleting pod "simpletest.rc-2lwmb" in namespace "gc-7726"
  Jun  1 13:11:06.341: INFO: Deleting pod "simpletest.rc-2t9ms" in namespace "gc-7726"
  Jun  1 13:11:06.355: INFO: Deleting pod "simpletest.rc-42mss" in namespace "gc-7726"
  Jun  1 13:11:06.370: INFO: Deleting pod "simpletest.rc-48x27" in namespace "gc-7726"
  Jun  1 13:11:06.383: INFO: Deleting pod "simpletest.rc-4cbf5" in namespace "gc-7726"
  Jun  1 13:11:06.393: INFO: Deleting pod "simpletest.rc-4dvv5" in namespace "gc-7726"
  Jun  1 13:11:06.406: INFO: Deleting pod "simpletest.rc-4vc7g" in namespace "gc-7726"
  Jun  1 13:11:06.417: INFO: Deleting pod "simpletest.rc-54x8t" in namespace "gc-7726"
  Jun  1 13:11:06.427: INFO: Deleting pod "simpletest.rc-5btnx" in namespace "gc-7726"
  Jun  1 13:11:06.444: INFO: Deleting pod "simpletest.rc-5gs85" in namespace "gc-7726"
  E0601 13:11:06.447147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:11:06.457: INFO: Deleting pod "simpletest.rc-5hvw2" in namespace "gc-7726"
  Jun  1 13:11:06.468: INFO: Deleting pod "simpletest.rc-5nvl6" in namespace "gc-7726"
  Jun  1 13:11:06.481: INFO: Deleting pod "simpletest.rc-5v7ln" in namespace "gc-7726"
  Jun  1 13:11:06.494: INFO: Deleting pod "simpletest.rc-5zj8k" in namespace "gc-7726"
  Jun  1 13:11:06.511: INFO: Deleting pod "simpletest.rc-62zxn" in namespace "gc-7726"
  Jun  1 13:11:06.521: INFO: Deleting pod "simpletest.rc-65mg2" in namespace "gc-7726"
  Jun  1 13:11:06.535: INFO: Deleting pod "simpletest.rc-68zmt" in namespace "gc-7726"
  Jun  1 13:11:06.545: INFO: Deleting pod "simpletest.rc-756m2" in namespace "gc-7726"
  Jun  1 13:11:06.559: INFO: Deleting pod "simpletest.rc-764vb" in namespace "gc-7726"
  Jun  1 13:11:06.573: INFO: Deleting pod "simpletest.rc-78fnx" in namespace "gc-7726"
  Jun  1 13:11:06.585: INFO: Deleting pod "simpletest.rc-7w28z" in namespace "gc-7726"
  Jun  1 13:11:06.598: INFO: Deleting pod "simpletest.rc-8dcqj" in namespace "gc-7726"
  Jun  1 13:11:06.615: INFO: Deleting pod "simpletest.rc-9cf5h" in namespace "gc-7726"
  Jun  1 13:11:06.627: INFO: Deleting pod "simpletest.rc-9cs59" in namespace "gc-7726"
  Jun  1 13:11:06.640: INFO: Deleting pod "simpletest.rc-9pjh2" in namespace "gc-7726"
  Jun  1 13:11:06.652: INFO: Deleting pod "simpletest.rc-9qcm7" in namespace "gc-7726"
  Jun  1 13:11:06.663: INFO: Deleting pod "simpletest.rc-9ws5v" in namespace "gc-7726"
  Jun  1 13:11:06.679: INFO: Deleting pod "simpletest.rc-9xx8r" in namespace "gc-7726"
  Jun  1 13:11:06.690: INFO: Deleting pod "simpletest.rc-b6j42" in namespace "gc-7726"
  Jun  1 13:11:06.705: INFO: Deleting pod "simpletest.rc-b72ch" in namespace "gc-7726"
  Jun  1 13:11:06.720: INFO: Deleting pod "simpletest.rc-b8jvg" in namespace "gc-7726"
  Jun  1 13:11:06.738: INFO: Deleting pod "simpletest.rc-btdfr" in namespace "gc-7726"
  Jun  1 13:11:06.761: INFO: Deleting pod "simpletest.rc-bxrth" in namespace "gc-7726"
  Jun  1 13:11:06.777: INFO: Deleting pod "simpletest.rc-ckng8" in namespace "gc-7726"
  Jun  1 13:11:06.799: INFO: Deleting pod "simpletest.rc-cr9lm" in namespace "gc-7726"
  Jun  1 13:11:06.814: INFO: Deleting pod "simpletest.rc-crxzd" in namespace "gc-7726"
  Jun  1 13:11:06.832: INFO: Deleting pod "simpletest.rc-d774g" in namespace "gc-7726"
  Jun  1 13:11:06.843: INFO: Deleting pod "simpletest.rc-dfzf2" in namespace "gc-7726"
  Jun  1 13:11:06.859: INFO: Deleting pod "simpletest.rc-dwx6g" in namespace "gc-7726"
  Jun  1 13:11:06.874: INFO: Deleting pod "simpletest.rc-dxt7k" in namespace "gc-7726"
  Jun  1 13:11:06.891: INFO: Deleting pod "simpletest.rc-f5vmk" in namespace "gc-7726"
  Jun  1 13:11:06.907: INFO: Deleting pod "simpletest.rc-f9x7q" in namespace "gc-7726"
  Jun  1 13:11:06.918: INFO: Deleting pod "simpletest.rc-ff99t" in namespace "gc-7726"
  Jun  1 13:11:06.927: INFO: Deleting pod "simpletest.rc-fmw77" in namespace "gc-7726"
  Jun  1 13:11:06.941: INFO: Deleting pod "simpletest.rc-fsnxj" in namespace "gc-7726"
  Jun  1 13:11:06.956: INFO: Deleting pod "simpletest.rc-fxlqb" in namespace "gc-7726"
  Jun  1 13:11:06.968: INFO: Deleting pod "simpletest.rc-g5vkl" in namespace "gc-7726"
  Jun  1 13:11:06.985: INFO: Deleting pod "simpletest.rc-gb2ds" in namespace "gc-7726"
  Jun  1 13:11:07.001: INFO: Deleting pod "simpletest.rc-gjphc" in namespace "gc-7726"
  Jun  1 13:11:07.014: INFO: Deleting pod "simpletest.rc-h5crt" in namespace "gc-7726"
  Jun  1 13:11:07.041: INFO: Deleting pod "simpletest.rc-hf8mb" in namespace "gc-7726"
  Jun  1 13:11:07.069: INFO: Deleting pod "simpletest.rc-hj8cl" in namespace "gc-7726"
  Jun  1 13:11:07.091: INFO: Deleting pod "simpletest.rc-hwhkx" in namespace "gc-7726"
  Jun  1 13:11:07.111: INFO: Deleting pod "simpletest.rc-jnpzk" in namespace "gc-7726"
  Jun  1 13:11:07.128: INFO: Deleting pod "simpletest.rc-k2vmg" in namespace "gc-7726"
  Jun  1 13:11:07.147: INFO: Deleting pod "simpletest.rc-k592w" in namespace "gc-7726"
  Jun  1 13:11:07.164: INFO: Deleting pod "simpletest.rc-k7cbw" in namespace "gc-7726"
  Jun  1 13:11:07.174: INFO: Deleting pod "simpletest.rc-kz466" in namespace "gc-7726"
  Jun  1 13:11:07.184: INFO: Deleting pod "simpletest.rc-l78rl" in namespace "gc-7726"
  Jun  1 13:11:07.213: INFO: Deleting pod "simpletest.rc-ltcm9" in namespace "gc-7726"
  Jun  1 13:11:07.223: INFO: Deleting pod "simpletest.rc-m8f6h" in namespace "gc-7726"
  Jun  1 13:11:07.238: INFO: Deleting pod "simpletest.rc-m9j6z" in namespace "gc-7726"
  Jun  1 13:11:07.248: INFO: Deleting pod "simpletest.rc-mk7s4" in namespace "gc-7726"
  Jun  1 13:11:07.283: INFO: Deleting pod "simpletest.rc-mlpqs" in namespace "gc-7726"
  Jun  1 13:11:07.294: INFO: Deleting pod "simpletest.rc-nwbr2" in namespace "gc-7726"
  Jun  1 13:11:07.312: INFO: Deleting pod "simpletest.rc-nwfxm" in namespace "gc-7726"
  Jun  1 13:11:07.343: INFO: Deleting pod "simpletest.rc-p27wx" in namespace "gc-7726"
  Jun  1 13:11:07.403: INFO: Deleting pod "simpletest.rc-pcwbw" in namespace "gc-7726"
  Jun  1 13:11:07.447: INFO: Deleting pod "simpletest.rc-pjl5s" in namespace "gc-7726"
  E0601 13:11:07.447653      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:11:07.498: INFO: Deleting pod "simpletest.rc-pk4kw" in namespace "gc-7726"
  Jun  1 13:11:07.545: INFO: Deleting pod "simpletest.rc-pmzzs" in namespace "gc-7726"
  Jun  1 13:11:07.593: INFO: Deleting pod "simpletest.rc-qwff4" in namespace "gc-7726"
  Jun  1 13:11:07.643: INFO: Deleting pod "simpletest.rc-rd69k" in namespace "gc-7726"
  Jun  1 13:11:07.692: INFO: Deleting pod "simpletest.rc-rjkhq" in namespace "gc-7726"
  Jun  1 13:11:07.739: INFO: Deleting pod "simpletest.rc-rnxf4" in namespace "gc-7726"
  Jun  1 13:11:07.793: INFO: Deleting pod "simpletest.rc-slsm8" in namespace "gc-7726"
  Jun  1 13:11:07.851: INFO: Deleting pod "simpletest.rc-svj9p" in namespace "gc-7726"
  Jun  1 13:11:07.896: INFO: Deleting pod "simpletest.rc-tbm8x" in namespace "gc-7726"
  Jun  1 13:11:07.941: INFO: Deleting pod "simpletest.rc-tf4zc" in namespace "gc-7726"
  Jun  1 13:11:07.991: INFO: Deleting pod "simpletest.rc-tg65s" in namespace "gc-7726"
  Jun  1 13:11:08.045: INFO: Deleting pod "simpletest.rc-tgk4f" in namespace "gc-7726"
  Jun  1 13:11:08.097: INFO: Deleting pod "simpletest.rc-tnj6f" in namespace "gc-7726"
  Jun  1 13:11:08.148: INFO: Deleting pod "simpletest.rc-tq2zp" in namespace "gc-7726"
  Jun  1 13:11:08.197: INFO: Deleting pod "simpletest.rc-txwmd" in namespace "gc-7726"
  Jun  1 13:11:08.240: INFO: Deleting pod "simpletest.rc-tzfzq" in namespace "gc-7726"
  Jun  1 13:11:08.295: INFO: Deleting pod "simpletest.rc-vrm5q" in namespace "gc-7726"
  Jun  1 13:11:08.343: INFO: Deleting pod "simpletest.rc-vz9jv" in namespace "gc-7726"
  Jun  1 13:11:08.393: INFO: Deleting pod "simpletest.rc-w5lqc" in namespace "gc-7726"
  Jun  1 13:11:08.445: INFO: Deleting pod "simpletest.rc-w79r2" in namespace "gc-7726"
  E0601 13:11:08.449210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:11:08.496: INFO: Deleting pod "simpletest.rc-whdss" in namespace "gc-7726"
  Jun  1 13:11:08.544: INFO: Deleting pod "simpletest.rc-wn8ch" in namespace "gc-7726"
  Jun  1 13:11:08.597: INFO: Deleting pod "simpletest.rc-wpfng" in namespace "gc-7726"
  Jun  1 13:11:08.656: INFO: Deleting pod "simpletest.rc-xmgf7" in namespace "gc-7726"
  Jun  1 13:11:08.697: INFO: Deleting pod "simpletest.rc-zg4ql" in namespace "gc-7726"
  Jun  1 13:11:08.749: INFO: Deleting pod "simpletest.rc-zgctf" in namespace "gc-7726"
  Jun  1 13:11:08.793: INFO: Deleting pod "simpletest.rc-zhhr6" in namespace "gc-7726"
  Jun  1 13:11:08.863: INFO: Deleting pod "simpletest.rc-zthgs" in namespace "gc-7726"
  Jun  1 13:11:08.892: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7726" for this suite. @ 06/01/24 13:11:08.959
â€¢ [43.770 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 06/01/24 13:11:08.99
  Jun  1 13:11:08.990: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename projected @ 06/01/24 13:11:08.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:11:09.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:11:09.022
  STEP: Creating a pod to test downward API volume plugin @ 06/01/24 13:11:09.025
  E0601 13:11:09.449246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:10.450372      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:11.450747      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:12.451028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 13:11:13.053
  Jun  1 13:11:13.057: INFO: Trying to get logs from node ip-172-31-74-111 pod downwardapi-volume-9df27fa5-e669-4808-b022-6ec2d9e29018 container client-container: <nil>
  STEP: delete the pod @ 06/01/24 13:11:13.066
  Jun  1 13:11:13.081: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6886" for this suite. @ 06/01/24 13:11:13.083
â€¢ [4.100 seconds]
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 06/01/24 13:11:13.09
  Jun  1 13:11:13.090: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename pods @ 06/01/24 13:11:13.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:11:13.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:11:13.11
  STEP: creating the pod @ 06/01/24 13:11:13.115
  STEP: submitting the pod to kubernetes @ 06/01/24 13:11:13.115
  E0601 13:11:13.451608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:14.451592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 06/01/24 13:11:15.136
  STEP: updating the pod @ 06/01/24 13:11:15.141
  E0601 13:11:15.452451      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:11:15.649: INFO: Successfully updated pod "pod-update-6336e3d7-de0c-448c-9baf-30a744715031"
  STEP: verifying the updated pod is in kubernetes @ 06/01/24 13:11:15.653
  Jun  1 13:11:15.657: INFO: Pod update OK
  Jun  1 13:11:15.658: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8913" for this suite. @ 06/01/24 13:11:15.66
â€¢ [2.575 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 06/01/24 13:11:15.665
  Jun  1 13:11:15.665: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename disruption @ 06/01/24 13:11:15.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:11:15.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:11:15.685
  STEP: Creating a kubernetes client @ 06/01/24 13:11:15.689
  Jun  1 13:11:15.689: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename disruption-2 @ 06/01/24 13:11:15.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:11:15.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:11:15.713
  STEP: Waiting for the pdb to be processed @ 06/01/24 13:11:15.721
  E0601 13:11:16.453523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:17.453609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 06/01/24 13:11:17.732
  E0601 13:11:18.453968      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:19.454058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 06/01/24 13:11:19.742
  E0601 13:11:20.454123      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:21.454652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 06/01/24 13:11:21.746
  STEP: listing a collection of PDBs in namespace disruption-136 @ 06/01/24 13:11:21.75
  STEP: deleting a collection of PDBs @ 06/01/24 13:11:21.754
  STEP: Waiting for the PDB collection to be deleted @ 06/01/24 13:11:21.766
  Jun  1 13:11:21.769: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-887" for this suite. @ 06/01/24 13:11:21.771
  Jun  1 13:11:21.779: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-136" for this suite. @ 06/01/24 13:11:21.783
â€¢ [6.124 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1031
  STEP: Creating a kubernetes client @ 06/01/24 13:11:21.789
  Jun  1 13:11:21.789: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename statefulset @ 06/01/24 13:11:21.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:11:21.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:11:21.807
  STEP: Creating service test in namespace statefulset-5814 @ 06/01/24 13:11:21.81
  STEP: Creating statefulset ss in namespace statefulset-5814 @ 06/01/24 13:11:21.818
  Jun  1 13:11:21.827: INFO: Found 0 stateful pods, waiting for 1
  E0601 13:11:22.455032      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:23.455109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:24.455492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:25.455569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:26.456486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:27.456784      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:28.457019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:29.457166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:30.457235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:31.457664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:11:31.830: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 06/01/24 13:11:31.835
  STEP: Getting /status @ 06/01/24 13:11:31.844
  Jun  1 13:11:31.848: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 06/01/24 13:11:31.848
  Jun  1 13:11:31.857: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 06/01/24 13:11:31.857
  Jun  1 13:11:31.858: INFO: Observed &StatefulSet event: ADDED
  Jun  1 13:11:31.858: INFO: Found Statefulset ss in namespace statefulset-5814 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun  1 13:11:31.859: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 06/01/24 13:11:31.859
  Jun  1 13:11:31.859: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jun  1 13:11:31.868: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 06/01/24 13:11:31.868
  Jun  1 13:11:31.870: INFO: Observed &StatefulSet event: ADDED
  Jun  1 13:11:31.870: INFO: Observed Statefulset ss in namespace statefulset-5814 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun  1 13:11:31.870: INFO: Observed &StatefulSet event: MODIFIED
  Jun  1 13:11:31.870: INFO: Deleting all statefulset in ns statefulset-5814
  Jun  1 13:11:31.874: INFO: Scaling statefulset ss to 0
  E0601 13:11:32.458278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:33.458391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:34.458496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:35.458577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:36.459138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:37.459206      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:38.459307      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:39.459393      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:40.459489      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:41.459784      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:11:41.896: INFO: Waiting for statefulset status.replicas updated to 0
  Jun  1 13:11:41.900: INFO: Deleting statefulset ss
  Jun  1 13:11:41.913: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5814" for this suite. @ 06/01/24 13:11:41.918
â€¢ [20.137 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1798
  STEP: Creating a kubernetes client @ 06/01/24 13:11:41.927
  Jun  1 13:11:41.927: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename kubectl @ 06/01/24 13:11:41.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:11:41.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:11:41.948
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/01/24 13:11:41.951
  Jun  1 13:11:41.951: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-9437 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Jun  1 13:11:42.007: INFO: stderr: ""
  Jun  1 13:11:42.007: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 06/01/24 13:11:42.007
  E0601 13:11:42.460158      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:43.460322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:44.460408      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:45.460535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:46.461532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 06/01/24 13:11:47.059
  Jun  1 13:11:47.059: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-9437 get pod e2e-test-httpd-pod -o json'
  Jun  1 13:11:47.104: INFO: stderr: ""
  Jun  1 13:11:47.104: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-06-01T13:11:41Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-9437\",\n        \"resourceVersion\": \"27727\",\n        \"uid\": \"2071de4b-6726-458d-9f13-d967cdcbc4c1\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-5kwc4\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-74-111\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-5kwc4\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-01T13:11:42Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-01T13:11:42Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-01T13:11:42Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-01T13:11:42Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-01T13:11:42Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://217e35ff1b7721d6f7b463671c78601722c8e6d1c3e337ef1e1ab7f7fab2012d\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-06-01T13:11:42Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.31.74.111\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.74.111\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.118.145\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.118.145\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-06-01T13:11:42Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 06/01/24 13:11:47.104
  Jun  1 13:11:47.104: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-9437 replace -f -'
  Jun  1 13:11:47.194: INFO: stderr: ""
  Jun  1 13:11:47.194: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 06/01/24 13:11:47.194
  Jun  1 13:11:47.197: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-9437 delete pods e2e-test-httpd-pod'
  E0601 13:11:47.462605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:48.462699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:11:48.790: INFO: stderr: ""
  Jun  1 13:11:48.790: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jun  1 13:11:48.790: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9437" for this suite. @ 06/01/24 13:11:48.793
â€¢ [6.875 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 06/01/24 13:11:48.802
  Jun  1 13:11:48.802: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename resourcequota @ 06/01/24 13:11:48.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:11:48.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:11:48.821
  STEP: Counting existing ResourceQuota @ 06/01/24 13:11:48.823
  E0601 13:11:49.463163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:50.463618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:51.464449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:52.464570      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:53.464667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/01/24 13:11:53.826
  STEP: Ensuring resource quota status is calculated @ 06/01/24 13:11:53.832
  E0601 13:11:54.465256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:55.465296      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 06/01/24 13:11:55.837
  STEP: Creating a NodePort Service @ 06/01/24 13:11:55.858
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 06/01/24 13:11:55.882
  STEP: Ensuring resource quota status captures service creation @ 06/01/24 13:11:55.903
  E0601 13:11:56.465376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:57.465474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 06/01/24 13:11:57.907
  STEP: Ensuring resource quota status released usage @ 06/01/24 13:11:57.945
  E0601 13:11:58.466207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:11:59.466325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:11:59.950: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7532" for this suite. @ 06/01/24 13:11:59.954
â€¢ [11.158 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1084
  STEP: Creating a kubernetes client @ 06/01/24 13:11:59.96
  Jun  1 13:11:59.960: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename kubectl @ 06/01/24 13:11:59.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:11:59.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:11:59.978
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/01/24 13:11:59.981
  Jun  1 13:11:59.981: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-3706 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Jun  1 13:12:00.035: INFO: stderr: ""
  Jun  1 13:12:00.035: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 06/01/24 13:12:00.035
  Jun  1 13:12:00.035: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-3706 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  Jun  1 13:12:00.085: INFO: stderr: ""
  Jun  1 13:12:00.085: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/01/24 13:12:00.085
  Jun  1 13:12:00.088: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-3706 delete pods e2e-test-httpd-pod'
  E0601 13:12:00.467280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:12:01.468342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:12:01.820: INFO: stderr: ""
  Jun  1 13:12:01.820: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jun  1 13:12:01.820: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3706" for this suite. @ 06/01/24 13:12:01.823
â€¢ [1.869 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 06/01/24 13:12:01.829
  Jun  1 13:12:01.829: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename var-expansion @ 06/01/24 13:12:01.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:12:01.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:12:01.848
  STEP: Creating a pod to test env composition @ 06/01/24 13:12:01.85
  E0601 13:12:02.469315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:12:03.469387      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:12:04.470297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:12:05.470402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 13:12:05.875
  Jun  1 13:12:05.877: INFO: Trying to get logs from node ip-172-31-74-111 pod var-expansion-c77dce06-cdbd-420b-a9b7-d931a748b1db container dapi-container: <nil>
  STEP: delete the pod @ 06/01/24 13:12:05.884
  Jun  1 13:12:05.899: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8981" for this suite. @ 06/01/24 13:12:05.902
â€¢ [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 06/01/24 13:12:05.913
  Jun  1 13:12:05.913: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename services @ 06/01/24 13:12:05.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:12:05.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:12:05.931
  Jun  1 13:12:05.936: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1984" for this suite. @ 06/01/24 13:12:05.938
â€¢ [0.031 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:349
  STEP: Creating a kubernetes client @ 06/01/24 13:12:05.944
  Jun  1 13:12:05.944: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename security-context-test @ 06/01/24 13:12:05.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:12:05.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:12:05.965
  E0601 13:12:06.471423      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:12:07.471529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:12:08.471627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:12:09.471744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:12:09.989: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4077" for this suite. @ 06/01/24 13:12:09.993
â€¢ [4.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 06/01/24 13:12:10.003
  Jun  1 13:12:10.003: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename emptydir @ 06/01/24 13:12:10.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:12:10.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:12:10.023
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 06/01/24 13:12:10.026
  E0601 13:12:10.472631      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:12:11.472969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 13:12:12.045
  Jun  1 13:12:12.048: INFO: Trying to get logs from node ip-172-31-74-111 pod pod-517cca96-d9a9-470f-b14c-c15f3f47abfb container test-container: <nil>
  STEP: delete the pod @ 06/01/24 13:12:12.054
  Jun  1 13:12:12.070: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-469" for this suite. @ 06/01/24 13:12:12.073
â€¢ [2.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 06/01/24 13:12:12.08
  Jun  1 13:12:12.080: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 06/01/24 13:12:12.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:12:12.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:12:12.097
  STEP: creating a target pod @ 06/01/24 13:12:12.099
  E0601 13:12:12.473703      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:12:13.473780      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 06/01/24 13:12:14.119
  E0601 13:12:14.474219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:12:15.474347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 06/01/24 13:12:16.134
  Jun  1 13:12:16.134: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-6899 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  1 13:12:16.134: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 13:12:16.135: INFO: ExecWithOptions: Clientset creation
  Jun  1 13:12:16.135: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-6899/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Jun  1 13:12:16.173: INFO: Exec stderr: ""
  Jun  1 13:12:16.182: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-6899" for this suite. @ 06/01/24 13:12:16.194
â€¢ [4.123 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 06/01/24 13:12:16.203
  Jun  1 13:12:16.203: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename webhook @ 06/01/24 13:12:16.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:12:16.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:12:16.221
  STEP: Setting up server cert @ 06/01/24 13:12:16.245
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/01/24 13:12:16.372
  STEP: Deploying the webhook pod @ 06/01/24 13:12:16.379
  STEP: Wait for the deployment to be ready @ 06/01/24 13:12:16.391
  Jun  1 13:12:16.398: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0601 13:12:16.474392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:12:17.474615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/01/24 13:12:18.408
  STEP: Verifying the service has paired with the endpoint @ 06/01/24 13:12:18.422
  E0601 13:12:18.474770      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:12:19.422: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 06/01/24 13:12:19.429
  STEP: create a namespace for the webhook @ 06/01/24 13:12:19.441
  STEP: create a configmap should be unconditionally rejected by the webhook @ 06/01/24 13:12:19.456
  E0601 13:12:19.475083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:12:19.514: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-563" for this suite. @ 06/01/24 13:12:19.517
  STEP: Destroying namespace "webhook-markers-3679" for this suite. @ 06/01/24 13:12:19.527
  STEP: Destroying namespace "fail-closed-namespace-24" for this suite. @ 06/01/24 13:12:19.532
â€¢ [3.334 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 06/01/24 13:12:19.537
  Jun  1 13:12:19.537: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename configmap @ 06/01/24 13:12:19.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:12:19.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:12:19.562
  STEP: Creating configMap with name configmap-test-volume-ac86918d-6ed7-4ed0-a32b-f099c7bde63e @ 06/01/24 13:12:19.565
  STEP: Creating a pod to test consume configMaps @ 06/01/24 13:12:19.576
  E0601 13:12:20.475635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:12:21.476504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:12:22.477158      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:12:23.477241      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 13:12:23.6
  Jun  1 13:12:23.603: INFO: Trying to get logs from node ip-172-31-80-202 pod pod-configmaps-897d2b4b-207b-437b-ba73-5bc00fc9375e container agnhost-container: <nil>
  STEP: delete the pod @ 06/01/24 13:12:23.618
  Jun  1 13:12:23.635: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3780" for this suite. @ 06/01/24 13:12:23.638
â€¢ [4.110 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1538
  STEP: Creating a kubernetes client @ 06/01/24 13:12:23.647
  Jun  1 13:12:23.647: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename kubectl @ 06/01/24 13:12:23.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:12:23.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:12:23.664
  STEP: creating Agnhost RC @ 06/01/24 13:12:23.666
  Jun  1 13:12:23.666: INFO: namespace kubectl-9732
  Jun  1 13:12:23.666: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-9732 create -f -'
  Jun  1 13:12:23.753: INFO: stderr: ""
  Jun  1 13:12:23.753: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 06/01/24 13:12:23.753
  E0601 13:12:24.477442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:12:24.759: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun  1 13:12:24.759: INFO: Found 0 / 1
  E0601 13:12:25.477549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:12:25.758: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun  1 13:12:25.758: INFO: Found 1 / 1
  Jun  1 13:12:25.758: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Jun  1 13:12:25.762: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun  1 13:12:25.762: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jun  1 13:12:25.762: INFO: wait on agnhost-primary startup in kubectl-9732 
  Jun  1 13:12:25.762: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-9732 logs agnhost-primary-9tkf4 agnhost-primary'
  Jun  1 13:12:25.817: INFO: stderr: ""
  Jun  1 13:12:25.817: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 06/01/24 13:12:25.817
  Jun  1 13:12:25.817: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-9732 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Jun  1 13:12:25.878: INFO: stderr: ""
  Jun  1 13:12:25.878: INFO: stdout: "service/rm2 exposed\n"
  Jun  1 13:12:25.889: INFO: Service rm2 in namespace kubectl-9732 found.
  E0601 13:12:26.477774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:12:27.477863      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: exposing service @ 06/01/24 13:12:27.896
  Jun  1 13:12:27.896: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-9732 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Jun  1 13:12:27.953: INFO: stderr: ""
  Jun  1 13:12:27.953: INFO: stdout: "service/rm3 exposed\n"
  Jun  1 13:12:27.957: INFO: Service rm3 in namespace kubectl-9732 found.
  E0601 13:12:28.478112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:12:29.478296      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:12:29.965: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9732" for this suite. @ 06/01/24 13:12:29.969
â€¢ [6.329 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 06/01/24 13:12:29.976
  Jun  1 13:12:29.976: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename tables @ 06/01/24 13:12:29.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:12:29.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:12:29.99
  Jun  1 13:12:29.997: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-915" for this suite. @ 06/01/24 13:12:30
â€¢ [0.029 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 06/01/24 13:12:30.006
  Jun  1 13:12:30.006: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename conformance-tests @ 06/01/24 13:12:30.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:12:30.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:12:30.022
  STEP: Getting node addresses @ 06/01/24 13:12:30.025
  Jun  1 13:12:30.025: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Jun  1 13:12:30.030: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-1030" for this suite. @ 06/01/24 13:12:30.034
â€¢ [0.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:611
  STEP: Creating a kubernetes client @ 06/01/24 13:12:30.041
  Jun  1 13:12:30.041: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename security-context-test @ 06/01/24 13:12:30.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:12:30.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:12:30.061
  E0601 13:12:30.479005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:12:31.479282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:12:32.480217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:12:33.480645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:12:34.096: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3720" for this suite. @ 06/01/24 13:12:34.1
â€¢ [4.065 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 06/01/24 13:12:34.107
  Jun  1 13:12:34.107: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename apf @ 06/01/24 13:12:34.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:12:34.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:12:34.125
  STEP: getting /apis @ 06/01/24 13:12:34.131
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 06/01/24 13:12:34.133
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 06/01/24 13:12:34.134
  STEP: creating @ 06/01/24 13:12:34.135
  STEP: getting @ 06/01/24 13:12:34.156
  STEP: listing @ 06/01/24 13:12:34.158
  STEP: watching @ 06/01/24 13:12:34.162
  Jun  1 13:12:34.162: INFO: starting watch
  STEP: patching @ 06/01/24 13:12:34.163
  STEP: updating @ 06/01/24 13:12:34.171
  Jun  1 13:12:34.180: INFO: waiting for watch events with expected annotations
  Jun  1 13:12:34.180: INFO: missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 06/01/24 13:12:34.18
  STEP: patching /status @ 06/01/24 13:12:34.183
  STEP: updating /status @ 06/01/24 13:12:34.188
  STEP: deleting @ 06/01/24 13:12:34.218
  STEP: deleting a collection @ 06/01/24 13:12:34.229
  Jun  1 13:12:34.247: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-6466" for this suite. @ 06/01/24 13:12:34.249
â€¢ [0.148 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 06/01/24 13:12:34.255
  Jun  1 13:12:34.255: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename downward-api @ 06/01/24 13:12:34.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:12:34.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:12:34.274
  STEP: Creating a pod to test downward API volume plugin @ 06/01/24 13:12:34.277
  E0601 13:12:34.480960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:12:35.481138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:12:36.482218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:12:37.483009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 13:12:38.301
  Jun  1 13:12:38.303: INFO: Trying to get logs from node ip-172-31-80-202 pod downwardapi-volume-87ff9b85-4526-4c61-b7a1-016dc7df9f6e container client-container: <nil>
  STEP: delete the pod @ 06/01/24 13:12:38.311
  Jun  1 13:12:38.327: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3087" for this suite. @ 06/01/24 13:12:38.331
â€¢ [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 06/01/24 13:12:38.337
  Jun  1 13:12:38.337: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename emptydir @ 06/01/24 13:12:38.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:12:38.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:12:38.358
  STEP: Creating a pod to test emptydir volume type on node default medium @ 06/01/24 13:12:38.361
  E0601 13:12:38.483744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:12:39.483932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:12:40.484255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:12:41.484503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 13:12:42.381
  Jun  1 13:12:42.385: INFO: Trying to get logs from node ip-172-31-74-111 pod pod-080c7ce5-491a-4a0b-b0c1-1350d89d66f8 container test-container: <nil>
  STEP: delete the pod @ 06/01/24 13:12:42.391
  Jun  1 13:12:42.403: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-412" for this suite. @ 06/01/24 13:12:42.406
â€¢ [4.077 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 06/01/24 13:12:42.414
  Jun  1 13:12:42.414: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename projected @ 06/01/24 13:12:42.415
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:12:42.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:12:42.43
  STEP: Creating configMap with name projected-configmap-test-volume-5e516366-82e6-43f5-8a95-015afa122173 @ 06/01/24 13:12:42.433
  STEP: Creating a pod to test consume configMaps @ 06/01/24 13:12:42.437
  E0601 13:12:42.485208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:12:43.485364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:12:44.485415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:12:45.485537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 13:12:46.461
  Jun  1 13:12:46.464: INFO: Trying to get logs from node ip-172-31-74-111 pod pod-projected-configmaps-547265a7-78be-4477-bc9e-9cdf1abea72a container agnhost-container: <nil>
  STEP: delete the pod @ 06/01/24 13:12:46.47
  E0601 13:12:46.486318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:12:46.488: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3954" for this suite. @ 06/01/24 13:12:46.491
â€¢ [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 06/01/24 13:12:46.498
  Jun  1 13:12:46.498: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename lease-test @ 06/01/24 13:12:46.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:12:46.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:12:46.515
  Jun  1 13:12:46.566: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-8262" for this suite. @ 06/01/24 13:12:46.57
â€¢ [0.078 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:751
  STEP: Creating a kubernetes client @ 06/01/24 13:12:46.576
  Jun  1 13:12:46.576: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename statefulset @ 06/01/24 13:12:46.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:12:46.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:12:46.594
  STEP: Creating service test in namespace statefulset-602 @ 06/01/24 13:12:46.597
  STEP: Creating stateful set ss in namespace statefulset-602 @ 06/01/24 13:12:46.6
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-602 @ 06/01/24 13:12:46.608
  Jun  1 13:12:46.613: INFO: Found 0 stateful pods, waiting for 1
  E0601 13:12:47.487027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:12:48.487124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:12:49.487247      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:12:50.487450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:12:51.487798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:12:52.487875      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:12:53.488166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:12:54.488264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:12:55.488356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:12:56.488458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:12:56.614: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 06/01/24 13:12:56.614
  Jun  1 13:12:56.618: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=statefulset-602 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun  1 13:12:56.715: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun  1 13:12:56.716: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun  1 13:12:56.716: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun  1 13:12:56.719: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0601 13:12:57.489153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:12:58.489256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:12:59.489337      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:13:00.490244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:13:01.490597      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:13:02.490706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:13:03.491246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:13:04.491474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:13:05.491573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:13:06.491814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:13:06.719: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jun  1 13:13:06.720: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jun  1 13:13:06.736: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
  Jun  1 13:13:06.736: INFO: ss-0  ip-172-31-80-202  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-01 13:12:47 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-01 13:12:46 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-01 13:12:56 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-01 13:12:56 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-01 13:12:46 +0000 UTC  }]
  Jun  1 13:13:06.736: INFO: 
  Jun  1 13:13:06.736: INFO: StatefulSet ss has not reached scale 3, at 1
  E0601 13:13:07.491934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:13:07.741: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.994144691s
  E0601 13:13:08.492937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:13:08.745: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.990251098s
  E0601 13:13:09.493014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:13:09.748: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.986194951s
  E0601 13:13:10.493167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:13:10.754: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.982082509s
  E0601 13:13:11.493413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:13:11.759: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.976790214s
  E0601 13:13:12.494000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:13:12.762: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.972215574s
  E0601 13:13:13.494218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:13:13.767: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.968665026s
  E0601 13:13:14.494837      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:13:14.772: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.963174577s
  E0601 13:13:15.495785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:13:15.777: INFO: Verifying statefulset ss doesn't scale past 3 for another 959.340632ms
  E0601 13:13:16.496352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-602 @ 06/01/24 13:13:16.777
  Jun  1 13:13:16.781: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=statefulset-602 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun  1 13:13:16.875: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun  1 13:13:16.875: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun  1 13:13:16.875: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun  1 13:13:16.875: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=statefulset-602 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun  1 13:13:16.977: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Jun  1 13:13:16.977: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun  1 13:13:16.977: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun  1 13:13:16.977: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=statefulset-602 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun  1 13:13:17.071: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Jun  1 13:13:17.071: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun  1 13:13:17.071: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun  1 13:13:17.074: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun  1 13:13:17.074: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun  1 13:13:17.074: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 06/01/24 13:13:17.074
  Jun  1 13:13:17.078: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=statefulset-602 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun  1 13:13:17.170: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun  1 13:13:17.170: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun  1 13:13:17.170: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun  1 13:13:17.170: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=statefulset-602 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun  1 13:13:17.262: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun  1 13:13:17.262: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun  1 13:13:17.262: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun  1 13:13:17.262: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=statefulset-602 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun  1 13:13:17.361: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun  1 13:13:17.361: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun  1 13:13:17.361: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun  1 13:13:17.361: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jun  1 13:13:17.365: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0601 13:13:17.496477      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:13:18.497233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:13:19.498192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:13:20.498630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:13:21.499043      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:13:22.499232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:13:23.499463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:13:24.500009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:13:25.500106      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:13:26.500565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:13:27.369: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jun  1 13:13:27.369: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Jun  1 13:13:27.369: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Jun  1 13:13:27.381: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
  Jun  1 13:13:27.381: INFO: ss-0  ip-172-31-80-202  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-01 13:12:47 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-01 13:12:46 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-01 13:13:17 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-01 13:13:17 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-01 13:12:46 +0000 UTC  }]
  Jun  1 13:13:27.381: INFO: ss-1  ip-172-31-17-129  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-01 13:13:07 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-01 13:13:06 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-01 13:13:18 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-01 13:13:18 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-01 13:13:06 +0000 UTC  }]
  Jun  1 13:13:27.381: INFO: ss-2  ip-172-31-74-111  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-01 13:13:07 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-01 13:13:06 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-01 13:13:18 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-01 13:13:18 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-01 13:13:06 +0000 UTC  }]
  Jun  1 13:13:27.381: INFO: 
  Jun  1 13:13:27.381: INFO: StatefulSet ss has not reached scale 0, at 3
  E0601 13:13:27.500980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:13:28.387: INFO: POD   NODE              PHASE      GRACE  CONDITIONS
  Jun  1 13:13:28.387: INFO: ss-1  ip-172-31-17-129  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-06-01 13:13:27 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-01 13:13:06 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-01 13:13:18 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-01 13:13:18 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-01 13:13:06 +0000 UTC  }]
  Jun  1 13:13:28.387: INFO: 
  Jun  1 13:13:28.387: INFO: StatefulSet ss has not reached scale 0, at 1
  E0601 13:13:28.501665      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:13:29.391: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.991880837s
  E0601 13:13:29.502377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:13:30.396: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.988167261s
  E0601 13:13:30.502406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:13:31.401: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.982942644s
  E0601 13:13:31.503478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:13:32.405: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.978216271s
  E0601 13:13:32.504430      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:13:33.408: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.974279106s
  E0601 13:13:33.504657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:13:34.412: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.970895662s
  E0601 13:13:34.504945      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:13:35.416: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.966389478s
  E0601 13:13:35.504981      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:13:36.422: INFO: Verifying statefulset ss doesn't scale past 0 for another 962.74462ms
  E0601 13:13:36.505441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-602 @ 06/01/24 13:13:37.422
  Jun  1 13:13:37.425: INFO: Scaling statefulset ss to 0
  Jun  1 13:13:37.436: INFO: Waiting for statefulset status.replicas updated to 0
  Jun  1 13:13:37.440: INFO: Deleting all statefulset in ns statefulset-602
  Jun  1 13:13:37.442: INFO: Scaling statefulset ss to 0
  Jun  1 13:13:37.452: INFO: Waiting for statefulset status.replicas updated to 0
  Jun  1 13:13:37.455: INFO: Deleting statefulset ss
  Jun  1 13:13:37.467: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-602" for this suite. @ 06/01/24 13:13:37.47
â€¢ [50.899 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 06/01/24 13:13:37.475
  Jun  1 13:13:37.475: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename resourcequota @ 06/01/24 13:13:37.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:13:37.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:13:37.494
  STEP: Counting existing ResourceQuota @ 06/01/24 13:13:37.496
  E0601 13:13:37.505663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:13:38.505906      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:13:39.506237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:13:40.506464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:13:41.506974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/01/24 13:13:42.499
  STEP: Ensuring resource quota status is calculated @ 06/01/24 13:13:42.503
  E0601 13:13:42.507047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:13:43.507202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:13:44.508101      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 06/01/24 13:13:44.509
  STEP: Ensuring resource quota status captures replication controller creation @ 06/01/24 13:13:44.524
  E0601 13:13:45.508256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:13:46.508502      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 06/01/24 13:13:46.528
  STEP: Ensuring resource quota status released usage @ 06/01/24 13:13:46.534
  E0601 13:13:47.508583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:13:48.508675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:13:48.540: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8845" for this suite. @ 06/01/24 13:13:48.544
â€¢ [11.075 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 06/01/24 13:13:48.55
  Jun  1 13:13:48.550: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename resourcequota @ 06/01/24 13:13:48.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:13:48.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:13:48.568
  STEP: Creating a ResourceQuota @ 06/01/24 13:13:48.571
  STEP: Getting a ResourceQuota @ 06/01/24 13:13:48.577
  STEP: Listing all ResourceQuotas with LabelSelector @ 06/01/24 13:13:48.579
  STEP: Patching the ResourceQuota @ 06/01/24 13:13:48.583
  STEP: Deleting a Collection of ResourceQuotas @ 06/01/24 13:13:48.588
  STEP: Verifying the deleted ResourceQuota @ 06/01/24 13:13:48.595
  Jun  1 13:13:48.599: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1228" for this suite. @ 06/01/24 13:13:48.602
â€¢ [0.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 06/01/24 13:13:48.609
  Jun  1 13:13:48.609: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename gc @ 06/01/24 13:13:48.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:13:48.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:13:48.627
  Jun  1 13:13:48.662: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"0c91c4b4-8880-4d5c-a542-e6bd4d8597c4", Controller:(*bool)(0xc006a2d43e), BlockOwnerDeletion:(*bool)(0xc006a2d43f)}}
  Jun  1 13:13:48.679: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"3e615c1b-d321-4a3e-af3a-09f88ee9efc6", Controller:(*bool)(0xc006a2d666), BlockOwnerDeletion:(*bool)(0xc006a2d667)}}
  Jun  1 13:13:48.685: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"5c0297f4-d8be-4026-aaff-704e7a83bdde", Controller:(*bool)(0xc000c15abe), BlockOwnerDeletion:(*bool)(0xc000c15abf)}}
  E0601 13:13:49.508789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:13:50.508899      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:13:51.509515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:13:52.509639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:13:53.509748      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:13:53.699: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5522" for this suite. @ 06/01/24 13:13:53.704
â€¢ [5.102 seconds]
------------------------------
SSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 06/01/24 13:13:53.712
  Jun  1 13:13:53.712: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename disruption @ 06/01/24 13:13:53.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:13:53.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:13:53.735
  STEP: Creating a pdb that targets all three pods in a test replica set @ 06/01/24 13:13:53.737
  STEP: Waiting for the pdb to be processed @ 06/01/24 13:13:53.742
  E0601 13:13:54.509848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:13:55.509947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 06/01/24 13:13:55.752
  STEP: Waiting for all pods to be running @ 06/01/24 13:13:55.752
  Jun  1 13:13:55.755: INFO: pods: 0 < 3
  E0601 13:13:56.510522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:13:57.510736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 06/01/24 13:13:57.756
  STEP: Updating the pdb to allow a pod to be evicted @ 06/01/24 13:13:57.766
  STEP: Waiting for the pdb to be processed @ 06/01/24 13:13:57.776
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 06/01/24 13:13:57.78
  STEP: Waiting for all pods to be running @ 06/01/24 13:13:57.78
  STEP: Waiting for the pdb to observed all healthy pods @ 06/01/24 13:13:57.783
  STEP: Patching the pdb to disallow a pod to be evicted @ 06/01/24 13:13:57.808
  STEP: Waiting for the pdb to be processed @ 06/01/24 13:13:57.824
  E0601 13:13:58.511292      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:13:59.511447      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 06/01/24 13:13:59.829
  STEP: locating a running pod @ 06/01/24 13:13:59.832
  STEP: Deleting the pdb to allow a pod to be evicted @ 06/01/24 13:13:59.841
  STEP: Waiting for the pdb to be deleted @ 06/01/24 13:13:59.848
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 06/01/24 13:13:59.85
  STEP: Waiting for all pods to be running @ 06/01/24 13:13:59.85
  Jun  1 13:13:59.871: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4248" for this suite. @ 06/01/24 13:13:59.874
â€¢ [6.175 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 06/01/24 13:13:59.887
  Jun  1 13:13:59.887: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename emptydir @ 06/01/24 13:13:59.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:13:59.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:13:59.958
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 06/01/24 13:13:59.961
  E0601 13:14:00.511542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:01.512520      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:02.513392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:03.513495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 13:14:03.983
  Jun  1 13:14:03.988: INFO: Trying to get logs from node ip-172-31-74-111 pod pod-09174f6d-fe33-4b62-aea4-9ff2639718bf container test-container: <nil>
  STEP: delete the pod @ 06/01/24 13:14:03.999
  Jun  1 13:14:04.014: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5051" for this suite. @ 06/01/24 13:14:04.017
â€¢ [4.135 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:655
  STEP: Creating a kubernetes client @ 06/01/24 13:14:04.022
  Jun  1 13:14:04.022: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename job @ 06/01/24 13:14:04.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:14:04.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:14:04.04
  STEP: Creating a job @ 06/01/24 13:14:04.042
  STEP: Ensuring active pods == parallelism @ 06/01/24 13:14:04.048
  E0601 13:14:04.514236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:05.514641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 06/01/24 13:14:06.051
  E0601 13:14:06.515321      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:14:06.570: INFO: Successfully updated pod "adopt-release-2kg29"
  STEP: Checking that the Job readopts the Pod @ 06/01/24 13:14:06.57
  E0601 13:14:07.515438      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:08.515529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 06/01/24 13:14:08.583
  Jun  1 13:14:09.104: INFO: Successfully updated pod "adopt-release-2kg29"
  STEP: Checking that the Job releases the Pod @ 06/01/24 13:14:09.104
  E0601 13:14:09.515697      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:10.515781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:14:11.113: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8860" for this suite. @ 06/01/24 13:14:11.117
â€¢ [7.109 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 06/01/24 13:14:11.131
  Jun  1 13:14:11.131: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename watch @ 06/01/24 13:14:11.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:14:11.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:14:11.146
  STEP: creating a watch on configmaps with label A @ 06/01/24 13:14:11.149
  STEP: creating a watch on configmaps with label B @ 06/01/24 13:14:11.15
  STEP: creating a watch on configmaps with label A or B @ 06/01/24 13:14:11.151
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 06/01/24 13:14:11.152
  Jun  1 13:14:11.156: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7697  a7c5dc1a-a880-442f-bd9c-b2fcfc57bc05 29211 0 2024-06-01 13:14:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-01 13:14:11 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  1 13:14:11.157: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7697  a7c5dc1a-a880-442f-bd9c-b2fcfc57bc05 29211 0 2024-06-01 13:14:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-01 13:14:11 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 06/01/24 13:14:11.157
  Jun  1 13:14:11.171: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7697  a7c5dc1a-a880-442f-bd9c-b2fcfc57bc05 29212 0 2024-06-01 13:14:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-01 13:14:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  1 13:14:11.171: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7697  a7c5dc1a-a880-442f-bd9c-b2fcfc57bc05 29212 0 2024-06-01 13:14:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-01 13:14:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 06/01/24 13:14:11.171
  Jun  1 13:14:11.180: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7697  a7c5dc1a-a880-442f-bd9c-b2fcfc57bc05 29213 0 2024-06-01 13:14:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-01 13:14:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  1 13:14:11.180: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7697  a7c5dc1a-a880-442f-bd9c-b2fcfc57bc05 29213 0 2024-06-01 13:14:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-01 13:14:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 06/01/24 13:14:11.18
  Jun  1 13:14:11.187: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7697  a7c5dc1a-a880-442f-bd9c-b2fcfc57bc05 29214 0 2024-06-01 13:14:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-01 13:14:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  1 13:14:11.188: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7697  a7c5dc1a-a880-442f-bd9c-b2fcfc57bc05 29214 0 2024-06-01 13:14:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-01 13:14:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 06/01/24 13:14:11.188
  Jun  1 13:14:11.193: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7697  dc6f7814-bae2-4c2d-b9ce-c6a779786583 29215 0 2024-06-01 13:14:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-06-01 13:14:11 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  1 13:14:11.193: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7697  dc6f7814-bae2-4c2d-b9ce-c6a779786583 29215 0 2024-06-01 13:14:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-06-01 13:14:11 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0601 13:14:11.516201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:12.516493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:13.517379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:14.518253      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:15.518319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:16.519026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:17.519308      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:18.519397      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:19.519556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:20.519617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 06/01/24 13:14:21.194
  Jun  1 13:14:21.201: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7697  dc6f7814-bae2-4c2d-b9ce-c6a779786583 29280 0 2024-06-01 13:14:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-06-01 13:14:11 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  1 13:14:21.202: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7697  dc6f7814-bae2-4c2d-b9ce-c6a779786583 29280 0 2024-06-01 13:14:11 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-06-01 13:14:11 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0601 13:14:21.519814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:22.519953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:23.520141      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:24.520372      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:25.520483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:26.521537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:27.521602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:28.521694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:29.521819      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:30.522604      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:14:31.203: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7697" for this suite. @ 06/01/24 13:14:31.208
â€¢ [20.082 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:96
  STEP: Creating a kubernetes client @ 06/01/24 13:14:31.214
  Jun  1 13:14:31.214: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename secrets @ 06/01/24 13:14:31.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:14:31.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:14:31.234
  STEP: creating secret secrets-5170/secret-test-a304e620-5234-4b52-96c5-107bdd0a0d89 @ 06/01/24 13:14:31.237
  STEP: Creating a pod to test consume secrets @ 06/01/24 13:14:31.241
  E0601 13:14:31.523540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:32.523638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:33.524030      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:34.524129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 13:14:35.259
  Jun  1 13:14:35.262: INFO: Trying to get logs from node ip-172-31-74-111 pod pod-configmaps-aa85a71b-9304-4811-b4d0-27b2c9b684c8 container env-test: <nil>
  STEP: delete the pod @ 06/01/24 13:14:35.268
  Jun  1 13:14:35.285: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5170" for this suite. @ 06/01/24 13:14:35.289
â€¢ [4.082 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 06/01/24 13:14:35.296
  Jun  1 13:14:35.296: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename secrets @ 06/01/24 13:14:35.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:14:35.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:14:35.313
  STEP: Creating secret with name secret-test-d863dc56-6a6c-48a3-82f3-6cb936ff1a75 @ 06/01/24 13:14:35.332
  STEP: Creating a pod to test consume secrets @ 06/01/24 13:14:35.336
  E0601 13:14:35.524801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:36.525237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:37.525589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:38.525673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 13:14:39.358
  Jun  1 13:14:39.360: INFO: Trying to get logs from node ip-172-31-74-111 pod pod-secrets-ee92f1f0-6897-4a44-b3ca-4085e63f1f37 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/01/24 13:14:39.368
  Jun  1 13:14:39.386: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-842" for this suite. @ 06/01/24 13:14:39.389
  STEP: Destroying namespace "secret-namespace-7956" for this suite. @ 06/01/24 13:14:39.394
â€¢ [4.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3338
  STEP: Creating a kubernetes client @ 06/01/24 13:14:39.404
  Jun  1 13:14:39.404: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename services @ 06/01/24 13:14:39.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:14:39.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:14:39.421
  STEP: creating a Service @ 06/01/24 13:14:39.426
  STEP: watching for the Service to be added @ 06/01/24 13:14:39.44
  Jun  1 13:14:39.446: INFO: Found Service test-service-vwb7r in namespace services-4841 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 32694}]
  Jun  1 13:14:39.446: INFO: Service test-service-vwb7r created
  STEP: Getting /status @ 06/01/24 13:14:39.446
  Jun  1 13:14:39.451: INFO: Service test-service-vwb7r has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 06/01/24 13:14:39.451
  STEP: watching for the Service to be patched @ 06/01/24 13:14:39.456
  Jun  1 13:14:39.458: INFO: observed Service test-service-vwb7r in namespace services-4841 with annotations: map[] & LoadBalancer: {[]}
  Jun  1 13:14:39.458: INFO: Found Service test-service-vwb7r in namespace services-4841 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  <nil> []}]}
  Jun  1 13:14:39.458: INFO: Service test-service-vwb7r has service status patched
  STEP: updating the ServiceStatus @ 06/01/24 13:14:39.458
  Jun  1 13:14:39.469: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 06/01/24 13:14:39.47
  Jun  1 13:14:39.471: INFO: Observed Service test-service-vwb7r in namespace services-4841 with annotations: map[] & Conditions: {[]}
  Jun  1 13:14:39.471: INFO: Observed event: &Service{ObjectMeta:{test-service-vwb7r  services-4841  a46150e6-3f5b-4f13-8c5d-353042c8d408 29393 0 2024-06-01 13:14:39 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-06-01 13:14:39 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-06-01 13:14:39 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:32694,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.152.183.171,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.152.183.171],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:nil,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Jun  1 13:14:39.471: INFO: Found Service test-service-vwb7r in namespace services-4841 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jun  1 13:14:39.471: INFO: Service test-service-vwb7r has service status updated
  STEP: patching the service @ 06/01/24 13:14:39.471
  STEP: watching for the Service to be patched @ 06/01/24 13:14:39.479
  Jun  1 13:14:39.481: INFO: observed Service test-service-vwb7r in namespace services-4841 with labels: map[test-service-static:true]
  Jun  1 13:14:39.481: INFO: observed Service test-service-vwb7r in namespace services-4841 with labels: map[test-service-static:true]
  Jun  1 13:14:39.481: INFO: observed Service test-service-vwb7r in namespace services-4841 with labels: map[test-service-static:true]
  Jun  1 13:14:39.481: INFO: Found Service test-service-vwb7r in namespace services-4841 with labels: map[test-service:patched test-service-static:true]
  Jun  1 13:14:39.481: INFO: Service test-service-vwb7r patched
  STEP: deleting the service @ 06/01/24 13:14:39.481
  STEP: watching for the Service to be deleted @ 06/01/24 13:14:39.497
  Jun  1 13:14:39.499: INFO: Observed event: ADDED
  Jun  1 13:14:39.499: INFO: Observed event: MODIFIED
  Jun  1 13:14:39.499: INFO: Observed event: MODIFIED
  Jun  1 13:14:39.499: INFO: Observed event: MODIFIED
  Jun  1 13:14:39.499: INFO: Found Service test-service-vwb7r in namespace services-4841 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Jun  1 13:14:39.499: INFO: Service test-service-vwb7r deleted
  Jun  1 13:14:39.499: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4841" for this suite. @ 06/01/24 13:14:39.502
â€¢ [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3565
  STEP: Creating a kubernetes client @ 06/01/24 13:14:39.509
  Jun  1 13:14:39.509: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename services @ 06/01/24 13:14:39.51
  E0601 13:14:39.526278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:14:39.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:14:39.53
  STEP: creating a collection of services @ 06/01/24 13:14:39.532
  Jun  1 13:14:39.532: INFO: Creating e2e-svc-a-rgqrm
  Jun  1 13:14:39.542: INFO: Creating e2e-svc-b-sdgzz
  Jun  1 13:14:39.551: INFO: Creating e2e-svc-c-6pbmg
  STEP: deleting service collection @ 06/01/24 13:14:39.565
  Jun  1 13:14:39.591: INFO: Collection of services has been deleted
  Jun  1 13:14:39.591: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7378" for this suite. @ 06/01/24 13:14:39.595
â€¢ [0.093 seconds]
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 06/01/24 13:14:39.602
  Jun  1 13:14:39.602: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename init-container @ 06/01/24 13:14:39.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:14:39.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:14:39.62
  STEP: creating the pod @ 06/01/24 13:14:39.622
  Jun  1 13:14:39.623: INFO: PodSpec: initContainers in spec.initContainers
  E0601 13:14:40.526792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:41.527795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:42.528799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:14:43.271: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4256" for this suite. @ 06/01/24 13:14:43.275
â€¢ [3.680 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 06/01/24 13:14:43.282
  Jun  1 13:14:43.282: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename dns @ 06/01/24 13:14:43.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:14:43.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:14:43.3
  STEP: Creating a test externalName service @ 06/01/24 13:14:43.302
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6729.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-6729.svc.cluster.local; sleep 1; done
   @ 06/01/24 13:14:43.307
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6729.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-6729.svc.cluster.local; sleep 1; done
   @ 06/01/24 13:14:43.307
  STEP: creating a pod to probe DNS @ 06/01/24 13:14:43.307
  STEP: submitting the pod to kubernetes @ 06/01/24 13:14:43.307
  E0601 13:14:43.529157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:44.529177      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/01/24 13:14:45.326
  STEP: looking for the results for each expected name from probers @ 06/01/24 13:14:45.33
  Jun  1 13:14:45.338: INFO: DNS probes using dns-test-dd276553-f7f6-47c5-af8b-c98ffef90d6c succeeded

  STEP: changing the externalName to bar.example.com @ 06/01/24 13:14:45.338
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6729.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-6729.svc.cluster.local; sleep 1; done
   @ 06/01/24 13:14:45.346
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6729.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-6729.svc.cluster.local; sleep 1; done
   @ 06/01/24 13:14:45.346
  STEP: creating a second pod to probe DNS @ 06/01/24 13:14:45.346
  STEP: submitting the pod to kubernetes @ 06/01/24 13:14:45.346
  E0601 13:14:45.529661      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:46.529977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/01/24 13:14:47.367
  STEP: looking for the results for each expected name from probers @ 06/01/24 13:14:47.371
  Jun  1 13:14:47.375: INFO: File wheezy_udp@dns-test-service-3.dns-6729.svc.cluster.local from pod  dns-6729/dns-test-15d99560-5d47-4469-a08c-23fc9818d9bb contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jun  1 13:14:47.380: INFO: File jessie_udp@dns-test-service-3.dns-6729.svc.cluster.local from pod  dns-6729/dns-test-15d99560-5d47-4469-a08c-23fc9818d9bb contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jun  1 13:14:47.380: INFO: Lookups using dns-6729/dns-test-15d99560-5d47-4469-a08c-23fc9818d9bb failed for: [wheezy_udp@dns-test-service-3.dns-6729.svc.cluster.local jessie_udp@dns-test-service-3.dns-6729.svc.cluster.local]

  Jun  1 13:14:47.390: INFO: Pod client logs for webserver: 
  Jun  1 13:14:47.395: INFO: Pod client logs for querier: 
  Jun  1 13:14:47.402: INFO: Pod client logs for jessie-querier: 
  E0601 13:14:47.530198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:48.530330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:49.530543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:50.530763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:51.531116      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:14:52.380: INFO: DNS probes using dns-test-15d99560-5d47-4469-a08c-23fc9818d9bb succeeded

  STEP: changing the service to type=ClusterIP @ 06/01/24 13:14:52.38
  W0601 13:14:52.392036      21 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6729.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-6729.svc.cluster.local; sleep 1; done
   @ 06/01/24 13:14:52.392
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6729.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-6729.svc.cluster.local; sleep 1; done
   @ 06/01/24 13:14:52.392
  STEP: creating a third pod to probe DNS @ 06/01/24 13:14:52.392
  STEP: submitting the pod to kubernetes @ 06/01/24 13:14:52.395
  E0601 13:14:52.531902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:53.532025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/01/24 13:14:54.413
  STEP: looking for the results for each expected name from probers @ 06/01/24 13:14:54.417
  Jun  1 13:14:54.425: INFO: DNS probes using dns-test-f55920f1-8acc-4567-aefc-d54be910c17a succeeded

  STEP: deleting the pod @ 06/01/24 13:14:54.425
  STEP: deleting the pod @ 06/01/24 13:14:54.44
  STEP: deleting the pod @ 06/01/24 13:14:54.456
  STEP: deleting the test externalName service @ 06/01/24 13:14:54.469
  Jun  1 13:14:54.485: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6729" for this suite. @ 06/01/24 13:14:54.489
â€¢ [11.213 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 06/01/24 13:14:54.495
  Jun  1 13:14:54.495: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename endpointslice @ 06/01/24 13:14:54.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:14:54.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:14:54.511
  E0601 13:14:54.532377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:55.532666      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:56.532808      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:57.532910      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:58.532969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:14:59.533920      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 06/01/24 13:14:59.583
  E0601 13:15:00.534002      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:15:01.534107      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:15:02.534217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:15:03.534290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:15:04.534353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing matching pods with named port @ 06/01/24 13:15:04.593
  E0601 13:15:05.534475      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:15:06.535005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:15:07.535241      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:15:08.535981      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:15:09.536087      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 06/01/24 13:15:09.601
  E0601 13:15:10.536258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:15:11.536499      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:15:12.536720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:15:13.537335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:15:14.536934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: recreating EndpointSlices after they've been deleted @ 06/01/24 13:15:14.611
  Jun  1 13:15:14.640: INFO: EndpointSlice for Service endpointslice-3838/example-named-port not found
  E0601 13:15:15.537150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:15:16.537630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:15:17.537726      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:15:18.537804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:15:19.538225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:15:20.538349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:15:21.538452      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:15:22.538539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:15:23.538706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:15:24.539690      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:15:24.649: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3838" for this suite. @ 06/01/24 13:15:24.652
â€¢ [30.164 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 06/01/24 13:15:24.659
  Jun  1 13:15:24.659: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename projected @ 06/01/24 13:15:24.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:15:24.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:15:24.678
  STEP: Creating configMap with name configmap-projected-all-test-volume-ffd6f028-363a-48e4-a0f7-c6e4124fb3cc @ 06/01/24 13:15:24.68
  STEP: Creating secret with name secret-projected-all-test-volume-304d70df-fdba-4505-b1e4-3dc63c1100ef @ 06/01/24 13:15:24.684
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 06/01/24 13:15:24.688
  E0601 13:15:25.539832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:15:26.540162      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:15:27.540244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:15:28.540351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 13:15:28.714
  Jun  1 13:15:28.718: INFO: Trying to get logs from node ip-172-31-80-202 pod projected-volume-207ac779-4287-4941-a48c-3d4fa974cfbe container projected-all-volume-test: <nil>
  STEP: delete the pod @ 06/01/24 13:15:28.725
  Jun  1 13:15:28.738: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3184" for this suite. @ 06/01/24 13:15:28.741
â€¢ [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 06/01/24 13:15:28.748
  Jun  1 13:15:28.748: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename runtimeclass @ 06/01/24 13:15:28.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:15:28.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:15:28.765
  E0601 13:15:29.540447      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:15:30.540630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:15:30.796: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3274" for this suite. @ 06/01/24 13:15:30.799
â€¢ [2.055 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 06/01/24 13:15:30.804
  Jun  1 13:15:30.804: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename projected @ 06/01/24 13:15:30.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:15:30.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:15:30.821
  STEP: Creating configMap with name projected-configmap-test-volume-2aeeab9e-8e58-48c7-91d6-42e7b7147c78 @ 06/01/24 13:15:30.824
  STEP: Creating a pod to test consume configMaps @ 06/01/24 13:15:30.831
  E0601 13:15:31.541522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:15:32.542236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:15:33.542333      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:15:34.542444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 13:15:34.852
  Jun  1 13:15:34.856: INFO: Trying to get logs from node ip-172-31-74-111 pod pod-projected-configmaps-58ef9dcc-51d1-4299-96f6-641c5ac55b76 container agnhost-container: <nil>
  STEP: delete the pod @ 06/01/24 13:15:34.863
  Jun  1 13:15:34.877: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5435" for this suite. @ 06/01/24 13:15:34.881
â€¢ [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 06/01/24 13:15:34.888
  Jun  1 13:15:34.888: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename field-validation @ 06/01/24 13:15:34.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:15:34.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:15:34.908
  Jun  1 13:15:34.910: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  E0601 13:15:35.543199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:15:36.544126      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0601 13:15:37.447162      21 warnings.go:70] unknown field "alpha"
  W0601 13:15:37.447179      21 warnings.go:70] unknown field "beta"
  W0601 13:15:37.447183      21 warnings.go:70] unknown field "delta"
  W0601 13:15:37.447187      21 warnings.go:70] unknown field "epsilon"
  W0601 13:15:37.447189      21 warnings.go:70] unknown field "gamma"
  E0601 13:15:37.544390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:15:37.987: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9091" for this suite. @ 06/01/24 13:15:37.99
â€¢ [3.114 seconds]
------------------------------
S
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 06/01/24 13:15:38.001
  Jun  1 13:15:38.001: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename sysctl @ 06/01/24 13:15:38.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:15:38.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:15:38.018
  STEP: Creating a pod with one valid and two invalid sysctls @ 06/01/24 13:15:38.021
  Jun  1 13:15:38.029: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-708" for this suite. @ 06/01/24 13:15:38.033
â€¢ [0.038 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 06/01/24 13:15:38.04
  Jun  1 13:15:38.040: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename pv @ 06/01/24 13:15:38.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:15:38.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:15:38.057
  STEP: Creating initial PV and PVC @ 06/01/24 13:15:38.06
  Jun  1 13:15:38.060: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-5595" @ 06/01/24 13:15:38.076
  STEP: Listing PVCs in namespace "pv-5595" @ 06/01/24 13:15:38.078
  STEP: Reading "pvc-7h6cl" Status @ 06/01/24 13:15:38.081
  STEP: Reading "pv-5595-gwj7b" Status @ 06/01/24 13:15:38.087
  STEP: Patching "pvc-7h6cl" Status @ 06/01/24 13:15:38.091
  STEP: Patching "pv-5595-gwj7b" Status @ 06/01/24 13:15:38.103
  STEP: Updating "pvc-7h6cl" Status @ 06/01/24 13:15:38.108
  STEP: Updating "pv-5595-gwj7b" Status @ 06/01/24 13:15:38.116
  Jun  1 13:15:38.123: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Jun  1 13:15:38.123: INFO: Deleting PersistentVolumeClaim "pvc-7h6cl"
  Jun  1 13:15:38.129: INFO: Deleting PersistentVolume "pv-5595-gwj7b"
  Jun  1 13:15:38.135: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-5595" for this suite. @ 06/01/24 13:15:38.139
â€¢ [0.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 06/01/24 13:15:38.147
  Jun  1 13:15:38.147: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename downward-api @ 06/01/24 13:15:38.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:15:38.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:15:38.166
  STEP: Creating the pod @ 06/01/24 13:15:38.17
  E0601 13:15:38.545125      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:15:39.545283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:15:40.546124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:15:40.716: INFO: Successfully updated pod "annotationupdate93ebd6cd-32d5-458e-b86e-a868514f493d"
  E0601 13:15:41.546394      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:15:42.546495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:15:43.546621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:15:44.546708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:15:44.740: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-160" for this suite. @ 06/01/24 13:15:44.743
â€¢ [6.601 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 06/01/24 13:15:44.749
  Jun  1 13:15:44.749: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename dns @ 06/01/24 13:15:44.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:15:44.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:15:44.769
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-8038.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-8038.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 06/01/24 13:15:44.772
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-8038.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-8038.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 06/01/24 13:15:44.772
  STEP: creating a pod to probe /etc/hosts @ 06/01/24 13:15:44.772
  STEP: submitting the pod to kubernetes @ 06/01/24 13:15:44.772
  E0601 13:15:45.546802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:15:46.547389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/01/24 13:15:46.793
  STEP: looking for the results for each expected name from probers @ 06/01/24 13:15:46.795
  Jun  1 13:15:46.811: INFO: DNS probes using dns-8038/dns-test-5e92b904-14b4-42d4-8493-5e85960b9b67 succeeded

  STEP: deleting the pod @ 06/01/24 13:15:46.811
  Jun  1 13:15:46.827: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8038" for this suite. @ 06/01/24 13:15:46.83
â€¢ [2.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 06/01/24 13:15:46.837
  Jun  1 13:15:46.837: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename container-probe @ 06/01/24 13:15:46.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:15:46.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:15:46.854
  STEP: Creating pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558 @ 06/01/24 13:15:46.857
  E0601 13:15:47.547872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:15:48.547966      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/01/24 13:15:48.875
  Jun  1 13:15:48.879: INFO: Initial restart count of pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 is 0
  Jun  1 13:15:48.881: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:15:49.548855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:15:50.549085      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:15:50.887: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:15:51.549935      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:15:52.550054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:15:52.891: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:15:53.550723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:15:54.550803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:15:54.896: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:15:55.551818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:15:56.552372      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:15:56.901: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:15:57.552474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:15:58.553344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:15:58.908: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:15:59.553652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:16:00.553762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:16:00.913: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:16:01.554526      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:16:02.554868      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:16:02.917: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:16:03.555445      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:16:04.555742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:16:04.921: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:16:05.555870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:16:06.556650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:16:06.927: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:16:07.556696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:16:08.556773      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:16:08.931: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:16:09.557143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:16:10.557242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:16:10.936: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:16:11.558160      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:16:12.558262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:16:12.942: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:16:13.558362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:16:14.558575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:16:14.945: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:16:15.558668      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:16:16.559150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:16:16.950: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:16:17.559283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:16:18.559386      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:16:18.954: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:16:19.559477      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:16:20.559551      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:16:20.959: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:16:21.559857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:16:22.559945      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:16:22.963: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:16:23.560493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:16:24.560887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:16:24.967: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:16:25.561159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:16:26.561543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:16:26.973: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:16:27.561623      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:16:28.561719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:16:28.978: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:16:29.561835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:16:30.561977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:16:30.981: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:16:31.562575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:16:32.563448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:16:32.988: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:16:33.564180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:16:34.564942      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:16:34.993: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:16:35.565929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:16:36.566403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:16:36.997: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:16:37.567343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:16:38.567400      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:16:39.001: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:16:39.567634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:16:40.567868      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:16:41.007: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:16:41.568417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:16:42.568532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:16:43.012: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:16:43.569620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:16:44.570215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:16:45.017: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:16:45.570922      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:16:46.571356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:16:47.022: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:16:47.572059      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:16:48.572159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:16:49.027: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:16:49.572862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:16:50.573080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:16:51.031: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:16:51.573162      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:16:52.573263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:16:53.035: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:16:53.573763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:16:54.573863      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:16:55.041: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:16:55.573912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:16:56.574367      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:16:57.047: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:16:57.574466      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:16:58.574576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:16:59.050: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:16:59.575047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:17:00.575251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:17:01.055: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:17:01.575626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:17:02.575942      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:17:03.059: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:17:03.576382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:17:04.576606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:17:05.063: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:17:05.577536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:17:06.578197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:17:07.068: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:17:07.578645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:17:08.578744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:17:09.072: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:17:09.578831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:17:10.578932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:17:11.076: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:17:11.579563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:17:12.579915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:17:13.081: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:17:13.580135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:17:14.580327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:17:15.087: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:17:15.580326      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:17:16.580603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:17:17.093: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:17:17.581623      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:17:18.582205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:17:19.096: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:17:19.582299      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:17:20.582620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:17:21.100: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:17:21.582698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:17:22.583415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:17:23.104: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:17:23.584218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:17:24.584932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:17:25.108: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:17:25.585665      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:17:26.586649      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:17:27.114: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:17:27.586749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:17:28.586854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:17:29.119: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:17:29.586954      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:17:30.587269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:17:31.124: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:17:31.587328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:17:32.588214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:17:33.129: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:17:33.588980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:17:34.589142      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:17:35.133: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:17:35.589561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:17:36.590025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:17:37.138: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:17:37.590900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:17:38.591989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:17:39.143: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:17:39.592447      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:17:40.592663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:17:41.147: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:17:41.593117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:17:42.593471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:17:43.153: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:17:43.594194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:17:44.595166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:17:45.158: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:17:45.596214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:17:46.596619      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:17:47.163: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:17:47.597532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:17:48.598194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:17:49.169: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:17:49.598305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:17:50.598517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:17:51.175: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:17:51.598566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:17:52.598764      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:17:53.180: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:17:53.599793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:17:54.599923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:17:55.185: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:17:55.600870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:17:56.601382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:17:57.189: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:17:57.602197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:17:58.602297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:17:59.194: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:17:59.602691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:18:00.602905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:18:01.198: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:18:01.603615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:18:02.604514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:18:03.203: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:18:03.605114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:18:04.606191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:18:05.209: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:18:05.606679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:18:06.607008      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:18:07.213: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:18:07.607953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:18:08.608068      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:18:09.219: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:18:09.608527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:18:10.608734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:18:11.224: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:18:11.609311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:18:12.610193      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:18:13.229: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:18:13.611211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:18:14.612300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:18:15.234: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:18:15.612383      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:18:16.612707      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:18:17.238: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:18:17.612859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:18:18.613088      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:18:19.242: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:18:19.613660      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:18:20.613766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:18:21.247: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:18:21.614669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:18:22.614832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:18:23.250: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:18:23.615208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:18:24.615277      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:18:25.255: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:18:25.616331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:18:26.616716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:18:27.259: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:18:27.617471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:18:28.617575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:18:29.263: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:18:29.618198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:18:30.618455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:18:31.269: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:18:31.618781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:18:32.619045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:18:33.274: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:18:33.619627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:18:34.619762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:18:35.279: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:18:35.620246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:18:36.620547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:18:37.283: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:18:37.621464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:18:38.622238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:18:39.289: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:18:39.623204      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:18:40.623298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:18:41.295: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:18:41.623386      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:18:42.624379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:18:43.300: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:18:43.624474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:18:44.625498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:18:45.304: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:18:45.626186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:18:46.626602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:18:47.308: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:18:47.626724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:18:48.626887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:18:49.312: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:18:49.626990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:18:50.627074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:18:51.316: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:18:51.627164      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:18:52.628110      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:18:53.321: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:18:53.629028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:18:54.629159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:18:55.325: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:18:55.630205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:18:56.630612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:18:57.330: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:18:57.631121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:18:58.631259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:18:59.334: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:18:59.631750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:19:00.631862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:19:01.339: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:19:01.632231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:19:02.632422      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:19:03.344: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:19:03.632535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:19:04.632699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:19:05.348: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:19:05.632964      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:19:06.633460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:19:07.354: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:19:07.633537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:19:08.633632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:19:09.358: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:19:09.634207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:19:10.634300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:19:11.363: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:19:11.634644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:19:12.635282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:19:13.369: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:19:13.635536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:19:14.635750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:19:15.373: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:19:15.635903      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:19:16.636672      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:19:17.379: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:19:17.637115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:19:18.637224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:19:19.384: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:19:19.638037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:19:20.638198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:19:21.388: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:19:21.638310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:19:22.638855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:19:23.393: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:19:23.638949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:19:24.639152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:19:25.398: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:19:25.640032      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:19:26.640574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:19:27.404: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:19:27.640684      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:19:28.640870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:19:29.409: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:19:29.642035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:19:30.642215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:19:31.414: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:19:31.649663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:19:32.650491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:19:33.420: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:19:33.651112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:19:34.651282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:19:35.424: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:19:35.652176      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:19:36.652638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:19:37.429: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:19:37.652754      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:19:38.652856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:19:39.433: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:19:39.653594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:19:40.653645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:19:41.438: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:19:41.654555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:19:42.654663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:19:43.444: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:19:43.655084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:19:44.655956      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:19:45.449: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:19:45.656069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:19:46.656522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:19:47.453: INFO: Get pod test-grpc-43b04011-495d-49a8-951b-2d4ad5acad31 in namespace container-probe-6558
  E0601 13:19:47.657086      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:19:48.657138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 06/01/24 13:19:49.454
  Jun  1 13:19:49.472: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6558" for this suite. @ 06/01/24 13:19:49.477
â€¢ [242.646 seconds]
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 06/01/24 13:19:49.483
  Jun  1 13:19:49.483: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename svcaccounts @ 06/01/24 13:19:49.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:19:49.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:19:49.501
  Jun  1 13:19:49.517: INFO: created pod
  E0601 13:19:49.658104      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:19:50.658332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:19:51.663364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:19:52.663423      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 13:19:53.534
  E0601 13:19:53.663540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:19:54.663727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:19:55.663841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:19:56.664327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:19:57.664433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:19:58.665299      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:19:59.666194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:00.666376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:01.666821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:02.667405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:03.667605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:04.667807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:05.668090      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:06.668505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:07.668613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:08.668721      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:09.668946      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:10.669132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:11.669657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:12.669658      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:13.670201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:14.670397      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:15.670592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:16.671022      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:17.671213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:18.671401      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:19.671509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:20.671700      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:21.675171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:22.675254      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:20:23.534: INFO: polling logs
  Jun  1 13:20:23.552: INFO: Pod logs: 
  I0601 13:19:50.090141       1 log.go:245] OK: Got token
  I0601 13:19:50.090178       1 log.go:245] validating with in-cluster discovery
  I0601 13:19:50.090390       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I0601 13:19:50.090407       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-2747:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0000130e0), NotBefore:(*jwt.NumericDate)(0xc0000131c8), IssuedAt:(*jwt.NumericDate)(0xc0000130f0), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-2747", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"6b7520a5-2100-4408-b73f-79407ba247af"}}}
  I0601 13:19:50.096486       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0601 13:19:50.099415       1 log.go:245] OK: Validated signature on JWT
  I0601 13:19:50.099538       1 log.go:245] OK: Got valid claims from token!
  I0601 13:19:50.099609       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-2747:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000126770), NotBefore:(*jwt.NumericDate)(0xc000126798), IssuedAt:(*jwt.NumericDate)(0xc000126778), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-2747", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"6b7520a5-2100-4408-b73f-79407ba247af"}}}

  Jun  1 13:20:23.552: INFO: completed pod
  Jun  1 13:20:23.557: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2747" for this suite. @ 06/01/24 13:20:23.56
â€¢ [34.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 06/01/24 13:20:23.567
  Jun  1 13:20:23.567: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename projected @ 06/01/24 13:20:23.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:20:23.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:20:23.583
  STEP: Creating configMap with name projected-configmap-test-volume-e58586bc-8ad2-4e6c-ae8e-7a9c9b2c6716 @ 06/01/24 13:20:23.585
  STEP: Creating a pod to test consume configMaps @ 06/01/24 13:20:23.591
  E0601 13:20:23.675942      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:24.676154      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:25.677061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:26.678054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 13:20:27.616
  Jun  1 13:20:27.619: INFO: Trying to get logs from node ip-172-31-74-111 pod pod-projected-configmaps-7a713efe-6b9d-4b50-8425-edde771f0dbd container agnhost-container: <nil>
  STEP: delete the pod @ 06/01/24 13:20:27.625
  Jun  1 13:20:27.644: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1357" for this suite. @ 06/01/24 13:20:27.649
â€¢ [4.089 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 06/01/24 13:20:27.656
  Jun  1 13:20:27.656: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename emptydir @ 06/01/24 13:20:27.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:20:27.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:20:27.675
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 06/01/24 13:20:27.678
  E0601 13:20:27.678691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:28.678858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:29.678974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:30.679092      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:31.679983      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 13:20:31.7
  Jun  1 13:20:31.704: INFO: Trying to get logs from node ip-172-31-74-111 pod pod-20af9dbc-58b1-45cd-83bc-f4eef9712b2a container test-container: <nil>
  STEP: delete the pod @ 06/01/24 13:20:31.709
  Jun  1 13:20:31.728: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1124" for this suite. @ 06/01/24 13:20:31.732
â€¢ [4.082 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 06/01/24 13:20:31.739
  Jun  1 13:20:31.739: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename webhook @ 06/01/24 13:20:31.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:20:31.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:20:31.758
  STEP: Setting up server cert @ 06/01/24 13:20:31.783
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/01/24 13:20:31.996
  STEP: Deploying the webhook pod @ 06/01/24 13:20:32.003
  STEP: Wait for the deployment to be ready @ 06/01/24 13:20:32.016
  Jun  1 13:20:32.023: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0601 13:20:32.680804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:33.680934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/01/24 13:20:34.033
  STEP: Verifying the service has paired with the endpoint @ 06/01/24 13:20:34.042
  E0601 13:20:34.681158      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:20:35.042: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 06/01/24 13:20:35.113
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/01/24 13:20:35.137
  STEP: Deleting the collection of validation webhooks @ 06/01/24 13:20:35.16
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/01/24 13:20:35.205
  Jun  1 13:20:35.252: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5120" for this suite. @ 06/01/24 13:20:35.256
  STEP: Destroying namespace "webhook-markers-7023" for this suite. @ 06/01/24 13:20:35.264
â€¢ [3.532 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1053
  STEP: Creating a kubernetes client @ 06/01/24 13:20:35.271
  Jun  1 13:20:35.271: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename kubectl @ 06/01/24 13:20:35.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:20:35.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:20:35.288
  STEP: create deployment with httpd image @ 06/01/24 13:20:35.291
  Jun  1 13:20:35.291: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-860 create -f -'
  Jun  1 13:20:35.355: INFO: stderr: ""
  Jun  1 13:20:35.355: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 06/01/24 13:20:35.355
  Jun  1 13:20:35.356: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-860 diff -f -'
  E0601 13:20:35.682042      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:36.682147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:37.682256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:38.682634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:20:39.672: INFO: rc: 1
  Jun  1 13:20:39.672: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-860 delete -f -'
  E0601 13:20:39.682933      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:20:39.721: INFO: stderr: ""
  Jun  1 13:20:39.721: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Jun  1 13:20:39.721: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-860" for this suite. @ 06/01/24 13:20:39.724
â€¢ [4.460 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 06/01/24 13:20:39.732
  Jun  1 13:20:39.732: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename proxy @ 06/01/24 13:20:39.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:20:39.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:20:39.753
  STEP: starting an echo server on multiple ports @ 06/01/24 13:20:39.764
  STEP: creating replication controller proxy-service-clk2b in namespace proxy-5 @ 06/01/24 13:20:39.764
  I0601 13:20:39.772476      21 runners.go:197] Created replication controller with name: proxy-service-clk2b, namespace: proxy-5, replica count: 1
  E0601 13:20:40.683027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0601 13:20:40.823461      21 runners.go:197] proxy-service-clk2b Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0601 13:20:41.683536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0601 13:20:41.823865      21 runners.go:197] proxy-service-clk2b Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun  1 13:20:41.827: INFO: setup took 2.071718406s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 06/01/24 13:20:41.827
  Jun  1 13:20:41.838: INFO: (0) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn/proxy/rewriteme">test</a> (200; 10.124929ms)
  Jun  1 13:20:41.838: INFO: (0) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:1080/proxy/rewriteme">test</a> (200; 10.285819ms)
  Jun  1 13:20:41.838: INFO: (0) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:462/proxy/: tls qux (200; 10.803555ms)
  Jun  1 13:20:41.838: INFO: (0) /api/v1/namespaces/proxy-5/services/https:proxy-service-clk2b:tlsportname2/proxy/: tls qux (200; 10.718935ms)
  Jun  1 13:20:41.839: INFO: (0) /api/v1/namespaces/proxy-5/services/https:proxy-service-clk2b:tlsportname1/proxy/: tls baz (200; 11.178478ms)
  Jun  1 13:20:41.839: INFO: (0) /api/v1/namespaces/proxy-5/services/http:proxy-service-clk2b:portname2/proxy/: bar (200; 11.450618ms)
  Jun  1 13:20:41.839: INFO: (0) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:460/proxy/: tls baz (200; 11.400765ms)
  Jun  1 13:20:41.839: INFO: (0) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:162/proxy/: bar (200; 11.281885ms)
  Jun  1 13:20:41.840: INFO: (0) /api/v1/namespaces/proxy-5/services/proxy-service-clk2b:portname1/proxy/: foo (200; 11.926485ms)
  Jun  1 13:20:41.840: INFO: (0) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:160/proxy/: foo (200; 11.908355ms)
  Jun  1 13:20:41.840: INFO: (0) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:162/proxy/: bar (200; 12.490336ms)
  Jun  1 13:20:41.840: INFO: (0) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:1080/proxy/rewriteme">tes... (200; 12.202766ms)
  Jun  1 13:20:41.840: INFO: (0) /api/v1/namespaces/proxy-5/services/proxy-service-clk2b:portname2/proxy/: bar (200; 12.442556ms)
  Jun  1 13:20:41.840: INFO: (0) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:160/proxy/: foo (200; 12.209952ms)
  Jun  1 13:20:41.840: INFO: (0) /api/v1/namespaces/proxy-5/services/http:proxy-service-clk2b:portname1/proxy/: foo (200; 12.488381ms)
  Jun  1 13:20:41.841: INFO: (0) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:443/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:443/proxy/tlsrewriteme">... (200; 12.932529ms)
  Jun  1 13:20:41.844: INFO: (1) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:1080/proxy/rewriteme">test</a> (200; 3.469779ms)
  Jun  1 13:20:41.845: INFO: (1) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:1080/proxy/rewriteme">tes... (200; 4.183803ms)
  Jun  1 13:20:41.846: INFO: (1) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:160/proxy/: foo (200; 5.237976ms)
  Jun  1 13:20:41.846: INFO: (1) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:462/proxy/: tls qux (200; 5.327562ms)
  Jun  1 13:20:41.846: INFO: (1) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:160/proxy/: foo (200; 5.466175ms)
  Jun  1 13:20:41.847: INFO: (1) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:162/proxy/: bar (200; 5.727873ms)
  Jun  1 13:20:41.847: INFO: (1) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn/proxy/rewriteme">test</a> (200; 5.453626ms)
  Jun  1 13:20:41.847: INFO: (1) /api/v1/namespaces/proxy-5/services/http:proxy-service-clk2b:portname2/proxy/: bar (200; 6.154023ms)
  Jun  1 13:20:41.848: INFO: (1) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:460/proxy/: tls baz (200; 6.604671ms)
  Jun  1 13:20:41.848: INFO: (1) /api/v1/namespaces/proxy-5/services/https:proxy-service-clk2b:tlsportname2/proxy/: tls qux (200; 7.078133ms)
  Jun  1 13:20:41.848: INFO: (1) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:443/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:443/proxy/tlsrewriteme">... (200; 7.38877ms)
  Jun  1 13:20:41.849: INFO: (1) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:162/proxy/: bar (200; 7.379842ms)
  Jun  1 13:20:41.849: INFO: (1) /api/v1/namespaces/proxy-5/services/https:proxy-service-clk2b:tlsportname1/proxy/: tls baz (200; 8.276247ms)
  Jun  1 13:20:41.850: INFO: (1) /api/v1/namespaces/proxy-5/services/proxy-service-clk2b:portname2/proxy/: bar (200; 9.073753ms)
  Jun  1 13:20:41.850: INFO: (1) /api/v1/namespaces/proxy-5/services/proxy-service-clk2b:portname1/proxy/: foo (200; 9.341378ms)
  Jun  1 13:20:41.851: INFO: (1) /api/v1/namespaces/proxy-5/services/http:proxy-service-clk2b:portname1/proxy/: foo (200; 9.524853ms)
  Jun  1 13:20:41.857: INFO: (2) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:160/proxy/: foo (200; 6.496212ms)
  Jun  1 13:20:41.858: INFO: (2) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn/proxy/rewriteme">test</a> (200; 6.820337ms)
  Jun  1 13:20:41.858: INFO: (2) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:1080/proxy/rewriteme">test</a> (200; 7.038161ms)
  Jun  1 13:20:41.858: INFO: (2) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:162/proxy/: bar (200; 7.323943ms)
  Jun  1 13:20:41.859: INFO: (2) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:443/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:443/proxy/tlsrewriteme">... (200; 8.093915ms)
  Jun  1 13:20:41.860: INFO: (2) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:1080/proxy/rewriteme">tes... (200; 9.108472ms)
  Jun  1 13:20:41.860: INFO: (2) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:162/proxy/: bar (200; 9.136504ms)
  Jun  1 13:20:41.860: INFO: (2) /api/v1/namespaces/proxy-5/services/proxy-service-clk2b:portname1/proxy/: foo (200; 9.392489ms)
  Jun  1 13:20:41.861: INFO: (2) /api/v1/namespaces/proxy-5/services/http:proxy-service-clk2b:portname1/proxy/: foo (200; 9.535435ms)
  Jun  1 13:20:41.861: INFO: (2) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:460/proxy/: tls baz (200; 9.76815ms)
  Jun  1 13:20:41.861: INFO: (2) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:160/proxy/: foo (200; 10.108508ms)
  Jun  1 13:20:41.861: INFO: (2) /api/v1/namespaces/proxy-5/services/https:proxy-service-clk2b:tlsportname1/proxy/: tls baz (200; 9.978364ms)
  Jun  1 13:20:41.861: INFO: (2) /api/v1/namespaces/proxy-5/services/proxy-service-clk2b:portname2/proxy/: bar (200; 10.37328ms)
  Jun  1 13:20:41.861: INFO: (2) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:462/proxy/: tls qux (200; 10.068295ms)
  Jun  1 13:20:41.861: INFO: (2) /api/v1/namespaces/proxy-5/services/https:proxy-service-clk2b:tlsportname2/proxy/: tls qux (200; 10.403302ms)
  Jun  1 13:20:41.861: INFO: (2) /api/v1/namespaces/proxy-5/services/http:proxy-service-clk2b:portname2/proxy/: bar (200; 10.575971ms)
  Jun  1 13:20:41.866: INFO: (3) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:160/proxy/: foo (200; 3.821502ms)
  Jun  1 13:20:41.866: INFO: (3) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:162/proxy/: bar (200; 4.612827ms)
  Jun  1 13:20:41.867: INFO: (3) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:462/proxy/: tls qux (200; 4.779676ms)
  Jun  1 13:20:41.867: INFO: (3) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:160/proxy/: foo (200; 4.948543ms)
  Jun  1 13:20:41.867: INFO: (3) /api/v1/namespaces/proxy-5/services/https:proxy-service-clk2b:tlsportname1/proxy/: tls baz (200; 5.600287ms)
  Jun  1 13:20:41.868: INFO: (3) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:1080/proxy/rewriteme">tes... (200; 5.933915ms)
  Jun  1 13:20:41.868: INFO: (3) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:443/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:443/proxy/tlsrewriteme">... (200; 6.38723ms)
  Jun  1 13:20:41.869: INFO: (3) /api/v1/namespaces/proxy-5/services/http:proxy-service-clk2b:portname2/proxy/: bar (200; 6.976056ms)
  Jun  1 13:20:41.869: INFO: (3) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:1080/proxy/rewriteme">test</a> (200; 6.464835ms)
  Jun  1 13:20:41.869: INFO: (3) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:162/proxy/: bar (200; 6.539051ms)
  Jun  1 13:20:41.869: INFO: (3) /api/v1/namespaces/proxy-5/services/proxy-service-clk2b:portname2/proxy/: bar (200; 7.54589ms)
  Jun  1 13:20:41.869: INFO: (3) /api/v1/namespaces/proxy-5/services/proxy-service-clk2b:portname1/proxy/: foo (200; 7.160658ms)
  Jun  1 13:20:41.869: INFO: (3) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn/proxy/rewriteme">test</a> (200; 6.88332ms)
  Jun  1 13:20:41.869: INFO: (3) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:460/proxy/: tls baz (200; 7.212964ms)
  Jun  1 13:20:41.870: INFO: (3) /api/v1/namespaces/proxy-5/services/http:proxy-service-clk2b:portname1/proxy/: foo (200; 7.813788ms)
  Jun  1 13:20:41.870: INFO: (3) /api/v1/namespaces/proxy-5/services/https:proxy-service-clk2b:tlsportname2/proxy/: tls qux (200; 8.008354ms)
  Jun  1 13:20:41.873: INFO: (4) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:460/proxy/: tls baz (200; 3.102221ms)
  Jun  1 13:20:41.874: INFO: (4) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:162/proxy/: bar (200; 3.562401ms)
  Jun  1 13:20:41.875: INFO: (4) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn/proxy/rewriteme">test</a> (200; 4.15693ms)
  Jun  1 13:20:41.875: INFO: (4) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:462/proxy/: tls qux (200; 4.124923ms)
  Jun  1 13:20:41.875: INFO: (4) /api/v1/namespaces/proxy-5/services/proxy-service-clk2b:portname1/proxy/: foo (200; 5.364479ms)
  Jun  1 13:20:41.877: INFO: (4) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:160/proxy/: foo (200; 6.26638ms)
  Jun  1 13:20:41.877: INFO: (4) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:443/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:443/proxy/tlsrewriteme">... (200; 6.486821ms)
  Jun  1 13:20:41.878: INFO: (4) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:160/proxy/: foo (200; 8.037824ms)
  Jun  1 13:20:41.878: INFO: (4) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:1080/proxy/rewriteme">test</a> (200; 8.084322ms)
  Jun  1 13:20:41.878: INFO: (4) /api/v1/namespaces/proxy-5/services/https:proxy-service-clk2b:tlsportname1/proxy/: tls baz (200; 8.238318ms)
  Jun  1 13:20:41.879: INFO: (4) /api/v1/namespaces/proxy-5/services/https:proxy-service-clk2b:tlsportname2/proxy/: tls qux (200; 8.197804ms)
  Jun  1 13:20:41.879: INFO: (4) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:162/proxy/: bar (200; 8.192578ms)
  Jun  1 13:20:41.879: INFO: (4) /api/v1/namespaces/proxy-5/services/proxy-service-clk2b:portname2/proxy/: bar (200; 8.47994ms)
  Jun  1 13:20:41.879: INFO: (4) /api/v1/namespaces/proxy-5/services/http:proxy-service-clk2b:portname2/proxy/: bar (200; 8.511296ms)
  Jun  1 13:20:41.879: INFO: (4) /api/v1/namespaces/proxy-5/services/http:proxy-service-clk2b:portname1/proxy/: foo (200; 8.606286ms)
  Jun  1 13:20:41.879: INFO: (4) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:1080/proxy/rewriteme">tes... (200; 8.592976ms)
  Jun  1 13:20:41.882: INFO: (5) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn/proxy/rewriteme">test</a> (200; 3.246048ms)
  Jun  1 13:20:41.882: INFO: (5) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:160/proxy/: foo (200; 3.400454ms)
  Jun  1 13:20:41.884: INFO: (5) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:160/proxy/: foo (200; 4.761994ms)
  Jun  1 13:20:41.884: INFO: (5) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:460/proxy/: tls baz (200; 5.28588ms)
  Jun  1 13:20:41.885: INFO: (5) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:443/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:443/proxy/tlsrewriteme">... (200; 5.573225ms)
  Jun  1 13:20:41.884: INFO: (5) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:162/proxy/: bar (200; 5.329471ms)
  Jun  1 13:20:41.885: INFO: (5) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:162/proxy/: bar (200; 5.381556ms)
  Jun  1 13:20:41.885: INFO: (5) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:462/proxy/: tls qux (200; 5.323839ms)
  Jun  1 13:20:41.885: INFO: (5) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:1080/proxy/rewriteme">tes... (200; 5.597958ms)
  Jun  1 13:20:41.885: INFO: (5) /api/v1/namespaces/proxy-5/services/https:proxy-service-clk2b:tlsportname1/proxy/: tls baz (200; 5.517306ms)
  Jun  1 13:20:41.885: INFO: (5) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:1080/proxy/rewriteme">test</a> (200; 5.669941ms)
  Jun  1 13:20:41.886: INFO: (5) /api/v1/namespaces/proxy-5/services/http:proxy-service-clk2b:portname1/proxy/: foo (200; 6.313305ms)
  Jun  1 13:20:41.886: INFO: (5) /api/v1/namespaces/proxy-5/services/http:proxy-service-clk2b:portname2/proxy/: bar (200; 7.03609ms)
  Jun  1 13:20:41.886: INFO: (5) /api/v1/namespaces/proxy-5/services/proxy-service-clk2b:portname2/proxy/: bar (200; 6.861169ms)
  Jun  1 13:20:41.886: INFO: (5) /api/v1/namespaces/proxy-5/services/proxy-service-clk2b:portname1/proxy/: foo (200; 7.156698ms)
  Jun  1 13:20:41.886: INFO: (5) /api/v1/namespaces/proxy-5/services/https:proxy-service-clk2b:tlsportname2/proxy/: tls qux (200; 7.245703ms)
  Jun  1 13:20:41.890: INFO: (6) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:160/proxy/: foo (200; 3.728669ms)
  Jun  1 13:20:41.890: INFO: (6) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn/proxy/rewriteme">test</a> (200; 3.528128ms)
  Jun  1 13:20:41.891: INFO: (6) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:162/proxy/: bar (200; 4.884669ms)
  Jun  1 13:20:41.892: INFO: (6) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:160/proxy/: foo (200; 4.974742ms)
  Jun  1 13:20:41.892: INFO: (6) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:1080/proxy/rewriteme">test</a> (200; 5.083945ms)
  Jun  1 13:20:41.892: INFO: (6) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:162/proxy/: bar (200; 5.208022ms)
  Jun  1 13:20:41.892: INFO: (6) /api/v1/namespaces/proxy-5/services/http:proxy-service-clk2b:portname1/proxy/: foo (200; 5.413868ms)
  Jun  1 13:20:41.893: INFO: (6) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:462/proxy/: tls qux (200; 6.465483ms)
  Jun  1 13:20:41.893: INFO: (6) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:1080/proxy/rewriteme">tes... (200; 6.500433ms)
  Jun  1 13:20:41.893: INFO: (6) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:460/proxy/: tls baz (200; 6.506998ms)
  Jun  1 13:20:41.893: INFO: (6) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:443/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:443/proxy/tlsrewriteme">... (200; 6.814523ms)
  Jun  1 13:20:41.893: INFO: (6) /api/v1/namespaces/proxy-5/services/proxy-service-clk2b:portname2/proxy/: bar (200; 6.797726ms)
  Jun  1 13:20:41.894: INFO: (6) /api/v1/namespaces/proxy-5/services/https:proxy-service-clk2b:tlsportname1/proxy/: tls baz (200; 6.772758ms)
  Jun  1 13:20:41.894: INFO: (6) /api/v1/namespaces/proxy-5/services/http:proxy-service-clk2b:portname2/proxy/: bar (200; 6.858293ms)
  Jun  1 13:20:41.894: INFO: (6) /api/v1/namespaces/proxy-5/services/proxy-service-clk2b:portname1/proxy/: foo (200; 7.535694ms)
  Jun  1 13:20:41.895: INFO: (6) /api/v1/namespaces/proxy-5/services/https:proxy-service-clk2b:tlsportname2/proxy/: tls qux (200; 7.720276ms)
  Jun  1 13:20:41.898: INFO: (7) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:1080/proxy/rewriteme">tes... (200; 3.440064ms)
  Jun  1 13:20:41.899: INFO: (7) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:443/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:443/proxy/tlsrewriteme">... (200; 3.904948ms)
  Jun  1 13:20:41.900: INFO: (7) /api/v1/namespaces/proxy-5/services/proxy-service-clk2b:portname2/proxy/: bar (200; 5.091356ms)
  Jun  1 13:20:41.900: INFO: (7) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:160/proxy/: foo (200; 5.22535ms)
  Jun  1 13:20:41.900: INFO: (7) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:162/proxy/: bar (200; 5.400254ms)
  Jun  1 13:20:41.900: INFO: (7) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn/proxy/rewriteme">test</a> (200; 5.617007ms)
  Jun  1 13:20:41.901: INFO: (7) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:1080/proxy/rewriteme">test</a> (200; 6.399573ms)
  Jun  1 13:20:41.901: INFO: (7) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:162/proxy/: bar (200; 6.491034ms)
  Jun  1 13:20:41.901: INFO: (7) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:462/proxy/: tls qux (200; 6.438686ms)
  Jun  1 13:20:41.901: INFO: (7) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:160/proxy/: foo (200; 6.511268ms)
  Jun  1 13:20:41.902: INFO: (7) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:460/proxy/: tls baz (200; 6.760826ms)
  Jun  1 13:20:41.902: INFO: (7) /api/v1/namespaces/proxy-5/services/https:proxy-service-clk2b:tlsportname2/proxy/: tls qux (200; 6.738209ms)
  Jun  1 13:20:41.902: INFO: (7) /api/v1/namespaces/proxy-5/services/https:proxy-service-clk2b:tlsportname1/proxy/: tls baz (200; 7.118474ms)
  Jun  1 13:20:41.902: INFO: (7) /api/v1/namespaces/proxy-5/services/http:proxy-service-clk2b:portname1/proxy/: foo (200; 7.690005ms)
  Jun  1 13:20:41.902: INFO: (7) /api/v1/namespaces/proxy-5/services/http:proxy-service-clk2b:portname2/proxy/: bar (200; 7.709402ms)
  Jun  1 13:20:41.903: INFO: (7) /api/v1/namespaces/proxy-5/services/proxy-service-clk2b:portname1/proxy/: foo (200; 7.939437ms)
  Jun  1 13:20:41.906: INFO: (8) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:162/proxy/: bar (200; 3.057106ms)
  Jun  1 13:20:41.907: INFO: (8) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn/proxy/rewriteme">test</a> (200; 3.997824ms)
  Jun  1 13:20:41.908: INFO: (8) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:462/proxy/: tls qux (200; 4.792926ms)
  Jun  1 13:20:41.909: INFO: (8) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:443/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:443/proxy/tlsrewriteme">... (200; 5.827463ms)
  Jun  1 13:20:41.909: INFO: (8) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:460/proxy/: tls baz (200; 6.277959ms)
  Jun  1 13:20:41.909: INFO: (8) /api/v1/namespaces/proxy-5/services/http:proxy-service-clk2b:portname1/proxy/: foo (200; 6.50605ms)
  Jun  1 13:20:41.909: INFO: (8) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:1080/proxy/rewriteme">test</a> (200; 6.381909ms)
  Jun  1 13:20:41.909: INFO: (8) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:160/proxy/: foo (200; 6.44048ms)
  Jun  1 13:20:41.909: INFO: (8) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:160/proxy/: foo (200; 6.492693ms)
  Jun  1 13:20:41.909: INFO: (8) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:162/proxy/: bar (200; 6.566553ms)
  Jun  1 13:20:41.909: INFO: (8) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:1080/proxy/rewriteme">tes... (200; 6.52375ms)
  Jun  1 13:20:41.910: INFO: (8) /api/v1/namespaces/proxy-5/services/proxy-service-clk2b:portname1/proxy/: foo (200; 6.974009ms)
  Jun  1 13:20:41.910: INFO: (8) /api/v1/namespaces/proxy-5/services/https:proxy-service-clk2b:tlsportname1/proxy/: tls baz (200; 7.353079ms)
  Jun  1 13:20:41.910: INFO: (8) /api/v1/namespaces/proxy-5/services/https:proxy-service-clk2b:tlsportname2/proxy/: tls qux (200; 7.466257ms)
  Jun  1 13:20:41.911: INFO: (8) /api/v1/namespaces/proxy-5/services/proxy-service-clk2b:portname2/proxy/: bar (200; 7.660106ms)
  Jun  1 13:20:41.911: INFO: (8) /api/v1/namespaces/proxy-5/services/http:proxy-service-clk2b:portname2/proxy/: bar (200; 7.911119ms)
  Jun  1 13:20:41.915: INFO: (9) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn/proxy/rewriteme">test</a> (200; 3.843127ms)
  Jun  1 13:20:41.915: INFO: (9) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:1080/proxy/rewriteme">tes... (200; 4.217841ms)
  Jun  1 13:20:41.915: INFO: (9) /api/v1/namespaces/proxy-5/services/proxy-service-clk2b:portname1/proxy/: foo (200; 4.492906ms)
  Jun  1 13:20:41.916: INFO: (9) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:160/proxy/: foo (200; 4.836915ms)
  Jun  1 13:20:41.916: INFO: (9) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:462/proxy/: tls qux (200; 5.112576ms)
  Jun  1 13:20:41.917: INFO: (9) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:162/proxy/: bar (200; 5.727582ms)
  Jun  1 13:20:41.917: INFO: (9) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:162/proxy/: bar (200; 5.881475ms)
  Jun  1 13:20:41.917: INFO: (9) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:460/proxy/: tls baz (200; 6.13691ms)
  Jun  1 13:20:41.917: INFO: (9) /api/v1/namespaces/proxy-5/services/https:proxy-service-clk2b:tlsportname2/proxy/: tls qux (200; 6.178332ms)
  Jun  1 13:20:41.918: INFO: (9) /api/v1/namespaces/proxy-5/services/https:proxy-service-clk2b:tlsportname1/proxy/: tls baz (200; 7.137432ms)
  Jun  1 13:20:41.919: INFO: (9) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:160/proxy/: foo (200; 7.505885ms)
  Jun  1 13:20:41.919: INFO: (9) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:443/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:443/proxy/tlsrewriteme">... (200; 7.471898ms)
  Jun  1 13:20:41.919: INFO: (9) /api/v1/namespaces/proxy-5/services/http:proxy-service-clk2b:portname1/proxy/: foo (200; 7.392168ms)
  Jun  1 13:20:41.919: INFO: (9) /api/v1/namespaces/proxy-5/services/http:proxy-service-clk2b:portname2/proxy/: bar (200; 7.41586ms)
  Jun  1 13:20:41.919: INFO: (9) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:1080/proxy/rewriteme">test</a> (200; 7.611548ms)
  Jun  1 13:20:41.920: INFO: (9) /api/v1/namespaces/proxy-5/services/proxy-service-clk2b:portname2/proxy/: bar (200; 8.785683ms)
  Jun  1 13:20:41.924: INFO: (10) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:162/proxy/: bar (200; 3.39652ms)
  Jun  1 13:20:41.924: INFO: (10) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:460/proxy/: tls baz (200; 3.322816ms)
  Jun  1 13:20:41.925: INFO: (10) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:1080/proxy/rewriteme">tes... (200; 4.289969ms)
  Jun  1 13:20:41.925: INFO: (10) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:443/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:443/proxy/tlsrewriteme">... (200; 4.361767ms)
  Jun  1 13:20:41.926: INFO: (10) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn/proxy/rewriteme">test</a> (200; 5.643145ms)
  Jun  1 13:20:41.927: INFO: (10) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:160/proxy/: foo (200; 6.416067ms)
  Jun  1 13:20:41.927: INFO: (10) /api/v1/namespaces/proxy-5/services/https:proxy-service-clk2b:tlsportname2/proxy/: tls qux (200; 6.703216ms)
  Jun  1 13:20:41.927: INFO: (10) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:160/proxy/: foo (200; 6.400401ms)
  Jun  1 13:20:41.927: INFO: (10) /api/v1/namespaces/proxy-5/services/proxy-service-clk2b:portname2/proxy/: bar (200; 6.728696ms)
  Jun  1 13:20:41.927: INFO: (10) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:462/proxy/: tls qux (200; 6.73824ms)
  Jun  1 13:20:41.927: INFO: (10) /api/v1/namespaces/proxy-5/services/http:proxy-service-clk2b:portname2/proxy/: bar (200; 6.963237ms)
  Jun  1 13:20:41.927: INFO: (10) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:1080/proxy/rewriteme">test</a> (200; 7.144908ms)
  Jun  1 13:20:41.928: INFO: (10) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:162/proxy/: bar (200; 7.294404ms)
  Jun  1 13:20:41.929: INFO: (10) /api/v1/namespaces/proxy-5/services/proxy-service-clk2b:portname1/proxy/: foo (200; 8.277235ms)
  Jun  1 13:20:41.929: INFO: (10) /api/v1/namespaces/proxy-5/services/http:proxy-service-clk2b:portname1/proxy/: foo (200; 8.403854ms)
  Jun  1 13:20:41.930: INFO: (10) /api/v1/namespaces/proxy-5/services/https:proxy-service-clk2b:tlsportname1/proxy/: tls baz (200; 9.384938ms)
  Jun  1 13:20:41.940: INFO: (11) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:160/proxy/: foo (200; 10.23367ms)
  Jun  1 13:20:41.940: INFO: (11) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:162/proxy/: bar (200; 10.147581ms)
  Jun  1 13:20:41.941: INFO: (11) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn/proxy/rewriteme">test</a> (200; 10.660141ms)
  Jun  1 13:20:41.944: INFO: (11) /api/v1/namespaces/proxy-5/services/http:proxy-service-clk2b:portname1/proxy/: foo (200; 14.147519ms)
  Jun  1 13:20:41.944: INFO: (11) /api/v1/namespaces/proxy-5/services/proxy-service-clk2b:portname1/proxy/: foo (200; 14.02614ms)
  Jun  1 13:20:41.945: INFO: (11) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:1080/proxy/rewriteme">tes... (200; 15.265807ms)
  Jun  1 13:20:41.946: INFO: (11) /api/v1/namespaces/proxy-5/services/https:proxy-service-clk2b:tlsportname2/proxy/: tls qux (200; 15.54668ms)
  Jun  1 13:20:41.946: INFO: (11) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:443/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:443/proxy/tlsrewriteme">... (200; 15.497519ms)
  Jun  1 13:20:41.946: INFO: (11) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:1080/proxy/rewriteme">test</a> (200; 15.462352ms)
  Jun  1 13:20:41.947: INFO: (11) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:460/proxy/: tls baz (200; 16.596888ms)
  Jun  1 13:20:41.947: INFO: (11) /api/v1/namespaces/proxy-5/services/proxy-service-clk2b:portname2/proxy/: bar (200; 16.721941ms)
  Jun  1 13:20:41.947: INFO: (11) /api/v1/namespaces/proxy-5/services/https:proxy-service-clk2b:tlsportname1/proxy/: tls baz (200; 16.810656ms)
  Jun  1 13:20:41.947: INFO: (11) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:162/proxy/: bar (200; 16.932305ms)
  Jun  1 13:20:41.947: INFO: (11) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:160/proxy/: foo (200; 16.940674ms)
  Jun  1 13:20:41.947: INFO: (11) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:462/proxy/: tls qux (200; 17.015815ms)
  Jun  1 13:20:41.948: INFO: (11) /api/v1/namespaces/proxy-5/services/http:proxy-service-clk2b:portname2/proxy/: bar (200; 18.400276ms)
  Jun  1 13:20:41.952: INFO: (12) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:1080/proxy/rewriteme">tes... (200; 3.741345ms)
  Jun  1 13:20:41.954: INFO: (12) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn/proxy/rewriteme">test</a> (200; 5.410382ms)
  Jun  1 13:20:41.954: INFO: (12) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:160/proxy/: foo (200; 5.572456ms)
  Jun  1 13:20:41.957: INFO: (12) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:162/proxy/: bar (200; 7.622228ms)
  Jun  1 13:20:41.957: INFO: (12) /api/v1/namespaces/proxy-5/services/https:proxy-service-clk2b:tlsportname1/proxy/: tls baz (200; 8.165137ms)
  Jun  1 13:20:41.957: INFO: (12) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:1080/proxy/rewriteme">test</a> (200; 7.680844ms)
  Jun  1 13:20:41.957: INFO: (12) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:162/proxy/: bar (200; 8.03634ms)
  Jun  1 13:20:41.957: INFO: (12) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:460/proxy/: tls baz (200; 7.99744ms)
  Jun  1 13:20:41.957: INFO: (12) /api/v1/namespaces/proxy-5/services/https:proxy-service-clk2b:tlsportname2/proxy/: tls qux (200; 7.943173ms)
  Jun  1 13:20:41.957: INFO: (12) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:160/proxy/: foo (200; 7.950713ms)
  Jun  1 13:20:41.957: INFO: (12) /api/v1/namespaces/proxy-5/services/proxy-service-clk2b:portname2/proxy/: bar (200; 8.274618ms)
  Jun  1 13:20:41.957: INFO: (12) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:443/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:443/proxy/tlsrewriteme">... (200; 7.966662ms)
  Jun  1 13:20:41.957: INFO: (12) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:462/proxy/: tls qux (200; 7.958014ms)
  Jun  1 13:20:41.960: INFO: (12) /api/v1/namespaces/proxy-5/services/http:proxy-service-clk2b:portname1/proxy/: foo (200; 11.330067ms)
  Jun  1 13:20:41.963: INFO: (12) /api/v1/namespaces/proxy-5/services/http:proxy-service-clk2b:portname2/proxy/: bar (200; 14.599947ms)
  Jun  1 13:20:41.964: INFO: (12) /api/v1/namespaces/proxy-5/services/proxy-service-clk2b:portname1/proxy/: foo (200; 14.730191ms)
  Jun  1 13:20:41.990: INFO: (13) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:160/proxy/: foo (200; 25.649401ms)
  Jun  1 13:20:41.990: INFO: (13) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn/proxy/rewriteme">test</a> (200; 25.86782ms)
  Jun  1 13:20:41.990: INFO: (13) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:1080/proxy/rewriteme">tes... (200; 25.786542ms)
  Jun  1 13:20:41.990: INFO: (13) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:162/proxy/: bar (200; 26.25956ms)
  Jun  1 13:20:41.990: INFO: (13) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:460/proxy/: tls baz (200; 26.189033ms)
  Jun  1 13:20:41.990: INFO: (13) /api/v1/namespaces/proxy-5/services/proxy-service-clk2b:portname1/proxy/: foo (200; 26.221824ms)
  Jun  1 13:20:41.994: INFO: (13) /api/v1/namespaces/proxy-5/services/http:proxy-service-clk2b:portname2/proxy/: bar (200; 30.057088ms)
  Jun  1 13:20:41.994: INFO: (13) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:462/proxy/: tls qux (200; 29.832065ms)
  Jun  1 13:20:41.994: INFO: (13) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:443/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:443/proxy/tlsrewriteme">... (200; 29.833992ms)
  Jun  1 13:20:41.994: INFO: (13) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:1080/proxy/rewriteme">test</a> (200; 29.958515ms)
  Jun  1 13:20:41.994: INFO: (13) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:160/proxy/: foo (200; 29.739745ms)
  Jun  1 13:20:41.994: INFO: (13) /api/v1/namespaces/proxy-5/services/http:proxy-service-clk2b:portname1/proxy/: foo (200; 29.836234ms)
  Jun  1 13:20:41.994: INFO: (13) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:162/proxy/: bar (200; 29.949991ms)
  Jun  1 13:20:41.994: INFO: (13) /api/v1/namespaces/proxy-5/services/https:proxy-service-clk2b:tlsportname1/proxy/: tls baz (200; 29.923036ms)
  Jun  1 13:20:41.994: INFO: (13) /api/v1/namespaces/proxy-5/services/https:proxy-service-clk2b:tlsportname2/proxy/: tls qux (200; 29.905402ms)
  Jun  1 13:20:41.994: INFO: (13) /api/v1/namespaces/proxy-5/services/proxy-service-clk2b:portname2/proxy/: bar (200; 30.161417ms)
  Jun  1 13:20:42.003: INFO: (14) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:160/proxy/: foo (200; 8.417909ms)
  Jun  1 13:20:42.003: INFO: (14) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:1080/proxy/rewriteme">test</a> (200; 8.636105ms)
  Jun  1 13:20:42.005: INFO: (14) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:160/proxy/: foo (200; 10.276728ms)
  Jun  1 13:20:42.005: INFO: (14) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:162/proxy/: bar (200; 10.442754ms)
  Jun  1 13:20:42.006: INFO: (14) /api/v1/namespaces/proxy-5/services/http:proxy-service-clk2b:portname2/proxy/: bar (200; 11.21692ms)
  Jun  1 13:20:42.006: INFO: (14) /api/v1/namespaces/proxy-5/services/proxy-service-clk2b:portname1/proxy/: foo (200; 11.241029ms)
  Jun  1 13:20:42.007: INFO: (14) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn/proxy/rewriteme">test</a> (200; 12.237502ms)
  Jun  1 13:20:42.007: INFO: (14) /api/v1/namespaces/proxy-5/services/https:proxy-service-clk2b:tlsportname2/proxy/: tls qux (200; 12.760992ms)
  Jun  1 13:20:42.007: INFO: (14) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:443/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:443/proxy/tlsrewriteme">... (200; 12.713518ms)
  Jun  1 13:20:42.007: INFO: (14) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:462/proxy/: tls qux (200; 13.06788ms)
  Jun  1 13:20:42.007: INFO: (14) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:460/proxy/: tls baz (200; 13.001302ms)
  Jun  1 13:20:42.007: INFO: (14) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:162/proxy/: bar (200; 13.317811ms)
  Jun  1 13:20:42.007: INFO: (14) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:1080/proxy/rewriteme">tes... (200; 13.00843ms)
  Jun  1 13:20:42.007: INFO: (14) /api/v1/namespaces/proxy-5/services/https:proxy-service-clk2b:tlsportname1/proxy/: tls baz (200; 12.992775ms)
  Jun  1 13:20:42.008: INFO: (14) /api/v1/namespaces/proxy-5/services/proxy-service-clk2b:portname2/proxy/: bar (200; 13.338513ms)
  Jun  1 13:20:42.008: INFO: (14) /api/v1/namespaces/proxy-5/services/http:proxy-service-clk2b:portname1/proxy/: foo (200; 13.502317ms)
  Jun  1 13:20:42.017: INFO: (15) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:443/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:443/proxy/tlsrewriteme">... (200; 9.277846ms)
  Jun  1 13:20:42.018: INFO: (15) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:1080/proxy/rewriteme">tes... (200; 9.883468ms)
  Jun  1 13:20:42.018: INFO: (15) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:162/proxy/: bar (200; 10.290741ms)
  Jun  1 13:20:42.018: INFO: (15) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:160/proxy/: foo (200; 10.028284ms)
  Jun  1 13:20:42.020: INFO: (15) /api/v1/namespaces/proxy-5/services/https:proxy-service-clk2b:tlsportname1/proxy/: tls baz (200; 11.991494ms)
  Jun  1 13:20:42.020: INFO: (15) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:162/proxy/: bar (200; 12.070483ms)
  Jun  1 13:20:42.020: INFO: (15) /api/v1/namespaces/proxy-5/services/http:proxy-service-clk2b:portname2/proxy/: bar (200; 12.241593ms)
  Jun  1 13:20:42.021: INFO: (15) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn/proxy/rewriteme">test</a> (200; 12.521863ms)
  Jun  1 13:20:42.021: INFO: (15) /api/v1/namespaces/proxy-5/services/https:proxy-service-clk2b:tlsportname2/proxy/: tls qux (200; 12.906037ms)
  Jun  1 13:20:42.021: INFO: (15) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:160/proxy/: foo (200; 12.886417ms)
  Jun  1 13:20:42.021: INFO: (15) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:462/proxy/: tls qux (200; 13.169686ms)
  Jun  1 13:20:42.021: INFO: (15) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:1080/proxy/rewriteme">test</a> (200; 12.998524ms)
  Jun  1 13:20:42.021: INFO: (15) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:460/proxy/: tls baz (200; 13.102407ms)
  Jun  1 13:20:42.022: INFO: (15) /api/v1/namespaces/proxy-5/services/http:proxy-service-clk2b:portname1/proxy/: foo (200; 13.610979ms)
  Jun  1 13:20:42.022: INFO: (15) /api/v1/namespaces/proxy-5/services/proxy-service-clk2b:portname1/proxy/: foo (200; 14.004646ms)
  Jun  1 13:20:42.022: INFO: (15) /api/v1/namespaces/proxy-5/services/proxy-service-clk2b:portname2/proxy/: bar (200; 14.350982ms)
  Jun  1 13:20:42.027: INFO: (16) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn/proxy/rewriteme">test</a> (200; 4.825046ms)
  Jun  1 13:20:42.028: INFO: (16) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:1080/proxy/rewriteme">test</a> (200; 5.438324ms)
  Jun  1 13:20:42.028: INFO: (16) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:162/proxy/: bar (200; 5.561131ms)
  Jun  1 13:20:42.029: INFO: (16) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:462/proxy/: tls qux (200; 7.029063ms)
  Jun  1 13:20:42.029: INFO: (16) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:443/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:443/proxy/tlsrewriteme">... (200; 6.836573ms)
  Jun  1 13:20:42.030: INFO: (16) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:160/proxy/: foo (200; 7.680147ms)
  Jun  1 13:20:42.030: INFO: (16) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:1080/proxy/rewriteme">tes... (200; 7.813972ms)
  Jun  1 13:20:42.031: INFO: (16) /api/v1/namespaces/proxy-5/services/http:proxy-service-clk2b:portname2/proxy/: bar (200; 8.168575ms)
  Jun  1 13:20:42.032: INFO: (16) /api/v1/namespaces/proxy-5/services/proxy-service-clk2b:portname1/proxy/: foo (200; 9.489121ms)
  Jun  1 13:20:42.032: INFO: (16) /api/v1/namespaces/proxy-5/services/https:proxy-service-clk2b:tlsportname1/proxy/: tls baz (200; 9.420034ms)
  Jun  1 13:20:42.033: INFO: (16) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:160/proxy/: foo (200; 10.301366ms)
  Jun  1 13:20:42.034: INFO: (16) /api/v1/namespaces/proxy-5/services/http:proxy-service-clk2b:portname1/proxy/: foo (200; 11.511861ms)
  Jun  1 13:20:42.035: INFO: (16) /api/v1/namespaces/proxy-5/services/proxy-service-clk2b:portname2/proxy/: bar (200; 12.31682ms)
  Jun  1 13:20:42.035: INFO: (16) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:162/proxy/: bar (200; 13.060533ms)
  Jun  1 13:20:42.037: INFO: (16) /api/v1/namespaces/proxy-5/services/https:proxy-service-clk2b:tlsportname2/proxy/: tls qux (200; 14.134468ms)
  Jun  1 13:20:42.037: INFO: (16) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:460/proxy/: tls baz (200; 14.220781ms)
  Jun  1 13:20:42.043: INFO: (17) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:1080/proxy/rewriteme">tes... (200; 6.228925ms)
  Jun  1 13:20:42.044: INFO: (17) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:460/proxy/: tls baz (200; 6.867383ms)
  Jun  1 13:20:42.045: INFO: (17) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:162/proxy/: bar (200; 7.553564ms)
  Jun  1 13:20:42.045: INFO: (17) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:160/proxy/: foo (200; 7.858109ms)
  Jun  1 13:20:42.045: INFO: (17) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:443/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:443/proxy/tlsrewriteme">... (200; 7.984301ms)
  Jun  1 13:20:42.047: INFO: (17) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:1080/proxy/rewriteme">test</a> (200; 10.51022ms)
  Jun  1 13:20:42.048: INFO: (17) /api/v1/namespaces/proxy-5/services/http:proxy-service-clk2b:portname2/proxy/: bar (200; 10.795778ms)
  Jun  1 13:20:42.048: INFO: (17) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:162/proxy/: bar (200; 10.607243ms)
  Jun  1 13:20:42.048: INFO: (17) /api/v1/namespaces/proxy-5/services/https:proxy-service-clk2b:tlsportname1/proxy/: tls baz (200; 10.694457ms)
  Jun  1 13:20:42.049: INFO: (17) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:160/proxy/: foo (200; 11.763132ms)
  Jun  1 13:20:42.049: INFO: (17) /api/v1/namespaces/proxy-5/services/proxy-service-clk2b:portname2/proxy/: bar (200; 12.178978ms)
  Jun  1 13:20:42.049: INFO: (17) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn/proxy/rewriteme">test</a> (200; 12.443877ms)
  Jun  1 13:20:42.050: INFO: (17) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:462/proxy/: tls qux (200; 12.902092ms)
  Jun  1 13:20:42.050: INFO: (17) /api/v1/namespaces/proxy-5/services/proxy-service-clk2b:portname1/proxy/: foo (200; 12.989785ms)
  Jun  1 13:20:42.050: INFO: (17) /api/v1/namespaces/proxy-5/services/https:proxy-service-clk2b:tlsportname2/proxy/: tls qux (200; 13.635412ms)
  Jun  1 13:20:42.052: INFO: (17) /api/v1/namespaces/proxy-5/services/http:proxy-service-clk2b:portname1/proxy/: foo (200; 15.443279ms)
  Jun  1 13:20:42.060: INFO: (18) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn/proxy/rewriteme">test</a> (200; 7.188043ms)
  Jun  1 13:20:42.060: INFO: (18) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:162/proxy/: bar (200; 7.38727ms)
  Jun  1 13:20:42.060: INFO: (18) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:160/proxy/: foo (200; 7.308077ms)
  Jun  1 13:20:42.061: INFO: (18) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:460/proxy/: tls baz (200; 8.700807ms)
  Jun  1 13:20:42.061: INFO: (18) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:462/proxy/: tls qux (200; 8.362463ms)
  Jun  1 13:20:42.062: INFO: (18) /api/v1/namespaces/proxy-5/services/proxy-service-clk2b:portname1/proxy/: foo (200; 9.269417ms)
  Jun  1 13:20:42.062: INFO: (18) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:1080/proxy/rewriteme">test</a> (200; 9.128663ms)
  Jun  1 13:20:42.062: INFO: (18) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:162/proxy/: bar (200; 9.629191ms)
  Jun  1 13:20:42.062: INFO: (18) /api/v1/namespaces/proxy-5/services/https:proxy-service-clk2b:tlsportname1/proxy/: tls baz (200; 9.802243ms)
  Jun  1 13:20:42.063: INFO: (18) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:1080/proxy/rewriteme">tes... (200; 10.222955ms)
  Jun  1 13:20:42.063: INFO: (18) /api/v1/namespaces/proxy-5/services/http:proxy-service-clk2b:portname2/proxy/: bar (200; 10.24589ms)
  Jun  1 13:20:42.063: INFO: (18) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:443/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:443/proxy/tlsrewriteme">... (200; 10.689695ms)
  Jun  1 13:20:42.064: INFO: (18) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:160/proxy/: foo (200; 10.801587ms)
  Jun  1 13:20:42.064: INFO: (18) /api/v1/namespaces/proxy-5/services/proxy-service-clk2b:portname2/proxy/: bar (200; 11.809045ms)
  Jun  1 13:20:42.065: INFO: (18) /api/v1/namespaces/proxy-5/services/https:proxy-service-clk2b:tlsportname2/proxy/: tls qux (200; 12.012223ms)
  Jun  1 13:20:42.065: INFO: (18) /api/v1/namespaces/proxy-5/services/http:proxy-service-clk2b:portname1/proxy/: foo (200; 12.496378ms)
  Jun  1 13:20:42.070: INFO: (19) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:1080/proxy/rewriteme">test</a> (200; 4.584784ms)
  Jun  1 13:20:42.070: INFO: (19) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:1080/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:1080/proxy/rewriteme">tes... (200; 4.559301ms)
  Jun  1 13:20:42.075: INFO: (19) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn/proxy/rewriteme">test</a> (200; 9.607653ms)
  Jun  1 13:20:42.075: INFO: (19) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:460/proxy/: tls baz (200; 9.759735ms)
  Jun  1 13:20:42.075: INFO: (19) /api/v1/namespaces/proxy-5/services/http:proxy-service-clk2b:portname2/proxy/: bar (200; 9.540953ms)
  Jun  1 13:20:42.075: INFO: (19) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:462/proxy/: tls qux (200; 9.673139ms)
  Jun  1 13:20:42.075: INFO: (19) /api/v1/namespaces/proxy-5/services/https:proxy-service-clk2b:tlsportname2/proxy/: tls qux (200; 9.748955ms)
  Jun  1 13:20:42.075: INFO: (19) /api/v1/namespaces/proxy-5/services/proxy-service-clk2b:portname2/proxy/: bar (200; 9.676364ms)
  Jun  1 13:20:42.075: INFO: (19) /api/v1/namespaces/proxy-5/services/proxy-service-clk2b:portname1/proxy/: foo (200; 9.937763ms)
  Jun  1 13:20:42.075: INFO: (19) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:160/proxy/: foo (200; 9.92044ms)
  Jun  1 13:20:42.075: INFO: (19) /api/v1/namespaces/proxy-5/pods/proxy-service-clk2b-6r9zn:162/proxy/: bar (200; 10.079397ms)
  Jun  1 13:20:42.075: INFO: (19) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:160/proxy/: foo (200; 9.965338ms)
  Jun  1 13:20:42.075: INFO: (19) /api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:443/proxy/: <a href="/api/v1/namespaces/proxy-5/pods/https:proxy-service-clk2b-6r9zn:443/proxy/tlsrewriteme">... (200; 9.937495ms)
  Jun  1 13:20:42.075: INFO: (19) /api/v1/namespaces/proxy-5/pods/http:proxy-service-clk2b-6r9zn:162/proxy/: bar (200; 9.983761ms)
  Jun  1 13:20:42.076: INFO: (19) /api/v1/namespaces/proxy-5/services/https:proxy-service-clk2b:tlsportname1/proxy/: tls baz (200; 10.305736ms)
  Jun  1 13:20:42.077: INFO: (19) /api/v1/namespaces/proxy-5/services/http:proxy-service-clk2b:portname1/proxy/: foo (200; 11.185196ms)
  STEP: deleting ReplicationController proxy-service-clk2b in namespace proxy-5, will wait for the garbage collector to delete the pods @ 06/01/24 13:20:42.077
  Jun  1 13:20:42.144: INFO: Deleting ReplicationController proxy-service-clk2b took: 12.613128ms
  Jun  1 13:20:42.244: INFO: Terminating ReplicationController proxy-service-clk2b pods took: 100.375342ms
  E0601 13:20:42.684500      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:43.685093      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:20:44.544: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-5" for this suite. @ 06/01/24 13:20:44.55
â€¢ [4.824 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 06/01/24 13:20:44.556
  Jun  1 13:20:44.556: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename dns @ 06/01/24 13:20:44.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:20:44.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:20:44.577
  STEP: Creating a test headless service @ 06/01/24 13:20:44.579
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5347.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-5347.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5347.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5347.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5347.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-5347.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5347.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-5347.svc.cluster.local;sleep 1; done
   @ 06/01/24 13:20:44.584
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5347.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-5347.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5347.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-5347.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5347.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-5347.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5347.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-5347.svc.cluster.local;sleep 1; done
   @ 06/01/24 13:20:44.584
  STEP: creating a pod to probe DNS @ 06/01/24 13:20:44.584
  STEP: submitting the pod to kubernetes @ 06/01/24 13:20:44.584
  E0601 13:20:44.686034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:45.686151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/01/24 13:20:46.606
  STEP: looking for the results for each expected name from probers @ 06/01/24 13:20:46.609
  Jun  1 13:20:46.614: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5347.svc.cluster.local from pod dns-5347/dns-test-69e4d1be-616a-4004-9d4b-ef27477f787d: the server could not find the requested resource (get pods dns-test-69e4d1be-616a-4004-9d4b-ef27477f787d)
  Jun  1 13:20:46.618: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5347.svc.cluster.local from pod dns-5347/dns-test-69e4d1be-616a-4004-9d4b-ef27477f787d: the server could not find the requested resource (get pods dns-test-69e4d1be-616a-4004-9d4b-ef27477f787d)
  Jun  1 13:20:46.621: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-5347.svc.cluster.local from pod dns-5347/dns-test-69e4d1be-616a-4004-9d4b-ef27477f787d: the server could not find the requested resource (get pods dns-test-69e4d1be-616a-4004-9d4b-ef27477f787d)
  Jun  1 13:20:46.625: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-5347.svc.cluster.local from pod dns-5347/dns-test-69e4d1be-616a-4004-9d4b-ef27477f787d: the server could not find the requested resource (get pods dns-test-69e4d1be-616a-4004-9d4b-ef27477f787d)
  Jun  1 13:20:46.629: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5347.svc.cluster.local from pod dns-5347/dns-test-69e4d1be-616a-4004-9d4b-ef27477f787d: the server could not find the requested resource (get pods dns-test-69e4d1be-616a-4004-9d4b-ef27477f787d)
  Jun  1 13:20:46.632: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5347.svc.cluster.local from pod dns-5347/dns-test-69e4d1be-616a-4004-9d4b-ef27477f787d: the server could not find the requested resource (get pods dns-test-69e4d1be-616a-4004-9d4b-ef27477f787d)
  Jun  1 13:20:46.636: INFO: Unable to read jessie_udp@dns-test-service-2.dns-5347.svc.cluster.local from pod dns-5347/dns-test-69e4d1be-616a-4004-9d4b-ef27477f787d: the server could not find the requested resource (get pods dns-test-69e4d1be-616a-4004-9d4b-ef27477f787d)
  Jun  1 13:20:46.639: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-5347.svc.cluster.local from pod dns-5347/dns-test-69e4d1be-616a-4004-9d4b-ef27477f787d: the server could not find the requested resource (get pods dns-test-69e4d1be-616a-4004-9d4b-ef27477f787d)
  Jun  1 13:20:46.639: INFO: Lookups using dns-5347/dns-test-69e4d1be-616a-4004-9d4b-ef27477f787d failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5347.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5347.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5347.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5347.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5347.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5347.svc.cluster.local jessie_udp@dns-test-service-2.dns-5347.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5347.svc.cluster.local]

  Jun  1 13:20:46.646: INFO: Pod client logs for webserver: 
  Jun  1 13:20:46.652: INFO: Pod client logs for querier: 
  Jun  1 13:20:46.657: INFO: Pod client logs for jessie-querier: 
  E0601 13:20:46.686975      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:47.687365      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:48.687620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:49.687702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:50.687933      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:51.689429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:20:51.698: INFO: DNS probes using dns-5347/dns-test-69e4d1be-616a-4004-9d4b-ef27477f787d succeeded

  STEP: deleting the pod @ 06/01/24 13:20:51.698
  STEP: deleting the test headless service @ 06/01/24 13:20:51.714
  Jun  1 13:20:51.728: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5347" for this suite. @ 06/01/24 13:20:51.733
â€¢ [7.185 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:408
  STEP: Creating a kubernetes client @ 06/01/24 13:20:51.742
  Jun  1 13:20:51.742: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename job @ 06/01/24 13:20:51.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:20:51.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:20:51.759
  STEP: Creating Indexed job @ 06/01/24 13:20:51.762
  STEP: Ensuring job reaches completions @ 06/01/24 13:20:51.766
  E0601 13:20:52.689845      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:53.689970      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:54.690086      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:55.690343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:56.690433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:57.690571      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 06/01/24 13:20:57.771
  Jun  1 13:20:57.775: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7923" for this suite. @ 06/01/24 13:20:57.778
â€¢ [6.042 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 06/01/24 13:20:57.784
  Jun  1 13:20:57.784: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename services @ 06/01/24 13:20:57.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:20:57.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:20:57.803
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-9696 @ 06/01/24 13:20:57.807
  STEP: changing the ExternalName service to type=NodePort @ 06/01/24 13:20:57.81
  STEP: creating replication controller externalname-service in namespace services-9696 @ 06/01/24 13:20:57.835
  I0601 13:20:57.842001      21 runners.go:197] Created replication controller with name: externalname-service, namespace: services-9696, replica count: 2
  E0601 13:20:58.691498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:20:59.691789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:21:00.691925      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0601 13:21:00.893298      21 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun  1 13:21:00.893: INFO: Creating new exec pod
  E0601 13:21:01.693363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:21:02.693864      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:21:03.693939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:21:03.912: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-9696 exec execpodcpd8g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jun  1 13:21:04.017: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jun  1 13:21:04.017: INFO: stdout: "externalname-service-zxdhx"
  Jun  1 13:21:04.017: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-9696 exec execpodcpd8g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.152 80'
  Jun  1 13:21:04.111: INFO: stderr: "+ nc -v -t -w 2 10.152.183.152 80\n+ echo hostName\nConnection to 10.152.183.152 80 port [tcp/http] succeeded!\n"
  Jun  1 13:21:04.112: INFO: stdout: "externalname-service-zxdhx"
  Jun  1 13:21:04.112: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-9696 exec execpodcpd8g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.74.111 30697'
  Jun  1 13:21:04.211: INFO: stderr: "+ nc -v -t -w 2 172.31.74.111 30697\nConnection to 172.31.74.111 30697 port [tcp/*] succeeded!\n+ echo hostName\n"
  Jun  1 13:21:04.211: INFO: stdout: "externalname-service-fq5n4"
  Jun  1 13:21:04.211: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-9696 exec execpodcpd8g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.17.129 30697'
  Jun  1 13:21:04.304: INFO: stderr: "+ nc -v -t -w 2 172.31.17.129 30697\n+ echo hostName\nConnection to 172.31.17.129 30697 port [tcp/*] succeeded!\n"
  Jun  1 13:21:04.304: INFO: stdout: "externalname-service-zxdhx"
  Jun  1 13:21:04.304: INFO: Cleaning up the ExternalName to NodePort test service
  Jun  1 13:21:04.329: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9696" for this suite. @ 06/01/24 13:21:04.332
â€¢ [6.554 seconds]
------------------------------
SS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 06/01/24 13:21:04.339
  Jun  1 13:21:04.339: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename events @ 06/01/24 13:21:04.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:21:04.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:21:04.358
  STEP: Create set of events @ 06/01/24 13:21:04.361
  STEP: get a list of Events with a label in the current namespace @ 06/01/24 13:21:04.374
  STEP: delete a list of events @ 06/01/24 13:21:04.378
  Jun  1 13:21:04.378: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 06/01/24 13:21:04.397
  Jun  1 13:21:04.399: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-433" for this suite. @ 06/01/24 13:21:04.402
â€¢ [0.070 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2214
  STEP: Creating a kubernetes client @ 06/01/24 13:21:04.409
  Jun  1 13:21:04.409: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename services @ 06/01/24 13:21:04.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:21:04.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:21:04.427
  STEP: creating service in namespace services-2505 @ 06/01/24 13:21:04.43
  STEP: creating service affinity-nodeport in namespace services-2505 @ 06/01/24 13:21:04.43
  STEP: creating replication controller affinity-nodeport in namespace services-2505 @ 06/01/24 13:21:04.444
  I0601 13:21:04.451811      21 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-2505, replica count: 3
  E0601 13:21:04.694999      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:21:05.695858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:21:06.696577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0601 13:21:07.502558      21 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun  1 13:21:07.512: INFO: Creating new exec pod
  E0601 13:21:07.697262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:21:08.698242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:21:09.698699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:21:10.533: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-2505 exec execpod-affinity692z7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Jun  1 13:21:10.629: INFO: stderr: "+ nc -v -t -w 2 affinity-nodeport 80\n+ echo hostName\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Jun  1 13:21:10.629: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  1 13:21:10.629: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-2505 exec execpod-affinity692z7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.227 80'
  E0601 13:21:10.699611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:21:10.724: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.227 80\nConnection to 10.152.183.227 80 port [tcp/http] succeeded!\n"
  Jun  1 13:21:10.724: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  1 13:21:10.724: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-2505 exec execpod-affinity692z7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.17.129 30120'
  Jun  1 13:21:10.812: INFO: stderr: "+ nc -v -t -w 2 172.31.17.129 30120\n+ echo hostName\nConnection to 172.31.17.129 30120 port [tcp/*] succeeded!\n"
  Jun  1 13:21:10.812: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  1 13:21:10.812: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-2505 exec execpod-affinity692z7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.74.111 30120'
  Jun  1 13:21:10.914: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.74.111 30120\nConnection to 172.31.74.111 30120 port [tcp/*] succeeded!\n"
  Jun  1 13:21:10.914: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  1 13:21:10.914: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-2505 exec execpod-affinity692z7 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.17.129:30120/ ; done'
  Jun  1 13:21:11.103: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30120/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30120/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30120/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30120/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30120/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30120/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30120/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30120/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30120/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30120/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30120/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30120/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30120/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30120/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30120/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30120/\n"
  Jun  1 13:21:11.103: INFO: stdout: "\naffinity-nodeport-8qgjn\naffinity-nodeport-8qgjn\naffinity-nodeport-8qgjn\naffinity-nodeport-8qgjn\naffinity-nodeport-8qgjn\naffinity-nodeport-8qgjn\naffinity-nodeport-8qgjn\naffinity-nodeport-8qgjn\naffinity-nodeport-8qgjn\naffinity-nodeport-8qgjn\naffinity-nodeport-8qgjn\naffinity-nodeport-8qgjn\naffinity-nodeport-8qgjn\naffinity-nodeport-8qgjn\naffinity-nodeport-8qgjn\naffinity-nodeport-8qgjn"
  Jun  1 13:21:11.103: INFO: Received response from host: affinity-nodeport-8qgjn
  Jun  1 13:21:11.103: INFO: Received response from host: affinity-nodeport-8qgjn
  Jun  1 13:21:11.103: INFO: Received response from host: affinity-nodeport-8qgjn
  Jun  1 13:21:11.103: INFO: Received response from host: affinity-nodeport-8qgjn
  Jun  1 13:21:11.103: INFO: Received response from host: affinity-nodeport-8qgjn
  Jun  1 13:21:11.103: INFO: Received response from host: affinity-nodeport-8qgjn
  Jun  1 13:21:11.103: INFO: Received response from host: affinity-nodeport-8qgjn
  Jun  1 13:21:11.103: INFO: Received response from host: affinity-nodeport-8qgjn
  Jun  1 13:21:11.103: INFO: Received response from host: affinity-nodeport-8qgjn
  Jun  1 13:21:11.103: INFO: Received response from host: affinity-nodeport-8qgjn
  Jun  1 13:21:11.103: INFO: Received response from host: affinity-nodeport-8qgjn
  Jun  1 13:21:11.103: INFO: Received response from host: affinity-nodeport-8qgjn
  Jun  1 13:21:11.103: INFO: Received response from host: affinity-nodeport-8qgjn
  Jun  1 13:21:11.103: INFO: Received response from host: affinity-nodeport-8qgjn
  Jun  1 13:21:11.103: INFO: Received response from host: affinity-nodeport-8qgjn
  Jun  1 13:21:11.103: INFO: Received response from host: affinity-nodeport-8qgjn
  Jun  1 13:21:11.103: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-2505, will wait for the garbage collector to delete the pods @ 06/01/24 13:21:11.119
  Jun  1 13:21:11.180: INFO: Deleting ReplicationController affinity-nodeport took: 6.521582ms
  Jun  1 13:21:11.281: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.840702ms
  E0601 13:21:11.700205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:21:12.700560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:21:13.702779      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:21:14.402: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2505" for this suite. @ 06/01/24 13:21:14.406
â€¢ [10.006 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 06/01/24 13:21:14.415
  Jun  1 13:21:14.415: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename pods @ 06/01/24 13:21:14.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:21:14.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:21:14.434
  STEP: creating a Pod with a static label @ 06/01/24 13:21:14.442
  STEP: watching for Pod to be ready @ 06/01/24 13:21:14.451
  Jun  1 13:21:14.452: INFO: observed Pod pod-test in namespace pods-9859 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Jun  1 13:21:14.455: INFO: observed Pod pod-test in namespace pods-9859 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-01 13:21:14 +0000 UTC  }]
  Jun  1 13:21:14.469: INFO: observed Pod pod-test in namespace pods-9859 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-06-01 13:21:14 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-01 13:21:14 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-01 13:21:14 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-01 13:21:14 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-01 13:21:14 +0000 UTC  }]
  E0601 13:21:14.702822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:21:15.703222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:21:15.797: INFO: Found Pod pod-test in namespace pods-9859 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-01 13:21:15 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-01 13:21:14 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-06-01 13:21:15 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-06-01 13:21:15 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-01 13:21:14 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 06/01/24 13:21:15.801
  STEP: getting the Pod and ensuring that it's patched @ 06/01/24 13:21:15.811
  STEP: replacing the Pod's status Ready condition to False @ 06/01/24 13:21:15.814
  STEP: check the Pod again to ensure its Ready conditions are False @ 06/01/24 13:21:15.825
  STEP: deleting the Pod via a Collection with a LabelSelector @ 06/01/24 13:21:15.825
  STEP: watching for the Pod to be deleted @ 06/01/24 13:21:15.834
  Jun  1 13:21:15.835: INFO: observed event type MODIFIED
  E0601 13:21:16.703884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:21:17.704188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:21:17.796: INFO: observed event type MODIFIED
  Jun  1 13:21:17.960: INFO: observed event type MODIFIED
  E0601 13:21:18.705121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:21:18.800: INFO: observed event type MODIFIED
  Jun  1 13:21:18.814: INFO: observed event type MODIFIED
  Jun  1 13:21:18.824: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9859" for this suite. @ 06/01/24 13:21:18.827
â€¢ [4.419 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:572
  STEP: Creating a kubernetes client @ 06/01/24 13:21:18.834
  Jun  1 13:21:18.834: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename job @ 06/01/24 13:21:18.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:21:18.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:21:18.851
  STEP: Creating a job @ 06/01/24 13:21:18.853
  STEP: Ensuring job reaches completions @ 06/01/24 13:21:18.86
  E0601 13:21:19.705220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:21:20.705318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:21:21.705688      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:21:22.705795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:21:23.705899      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:21:24.706244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:21:25.706407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:21:26.706454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:21:26.866: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9734" for this suite. @ 06/01/24 13:21:26.869
â€¢ [8.042 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 06/01/24 13:21:26.876
  Jun  1 13:21:26.876: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename daemonsets @ 06/01/24 13:21:26.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:21:26.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:21:26.895
  Jun  1 13:21:26.913: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/01/24 13:21:26.919
  Jun  1 13:21:26.923: INFO: DaemonSet pods can't tolerate node ip-172-31-13-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:21:26.923: INFO: DaemonSet pods can't tolerate node ip-172-31-68-201 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:21:26.925: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  1 13:21:26.925: INFO: Node ip-172-31-17-129 is running 0 daemon pod, expected 1
  E0601 13:21:27.706547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:21:27.924: INFO: DaemonSet pods can't tolerate node ip-172-31-13-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:21:27.924: INFO: DaemonSet pods can't tolerate node ip-172-31-68-201 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:21:27.927: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun  1 13:21:27.927: INFO: Node ip-172-31-17-129 is running 0 daemon pod, expected 1
  E0601 13:21:28.706643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:21:28.924: INFO: DaemonSet pods can't tolerate node ip-172-31-13-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:21:28.924: INFO: DaemonSet pods can't tolerate node ip-172-31-68-201 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:21:28.928: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun  1 13:21:28.928: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 06/01/24 13:21:28.941
  STEP: Check that daemon pods images are updated. @ 06/01/24 13:21:28.95
  Jun  1 13:21:28.952: INFO: Wrong image for pod: daemon-set-4872f. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun  1 13:21:28.952: INFO: Wrong image for pod: daemon-set-brn6h. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun  1 13:21:28.952: INFO: Wrong image for pod: daemon-set-zvf9j. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun  1 13:21:28.958: INFO: DaemonSet pods can't tolerate node ip-172-31-13-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:21:28.958: INFO: DaemonSet pods can't tolerate node ip-172-31-68-201 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0601 13:21:29.706756      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:21:29.954: INFO: Wrong image for pod: daemon-set-4872f. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun  1 13:21:29.955: INFO: Wrong image for pod: daemon-set-brn6h. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun  1 13:21:29.955: INFO: Pod daemon-set-hn2r7 is not available
  Jun  1 13:21:29.958: INFO: DaemonSet pods can't tolerate node ip-172-31-13-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:21:29.958: INFO: DaemonSet pods can't tolerate node ip-172-31-68-201 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0601 13:21:30.707683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:21:30.955: INFO: Wrong image for pod: daemon-set-4872f. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun  1 13:21:30.955: INFO: Pod daemon-set-pdgg8 is not available
  Jun  1 13:21:30.959: INFO: DaemonSet pods can't tolerate node ip-172-31-13-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:21:30.959: INFO: DaemonSet pods can't tolerate node ip-172-31-68-201 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0601 13:21:31.708092      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:21:31.961: INFO: DaemonSet pods can't tolerate node ip-172-31-13-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:21:31.961: INFO: DaemonSet pods can't tolerate node ip-172-31-68-201 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0601 13:21:32.708925      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:21:32.954: INFO: Pod daemon-set-xgvbl is not available
  Jun  1 13:21:32.958: INFO: DaemonSet pods can't tolerate node ip-172-31-13-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:21:32.959: INFO: DaemonSet pods can't tolerate node ip-172-31-68-201 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 06/01/24 13:21:32.959
  Jun  1 13:21:32.962: INFO: DaemonSet pods can't tolerate node ip-172-31-13-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:21:32.962: INFO: DaemonSet pods can't tolerate node ip-172-31-68-201 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:21:32.966: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun  1 13:21:32.966: INFO: Node ip-172-31-80-202 is running 0 daemon pod, expected 1
  E0601 13:21:33.709246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:21:33.964: INFO: DaemonSet pods can't tolerate node ip-172-31-13-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:21:33.964: INFO: DaemonSet pods can't tolerate node ip-172-31-68-201 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:21:33.968: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun  1 13:21:33.968: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 06/01/24 13:21:33.985
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4530, will wait for the garbage collector to delete the pods @ 06/01/24 13:21:33.985
  Jun  1 13:21:34.046: INFO: Deleting DaemonSet.extensions daemon-set took: 7.772096ms
  Jun  1 13:21:34.147: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.669581ms
  E0601 13:21:34.709536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:21:35.652: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  1 13:21:35.652: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun  1 13:21:35.655: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"31915"},"items":null}

  Jun  1 13:21:35.657: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"31915"},"items":null}

  Jun  1 13:21:35.668: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4530" for this suite. @ 06/01/24 13:21:35.672
â€¢ [8.802 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 06/01/24 13:21:35.678
  Jun  1 13:21:35.678: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename emptydir @ 06/01/24 13:21:35.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:21:35.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:21:35.699
  STEP: Creating Pod @ 06/01/24 13:21:35.702
  E0601 13:21:35.710154      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:21:36.710662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:21:37.710775      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 06/01/24 13:21:37.723
  Jun  1 13:21:37.723: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-1806 PodName:pod-sharedvolume-48aa212f-29cf-4e20-a200-610aa150cc3c ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  1 13:21:37.723: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 13:21:37.724: INFO: ExecWithOptions: Clientset creation
  Jun  1 13:21:37.724: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-1806/pods/pod-sharedvolume-48aa212f-29cf-4e20-a200-610aa150cc3c/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Jun  1 13:21:37.770: INFO: Exec stderr: ""
  Jun  1 13:21:37.770: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1806" for this suite. @ 06/01/24 13:21:37.774
â€¢ [2.103 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 06/01/24 13:21:37.782
  Jun  1 13:21:37.782: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename daemonsets @ 06/01/24 13:21:37.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:21:37.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:21:37.8
  STEP: Creating simple DaemonSet "daemon-set" @ 06/01/24 13:21:37.818
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/01/24 13:21:37.823
  Jun  1 13:21:37.827: INFO: DaemonSet pods can't tolerate node ip-172-31-13-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:21:37.827: INFO: DaemonSet pods can't tolerate node ip-172-31-68-201 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:21:37.829: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  1 13:21:37.829: INFO: Node ip-172-31-17-129 is running 0 daemon pod, expected 1
  E0601 13:21:38.711753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:21:38.827: INFO: DaemonSet pods can't tolerate node ip-172-31-13-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:21:38.827: INFO: DaemonSet pods can't tolerate node ip-172-31-68-201 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:21:38.831: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun  1 13:21:38.831: INFO: Node ip-172-31-17-129 is running 0 daemon pod, expected 1
  E0601 13:21:39.711852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:21:39.828: INFO: DaemonSet pods can't tolerate node ip-172-31-13-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:21:39.828: INFO: DaemonSet pods can't tolerate node ip-172-31-68-201 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:21:39.832: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun  1 13:21:39.832: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 06/01/24 13:21:39.836
  STEP: DeleteCollection of the DaemonSets @ 06/01/24 13:21:39.838
  STEP: Verify that ReplicaSets have been deleted @ 06/01/24 13:21:39.847
  Jun  1 13:21:39.861: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"31995"},"items":null}

  Jun  1 13:21:39.868: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"31997"},"items":[{"metadata":{"name":"daemon-set-5zc95","generateName":"daemon-set-","namespace":"daemonsets-7420","uid":"0fbb5019-38fa-43f4-bb24-e05b5578d0a1","resourceVersion":"31997","creationTimestamp":"2024-06-01T13:21:37Z","deletionTimestamp":"2024-06-01T13:22:09Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"47a87854-b825-4621-a9cb-d28ea8959124","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-06-01T13:21:37Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"47a87854-b825-4621-a9cb-d28ea8959124\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-06-01T13:21:38Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.118.188\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-zhcdw","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-zhcdw","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-74-111","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-74-111"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-01T13:21:38Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-01T13:21:37Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-01T13:21:38Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-01T13:21:38Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-01T13:21:37Z"}],"hostIP":"172.31.74.111","hostIPs":[{"ip":"172.31.74.111"}],"podIP":"192.168.118.188","podIPs":[{"ip":"192.168.118.188"}],"startTime":"2024-06-01T13:21:37Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-06-01T13:21:38Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://378dd35c6637e042e305638a26ec9fdde3f7a23af182628b16ae9889c2e2e8cb","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-hs9jz","generateName":"daemon-set-","namespace":"daemonsets-7420","uid":"c21b7ed1-8253-4463-9cc6-1f0e2389ca39","resourceVersion":"31994","creationTimestamp":"2024-06-01T13:21:37Z","deletionTimestamp":"2024-06-01T13:22:09Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"47a87854-b825-4621-a9cb-d28ea8959124","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-06-01T13:21:37Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"47a87854-b825-4621-a9cb-d28ea8959124\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-06-01T13:21:39Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.86.109\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-6psrz","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-6psrz","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-17-129","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-17-129"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-01T13:21:39Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-01T13:21:37Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-01T13:21:39Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-01T13:21:39Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-01T13:21:37Z"}],"hostIP":"172.31.17.129","hostIPs":[{"ip":"172.31.17.129"}],"podIP":"192.168.86.109","podIPs":[{"ip":"192.168.86.109"}],"startTime":"2024-06-01T13:21:37Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-06-01T13:21:38Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://c9f905b1b50979f30928124d91e65cbdd5681c29f447f894df3b7bc48be53ac8","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-pjfhv","generateName":"daemon-set-","namespace":"daemonsets-7420","uid":"34e04d61-9821-4185-a2b3-a67bc1dc9a2c","resourceVersion":"31995","creationTimestamp":"2024-06-01T13:21:37Z","deletionTimestamp":"2024-06-01T13:22:09Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"47a87854-b825-4621-a9cb-d28ea8959124","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-06-01T13:21:37Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"47a87854-b825-4621-a9cb-d28ea8959124\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-06-01T13:21:38Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.126.100\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-lk5sh","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-lk5sh","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-80-202","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-80-202"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-01T13:21:38Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-01T13:21:37Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-01T13:21:38Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-01T13:21:38Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-01T13:21:37Z"}],"hostIP":"172.31.80.202","hostIPs":[{"ip":"172.31.80.202"}],"podIP":"192.168.126.100","podIPs":[{"ip":"192.168.126.100"}],"startTime":"2024-06-01T13:21:37Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-06-01T13:21:38Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://190b8343ed1758b91657459da4e81313fe687bb3a00bf5eaca0a8e98bc507d48","started":true}],"qosClass":"BestEffort"}}]}

  Jun  1 13:21:39.884: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7420" for this suite. @ 06/01/24 13:21:39.887
â€¢ [2.111 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 06/01/24 13:21:39.894
  Jun  1 13:21:39.894: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename resourcequota @ 06/01/24 13:21:39.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:21:39.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:21:39.915
  E0601 13:21:40.711969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:21:41.712642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:21:42.713315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:21:43.713406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:21:44.714132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:21:45.714221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:21:46.714319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:21:47.714412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:21:48.714512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:21:49.714621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:21:50.715663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:21:51.716720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:21:52.717470      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:21:53.717568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:21:54.717663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:21:55.717762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:21:56.718679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 06/01/24 13:21:56.923
  E0601 13:21:57.719298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:21:58.719421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:21:59.719543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:00.719741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:01.720288      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/01/24 13:22:01.927
  STEP: Ensuring resource quota status is calculated @ 06/01/24 13:22:01.938
  E0601 13:22:02.720456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:03.720568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 06/01/24 13:22:03.941
  STEP: Ensuring resource quota status captures configMap creation @ 06/01/24 13:22:03.953
  E0601 13:22:04.721155      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:05.722243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 06/01/24 13:22:05.957
  STEP: Ensuring resource quota status released usage @ 06/01/24 13:22:05.964
  E0601 13:22:06.722667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:07.722780      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:22:07.970: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5066" for this suite. @ 06/01/24 13:22:07.974
â€¢ [28.089 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 06/01/24 13:22:07.983
  Jun  1 13:22:07.983: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename runtimeclass @ 06/01/24 13:22:07.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:22:08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:22:08.002
  Jun  1 13:22:08.012: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2232" for this suite. @ 06/01/24 13:22:08.014
â€¢ [0.040 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 06/01/24 13:22:08.024
  Jun  1 13:22:08.024: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename configmap @ 06/01/24 13:22:08.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:22:08.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:22:08.04
  STEP: Creating configMap with name configmap-test-upd-689206fd-c052-46cb-86ff-46ed62b2d354 @ 06/01/24 13:22:08.046
  STEP: Creating the pod @ 06/01/24 13:22:08.051
  E0601 13:22:08.722887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:09.722997      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-689206fd-c052-46cb-86ff-46ed62b2d354 @ 06/01/24 13:22:10.08
  STEP: waiting to observe update in volume @ 06/01/24 13:22:10.085
  E0601 13:22:10.723084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:11.723318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:12.723433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:13.723528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:14.723626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:15.723716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:16.723796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:17.723922      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:18.724588      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:19.724691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:20.725434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:21.725670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:22.726210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:23.726311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:24.726390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:25.726715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:26.726790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:27.727010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:28.727433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:29.727652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:30.727755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:31.727975      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:32.728392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:33.729090      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:34.730048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:35.730267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:36.730547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:37.730613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:38.730713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:39.730817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:40.731501      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:41.731617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:42.732403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:43.732607      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:44.733298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:45.733403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:46.733656      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:47.734710      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:48.734827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:49.735134      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:50.735811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:51.736531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:52.736648      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:53.736768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:54.737750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:55.738235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:56.738529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:57.738644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:58.738775      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:22:59.738930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:00.739659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:01.739716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:02.740702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:03.740814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:04.741647      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:05.741700      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:06.742547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:07.742639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:08.742941      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:09.743026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:10.743119      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:11.743350      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:12.744000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:13.744097      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:14.744723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:15.744802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:16.745380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:17.745498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:18.746197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:19.746312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:20.746604      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:21.746858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:22.747814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:23.747931      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:24.748032      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:25.748227      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:26.749203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:27.750026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:23:28.413: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-162" for this suite. @ 06/01/24 13:23:28.418
â€¢ [80.402 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 06/01/24 13:23:28.426
  Jun  1 13:23:28.426: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename secrets @ 06/01/24 13:23:28.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:23:28.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:23:28.448
  Jun  1 13:23:28.482: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-340" for this suite. @ 06/01/24 13:23:28.485
â€¢ [0.064 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 06/01/24 13:23:28.491
  Jun  1 13:23:28.491: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename emptydir @ 06/01/24 13:23:28.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:23:28.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:23:28.509
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 06/01/24 13:23:28.511
  E0601 13:23:28.750154      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:29.750417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:30.751412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:31.751867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 13:23:32.534
  Jun  1 13:23:32.537: INFO: Trying to get logs from node ip-172-31-80-202 pod pod-cbe247b3-8d26-4650-a199-26037735ee27 container test-container: <nil>
  STEP: delete the pod @ 06/01/24 13:23:32.552
  Jun  1 13:23:32.570: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7437" for this suite. @ 06/01/24 13:23:32.573
â€¢ [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 06/01/24 13:23:32.582
  Jun  1 13:23:32.582: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename services @ 06/01/24 13:23:32.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:23:32.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:23:32.599
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-3319 @ 06/01/24 13:23:32.602
  STEP: changing the ExternalName service to type=ClusterIP @ 06/01/24 13:23:32.605
  STEP: creating replication controller externalname-service in namespace services-3319 @ 06/01/24 13:23:32.619
  I0601 13:23:32.631678      21 runners.go:197] Created replication controller with name: externalname-service, namespace: services-3319, replica count: 2
  E0601 13:23:32.752851      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:33.752951      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:34.753147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0601 13:23:35.682682      21 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun  1 13:23:35.682: INFO: Creating new exec pod
  E0601 13:23:35.754158      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:36.754605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:37.755084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:23:38.695: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-3319 exec execpodpmv6r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E0601 13:23:38.755594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:23:38.789: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jun  1 13:23:38.789: INFO: stdout: ""
  Jun  1 13:23:39.695: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-3319 exec execpodpmv6r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E0601 13:23:39.755928      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:23:39.783: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jun  1 13:23:39.783: INFO: stdout: ""
  Jun  1 13:23:40.695: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-3319 exec execpodpmv6r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E0601 13:23:40.756812      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:23:40.804: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jun  1 13:23:40.804: INFO: stdout: "externalname-service-xml8x"
  Jun  1 13:23:40.804: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-3319 exec execpodpmv6r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.184 80'
  Jun  1 13:23:40.899: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.184 80\nConnection to 10.152.183.184 80 port [tcp/http] succeeded!\n"
  Jun  1 13:23:40.899: INFO: stdout: ""
  E0601 13:23:41.757786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:23:41.805: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-3319 exec execpodpmv6r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.184 80'
  Jun  1 13:23:41.899: INFO: stderr: "+ nc -v -t -w 2 10.152.183.184 80\n+ echo hostName\nConnection to 10.152.183.184 80 port [tcp/http] succeeded!\n"
  Jun  1 13:23:41.899: INFO: stdout: ""
  E0601 13:23:42.758085      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:23:42.805: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-3319 exec execpodpmv6r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.184 80'
  Jun  1 13:23:42.899: INFO: stderr: "+ nc -v -t -w 2 10.152.183.184 80\n+ echo hostName\nConnection to 10.152.183.184 80 port [tcp/http] succeeded!\n"
  Jun  1 13:23:42.899: INFO: stdout: ""
  E0601 13:23:43.758258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:23:43.804: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-3319 exec execpodpmv6r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.184 80'
  Jun  1 13:23:43.908: INFO: stderr: "+ nc -v -t -w 2 10.152.183.184 80\n+ echo hostName\nConnection to 10.152.183.184 80 port [tcp/http] succeeded!\n"
  Jun  1 13:23:43.908: INFO: stdout: "externalname-service-ztz6c"
  Jun  1 13:23:43.908: INFO: Cleaning up the ExternalName to ClusterIP test service
  Jun  1 13:23:43.930: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3319" for this suite. @ 06/01/24 13:23:43.933
â€¢ [11.358 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 06/01/24 13:23:43.94
  Jun  1 13:23:43.940: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename replication-controller @ 06/01/24 13:23:43.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:23:43.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:23:43.958
  STEP: Given a ReplicationController is created @ 06/01/24 13:23:43.96
  STEP: When the matched label of one of its pods change @ 06/01/24 13:23:43.965
  Jun  1 13:23:43.968: INFO: Pod name pod-release: Found 0 pods out of 1
  E0601 13:23:44.758355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:45.758463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:46.758554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:47.758649      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:48.758852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:23:48.971: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 06/01/24 13:23:48.986
  E0601 13:23:49.758981      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:23:49.995: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8230" for this suite. @ 06/01/24 13:23:50
â€¢ [6.068 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:46
  STEP: Creating a kubernetes client @ 06/01/24 13:23:50.009
  Jun  1 13:23:50.009: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename configmap @ 06/01/24 13:23:50.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:23:50.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:23:50.029
  STEP: Creating configMap configmap-6838/configmap-test-69bf1e9e-1ecb-4ac2-a56b-5e2c449ada86 @ 06/01/24 13:23:50.033
  STEP: Creating a pod to test consume configMaps @ 06/01/24 13:23:50.037
  E0601 13:23:50.759081      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:51.759571      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:52.759646      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:53.759773      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 13:23:54.06
  Jun  1 13:23:54.064: INFO: Trying to get logs from node ip-172-31-74-111 pod pod-configmaps-7dae799d-fde1-45a2-84b4-d625fbf67996 container env-test: <nil>
  STEP: delete the pod @ 06/01/24 13:23:54.07
  Jun  1 13:23:54.088: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6838" for this suite. @ 06/01/24 13:23:54.092
â€¢ [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 06/01/24 13:23:54.099
  Jun  1 13:23:54.099: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename resourcequota @ 06/01/24 13:23:54.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:23:54.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:23:54.119
  STEP: Counting existing ResourceQuota @ 06/01/24 13:23:54.122
  E0601 13:23:54.760488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:55.761149      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:56.761580      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:57.761689      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:23:58.761789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/01/24 13:23:59.125
  STEP: Ensuring resource quota status is calculated @ 06/01/24 13:23:59.131
  E0601 13:23:59.762790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:00.762907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 06/01/24 13:24:01.136
  STEP: Ensuring ResourceQuota status captures the pod usage @ 06/01/24 13:24:01.15
  E0601 13:24:01.763617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:02.763717      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 06/01/24 13:24:03.155
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 06/01/24 13:24:03.157
  STEP: Ensuring a pod cannot update its resource requirements @ 06/01/24 13:24:03.159
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 06/01/24 13:24:03.164
  E0601 13:24:03.764785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:04.764888      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 06/01/24 13:24:05.169
  STEP: Ensuring resource quota status released the pod usage @ 06/01/24 13:24:05.185
  E0601 13:24:05.765152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:06.765688      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:24:07.189: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-593" for this suite. @ 06/01/24 13:24:07.192
â€¢ [13.100 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 06/01/24 13:24:07.199
  Jun  1 13:24:07.199: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename endpointslice @ 06/01/24 13:24:07.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:24:07.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:24:07.219
  E0601 13:24:07.765763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:08.765884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:24:09.265: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7054" for this suite. @ 06/01/24 13:24:09.27
â€¢ [2.079 seconds]
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 06/01/24 13:24:09.278
  Jun  1 13:24:09.278: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename container-runtime @ 06/01/24 13:24:09.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:24:09.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:24:09.296
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 06/01/24 13:24:09.307
  E0601 13:24:09.766657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:10.767475      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:11.768499      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:12.769462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:13.770213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:14.771163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:15.771816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:16.771939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:17.772656      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:18.773352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:19.774206      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:20.774852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:21.774925      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:22.775027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:23.775065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:24.775546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 06/01/24 13:24:25.38
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 06/01/24 13:24:25.383
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 06/01/24 13:24:25.39
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 06/01/24 13:24:25.39
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 06/01/24 13:24:25.413
  E0601 13:24:25.776003      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:26.776112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 06/01/24 13:24:27.426
  E0601 13:24:27.777136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 06/01/24 13:24:28.434
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 06/01/24 13:24:28.44
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 06/01/24 13:24:28.44
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 06/01/24 13:24:28.466
  E0601 13:24:28.777731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 06/01/24 13:24:29.473
  E0601 13:24:29.778679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 06/01/24 13:24:30.482
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 06/01/24 13:24:30.488
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 06/01/24 13:24:30.488
  Jun  1 13:24:30.512: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7262" for this suite. @ 06/01/24 13:24:30.515
â€¢ [21.243 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 06/01/24 13:24:30.521
  Jun  1 13:24:30.521: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename runtimeclass @ 06/01/24 13:24:30.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:24:30.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:24:30.537
  STEP: getting /apis @ 06/01/24 13:24:30.541
  STEP: getting /apis/node.k8s.io @ 06/01/24 13:24:30.544
  STEP: getting /apis/node.k8s.io/v1 @ 06/01/24 13:24:30.545
  STEP: creating @ 06/01/24 13:24:30.545
  STEP: watching @ 06/01/24 13:24:30.562
  Jun  1 13:24:30.562: INFO: starting watch
  STEP: getting @ 06/01/24 13:24:30.566
  STEP: listing @ 06/01/24 13:24:30.57
  STEP: patching @ 06/01/24 13:24:30.573
  STEP: updating @ 06/01/24 13:24:30.576
  Jun  1 13:24:30.581: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 06/01/24 13:24:30.581
  STEP: deleting a collection @ 06/01/24 13:24:30.592
  Jun  1 13:24:30.605: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7360" for this suite. @ 06/01/24 13:24:30.609
â€¢ [0.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 06/01/24 13:24:30.617
  Jun  1 13:24:30.617: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename downward-api @ 06/01/24 13:24:30.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:24:30.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:24:30.636
  STEP: Creating a pod to test downward api env vars @ 06/01/24 13:24:30.638
  E0601 13:24:30.778775      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:31.779294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:32.779704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:33.779848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 13:24:34.663
  Jun  1 13:24:34.666: INFO: Trying to get logs from node ip-172-31-74-111 pod downward-api-f3312bf1-d60d-4a94-bafe-d7cf9f968220 container dapi-container: <nil>
  STEP: delete the pod @ 06/01/24 13:24:34.673
  Jun  1 13:24:34.690: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-80" for this suite. @ 06/01/24 13:24:34.694
â€¢ [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 06/01/24 13:24:34.7
  Jun  1 13:24:34.700: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename deployment @ 06/01/24 13:24:34.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:24:34.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:24:34.718
  STEP: creating a Deployment @ 06/01/24 13:24:34.723
  STEP: waiting for Deployment to be created @ 06/01/24 13:24:34.73
  STEP: waiting for all Replicas to be Ready @ 06/01/24 13:24:34.731
  Jun  1 13:24:34.733: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun  1 13:24:34.733: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun  1 13:24:34.744: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun  1 13:24:34.744: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun  1 13:24:34.755: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun  1 13:24:34.755: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0601 13:24:34.780349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:24:34.783: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun  1 13:24:34.783: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0601 13:24:35.781307      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:24:35.909: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Jun  1 13:24:35.909: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Jun  1 13:24:36.189: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 06/01/24 13:24:36.189
  Jun  1 13:24:36.197: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 06/01/24 13:24:36.197
  Jun  1 13:24:36.199: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 0
  Jun  1 13:24:36.199: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 0
  Jun  1 13:24:36.199: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 0
  Jun  1 13:24:36.199: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 0
  Jun  1 13:24:36.199: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 0
  Jun  1 13:24:36.199: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 0
  Jun  1 13:24:36.199: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 0
  Jun  1 13:24:36.199: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 0
  Jun  1 13:24:36.199: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 1
  Jun  1 13:24:36.199: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 1
  Jun  1 13:24:36.199: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 2
  Jun  1 13:24:36.199: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 2
  Jun  1 13:24:36.199: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 2
  Jun  1 13:24:36.199: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 2
  Jun  1 13:24:36.210: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 2
  Jun  1 13:24:36.210: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 2
  Jun  1 13:24:36.229: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 2
  Jun  1 13:24:36.229: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 2
  Jun  1 13:24:36.253: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 1
  Jun  1 13:24:36.253: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 1
  Jun  1 13:24:36.259: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 1
  Jun  1 13:24:36.259: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 1
  E0601 13:24:36.782217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:24:37.203: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 2
  Jun  1 13:24:37.203: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 2
  Jun  1 13:24:37.232: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 1
  STEP: listing Deployments @ 06/01/24 13:24:37.232
  Jun  1 13:24:37.236: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 06/01/24 13:24:37.236
  Jun  1 13:24:37.247: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 06/01/24 13:24:37.247
  Jun  1 13:24:37.257: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jun  1 13:24:37.261: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jun  1 13:24:37.328: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jun  1 13:24:37.345: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0601 13:24:37.782303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:24:37.943: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jun  1 13:24:38.204: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  Jun  1 13:24:38.244: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jun  1 13:24:38.256: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0601 13:24:38.783240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:24:38.929: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 06/01/24 13:24:38.958
  STEP: fetching the DeploymentStatus @ 06/01/24 13:24:38.966
  Jun  1 13:24:38.973: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 1
  Jun  1 13:24:38.973: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 1
  Jun  1 13:24:38.973: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 1
  Jun  1 13:24:38.973: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 1
  Jun  1 13:24:38.973: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 2
  Jun  1 13:24:38.973: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 3
  Jun  1 13:24:38.973: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 2
  Jun  1 13:24:38.973: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 2
  Jun  1 13:24:38.973: INFO: observed Deployment test-deployment in namespace deployment-479 with ReadyReplicas 3
  STEP: deleting the Deployment @ 06/01/24 13:24:38.973
  Jun  1 13:24:38.983: INFO: observed event type MODIFIED
  Jun  1 13:24:38.983: INFO: observed event type MODIFIED
  Jun  1 13:24:38.983: INFO: observed event type MODIFIED
  Jun  1 13:24:38.983: INFO: observed event type MODIFIED
  Jun  1 13:24:38.983: INFO: observed event type MODIFIED
  Jun  1 13:24:38.983: INFO: observed event type MODIFIED
  Jun  1 13:24:38.983: INFO: observed event type MODIFIED
  Jun  1 13:24:38.983: INFO: observed event type MODIFIED
  Jun  1 13:24:38.983: INFO: observed event type MODIFIED
  Jun  1 13:24:38.983: INFO: observed event type MODIFIED
  Jun  1 13:24:38.983: INFO: observed event type MODIFIED
  Jun  1 13:24:38.983: INFO: observed event type MODIFIED
  Jun  1 13:24:38.986: INFO: Log out all the ReplicaSets if there is no deployment created
  Jun  1 13:24:38.991: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-479",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2f874e4d-58b6-4e93-b6b3-f53c9bcd328f",
      ResourceVersion: (string) (len=5) "33125",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852845076,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "36e7dd30-565a-46a5-9270-0d1204d49bc6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845078,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 33 36 65 37  64 64 33 30 2d 35 36 35  |":\"36e7dd30-565|
              00000130  61 2d 34 36 61 35 2d 39  32 37 30 2d 30 64 31 32  |a-46a5-9270-0d12|
              00000140  30 34 64 34 39 62 63 36  5c 22 7d 22 3a 7b 7d 7d  |04d49bc6\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845078,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Jun  1 13:24:38.997: INFO: pod: "test-deployment-64fd565c98-lv7xt":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-lv7xt",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=14) "deployment-479",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "009afca3-a252-4328-94b2-2141d4be0542",
      ResourceVersion: (string) (len=5) "33109",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852845076,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852845080,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "2f874e4d-58b6-4e93-b6b3-f53c9bcd328f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845076,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  32 66 38 37 34 65 34 64  |uid\":\"2f874e4d|
              000000a0  2d 35 38 62 36 2d 34 65  39 33 2d 62 36 62 33 2d  |-58b6-4e93-b6b3-|
              000000b0  66 35 33 63 39 62 63 64  33 32 38 66 5c 22 7d 22  |f53c9bcd328f\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845078,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=621) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 72 65 61 73 6f 6e  |me":{},"f:reason|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000090  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000000a0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 49  |"k:{\"type\":\"I|
              000000b0  6e 69 74 69 61 6c 69 7a  65 64 5c 22 7d 22 3a 7b  |nitialized\"}":{|
              000000c0  22 2e 22 3a 7b 7d 2c 22  66 3a 6c 61 73 74 50 72  |".":{},"f:lastPr|
              000000d0  6f 62 65 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |obeTime":{},"f:l|
              000000e0  61 73 74 54 72 61 6e 73  69 74 69 6f 6e 54 69 6d  |astTransitionTim|
              000000f0  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000100  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000110  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              00000120  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 50 6f  |k:{\"type\":\"Po|
              00000130  64 52 65 61 64 79 54 6f  53 74 61 72 74 43 6f 6e  |dReadyToStartCon|
              00000140  74 61 69 6e 65 72 73 5c  22 7d 22 3a 7b 22 2e 22  |tainers\"}":{"."|
              00000150  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000160  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000170  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000180  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000190  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 2c 22 6b  |,"f:type":{}},"k|
              000001a0  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 52 65 61  |:{\"type\":\"Rea|
              000001b0  64 79 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |dy\"}":{".":{},"|
              000001c0  66 3a 6c 61 73 74 50 72  6f 62 65 54 69 6d 65 22  |f:lastProbeTime"|
              000001d0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 54 72 61 6e 73  |:{},"f:lastTrans|
              000001e0  69 74 69 6f 6e 54 69 6d  65 22 3a 7b 7d 2c 22 66  |itionTime":{},"f|
              000001f0  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000200  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000210  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000220  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000230  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000240  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000250  3a 70 68 61 73 65 22 3a  7b 7d 2c 22 66 3a 73 74  |:phase":{},"f:st|
              00000260  61 72 74 54 69 6d 65 22  3a 7b 7d 7d 7d           |artTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5d4vp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5d4vp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-74-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=9) "Succeeded",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845078,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845076,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845078,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845078,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845076,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.74.111",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.74.111"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852845076,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)({
              ExitCode: (int32) 0,
              Signal: (int32) 0,
              Reason: (string) (len=9) "Completed",
              Message: (string) "",
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852845076,
                  loc: (*time.Location)(<already shown>)
                }
              },
              FinishedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852845078,
                  loc: (*time.Location)(<already shown>)
                }
              },
              ContainerID: (string) (len=77) "containerd://0bd96b81c971c91e0cbdfe7fad9e6c69ec3f87273404dfea83501752b2eee59e"
            })
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://0bd96b81c971c91e0cbdfe7fad9e6c69ec3f87273404dfea83501752b2eee59e",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jun  1 13:24:38.999: INFO: pod: "test-deployment-64fd565c98-mg4pk":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-mg4pk",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=14) "deployment-479",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a10bdd21-97c1-45cf-af09-fa40accc06e4",
      ResourceVersion: (string) (len=5) "33121",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852845077,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852845080,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "2f874e4d-58b6-4e93-b6b3-f53c9bcd328f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845077,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  32 66 38 37 34 65 34 64  |uid\":\"2f874e4d|
              000000a0  2d 35 38 62 36 2d 34 65  39 33 2d 62 36 62 33 2d  |-58b6-4e93-b6b3-|
              000000b0  66 35 33 63 39 62 63 64  33 32 38 66 5c 22 7d 22  |f53c9bcd328f\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845077,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  36 2e 39 36 5c 22 7d 22  |2.168.126.96\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t67bx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t67bx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-80-202",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845077,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845077,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845077,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845077,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845077,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.80.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.80.202"
        }
      },
      PodIP: (string) (len=14) "192.168.126.96",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.126.96"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852845077,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852845077,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://d96ecb38ca64429fed073316f7ca8734fef54975e67a90dfb380819bca5ff27e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jun  1 13:24:39.000: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-479",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ff341fe9-8e3b-40eb-958c-2eb82195ad7b",
      ResourceVersion: (string) (len=5) "33117",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852845077,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "36e7dd30-565a-46a5-9270-0d1204d49bc6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845078,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 33 36 65 37  64 64 33 30 2d 35 36 35  |":\"36e7dd30-565|
              00000130  61 2d 34 36 61 35 2d 39  32 37 30 2d 30 64 31 32  |a-46a5-9270-0d12|
              00000140  30 34 64 34 39 62 63 36  5c 22 7d 22 3a 7b 7d 7d  |04d49bc6\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845078,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Jun  1 13:24:39.006: INFO: pod: "test-deployment-79ff746c4-sh8hv":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-sh8hv",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=14) "deployment-479",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ae5ad409-95a1-40fa-b94b-ca759001df76",
      ResourceVersion: (string) (len=5) "33133",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852845077,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852845079,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "ff341fe9-8e3b-40eb-958c-2eb82195ad7b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845077,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  66 66 33 34 31 66 65 39  |uid\":\"ff341fe9|
              000000a0  2d 38 65 33 62 2d 34 30  65 62 2d 39 35 38 63 2d  |-8e3b-40eb-958c-|
              000000b0  32 65 62 38 32 31 39 35  61 64 37 62 5c 22 7d 22  |2eb82195ad7b\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845078,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 31  38 2e 31 36 34 5c 22 7d  |2.168.118.164\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4d8dh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4d8dh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-74-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845078,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845077,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845078,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845078,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845077,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.74.111",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.74.111"
        }
      },
      PodIP: (string) (len=15) "192.168.118.164",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.118.164"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852845077,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852845077,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f8bfdaa74cd7aa416d1c667a5aff6ac34f275fc6722651064802ea66d33bf308",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jun  1 13:24:39.007: INFO: pod: "test-deployment-79ff746c4-w9clp":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-w9clp",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=14) "deployment-479",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f4837c04-066a-4843-9f75-281d27443309",
      ResourceVersion: (string) (len=5) "33116",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852845078,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "ff341fe9-8e3b-40eb-958c-2eb82195ad7b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845078,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  66 66 33 34 31 66 65 39  |uid\":\"ff341fe9|
              000000a0  2d 38 65 33 62 2d 34 30  65 62 2d 39 35 38 63 2d  |-8e3b-40eb-958c-|
              000000b0  32 65 62 38 32 31 39 35  61 64 37 62 5c 22 7d 22  |2eb82195ad7b\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845078,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 32  36 2e 37 37 5c 22 7d 22  |2.168.126.77\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9289z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9289z",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-80-202",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845078,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845078,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845078,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845078,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845078,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.80.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.80.202"
        }
      },
      PodIP: (string) (len=14) "192.168.126.77",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.126.77"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852845078,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852845078,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8dc06e4e7b542914b18e33f0f221ed2ea323544412f9de9ebe884dfd57b3ec8a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jun  1 13:24:39.008: INFO: ReplicaSet "test-deployment-7fcc79b8c7":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-7fcc79b8c7",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-479",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "868f0aec-edfb-4fb9-a152-8eb354a01fd9",
      ResourceVersion: (string) (len=5) "33031",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852845074,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "36e7dd30-565a-46a5-9270-0d1204d49bc6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845077,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 33 36 65 37  64 64 33 30 2d 35 36 35  |":\"36e7dd30-565|
              00000130  61 2d 34 36 61 35 2d 39  32 37 30 2d 30 64 31 32  |a-46a5-9270-0d12|
              00000140  30 34 64 34 39 62 63 36  5c 22 7d 22 3a 7b 7d 7d  |04d49bc6\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845077,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Jun  1 13:24:39.014: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-479" for this suite. @ 06/01/24 13:24:39.017
â€¢ [4.323 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:962
  STEP: Creating a kubernetes client @ 06/01/24 13:24:39.024
  Jun  1 13:24:39.024: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename statefulset @ 06/01/24 13:24:39.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:24:39.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:24:39.044
  STEP: Creating service test in namespace statefulset-3887 @ 06/01/24 13:24:39.047
  Jun  1 13:24:39.065: INFO: Found 0 stateful pods, waiting for 1
  E0601 13:24:39.783338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:40.783438      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:41.783619      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:42.783978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:43.784741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:44.785047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:45.785136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:46.785641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:47.785745      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:48.786223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:24:49.063: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 06/01/24 13:24:49.069
  W0601 13:24:49.077240      21 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Jun  1 13:24:49.085: INFO: Found 1 stateful pods, waiting for 2
  E0601 13:24:49.786326      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:50.786427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:51.786507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:52.786610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:53.786745      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:54.787018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:55.787123      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:56.787625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:57.787734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:24:58.788329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:24:59.086: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun  1 13:24:59.086: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 06/01/24 13:24:59.092
  STEP: Delete all of the StatefulSets @ 06/01/24 13:24:59.094
  STEP: Verify that StatefulSets have been deleted @ 06/01/24 13:24:59.105
  Jun  1 13:24:59.109: INFO: Deleting all statefulset in ns statefulset-3887
  Jun  1 13:24:59.125: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3887" for this suite. @ 06/01/24 13:24:59.133
â€¢ [20.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 06/01/24 13:24:59.14
  Jun  1 13:24:59.140: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename projected @ 06/01/24 13:24:59.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:24:59.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:24:59.159
  STEP: Creating a pod to test downward API volume plugin @ 06/01/24 13:24:59.162
  E0601 13:24:59.788430      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:00.788453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:01.789119      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:02.789165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 13:25:03.185
  Jun  1 13:25:03.188: INFO: Trying to get logs from node ip-172-31-74-111 pod downwardapi-volume-dccd5b0a-1ae4-4c37-ab35-4123b71bc3fe container client-container: <nil>
  STEP: delete the pod @ 06/01/24 13:25:03.195
  Jun  1 13:25:03.213: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4204" for this suite. @ 06/01/24 13:25:03.216
â€¢ [4.080 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3154
  STEP: Creating a kubernetes client @ 06/01/24 13:25:03.221
  Jun  1 13:25:03.221: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename services @ 06/01/24 13:25:03.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:25:03.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:25:03.239
  STEP: creating an Endpoint @ 06/01/24 13:25:03.244
  STEP: waiting for available Endpoint @ 06/01/24 13:25:03.249
  STEP: listing all Endpoints @ 06/01/24 13:25:03.25
  STEP: updating the Endpoint @ 06/01/24 13:25:03.254
  STEP: fetching the Endpoint @ 06/01/24 13:25:03.261
  STEP: patching the Endpoint @ 06/01/24 13:25:03.264
  STEP: fetching the Endpoint @ 06/01/24 13:25:03.271
  STEP: deleting the Endpoint by Collection @ 06/01/24 13:25:03.274
  STEP: waiting for Endpoint deletion @ 06/01/24 13:25:03.282
  STEP: fetching the Endpoint @ 06/01/24 13:25:03.283
  Jun  1 13:25:03.286: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4834" for this suite. @ 06/01/24 13:25:03.289
â€¢ [0.073 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 06/01/24 13:25:03.294
  Jun  1 13:25:03.294: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename pods @ 06/01/24 13:25:03.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:25:03.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:25:03.313
  STEP: creating pod @ 06/01/24 13:25:03.316
  E0601 13:25:03.790160      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:04.790245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:25:05.341: INFO: Pod pod-hostip-cd661881-402e-42b5-910b-9c921734a272 has hostIP: 172.31.74.111
  Jun  1 13:25:05.341: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7627" for this suite. @ 06/01/24 13:25:05.344
â€¢ [2.057 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 06/01/24 13:25:05.351
  Jun  1 13:25:05.351: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename subpath @ 06/01/24 13:25:05.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:25:05.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:25:05.379
  STEP: Setting up data @ 06/01/24 13:25:05.382
  STEP: Creating pod pod-subpath-test-configmap-ljfb @ 06/01/24 13:25:05.394
  STEP: Creating a pod to test atomic-volume-subpath @ 06/01/24 13:25:05.394
  E0601 13:25:05.790295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:06.790415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:07.791491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:08.791583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:09.792431      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:10.792513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:11.792628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:12.792723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:13.793029      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:14.793050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:15.793948      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:16.794191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:17.795013      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:18.795172      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:19.795445      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:20.795536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:21.796375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:22.796590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:23.796883      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:24.797124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:25.797623      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:26.798701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:27.799190      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:28.799433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 13:25:29.466
  Jun  1 13:25:29.470: INFO: Trying to get logs from node ip-172-31-80-202 pod pod-subpath-test-configmap-ljfb container test-container-subpath-configmap-ljfb: <nil>
  STEP: delete the pod @ 06/01/24 13:25:29.482
  STEP: Deleting pod pod-subpath-test-configmap-ljfb @ 06/01/24 13:25:29.495
  Jun  1 13:25:29.495: INFO: Deleting pod "pod-subpath-test-configmap-ljfb" in namespace "subpath-4492"
  Jun  1 13:25:29.499: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4492" for this suite. @ 06/01/24 13:25:29.502
â€¢ [24.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1764
  STEP: Creating a kubernetes client @ 06/01/24 13:25:29.508
  Jun  1 13:25:29.508: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename kubectl @ 06/01/24 13:25:29.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:25:29.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:25:29.528
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/01/24 13:25:29.53
  Jun  1 13:25:29.530: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-8419 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Jun  1 13:25:29.583: INFO: stderr: ""
  Jun  1 13:25:29.583: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 06/01/24 13:25:29.583
  Jun  1 13:25:29.587: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-8419 delete pods e2e-test-httpd-pod'
  E0601 13:25:29.799531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:30.799657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:25:31.306: INFO: stderr: ""
  Jun  1 13:25:31.306: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jun  1 13:25:31.306: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8419" for this suite. @ 06/01/24 13:25:31.311
â€¢ [1.810 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 06/01/24 13:25:31.318
  Jun  1 13:25:31.318: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename daemonsets @ 06/01/24 13:25:31.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:25:31.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:25:31.335
  STEP: Creating simple DaemonSet "daemon-set" @ 06/01/24 13:25:31.354
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/01/24 13:25:31.361
  Jun  1 13:25:31.363: INFO: DaemonSet pods can't tolerate node ip-172-31-13-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:25:31.363: INFO: DaemonSet pods can't tolerate node ip-172-31-68-201 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:25:31.366: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  1 13:25:31.366: INFO: Node ip-172-31-17-129 is running 0 daemon pod, expected 1
  E0601 13:25:31.800599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:25:32.366: INFO: DaemonSet pods can't tolerate node ip-172-31-13-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:25:32.366: INFO: DaemonSet pods can't tolerate node ip-172-31-68-201 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:25:32.368: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun  1 13:25:32.368: INFO: Node ip-172-31-17-129 is running 0 daemon pod, expected 1
  E0601 13:25:32.801502      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:25:33.367: INFO: DaemonSet pods can't tolerate node ip-172-31-13-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:25:33.367: INFO: DaemonSet pods can't tolerate node ip-172-31-68-201 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:25:33.376: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun  1 13:25:33.376: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 06/01/24 13:25:33.38
  Jun  1 13:25:33.395: INFO: DaemonSet pods can't tolerate node ip-172-31-13-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:25:33.395: INFO: DaemonSet pods can't tolerate node ip-172-31-68-201 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:25:33.399: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun  1 13:25:33.399: INFO: Node ip-172-31-80-202 is running 0 daemon pod, expected 1
  E0601 13:25:33.802198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:25:34.395: INFO: DaemonSet pods can't tolerate node ip-172-31-13-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:25:34.395: INFO: DaemonSet pods can't tolerate node ip-172-31-68-201 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:25:34.399: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun  1 13:25:34.399: INFO: Node ip-172-31-80-202 is running 0 daemon pod, expected 1
  E0601 13:25:34.802759      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:25:35.395: INFO: DaemonSet pods can't tolerate node ip-172-31-13-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:25:35.395: INFO: DaemonSet pods can't tolerate node ip-172-31-68-201 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:25:35.399: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun  1 13:25:35.399: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 06/01/24 13:25:35.401
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4559, will wait for the garbage collector to delete the pods @ 06/01/24 13:25:35.401
  Jun  1 13:25:35.462: INFO: Deleting DaemonSet.extensions daemon-set took: 6.165067ms
  Jun  1 13:25:35.562: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.146548ms
  E0601 13:25:35.802989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:36.803475      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:25:37.067: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  1 13:25:37.067: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun  1 13:25:37.069: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"33736"},"items":null}

  Jun  1 13:25:37.072: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"33736"},"items":null}

  Jun  1 13:25:37.084: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4559" for this suite. @ 06/01/24 13:25:37.086
â€¢ [5.777 seconds]
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 06/01/24 13:25:37.095
  Jun  1 13:25:37.095: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename cronjob @ 06/01/24 13:25:37.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:25:37.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:25:37.112
  STEP: Creating a suspended cronjob @ 06/01/24 13:25:37.114
  STEP: Ensuring no jobs are scheduled @ 06/01/24 13:25:37.12
  E0601 13:25:37.803656      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:38.803785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:39.804638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:40.805564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:41.805704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:42.806225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:43.806289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:44.806391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:45.807453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:46.807569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:47.807686      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:48.807789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:49.807893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:50.808011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:51.808218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:52.808326      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:53.808444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:54.808550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:55.808667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:56.809127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:57.809242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:58.810241      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:25:59.810320      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:00.810416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:01.810911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:02.811135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:03.811489      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:04.811599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:05.812306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:06.812822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:07.813792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:08.813871      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:09.814521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:10.814831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:11.815207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:12.815464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:13.815565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:14.815658      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:15.816499      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:16.816630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:17.816727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:18.816850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:19.817162      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:20.818216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:21.818800      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:22.818858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:23.818949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:24.819169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:25.820068      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:26.820291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:27.821070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:28.821164      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:29.822011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:30.822106      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:31.823209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:32.824049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:33.824146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:34.824225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:35.824335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:36.824722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:37.824834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:38.825268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:39.826198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:40.826310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:41.826403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:42.826608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:43.827143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:44.827240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:45.828061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:46.828613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:47.829439      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:48.829552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:49.829651      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:50.829746      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:51.829787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:52.829899      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:53.830526      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:54.830820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:55.831008      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:56.831152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:57.831358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:58.831473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:26:59.832417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:00.832528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:01.832652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:02.832772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:03.833169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:04.833271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:05.833682      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:06.833834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:07.834507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:08.834817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:09.834916      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:10.834989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:11.835840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:12.835934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:13.836186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:14.836507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:15.836651      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:16.836768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:17.837756      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:18.838188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:19.838301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:20.838518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:21.839085      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:22.839191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:23.839926      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:24.840131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:25.841157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:26.841251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:27.842202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:28.842401      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:29.843378      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:30.843471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:31.843559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:32.844290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:33.844388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:34.844721      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:35.845478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:36.845809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:37.845897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:38.846136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:39.846854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:40.847107      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:41.847819      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:42.848027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:43.848132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:44.849178      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:45.849858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:46.850836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:47.850955      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:48.852046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:49.852163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:50.852372      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:51.853313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:52.854192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:53.854465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:54.855385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:55.855860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:56.856100      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:57.856555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:58.856751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:27:59.857124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:00.857175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:01.857866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:02.858146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:03.859239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:04.859576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:05.859863      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:06.860879      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:07.861122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:08.861224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:09.861917      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:10.862036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:11.862148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:12.862355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:13.862776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:14.862998      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:15.863906      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:16.864837      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:17.865714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:18.865813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:19.866544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:20.866659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:21.867563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:22.867728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:23.868426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:24.868524      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:25.868962      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:26.869116      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:27.870118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:28.870219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:29.871054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:30.871451      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:31.872100      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:32.872892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:33.873075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:34.873154      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:35.873610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:36.873765      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:37.873839      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:38.873943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:39.874594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:40.874785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:41.875731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:42.875839      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:43.875934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:44.876106      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:45.876177      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:46.877202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:47.878217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:48.878325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:49.878855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:50.879047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:51.879825      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:52.879932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:53.880028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:54.881066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:55.881866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:56.882142      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:57.883084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:58.883187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:28:59.884247      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:00.884706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:01.884827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:02.885055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:03.885192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:04.886191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:05.887124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:06.887612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:07.887749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:08.887848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:09.888136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:10.888959      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:11.889661      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:12.890184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:13.890433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:14.890532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:15.891402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:16.891726      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:17.892216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:18.892317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:19.892479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:20.892670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:21.893131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:22.894196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:23.894291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:24.894388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:25.895275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:26.895384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:27.895536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:28.895994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:29.896372      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:30.896502      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:31.896619      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:32.896729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:33.897124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:34.898197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:35.898255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:36.898639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:37.899161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:38.899978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:39.901023      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:40.901144      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:41.901779      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:42.901878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:43.902878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:44.903084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:45.903415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:46.903676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:47.904340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:48.904435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:49.904779      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:50.905303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:51.906183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:52.907235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:53.907782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:54.908014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:55.908097      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:56.908409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:57.908550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:58.908867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:29:59.909136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:00.910216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:01.910316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:02.910534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:03.910650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:04.910751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:05.911821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:06.911970      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:07.912711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:08.913184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:09.913581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:10.913759      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:11.914733      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:12.914825      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:13.915914      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:14.916017      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:15.916255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:16.916645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:17.917620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:18.917724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:19.918228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:20.918320      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:21.918413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:22.918623      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:23.918702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:24.918806      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:25.918848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:26.919080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:27.920141      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:28.920243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:29.920721      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:30.920796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:31.921865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:32.921957      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:33.922038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:34.922267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:35.922897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:36.923170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 06/01/24 13:30:37.127
  STEP: Removing cronjob @ 06/01/24 13:30:37.13
  Jun  1 13:30:37.135: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5584" for this suite. @ 06/01/24 13:30:37.139
â€¢ [300.050 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 06/01/24 13:30:37.145
  Jun  1 13:30:37.145: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename events @ 06/01/24 13:30:37.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:30:37.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:30:37.163
  STEP: Create set of events @ 06/01/24 13:30:37.165
  Jun  1 13:30:37.171: INFO: created test-event-1
  Jun  1 13:30:37.177: INFO: created test-event-2
  Jun  1 13:30:37.181: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 06/01/24 13:30:37.181
  STEP: delete collection of events @ 06/01/24 13:30:37.183
  Jun  1 13:30:37.183: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 06/01/24 13:30:37.205
  Jun  1 13:30:37.205: INFO: requesting list of events to confirm quantity
  Jun  1 13:30:37.208: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1964" for this suite. @ 06/01/24 13:30:37.211
â€¢ [0.072 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:344
  STEP: Creating a kubernetes client @ 06/01/24 13:30:37.217
  Jun  1 13:30:37.217: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename kubectl @ 06/01/24 13:30:37.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:30:37.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:30:37.236
  STEP: creating a replication controller @ 06/01/24 13:30:37.238
  Jun  1 13:30:37.238: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-8651 create -f -'
  Jun  1 13:30:37.332: INFO: stderr: ""
  Jun  1 13:30:37.332: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/01/24 13:30:37.332
  Jun  1 13:30:37.332: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-8651 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun  1 13:30:37.382: INFO: stderr: ""
  Jun  1 13:30:37.382: INFO: stdout: "update-demo-nautilus-4klmv update-demo-nautilus-hgbr2 "
  Jun  1 13:30:37.382: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-8651 get pods update-demo-nautilus-4klmv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun  1 13:30:37.427: INFO: stderr: ""
  Jun  1 13:30:37.427: INFO: stdout: ""
  Jun  1 13:30:37.427: INFO: update-demo-nautilus-4klmv is created but not running
  E0601 13:30:37.924167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:38.924274      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:39.924399      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:40.924497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:41.924631      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:30:42.428: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-8651 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun  1 13:30:42.475: INFO: stderr: ""
  Jun  1 13:30:42.475: INFO: stdout: "update-demo-nautilus-4klmv update-demo-nautilus-hgbr2 "
  Jun  1 13:30:42.475: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-8651 get pods update-demo-nautilus-4klmv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun  1 13:30:42.521: INFO: stderr: ""
  Jun  1 13:30:42.521: INFO: stdout: "true"
  Jun  1 13:30:42.521: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-8651 get pods update-demo-nautilus-4klmv -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun  1 13:30:42.565: INFO: stderr: ""
  Jun  1 13:30:42.565: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun  1 13:30:42.565: INFO: validating pod update-demo-nautilus-4klmv
  Jun  1 13:30:42.580: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun  1 13:30:42.580: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun  1 13:30:42.580: INFO: update-demo-nautilus-4klmv is verified up and running
  Jun  1 13:30:42.581: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-8651 get pods update-demo-nautilus-hgbr2 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun  1 13:30:42.625: INFO: stderr: ""
  Jun  1 13:30:42.625: INFO: stdout: "true"
  Jun  1 13:30:42.625: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-8651 get pods update-demo-nautilus-hgbr2 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun  1 13:30:42.671: INFO: stderr: ""
  Jun  1 13:30:42.671: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun  1 13:30:42.671: INFO: validating pod update-demo-nautilus-hgbr2
  Jun  1 13:30:42.677: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun  1 13:30:42.677: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun  1 13:30:42.677: INFO: update-demo-nautilus-hgbr2 is verified up and running
  STEP: using delete to clean up resources @ 06/01/24 13:30:42.677
  Jun  1 13:30:42.678: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-8651 delete --grace-period=0 --force -f -'
  Jun  1 13:30:42.728: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun  1 13:30:42.728: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Jun  1 13:30:42.728: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-8651 get rc,svc -l name=update-demo --no-headers'
  Jun  1 13:30:42.795: INFO: stderr: "No resources found in kubectl-8651 namespace.\n"
  Jun  1 13:30:42.795: INFO: stdout: ""
  Jun  1 13:30:42.795: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-8651 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jun  1 13:30:42.880: INFO: stderr: ""
  Jun  1 13:30:42.880: INFO: stdout: ""
  Jun  1 13:30:42.880: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8651" for this suite. @ 06/01/24 13:30:42.884
â€¢ [5.674 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 06/01/24 13:30:42.892
  Jun  1 13:30:42.892: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename chunking @ 06/01/24 13:30:42.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:30:42.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:30:42.918
  E0601 13:30:42.926840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a large number of resources @ 06/01/24 13:30:42.94
  E0601 13:30:43.927248      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:44.928021      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:45.928427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:46.929135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:47.929227      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:48.929708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:49.929948      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:50.930031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:51.931084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:52.931180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:53.931243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:54.931614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:55.932348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:56.932504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:57.932617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:58.933037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:30:59.933510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 06/01/24 13:31:00.598
  Jun  1 13:31:00.649: INFO: Retrieved 40/40 results with rv 34890 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ4OTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 06/01/24 13:31:00.649
  E0601 13:31:00.933606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:01.933731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:02.933814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:03.934795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:04.934899      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:05.935905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:06.936949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:07.937140      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:08.937220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:09.938183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:10.938256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:11.938592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:12.938876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:13.939377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:14.939295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:15.939612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:16.939878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:17.940450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:18.940554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:19.940753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:31:20.655: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ4OTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0601 13:31:20.941595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:21.941856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:22.942185      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:23.942377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:24.942580      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:25.943505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:26.943851      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:27.944045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:28.944119      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:29.944570      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:30.945073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:31.945148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:32.946184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:33.946376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:34.946549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:35.947205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:36.948163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:37.948336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:38.948954      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:39.949129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:31:40.654: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ4OTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0601 13:31:40.950203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:41.950527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:42.950701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:43.950802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:44.951136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:45.951461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:46.951514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:47.951689      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:48.951897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:49.952108      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:50.952333      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:51.952449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:52.952648      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:53.952827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:54.953055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:55.953961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:56.954804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:57.954911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:58.955014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:31:59.955205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:32:00.655: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ4OTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0601 13:32:00.956042      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:01.956703      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:02.956813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:03.957072      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:04.957135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:05.957835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:06.957903      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:07.958600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:08.958699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:09.958874      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:10.959071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:11.959183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:12.959289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:13.959488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:14.959687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:15.960010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:16.960433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:17.960626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:18.960745      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:19.960856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:32:20.654: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ4OTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0601 13:32:20.961648      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:21.962581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:22.962708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:23.962821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:24.963012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:25.964038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:26.964954      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:27.965128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:28.966213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:29.966407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:30.967082      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:31.968153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:32.968256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:33.969300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:34.970214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:35.971099      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:36.971512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:37.971905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:38.971991      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:39.972165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:32:40.655: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ4OTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0601 13:32:40.973114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:41.973143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:42.973323      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:43.973538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:44.974395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:45.974480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:46.974833      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:47.974880      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:48.974974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:49.975453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:50.975539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:51.975876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:52.975986      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:53.976081      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:54.976176      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:55.976978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:56.977124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:57.977214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:58.977319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:32:59.978204      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:33:00.654: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ4OTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0601 13:33:00.978886      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:01.979006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:02.979100      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:03.979889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:04.980062      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:05.980885      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:06.981027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:07.981130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:08.982206      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:09.982302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:10.982808      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:11.982933      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:12.983874      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:13.984295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:14.984104      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:15.984444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:16.984556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:17.984648      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:18.984752      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:19.985310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:33:20.654: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ4OTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0601 13:33:20.986188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:21.986295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:22.986409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:23.986586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:24.986781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:25.987083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:26.987195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:27.987446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:28.988162      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:29.988279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:30.988379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:31.988487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:32.989509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:33.989585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:34.990189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:35.990524      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:36.991601      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:37.991791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:38.991889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:39.992389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:33:40.656: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ4OTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0601 13:33:40.993353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:41.993437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:42.994184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:43.994295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:44.995141      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:45.995998      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:46.996113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:47.996373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:48.996577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:49.996772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:50.996862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:51.996982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:52.997127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:53.998201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:54.999266      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:55.999999      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:57.001061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:58.001138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:33:59.001202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:00.002224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:34:00.654: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ4OTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0601 13:34:01.002763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:02.003072      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:03.003157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:04.003343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:05.003413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:06.003757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:07.003922      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:08.004022      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:09.004126      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:10.004217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:11.005118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:12.005154      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:13.006201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:14.006308      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:15.006572      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:16.007618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:17.007869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:18.008059      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:19.008256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:20.008392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:34:20.655: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ4OTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0601 13:34:21.009261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:22.009350      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:23.009453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:24.010221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:25.010413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:26.010760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:27.010894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:28.011000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:29.011291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:30.011427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:31.011519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:32.011616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:33.011826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:34.011914      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:35.012017      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:36.012979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:37.013062      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:38.013123      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:39.013159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:40.014193      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:34:40.655: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ4OTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0601 13:34:41.015295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:42.016005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:43.016124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:44.016213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:45.016417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:46.016745      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:47.017108      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:48.017178      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:49.018186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:50.018378      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:51.018594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:52.018939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:53.019527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:54.019693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:55.019902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:56.019985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:57.021048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:58.021136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:34:59.022197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:00.022297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:35:00.653: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ4OTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0601 13:35:01.023269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:02.024024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:03.024112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:04.024207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:05.024328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:06.024960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:07.026075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:08.026337      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:09.026434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:10.026647      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:11.026755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:12.026990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:13.027091      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:14.027314      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:15.027423      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:16.028343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:17.028835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:18.029384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:19.029481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:20.030301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:35:20.655: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ4OTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0601 13:35:21.030861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:22.030963      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:23.031204      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:24.031520      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:25.032395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:26.032602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:27.032702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:28.032751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:29.032972      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:30.033140      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:31.033231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:32.034195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:33.034690      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:34.034738      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:35.034894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:36.035479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:37.035580      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:38.035752      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:39.035985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:40.036189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:35:40.654: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ4OTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0601 13:35:41.036431      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:42.036644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:43.036808      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:44.037111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:45.037153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:46.037528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:47.037622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:48.038194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:49.038374      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:50.038566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:51.038673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:52.038776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:53.038970      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:54.039689      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:55.039892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:56.040228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:57.040344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:58.040510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:35:59.040699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:00.040848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:36:00.655: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ4OTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0601 13:36:01.041132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:02.041219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:03.042201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:04.042933      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:05.043047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:06.043363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:07.044335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:08.045115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:09.045218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:10.046191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:11.046380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:12.046485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:13.046595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:14.047121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:15.047233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:16.047612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:17.047744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:18.048767      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:19.048863      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:20.049331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:36:20.654: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ4OTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0601 13:36:21.050198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:22.050595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:23.050819      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:24.051009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:25.051118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:26.051808      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:27.052794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:28.052895      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:29.053118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:30.053223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:31.054220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:32.054304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:33.054423      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:34.055074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:35.055254      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:36.055350      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:37.055728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:38.055939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:39.056129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:40.056331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:36:40.654: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ4OTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0601 13:36:41.056409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:42.056758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:43.057121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:44.057325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:45.057600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:46.057626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:47.058442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:48.058547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:49.058634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:50.058830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:51.058933      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:52.059197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:53.060203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:54.060399      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:55.060858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:56.061010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:57.061140      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:58.062191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:36:59.062304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:00.062536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:37:00.654: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ4OTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0601 13:37:01.062646      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:02.062943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:03.063046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:04.063344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:05.063751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:06.064008      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:07.064109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:08.064965      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:09.065119      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:10.065218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:11.065317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:12.065412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:13.066392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:14.066777      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:15.066650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:16.067068      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:17.067333      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:18.067458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:19.067537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:20.067745      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:37:20.654: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ4OTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0601 13:37:21.068512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:22.068787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:23.068881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:24.069124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:25.069219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:26.069425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:27.069552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:28.070203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:29.070757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:30.070908      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:31.071143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:32.071176      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:33.071363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:34.071571      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:35.071757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:36.072521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:37.072617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:38.072720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:39.073794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:40.073890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:37:40.656: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ4OTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0601 13:37:41.074342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:42.075195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:43.075287      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:44.075912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:45.076110      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:46.076962      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:47.077055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:48.077135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:49.078185      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:50.078382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:51.078604      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:52.078690      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:53.078887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:54.079112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:55.079278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:56.079528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:57.079623      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:58.079824      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:37:59.080677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:00.080766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:38:00.655: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ4OTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0601 13:38:01.081645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:02.082716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:03.082906      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:04.083546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:05.083641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:06.083761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:07.083850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:08.083943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:09.085030      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:10.085121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:11.085223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:12.085326      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:13.085421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:14.086416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:15.086624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:16.087033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:17.088127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:18.088241      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:19.088437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:20.088641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:38:20.660: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ4OTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0601 13:38:21.088748      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:22.089030      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:23.089153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:24.089251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:25.089354      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:26.089401      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:27.089829      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:28.090191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:29.090286      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:30.090490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:31.090763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:32.091010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:33.091107      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:34.091281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:35.091749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:36.091858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:37.091955      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:38.092056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:39.092150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:40.092344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:38:40.655: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ4OTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0601 13:38:41.092952      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:42.093050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:43.093306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:44.093402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:45.094191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:46.095020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:47.096092      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:48.096214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:49.096399      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:50.096511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:51.096610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:52.096934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:53.097119      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:54.098186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:55.098367      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:56.099080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:57.099168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:58.099580      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:38:59.099682      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:00.099862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:39:00.654: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ4OTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0601 13:39:01.100037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:02.100890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:03.101122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:04.101219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:05.102197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:06.102903      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:07.103054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:08.103295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:09.103513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:10.103659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:11.104442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:12.104598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:13.104796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:14.105006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:15.105149      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:16.106118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:17.106209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:18.107135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:19.107229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:20.107331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:39:20.654: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ4OTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0601 13:39:21.107425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:22.107736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:23.108685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:24.108806      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:25.109066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:26.110141      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:27.111123      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:28.111243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:29.112037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:30.112141      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:31.112356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:32.112632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:33.112745      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:34.113496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:35.114188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:36.114342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:37.114431      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:38.114630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:39.114815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:40.115070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:39:40.654: INFO: got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  Jun  1 13:39:40.654: INFO: Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 06/01/24 13:39:40.654
  STEP: retrieving all remaining pages @ 06/01/24 13:39:40.658
  Jun  1 13:39:40.662: INFO: Retrieved 40/40 results with rv 35879 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU4NzksInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  Jun  1 13:39:40.665: INFO: Retrieved 40/40 results with rv 35879 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU4NzksInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  Jun  1 13:39:40.669: INFO: Retrieved 40/40 results with rv 35879 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU4NzksInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  Jun  1 13:39:40.673: INFO: Retrieved 40/40 results with rv 35879 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU4NzksInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  Jun  1 13:39:40.676: INFO: Retrieved 40/40 results with rv 35879 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU4NzksInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  Jun  1 13:39:40.680: INFO: Retrieved 40/40 results with rv 35879 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU4NzksInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  Jun  1 13:39:40.684: INFO: Retrieved 40/40 results with rv 35879 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzU4NzksInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  Jun  1 13:39:40.686: INFO: Retrieved 40/40 results with rv 35879 and continue 
  Jun  1 13:39:40.686: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-7544" for this suite. @ 06/01/24 13:39:40.69
â€¢ [537.803 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 06/01/24 13:39:40.695
  Jun  1 13:39:40.695: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename replication-controller @ 06/01/24 13:39:40.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:39:40.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:39:40.714
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 06/01/24 13:39:40.717
  E0601 13:39:41.115182      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:42.115262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 06/01/24 13:39:42.738
  STEP: Then the orphan pod is adopted @ 06/01/24 13:39:42.745
  E0601 13:39:43.115807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:39:43.753: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-567" for this suite. @ 06/01/24 13:39:43.756
â€¢ [3.069 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 06/01/24 13:39:43.764
  Jun  1 13:39:43.764: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename deployment @ 06/01/24 13:39:43.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:39:43.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:39:43.781
  Jun  1 13:39:43.784: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Jun  1 13:39:43.795: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0601 13:39:44.116373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:45.116564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:46.116667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:47.117002      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:48.117236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:39:48.798: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/01/24 13:39:48.798
  Jun  1 13:39:48.798: INFO: Creating deployment "test-rolling-update-deployment"
  Jun  1 13:39:48.803: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Jun  1 13:39:48.810: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0601 13:39:49.117357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:50.117453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:39:50.818: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Jun  1 13:39:50.822: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Jun  1 13:39:50.830: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1466",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6b418e23-d93c-4713-b245-d5dd8acb3b15",
      ResourceVersion: (string) (len=5) "36394",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852845988,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845989,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845989,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-7ddb77f68b\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun  1 13:39:50.833: INFO: New ReplicaSet "test-rolling-update-deployment-7ddb77f68b" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1466",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "df005f50-58e6-4e7d-9965-73c01bac4da6",
      ResourceVersion: (string) (len=5) "36384",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852845988,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "6b418e23-d93c-4713-b245-d5dd8acb3b15",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 62 34 31 38 65  32 33 2d 64 39 33 63 2d  |\"6b418e23-d93c-|
              00000120  34 37 31 33 2d 62 32 34  35 2d 64 35 64 64 38 61  |4713-b245-d5dd8a|
              00000130  63 62 33 62 31 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |cb3b15\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845989,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun  1 13:39:50.835: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Jun  1 13:39:50.835: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1466",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "df11cddc-e7aa-4ed8-85b9-7010be05d185",
      ResourceVersion: (string) (len=5) "36393",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852845983,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "6b418e23-d93c-4713-b245-d5dd8acb3b15",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845983,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845989,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 36 62 34 31 38 65 32  |"uid\":\"6b418e2|
              000000b0  33 2d 64 39 33 63 2d 34  37 31 33 2d 62 32 34 35  |3-d93c-4713-b245|
              000000c0  2d 64 35 64 64 38 61 63  62 33 62 31 35 5c 22 7d  |-d5dd8acb3b15\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845989,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun  1 13:39:50.840: INFO: Pod "test-rolling-update-deployment-7ddb77f68b-8x8vm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-7ddb77f68b-8x8vm",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-7ddb77f68b-",
      Namespace: (string) (len=15) "deployment-1466",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c6387f66-2a2e-4107-a0f6-2ad4a6f80694",
      ResourceVersion: (string) (len=5) "36383",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852845988,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
          UID: (types.UID) (len=36) "df005f50-58e6-4e7d-9965-73c01bac4da6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 66  30 30 35 66 35 30 2d 35  |d\":\"df005f50-5|
              00000090  38 65 36 2d 34 65 37 64  2d 39 39 36 35 2d 37 33  |8e6-4e7d-9965-73|
              000000a0  63 30 31 62 61 63 34 64  61 36 5c 22 7d 22 3a 7b  |c01bac4da6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845989,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 31  38 2e 31 35 33 5c 22 7d  |2.168.118.153\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dx8ts",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dx8ts",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-74-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845989,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845989,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845989,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852845988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.74.111",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.74.111"
        }
      },
      PodIP: (string) (len=15) "192.168.118.153",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.118.153"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852845988,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63852845989,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://633d61c32771b057e3e09bd246134bd137712a79bc9e0e1c5278dbced1df6ee6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  1 13:39:50.842: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1466" for this suite. @ 06/01/24 13:39:50.846
â€¢ [7.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 06/01/24 13:39:50.854
  Jun  1 13:39:50.854: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename services @ 06/01/24 13:39:50.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:39:50.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:39:50.872
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-1735 @ 06/01/24 13:39:50.875
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 06/01/24 13:39:50.882
  STEP: creating service externalsvc in namespace services-1735 @ 06/01/24 13:39:50.882
  STEP: creating replication controller externalsvc in namespace services-1735 @ 06/01/24 13:39:50.897
  I0601 13:39:50.908244      21 runners.go:197] Created replication controller with name: externalsvc, namespace: services-1735, replica count: 2
  E0601 13:39:51.117761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:52.118208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:53.118765      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0601 13:39:53.959024      21 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 06/01/24 13:39:53.963
  Jun  1 13:39:53.980: INFO: Creating new exec pod
  E0601 13:39:54.119749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:55.119868      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:39:55.993: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-1735 exec execpod2qcdm -- /bin/sh -x -c nslookup clusterip-service.services-1735.svc.cluster.local'
  Jun  1 13:39:56.098: INFO: stderr: "+ nslookup clusterip-service.services-1735.svc.cluster.local\n"
  Jun  1 13:39:56.098: INFO: stdout: "Server:\t\t10.152.183.155\nAddress:\t10.152.183.155#53\n\nclusterip-service.services-1735.svc.cluster.local\tcanonical name = externalsvc.services-1735.svc.cluster.local.\nName:\texternalsvc.services-1735.svc.cluster.local\nAddress: 10.152.183.250\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-1735, will wait for the garbage collector to delete the pods @ 06/01/24 13:39:56.098
  E0601 13:39:56.120607      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:39:56.158: INFO: Deleting ReplicationController externalsvc took: 5.448057ms
  Jun  1 13:39:56.259: INFO: Terminating ReplicationController externalsvc pods took: 100.980632ms
  E0601 13:39:57.121246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:58.121677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:39:59.121756      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:39:59.477: INFO: Cleaning up the ClusterIP to ExternalName test service
  Jun  1 13:39:59.487: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1735" for this suite. @ 06/01/24 13:39:59.494
â€¢ [8.647 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 06/01/24 13:39:59.501
  Jun  1 13:39:59.501: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename replicaset @ 06/01/24 13:39:59.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:39:59.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:39:59.52
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 06/01/24 13:39:59.523
  E0601 13:40:00.121864      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:01.121912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 06/01/24 13:40:01.542
  STEP: Then the orphan pod is adopted @ 06/01/24 13:40:01.549
  E0601 13:40:02.122406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 06/01/24 13:40:02.555
  Jun  1 13:40:02.558: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 06/01/24 13:40:02.571
  Jun  1 13:40:02.580: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5026" for this suite. @ 06/01/24 13:40:02.587
â€¢ [3.097 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 06/01/24 13:40:02.598
  Jun  1 13:40:02.598: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename kubelet-test @ 06/01/24 13:40:02.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:40:02.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:40:02.625
  E0601 13:40:03.122531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:04.122612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:40:04.673: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1491" for this suite. @ 06/01/24 13:40:04.676
â€¢ [2.086 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 06/01/24 13:40:04.684
  Jun  1 13:40:04.684: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename secrets @ 06/01/24 13:40:04.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:40:04.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:40:04.708
  STEP: Creating secret with name secret-test-04fc0072-663c-4bc2-862d-a04ad03302ac @ 06/01/24 13:40:04.71
  STEP: Creating a pod to test consume secrets @ 06/01/24 13:40:04.715
  E0601 13:40:05.123512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:06.123595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 13:40:06.733
  Jun  1 13:40:06.737: INFO: Trying to get logs from node ip-172-31-80-202 pod pod-secrets-5cdebaf3-b27d-459f-8209-dde4996912d8 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/01/24 13:40:06.753
  Jun  1 13:40:06.767: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1675" for this suite. @ 06/01/24 13:40:06.771
â€¢ [2.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 06/01/24 13:40:06.779
  Jun  1 13:40:06.779: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename daemonsets @ 06/01/24 13:40:06.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:40:06.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:40:06.797
  STEP: Creating simple DaemonSet "daemon-set" @ 06/01/24 13:40:06.833
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/01/24 13:40:06.84
  Jun  1 13:40:06.845: INFO: DaemonSet pods can't tolerate node ip-172-31-13-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:40:06.845: INFO: DaemonSet pods can't tolerate node ip-172-31-68-201 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:40:06.849: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  1 13:40:06.849: INFO: Node ip-172-31-17-129 is running 0 daemon pod, expected 1
  E0601 13:40:07.124235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:40:07.845: INFO: DaemonSet pods can't tolerate node ip-172-31-13-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:40:07.845: INFO: DaemonSet pods can't tolerate node ip-172-31-68-201 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:40:07.849: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun  1 13:40:07.849: INFO: Node ip-172-31-17-129 is running 0 daemon pod, expected 1
  E0601 13:40:08.124663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:40:08.846: INFO: DaemonSet pods can't tolerate node ip-172-31-13-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:40:08.846: INFO: DaemonSet pods can't tolerate node ip-172-31-68-201 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:40:08.849: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun  1 13:40:08.849: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 06/01/24 13:40:08.851
  Jun  1 13:40:08.856: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 06/01/24 13:40:08.856
  Jun  1 13:40:08.864: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 06/01/24 13:40:08.864
  Jun  1 13:40:08.865: INFO: Observed &DaemonSet event: ADDED
  Jun  1 13:40:08.865: INFO: Observed &DaemonSet event: MODIFIED
  Jun  1 13:40:08.865: INFO: Observed &DaemonSet event: MODIFIED
  Jun  1 13:40:08.866: INFO: Observed &DaemonSet event: MODIFIED
  Jun  1 13:40:08.866: INFO: Observed &DaemonSet event: MODIFIED
  Jun  1 13:40:08.866: INFO: Found daemon set daemon-set in namespace daemonsets-3094 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jun  1 13:40:08.866: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 06/01/24 13:40:08.866
  STEP: watching for the daemon set status to be patched @ 06/01/24 13:40:08.873
  Jun  1 13:40:08.875: INFO: Observed &DaemonSet event: ADDED
  Jun  1 13:40:08.875: INFO: Observed &DaemonSet event: MODIFIED
  Jun  1 13:40:08.875: INFO: Observed &DaemonSet event: MODIFIED
  Jun  1 13:40:08.875: INFO: Observed &DaemonSet event: MODIFIED
  Jun  1 13:40:08.875: INFO: Observed &DaemonSet event: MODIFIED
  Jun  1 13:40:08.875: INFO: Observed daemon set daemon-set in namespace daemonsets-3094 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jun  1 13:40:08.875: INFO: Observed &DaemonSet event: MODIFIED
  Jun  1 13:40:08.876: INFO: Found daemon set daemon-set in namespace daemonsets-3094 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Jun  1 13:40:08.876: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 06/01/24 13:40:08.878
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3094, will wait for the garbage collector to delete the pods @ 06/01/24 13:40:08.878
  Jun  1 13:40:08.938: INFO: Deleting DaemonSet.extensions daemon-set took: 6.083869ms
  Jun  1 13:40:09.039: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.686449ms
  E0601 13:40:09.124942      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:10.125142      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:40:10.544: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  1 13:40:10.544: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun  1 13:40:10.547: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"36769"},"items":null}

  Jun  1 13:40:10.550: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"36769"},"items":null}

  Jun  1 13:40:10.562: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3094" for this suite. @ 06/01/24 13:40:10.566
â€¢ [3.793 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 06/01/24 13:40:10.572
  Jun  1 13:40:10.572: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename cronjob @ 06/01/24 13:40:10.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:40:10.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:40:10.591
  STEP: Creating a cronjob @ 06/01/24 13:40:10.593
  STEP: Ensuring more than one job is running at a time @ 06/01/24 13:40:10.598
  E0601 13:40:11.126212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:12.126405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:13.126522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:14.126606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:15.126697      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:16.126809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:17.127740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:18.127824      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:19.127940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:20.128169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:21.128837      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:22.129128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:23.129316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:24.129405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:25.130083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:26.131139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:27.131999      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:28.132110      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:29.132807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:30.132924      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:31.133054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:32.133519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:33.134222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:34.134331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:35.134991      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:36.135066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:37.136033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:38.136125      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:39.137175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:40.137251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:41.137353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:42.137448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:43.138109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:44.138373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:45.138475      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:46.139222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:47.139427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:48.139642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:49.139748      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:50.139823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:51.139948      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:52.140028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:53.140164      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:54.140393      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:55.140505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:56.140598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:57.141165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:58.141264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:40:59.142038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:00.142267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:01.142357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:02.142446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:03.142561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:04.142669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:05.143393      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:06.143655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:07.143762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:08.143890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:09.144335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:10.144472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:11.144585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:12.144676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:13.145523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:14.145749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:15.145907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:16.146187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:17.146953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:18.147054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:19.147898      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:20.148151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:21.148499      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:22.149515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:23.150291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:24.150384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:25.151069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:26.151119      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:27.151198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:28.151368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:29.151486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:30.151726      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:31.152193      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:32.152533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:33.152630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:34.152850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:35.153711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:36.153819      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:37.154205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:38.154962      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:39.155050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:40.155228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:41.155410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:42.155484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:43.156212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:44.156332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:45.157168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:46.158194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:47.158700      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:48.158873      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:49.159301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:50.159577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:51.159676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:52.159811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:53.159896      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:54.160086      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:55.161087      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:56.161165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:57.161956      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:58.162046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:41:59.162150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:42:00.162353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 06/01/24 13:42:00.603
  STEP: Removing cronjob @ 06/01/24 13:42:00.605
  Jun  1 13:42:00.616: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6538" for this suite. @ 06/01/24 13:42:00.619
â€¢ [110.056 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 06/01/24 13:42:00.629
  Jun  1 13:42:00.629: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename kubelet-test @ 06/01/24 13:42:00.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:42:00.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:42:00.655
  STEP: Waiting for pod completion @ 06/01/24 13:42:00.665
  E0601 13:42:01.162636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:42:02.162716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:42:03.163492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:42:04.163600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:42:04.692: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3946" for this suite. @ 06/01/24 13:42:04.696
â€¢ [4.073 seconds]
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 06/01/24 13:42:04.702
  Jun  1 13:42:04.702: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename endpointslicemirroring @ 06/01/24 13:42:04.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:42:04.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:42:04.721
  STEP: mirroring a new custom Endpoint @ 06/01/24 13:42:04.732
  Jun  1 13:42:04.743: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  E0601 13:42:05.164389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:42:06.164491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 06/01/24 13:42:06.747
  Jun  1 13:42:06.756: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  E0601 13:42:07.165043      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:42:08.165154      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring deletion of a custom Endpoint @ 06/01/24 13:42:08.76
  Jun  1 13:42:08.769: INFO: Waiting for 0 EndpointSlices to exist, got 1
  E0601 13:42:09.166223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:42:10.166294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:42:10.774: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-7701" for this suite. @ 06/01/24 13:42:10.779
â€¢ [6.085 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 06/01/24 13:42:10.787
  Jun  1 13:42:10.787: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename emptydir-wrapper @ 06/01/24 13:42:10.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:42:10.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:42:10.807
  STEP: Creating 50 configmaps @ 06/01/24 13:42:10.809
  STEP: Creating RC which spawns configmap-volume pods @ 06/01/24 13:42:11.043
  Jun  1 13:42:11.152: INFO: Pod name wrapped-volume-race-dad3de61-0fe9-44bb-b264-73b0a85723f7: Found 1 pods out of 5
  E0601 13:42:11.167150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:42:12.167555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:42:13.168313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:42:14.168505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:42:15.169511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:42:16.159: INFO: Pod name wrapped-volume-race-dad3de61-0fe9-44bb-b264-73b0a85723f7: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 06/01/24 13:42:16.159
  E0601 13:42:16.169456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 06/01/24 13:42:16.178
  Jun  1 13:42:16.191: INFO: Pod name wrapped-volume-race-ffef07e1-fe32-4c90-8063-f51c35f6426b: Found 0 pods out of 5
  E0601 13:42:17.169920      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:42:18.170044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:42:19.170279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:42:20.170523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:42:21.170606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:42:21.199: INFO: Pod name wrapped-volume-race-ffef07e1-fe32-4c90-8063-f51c35f6426b: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 06/01/24 13:42:21.199
  STEP: Creating RC which spawns configmap-volume pods @ 06/01/24 13:42:21.219
  Jun  1 13:42:21.234: INFO: Pod name wrapped-volume-race-994b1754-7cba-4022-a616-983474709727: Found 0 pods out of 5
  E0601 13:42:22.170716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:42:23.171010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:42:24.171120      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:42:25.171346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:42:26.172398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:42:26.246: INFO: Pod name wrapped-volume-race-994b1754-7cba-4022-a616-983474709727: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 06/01/24 13:42:26.246
  STEP: deleting ReplicationController wrapped-volume-race-994b1754-7cba-4022-a616-983474709727 in namespace emptydir-wrapper-6874, will wait for the garbage collector to delete the pods @ 06/01/24 13:42:26.264
  Jun  1 13:42:26.327: INFO: Deleting ReplicationController wrapped-volume-race-994b1754-7cba-4022-a616-983474709727 took: 8.661139ms
  Jun  1 13:42:26.428: INFO: Terminating ReplicationController wrapped-volume-race-994b1754-7cba-4022-a616-983474709727 pods took: 100.935883ms
  E0601 13:42:27.172574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-ffef07e1-fe32-4c90-8063-f51c35f6426b in namespace emptydir-wrapper-6874, will wait for the garbage collector to delete the pods @ 06/01/24 13:42:28.029
  Jun  1 13:42:28.093: INFO: Deleting ReplicationController wrapped-volume-race-ffef07e1-fe32-4c90-8063-f51c35f6426b took: 9.244763ms
  E0601 13:42:28.173633      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:42:28.194: INFO: Terminating ReplicationController wrapped-volume-race-ffef07e1-fe32-4c90-8063-f51c35f6426b pods took: 100.758374ms
  E0601 13:42:29.173953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-dad3de61-0fe9-44bb-b264-73b0a85723f7 in namespace emptydir-wrapper-6874, will wait for the garbage collector to delete the pods @ 06/01/24 13:42:29.295
  Jun  1 13:42:29.357: INFO: Deleting ReplicationController wrapped-volume-race-dad3de61-0fe9-44bb-b264-73b0a85723f7 took: 9.148376ms
  Jun  1 13:42:29.458: INFO: Terminating ReplicationController wrapped-volume-race-dad3de61-0fe9-44bb-b264-73b0a85723f7 pods took: 100.280959ms
  E0601 13:42:30.174380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 06/01/24 13:42:30.959
  E0601 13:42:31.174820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:42:31.248: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-6874" for this suite. @ 06/01/24 13:42:31.253
â€¢ [20.471 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 06/01/24 13:42:31.259
  Jun  1 13:42:31.259: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename dns @ 06/01/24 13:42:31.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:42:31.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:42:31.281
  STEP: Creating a test headless service @ 06/01/24 13:42:31.284
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2804.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-2804.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2804.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-2804.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2804.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-2804.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2804.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-2804.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2804.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-2804.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2804.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-2804.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 235.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.235_udp@PTR;check="$$(dig +tcp +noall +answer +search 235.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.235_tcp@PTR;sleep 1; done
   @ 06/01/24 13:42:31.304
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2804.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-2804.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2804.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-2804.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2804.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-2804.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2804.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-2804.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2804.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-2804.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2804.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-2804.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 235.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.235_udp@PTR;check="$$(dig +tcp +noall +answer +search 235.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.235_tcp@PTR;sleep 1; done
   @ 06/01/24 13:42:31.304
  STEP: creating a pod to probe DNS @ 06/01/24 13:42:31.304
  STEP: submitting the pod to kubernetes @ 06/01/24 13:42:31.304
  E0601 13:42:32.174950      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:42:33.175065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/01/24 13:42:33.33
  STEP: looking for the results for each expected name from probers @ 06/01/24 13:42:33.334
  Jun  1 13:42:33.337: INFO: Unable to read wheezy_udp@dns-test-service.dns-2804.svc.cluster.local from pod dns-2804/dns-test-8657be6e-b7a4-4968-bb8c-ac0f6adcd5ce: the server could not find the requested resource (get pods dns-test-8657be6e-b7a4-4968-bb8c-ac0f6adcd5ce)
  Jun  1 13:42:33.342: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2804.svc.cluster.local from pod dns-2804/dns-test-8657be6e-b7a4-4968-bb8c-ac0f6adcd5ce: the server could not find the requested resource (get pods dns-test-8657be6e-b7a4-4968-bb8c-ac0f6adcd5ce)
  Jun  1 13:42:33.346: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2804.svc.cluster.local from pod dns-2804/dns-test-8657be6e-b7a4-4968-bb8c-ac0f6adcd5ce: the server could not find the requested resource (get pods dns-test-8657be6e-b7a4-4968-bb8c-ac0f6adcd5ce)
  Jun  1 13:42:33.349: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2804.svc.cluster.local from pod dns-2804/dns-test-8657be6e-b7a4-4968-bb8c-ac0f6adcd5ce: the server could not find the requested resource (get pods dns-test-8657be6e-b7a4-4968-bb8c-ac0f6adcd5ce)
  Jun  1 13:42:33.366: INFO: Unable to read jessie_udp@dns-test-service.dns-2804.svc.cluster.local from pod dns-2804/dns-test-8657be6e-b7a4-4968-bb8c-ac0f6adcd5ce: the server could not find the requested resource (get pods dns-test-8657be6e-b7a4-4968-bb8c-ac0f6adcd5ce)
  Jun  1 13:42:33.370: INFO: Unable to read jessie_tcp@dns-test-service.dns-2804.svc.cluster.local from pod dns-2804/dns-test-8657be6e-b7a4-4968-bb8c-ac0f6adcd5ce: the server could not find the requested resource (get pods dns-test-8657be6e-b7a4-4968-bb8c-ac0f6adcd5ce)
  Jun  1 13:42:33.374: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2804.svc.cluster.local from pod dns-2804/dns-test-8657be6e-b7a4-4968-bb8c-ac0f6adcd5ce: the server could not find the requested resource (get pods dns-test-8657be6e-b7a4-4968-bb8c-ac0f6adcd5ce)
  Jun  1 13:42:33.377: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2804.svc.cluster.local from pod dns-2804/dns-test-8657be6e-b7a4-4968-bb8c-ac0f6adcd5ce: the server could not find the requested resource (get pods dns-test-8657be6e-b7a4-4968-bb8c-ac0f6adcd5ce)
  Jun  1 13:42:33.390: INFO: Lookups using dns-2804/dns-test-8657be6e-b7a4-4968-bb8c-ac0f6adcd5ce failed for: [wheezy_udp@dns-test-service.dns-2804.svc.cluster.local wheezy_tcp@dns-test-service.dns-2804.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-2804.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-2804.svc.cluster.local jessie_udp@dns-test-service.dns-2804.svc.cluster.local jessie_tcp@dns-test-service.dns-2804.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2804.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2804.svc.cluster.local]

  Jun  1 13:42:33.402: INFO: Pod client logs for webserver: 
  Jun  1 13:42:33.410: INFO: Pod client logs for querier: 
  Jun  1 13:42:33.415: INFO: Pod client logs for jessie-querier: 
  E0601 13:42:34.176072      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:42:35.176285      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:42:36.177135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:42:37.177224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:42:38.177331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:42:38.392: INFO: DNS probes using dns-2804/dns-test-8657be6e-b7a4-4968-bb8c-ac0f6adcd5ce succeeded

  STEP: deleting the pod @ 06/01/24 13:42:38.392
  STEP: deleting the test service @ 06/01/24 13:42:38.405
  STEP: deleting the test headless service @ 06/01/24 13:42:38.433
  Jun  1 13:42:38.448: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2804" for this suite. @ 06/01/24 13:42:38.453
â€¢ [7.200 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 06/01/24 13:42:38.459
  Jun  1 13:42:38.459: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename services @ 06/01/24 13:42:38.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:42:38.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:42:38.474
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-1300 @ 06/01/24 13:42:38.477
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 06/01/24 13:42:38.49
  STEP: creating service externalsvc in namespace services-1300 @ 06/01/24 13:42:38.49
  STEP: creating replication controller externalsvc in namespace services-1300 @ 06/01/24 13:42:38.498
  I0601 13:42:38.507904      21 runners.go:197] Created replication controller with name: externalsvc, namespace: services-1300, replica count: 2
  E0601 13:42:39.178249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:42:40.179151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:42:41.179255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0601 13:42:41.558891      21 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 06/01/24 13:42:41.563
  Jun  1 13:42:41.579: INFO: Creating new exec pod
  E0601 13:42:42.180244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:42:43.180331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:42:43.597: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-1300 exec execpodr9knb -- /bin/sh -x -c nslookup nodeport-service.services-1300.svc.cluster.local'
  Jun  1 13:42:43.715: INFO: stderr: "+ nslookup nodeport-service.services-1300.svc.cluster.local\n"
  Jun  1 13:42:43.715: INFO: stdout: "Server:\t\t10.152.183.155\nAddress:\t10.152.183.155#53\n\nnodeport-service.services-1300.svc.cluster.local\tcanonical name = externalsvc.services-1300.svc.cluster.local.\nName:\texternalsvc.services-1300.svc.cluster.local\nAddress: 10.152.183.160\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-1300, will wait for the garbage collector to delete the pods @ 06/01/24 13:42:43.715
  Jun  1 13:42:43.776: INFO: Deleting ReplicationController externalsvc took: 6.543202ms
  Jun  1 13:42:43.876: INFO: Terminating ReplicationController externalsvc pods took: 100.115814ms
  E0601 13:42:44.181085      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:42:45.181502      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:42:46.181579      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:42:46.995: INFO: Cleaning up the NodePort to ExternalName test service
  Jun  1 13:42:47.005: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1300" for this suite. @ 06/01/24 13:42:47.009
â€¢ [8.559 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 06/01/24 13:42:47.019
  Jun  1 13:42:47.019: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename field-validation @ 06/01/24 13:42:47.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:42:47.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:42:47.043
  STEP: apply creating a deployment @ 06/01/24 13:42:47.046
  Jun  1 13:42:47.058: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8978" for this suite. @ 06/01/24 13:42:47.061
â€¢ [0.050 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 06/01/24 13:42:47.069
  Jun  1 13:42:47.069: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/01/24 13:42:47.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:42:47.084
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:42:47.086
  STEP: fetching the /apis discovery document @ 06/01/24 13:42:47.089
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 06/01/24 13:42:47.09
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 06/01/24 13:42:47.091
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 06/01/24 13:42:47.091
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 06/01/24 13:42:47.092
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 06/01/24 13:42:47.092
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 06/01/24 13:42:47.093
  Jun  1 13:42:47.094: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4414" for this suite. @ 06/01/24 13:42:47.098
â€¢ [0.036 seconds]
------------------------------
SSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 06/01/24 13:42:47.105
  Jun  1 13:42:47.105: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename proxy @ 06/01/24 13:42:47.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:42:47.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:42:47.121
  Jun  1 13:42:47.124: INFO: Creating pod...
  E0601 13:42:47.182303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:42:48.182395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:42:49.138: INFO: Creating service...
  Jun  1 13:42:49.146: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4515/pods/agnhost/proxy?method=DELETE
  Jun  1 13:42:49.153: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jun  1 13:42:49.153: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4515/pods/agnhost/proxy?method=OPTIONS
  Jun  1 13:42:49.159: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jun  1 13:42:49.159: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4515/pods/agnhost/proxy?method=PATCH
  Jun  1 13:42:49.161: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jun  1 13:42:49.162: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4515/pods/agnhost/proxy?method=POST
  Jun  1 13:42:49.166: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jun  1 13:42:49.166: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4515/pods/agnhost/proxy?method=PUT
  Jun  1 13:42:49.169: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jun  1 13:42:49.169: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4515/services/e2e-proxy-test-service/proxy?method=DELETE
  Jun  1 13:42:49.174: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jun  1 13:42:49.174: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4515/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Jun  1 13:42:49.180: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jun  1 13:42:49.180: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4515/services/e2e-proxy-test-service/proxy?method=PATCH
  E0601 13:42:49.182914      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:42:49.185: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jun  1 13:42:49.185: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4515/services/e2e-proxy-test-service/proxy?method=POST
  Jun  1 13:42:49.190: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jun  1 13:42:49.190: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4515/services/e2e-proxy-test-service/proxy?method=PUT
  Jun  1 13:42:49.196: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jun  1 13:42:49.196: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4515/pods/agnhost/proxy?method=GET
  Jun  1 13:42:49.199: INFO: http.Client request:GET StatusCode:301
  Jun  1 13:42:49.199: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4515/services/e2e-proxy-test-service/proxy?method=GET
  Jun  1 13:42:49.201: INFO: http.Client request:GET StatusCode:301
  Jun  1 13:42:49.201: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4515/pods/agnhost/proxy?method=HEAD
  Jun  1 13:42:49.205: INFO: http.Client request:HEAD StatusCode:301
  Jun  1 13:42:49.205: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4515/services/e2e-proxy-test-service/proxy?method=HEAD
  Jun  1 13:42:49.210: INFO: http.Client request:HEAD StatusCode:301
  Jun  1 13:42:49.210: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4515" for this suite. @ 06/01/24 13:42:49.215
â€¢ [2.118 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 06/01/24 13:42:49.223
  Jun  1 13:42:49.223: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/01/24 13:42:49.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:42:49.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:42:49.24
  Jun  1 13:42:49.243: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  E0601 13:42:50.183075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 06/01/24 13:42:50.535
  Jun  1 13:42:50.535: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=crd-publish-openapi-1420 --namespace=crd-publish-openapi-1420 create -f -'
  E0601 13:42:51.183354      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:42:52.183365      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:42:52.608: INFO: stderr: ""
  Jun  1 13:42:52.608: INFO: stdout: "e2e-test-crd-publish-openapi-3491-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Jun  1 13:42:52.608: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=crd-publish-openapi-1420 --namespace=crd-publish-openapi-1420 delete e2e-test-crd-publish-openapi-3491-crds test-cr'
  Jun  1 13:42:52.661: INFO: stderr: ""
  Jun  1 13:42:52.661: INFO: stdout: "e2e-test-crd-publish-openapi-3491-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Jun  1 13:42:52.661: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=crd-publish-openapi-1420 --namespace=crd-publish-openapi-1420 apply -f -'
  Jun  1 13:42:52.720: INFO: stderr: ""
  Jun  1 13:42:52.720: INFO: stdout: "e2e-test-crd-publish-openapi-3491-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Jun  1 13:42:52.720: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=crd-publish-openapi-1420 --namespace=crd-publish-openapi-1420 delete e2e-test-crd-publish-openapi-3491-crds test-cr'
  Jun  1 13:42:52.775: INFO: stderr: ""
  Jun  1 13:42:52.775: INFO: stdout: "e2e-test-crd-publish-openapi-3491-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 06/01/24 13:42:52.776
  Jun  1 13:42:52.776: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=crd-publish-openapi-1420 explain e2e-test-crd-publish-openapi-3491-crds'
  Jun  1 13:42:52.818: INFO: stderr: ""
  Jun  1 13:42:52.818: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-3491-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0601 13:42:53.184089      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:42:54.098: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1420" for this suite. @ 06/01/24 13:42:54.106
â€¢ [4.890 seconds]
------------------------------
S
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3649
  STEP: Creating a kubernetes client @ 06/01/24 13:42:54.113
  Jun  1 13:42:54.113: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename services @ 06/01/24 13:42:54.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:42:54.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:42:54.133
  STEP: creating service multiprotocol-test in namespace services-6538 @ 06/01/24 13:42:54.135
  STEP: creating pod pod1 in namespace services-6538 @ 06/01/24 13:42:54.147
  STEP: Creating pod pod1 in namespace services-6538 @ 06/01/24 13:42:54.147
  E0601 13:42:54.184168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:42:55.184401      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-6538 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 06/01/24 13:42:56.17
  Jun  1 13:42:56.182: INFO: successfully validated that service multiprotocol-test in namespace services-6538 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 06/01/24 13:42:56.182
  Jun  1 13:42:56.182: INFO: Creating new exec pod
  E0601 13:42:56.184887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:42:57.185855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:42:58.186214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:42:58.196: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-6538 exec execpod52nhn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.58 80'
  Jun  1 13:42:58.288: INFO: stderr: "+ nc -v -t -w 2 10.152.183.58 80\nConnection to 10.152.183.58 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Jun  1 13:42:58.288: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  1 13:42:58.288: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-6538 exec execpod52nhn -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.58 80'
  E0601 13:42:59.186603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:00.186670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:01.187468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:02.187834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:43:02.384: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.58 80\nConnection to 10.152.183.58 80 port [udp/*] succeeded!\n"
  Jun  1 13:43:02.384: INFO: stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 06/01/24 13:43:02.384
  Jun  1 13:43:02.397: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-6538 exec execpod52nhn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.58 80'
  Jun  1 13:43:02.483: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.58 80\nConnection to 10.152.183.58 80 port [tcp/http] succeeded!\n"
  Jun  1 13:43:02.483: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  1 13:43:02.483: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-6538 exec execpod52nhn -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.58 80'
  E0601 13:43:03.187911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:04.188030      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:05.188940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:06.189056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:43:06.573: INFO: stderr: "+ nc -v -u -w 2 10.152.183.58 80\n+ echo hostName\nConnection to 10.152.183.58 80 port [udp/*] succeeded!\n"
  Jun  1 13:43:06.573: INFO: stdout: ""
  Jun  1 13:43:06.573: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-6538 exec execpod52nhn -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.58 80'
  E0601 13:43:07.189167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:08.189283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:09.189390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:10.189474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:43:10.664: INFO: stderr: "+ nc -v -u -w 2 10.152.183.58 80\n+ echo hostName\nConnection to 10.152.183.58 80 port [udp/*] succeeded!\n"
  Jun  1 13:43:10.664: INFO: stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 06/01/24 13:43:10.664
  Jun  1 13:43:10.674: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-6538 exec execpod52nhn -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.58 80'
  E0601 13:43:11.190198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:12.190584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:13.190665      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:14.190799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:43:14.780: INFO: stderr: "+ nc -v -u -w 2 10.152.183.58 80\n+ echo hostName\nConnection to 10.152.183.58 80 port [udp/*] succeeded!\n"
  Jun  1 13:43:14.780: INFO: stdout: "pod1"
  Jun  1 13:43:14.780: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-6538 exec execpod52nhn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.58 80'
  E0601 13:43:15.190974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:16.191042      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:43:16.880: INFO: rc: 1
  Jun  1 13:43:16.880: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-6538 exec execpod52nhn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.58 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.152.183.58 80
  + echo hostName
  nc: connect to 10.152.183.58 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jun  1 13:43:16.880: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-6538 exec execpod52nhn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.58 80'
  E0601 13:43:17.192748      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:18.192838      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:43:18.974: INFO: rc: 1
  Jun  1 13:43:18.974: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-6538 exec execpod52nhn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.58 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.152.183.58 80
  + echo hostName
  nc: connect to 10.152.183.58 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jun  1 13:43:18.974: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-6538 exec execpod52nhn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.58 80'
  E0601 13:43:19.193604      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:20.193653      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:43:21.064: INFO: rc: 1
  Jun  1 13:43:21.064: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-6538 exec execpod52nhn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.58 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.152.183.58 80
  + echo hostName
  nc: connect to 10.152.183.58 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jun  1 13:43:21.065: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6538" for this suite. @ 06/01/24 13:43:21.07
â€¢ [26.964 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 06/01/24 13:43:21.078
  Jun  1 13:43:21.078: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename apf @ 06/01/24 13:43:21.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:43:21.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:43:21.096
  STEP: getting /apis @ 06/01/24 13:43:21.098
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 06/01/24 13:43:21.101
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 06/01/24 13:43:21.102
  STEP: creating @ 06/01/24 13:43:21.103
  STEP: getting @ 06/01/24 13:43:21.119
  STEP: listing @ 06/01/24 13:43:21.121
  STEP: watching @ 06/01/24 13:43:21.124
  Jun  1 13:43:21.124: INFO: starting watch
  STEP: patching @ 06/01/24 13:43:21.125
  STEP: updating @ 06/01/24 13:43:21.131
  Jun  1 13:43:21.138: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 06/01/24 13:43:21.138
  STEP: patching /status @ 06/01/24 13:43:21.142
  STEP: updating /status @ 06/01/24 13:43:21.146
  STEP: deleting @ 06/01/24 13:43:21.154
  STEP: deleting a collection @ 06/01/24 13:43:21.164
  Jun  1 13:43:21.182: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-770" for this suite. @ 06/01/24 13:43:21.185
â€¢ [0.114 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 06/01/24 13:43:21.191
  Jun  1 13:43:21.191: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename resourcequota @ 06/01/24 13:43:21.192
  E0601 13:43:21.194003      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:43:21.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:43:21.211
  STEP: Counting existing ResourceQuota @ 06/01/24 13:43:21.219
  E0601 13:43:22.194135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:23.194892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:24.195826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:25.196118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:26.196150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/01/24 13:43:26.223
  STEP: Ensuring resource quota status is calculated @ 06/01/24 13:43:26.227
  E0601 13:43:27.196281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:28.196492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 06/01/24 13:43:28.231
  STEP: Ensuring resource quota status captures replicaset creation @ 06/01/24 13:43:28.245
  E0601 13:43:29.196582      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:30.196715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 06/01/24 13:43:30.249
  STEP: Ensuring resource quota status released usage @ 06/01/24 13:43:30.255
  E0601 13:43:31.196751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:32.196867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:43:32.260: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-484" for this suite. @ 06/01/24 13:43:32.264
â€¢ [11.080 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 06/01/24 13:43:32.272
  Jun  1 13:43:32.272: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename containers @ 06/01/24 13:43:32.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:43:32.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:43:32.294
  STEP: Creating a pod to test override command @ 06/01/24 13:43:32.297
  E0601 13:43:33.196882      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:34.197049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 13:43:34.312
  Jun  1 13:43:34.316: INFO: Trying to get logs from node ip-172-31-74-111 pod client-containers-bb28cecf-2ba3-4ae7-b555-28fb54166903 container agnhost-container: <nil>
  STEP: delete the pod @ 06/01/24 13:43:34.322
  Jun  1 13:43:34.337: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6191" for this suite. @ 06/01/24 13:43:34.342
â€¢ [2.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 06/01/24 13:43:34.354
  Jun  1 13:43:34.354: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename sched-preemption @ 06/01/24 13:43:34.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:43:34.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:43:34.371
  Jun  1 13:43:34.387: INFO: Waiting up to 1m0s for all nodes to be ready
  E0601 13:43:35.197188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:36.198194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:37.198848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:38.198970      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:39.199978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:40.200211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:41.200303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:42.200431      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:43.201036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:44.201141      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:45.201880      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:46.202027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:47.202132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:48.202191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:49.202624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:50.202718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:51.203159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:52.203213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:53.204176      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:54.204508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:55.205272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:56.205524      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:57.206243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:58.206432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:43:59.206838      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:00.207039      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:01.207918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:02.208011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:03.208843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:04.208937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:05.209463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:06.210265      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:07.210370      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:08.210668      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:09.211237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:10.211527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:11.211717      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:12.211816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:13.211937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:14.212032      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:15.212635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:16.213628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:17.214247      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:18.214754      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:19.215245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:20.215455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:21.216050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:22.216111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:23.216595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:24.216807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:25.217362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:26.217605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:27.217698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:28.218254      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:29.218366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:30.218470      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:31.219284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:32.219630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:33.219743      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:34.219869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:44:34.391: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 06/01/24 13:44:34.394
  Jun  1 13:44:34.414: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Jun  1 13:44:34.423: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Jun  1 13:44:34.441: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Jun  1 13:44:34.449: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Jun  1 13:44:34.466: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Jun  1 13:44:34.474: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 06/01/24 13:44:34.474
  E0601 13:44:35.219975      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:36.220181      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 06/01/24 13:44:36.499
  E0601 13:44:37.220275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:38.220390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:44:38.609: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3911" for this suite. @ 06/01/24 13:44:38.613
â€¢ [64.267 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 06/01/24 13:44:38.622
  Jun  1 13:44:38.622: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename svcaccounts @ 06/01/24 13:44:38.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:44:38.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:44:38.64
  Jun  1 13:44:38.646: INFO: Got root ca configmap in namespace "svcaccounts-8954"
  Jun  1 13:44:38.651: INFO: Deleted root ca configmap in namespace "svcaccounts-8954"
  STEP: waiting for a new root ca configmap created @ 06/01/24 13:44:39.151
  Jun  1 13:44:39.155: INFO: Recreated root ca configmap in namespace "svcaccounts-8954"
  Jun  1 13:44:39.161: INFO: Updated root ca configmap in namespace "svcaccounts-8954"
  E0601 13:44:39.221259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for the root ca configmap reconciled @ 06/01/24 13:44:39.661
  Jun  1 13:44:39.666: INFO: Reconciled root ca configmap in namespace "svcaccounts-8954"
  Jun  1 13:44:39.666: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8954" for this suite. @ 06/01/24 13:44:39.669
â€¢ [1.055 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 06/01/24 13:44:39.677
  Jun  1 13:44:39.677: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename pods @ 06/01/24 13:44:39.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:44:39.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:44:39.695
  STEP: Create a pod @ 06/01/24 13:44:39.697
  E0601 13:44:40.221964      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:41.222873      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 06/01/24 13:44:41.718
  Jun  1 13:44:41.724: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Jun  1 13:44:41.724: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5187" for this suite. @ 06/01/24 13:44:41.728
â€¢ [2.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 06/01/24 13:44:41.736
  Jun  1 13:44:41.736: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename projected @ 06/01/24 13:44:41.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:44:41.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:44:41.753
  STEP: Creating projection with secret that has name projected-secret-test-64449764-cdc1-452c-b2c4-519ec59fb895 @ 06/01/24 13:44:41.756
  STEP: Creating a pod to test consume secrets @ 06/01/24 13:44:41.76
  E0601 13:44:42.223463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:43.223757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:44.224792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:45.224867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 13:44:45.787
  Jun  1 13:44:45.789: INFO: Trying to get logs from node ip-172-31-80-202 pod pod-projected-secrets-25e4147f-d38b-45e5-9968-29d85e2b5529 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/01/24 13:44:45.799
  Jun  1 13:44:45.815: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2049" for this suite. @ 06/01/24 13:44:45.818
â€¢ [4.090 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1399
  STEP: Creating a kubernetes client @ 06/01/24 13:44:45.827
  Jun  1 13:44:45.827: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename kubectl @ 06/01/24 13:44:45.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:44:45.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:44:45.843
  Jun  1 13:44:45.846: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-3718 create -f -'
  Jun  1 13:44:45.930: INFO: stderr: ""
  Jun  1 13:44:45.930: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Jun  1 13:44:45.930: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-3718 create -f -'
  Jun  1 13:44:46.035: INFO: stderr: ""
  Jun  1 13:44:46.035: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 06/01/24 13:44:46.035
  E0601 13:44:46.225911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:44:47.039: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun  1 13:44:47.039: INFO: Found 1 / 1
  Jun  1 13:44:47.039: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Jun  1 13:44:47.041: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun  1 13:44:47.041: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jun  1 13:44:47.041: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-3718 describe pod agnhost-primary-hws9s'
  Jun  1 13:44:47.099: INFO: stderr: ""
  Jun  1 13:44:47.099: INFO: stdout: "Name:             agnhost-primary-hws9s\nNamespace:        kubectl-3718\nPriority:         0\nService Account:  default\nNode:             ip-172-31-80-202/172.31.80.202\nStart Time:       Sat, 01 Jun 2024 13:44:45 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.126.123\nIPs:\n  IP:           192.168.126.123\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://c988d28eed9a1b419b7fd3c1349c24418d0ac88f72e595672858f95e8616926b\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 01 Jun 2024 13:44:46 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-4gdbf (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-4gdbf:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-3718/agnhost-primary-hws9s to ip-172-31-80-202\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  Jun  1 13:44:47.099: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-3718 describe rc agnhost-primary'
  Jun  1 13:44:47.154: INFO: stderr: ""
  Jun  1 13:44:47.154: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-3718\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.47\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-hws9s\n"
  Jun  1 13:44:47.154: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-3718 describe service agnhost-primary'
  Jun  1 13:44:47.210: INFO: stderr: ""
  Jun  1 13:44:47.210: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-3718\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.152.183.248\nIPs:               10.152.183.248\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         192.168.126.123:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Jun  1 13:44:47.213: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-3718 describe node ip-172-31-13-69'
  E0601 13:44:47.226246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:44:47.276: INFO: stderr: ""
  Jun  1 13:44:47.276: INFO: stdout: "Name:               ip-172-31-13-69\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-control-plane\n                    juju-charm=kubernetes-control-plane\n                    juju.io/cloud=ec2\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-13-69\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 01 Jun 2024 11:58:52 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-13-69\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 01 Jun 2024 13:44:43 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 01 Jun 2024 12:14:36 +0000   Sat, 01 Jun 2024 12:14:36 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sat, 01 Jun 2024 13:40:47 +0000   Sat, 01 Jun 2024 11:58:52 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 01 Jun 2024 13:40:47 +0000   Sat, 01 Jun 2024 11:58:52 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 01 Jun 2024 13:40:47 +0000   Sat, 01 Jun 2024 11:58:52 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 01 Jun 2024 13:40:47 +0000   Sat, 01 Jun 2024 12:05:47 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  172.31.13.69\n  Hostname:    ip-172-31-13-69\nCapacity:\n  cpu:                2\n  ephemeral-storage:  16069568Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7958144Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  14809713845\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7855744Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 ec22dc9d44b34bec7ad9b6145c40d766\n  System UUID:                ec22dc9d-44b3-4bec-7ad9-b6145c40d766\n  Boot ID:                    c0f1c207-a015-4c07-9d20-e9dcc0189a34\n  Kernel Version:             6.5.0-1020-aws\n  OS Image:                   Ubuntu 22.04.4 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.8\n  Kubelet Version:            v1.29.5\n  Kube-Proxy Version:         v1.29.5\nNon-terminated Pods:          (3 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-kube-controllers-58f9b9bf-sksfp                     0 (0%)        0 (0%)      0 (0%)           0 (0%)         88m\n  kube-system                 calico-node-ndgwf                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         90m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-6b74001505cc4012-rvjz6    0 (0%)        0 (0%)      0 (0%)           0 (0%)         86m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                250m (12%)  0 (0%)\n  memory             0 (0%)      0 (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
  Jun  1 13:44:47.276: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-3718 describe namespace kubectl-3718'
  Jun  1 13:44:47.329: INFO: stderr: ""
  Jun  1 13:44:47.329: INFO: stdout: "Name:         kubectl-3718\nLabels:       e2e-framework=kubectl\n              e2e-run=088858f1-e658-49b1-9467-76dc152b106f\n              kubernetes.io/metadata.name=kubectl-3718\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Jun  1 13:44:47.329: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3718" for this suite. @ 06/01/24 13:44:47.333
â€¢ [1.512 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 06/01/24 13:44:47.339
  Jun  1 13:44:47.339: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename projected @ 06/01/24 13:44:47.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:44:47.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:44:47.361
  STEP: Creating projection with secret that has name projected-secret-test-fc4a9df5-9dfe-433e-8722-d3b10e8a6db3 @ 06/01/24 13:44:47.363
  STEP: Creating a pod to test consume secrets @ 06/01/24 13:44:47.368
  E0601 13:44:48.226720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:49.227011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 13:44:49.384
  Jun  1 13:44:49.387: INFO: Trying to get logs from node ip-172-31-74-111 pod pod-projected-secrets-92ab9423-b41a-4f9d-a19e-3b77e3a09aeb container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/01/24 13:44:49.395
  Jun  1 13:44:49.410: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7244" for this suite. @ 06/01/24 13:44:49.413
â€¢ [2.080 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:321
  STEP: Creating a kubernetes client @ 06/01/24 13:44:49.419
  Jun  1 13:44:49.419: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename statefulset @ 06/01/24 13:44:49.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:44:49.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:44:49.437
  STEP: Creating service test in namespace statefulset-6089 @ 06/01/24 13:44:49.44
  STEP: Creating a new StatefulSet @ 06/01/24 13:44:49.445
  Jun  1 13:44:49.457: INFO: Found 0 stateful pods, waiting for 3
  E0601 13:44:50.227114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:51.227231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:52.227328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:53.227409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:54.227621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:55.227713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:56.227807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:57.227897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:58.228537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:44:59.228637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:44:59.456: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun  1 13:44:59.456: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun  1 13:44:59.456: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Jun  1 13:44:59.465: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=statefulset-6089 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun  1 13:44:59.567: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun  1 13:44:59.567: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun  1 13:44:59.567: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0601 13:45:00.228775      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:01.228829      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:02.229142      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:03.229198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:04.230238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:05.230598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:06.230655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:07.230777      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:08.230922      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:09.231017      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 06/01/24 13:45:09.576
  Jun  1 13:45:09.596: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 06/01/24 13:45:09.596
  E0601 13:45:10.231491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:11.231599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:12.231969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:13.232158      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:14.232377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:15.232508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:16.232596      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:17.232708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:18.233448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:19.233565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 06/01/24 13:45:19.604
  Jun  1 13:45:19.608: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=statefulset-6089 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun  1 13:45:19.703: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun  1 13:45:19.703: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun  1 13:45:19.703: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0601 13:45:20.233914      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:21.234032      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:22.234608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:23.234695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:24.234795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:25.234894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:26.234975      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:27.235079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:28.235192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:29.235642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:45:29.716: INFO: Waiting for StatefulSet statefulset-6089/ss2 to complete update
  E0601 13:45:30.236007      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:31.236102      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:32.236180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:33.236475      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:34.237272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:35.237366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:36.238222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:37.238580      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:38.239197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:39.239286      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 06/01/24 13:45:39.717
  Jun  1 13:45:39.717: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=statefulset-6089 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun  1 13:45:39.810: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun  1 13:45:39.810: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun  1 13:45:39.810: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0601 13:45:40.240233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:41.240337      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:42.240440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:43.240551      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:44.240660      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:45.240942      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:46.241169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:47.241281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:48.242210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:49.242465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:45:49.840: INFO: Updating stateful set ss2
  E0601 13:45:50.243284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:51.243403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:52.243764      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:53.243884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:54.244437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:55.244508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:56.244857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:57.244962      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:58.245127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:45:59.245235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 06/01/24 13:45:59.848
  Jun  1 13:45:59.851: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=statefulset-6089 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun  1 13:45:59.947: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun  1 13:45:59.947: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun  1 13:45:59.947: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0601 13:46:00.245468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:01.245590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:02.245712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:03.246226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:04.246422      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:05.247191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:06.248255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:07.248341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:08.248462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:09.248651      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:46:09.961: INFO: Deleting all statefulset in ns statefulset-6089
  Jun  1 13:46:09.965: INFO: Scaling statefulset ss2 to 0
  E0601 13:46:10.249507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:11.249581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:12.249708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:13.249794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:14.250189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:15.250402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:16.250468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:17.250805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:18.251729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:19.251889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:46:19.978: INFO: Waiting for statefulset status.replicas updated to 0
  Jun  1 13:46:19.980: INFO: Deleting statefulset ss2
  Jun  1 13:46:19.994: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6089" for this suite. @ 06/01/24 13:46:19.999
â€¢ [90.587 seconds]
------------------------------
SSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 06/01/24 13:46:20.006
  Jun  1 13:46:20.006: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename pod-network-test @ 06/01/24 13:46:20.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:46:20.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:46:20.025
  STEP: Performing setup for networking test in namespace pod-network-test-7390 @ 06/01/24 13:46:20.028
  STEP: creating a selector @ 06/01/24 13:46:20.028
  STEP: Creating the service pods in kubernetes @ 06/01/24 13:46:20.028
  Jun  1 13:46:20.028: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0601 13:46:20.251993      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:21.252080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:22.252712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:23.253738      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:24.254193      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:25.254294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:26.254616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:27.254774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:28.255463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:29.255574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:30.256626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:31.256717      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 06/01/24 13:46:32.113
  E0601 13:46:32.256961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:33.257140      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:46:34.131: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jun  1 13:46:34.131: INFO: Breadth first check of 192.168.86.107 on host 172.31.17.129...
  Jun  1 13:46:34.134: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.118.174:9080/dial?request=hostname&protocol=udp&host=192.168.86.107&port=8081&tries=1'] Namespace:pod-network-test-7390 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  1 13:46:34.134: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 13:46:34.134: INFO: ExecWithOptions: Clientset creation
  Jun  1 13:46:34.134: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7390/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.118.174%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.86.107%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun  1 13:46:34.185: INFO: Waiting for responses: map[]
  Jun  1 13:46:34.185: INFO: reached 192.168.86.107 after 0/1 tries
  Jun  1 13:46:34.185: INFO: Breadth first check of 192.168.118.177 on host 172.31.74.111...
  Jun  1 13:46:34.189: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.118.174:9080/dial?request=hostname&protocol=udp&host=192.168.118.177&port=8081&tries=1'] Namespace:pod-network-test-7390 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  1 13:46:34.189: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 13:46:34.190: INFO: ExecWithOptions: Clientset creation
  Jun  1 13:46:34.190: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7390/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.118.174%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.118.177%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun  1 13:46:34.239: INFO: Waiting for responses: map[]
  Jun  1 13:46:34.239: INFO: reached 192.168.118.177 after 0/1 tries
  Jun  1 13:46:34.239: INFO: Breadth first check of 192.168.126.84 on host 172.31.80.202...
  Jun  1 13:46:34.242: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.118.174:9080/dial?request=hostname&protocol=udp&host=192.168.126.84&port=8081&tries=1'] Namespace:pod-network-test-7390 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  1 13:46:34.242: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 13:46:34.243: INFO: ExecWithOptions: Clientset creation
  Jun  1 13:46:34.243: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7390/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.118.174%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.126.84%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  E0601 13:46:34.257618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:46:34.288: INFO: Waiting for responses: map[]
  Jun  1 13:46:34.288: INFO: reached 192.168.126.84 after 0/1 tries
  Jun  1 13:46:34.288: INFO: Going to retry 0 out of 3 pods....
  Jun  1 13:46:34.288: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7390" for this suite. @ 06/01/24 13:46:34.291
â€¢ [14.294 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 06/01/24 13:46:34.3
  Jun  1 13:46:34.300: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename emptydir @ 06/01/24 13:46:34.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:46:34.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:46:34.319
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 06/01/24 13:46:34.324
  E0601 13:46:35.257706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:36.257984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:37.258243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:38.258448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 13:46:38.348
  Jun  1 13:46:38.352: INFO: Trying to get logs from node ip-172-31-74-111 pod pod-34f755a5-1b6c-4e41-ab70-29c3e733d197 container test-container: <nil>
  STEP: delete the pod @ 06/01/24 13:46:38.364
  Jun  1 13:46:38.384: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9624" for this suite. @ 06/01/24 13:46:38.386
â€¢ [4.091 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 06/01/24 13:46:38.391
  Jun  1 13:46:38.391: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename crd-watch @ 06/01/24 13:46:38.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:46:38.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:46:38.408
  Jun  1 13:46:38.411: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  E0601 13:46:39.258615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:40.258690      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 06/01/24 13:46:40.943
  Jun  1 13:46:40.947: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-01T13:46:40Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-01T13:46:40Z]] name:name1 resourceVersion:39655 uid:d0068d44-409a-4c49-80c8-a55447b19387] num:map[num1:9223372036854775807 num2:1000000]]}
  E0601 13:46:41.259215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:42.259512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:43.259640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:44.259744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:45.259826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:46.260891      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:47.261122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:48.261234      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:49.261327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:50.262194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 06/01/24 13:46:50.948
  Jun  1 13:46:50.955: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-01T13:46:50Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-01T13:46:50Z]] name:name2 resourceVersion:39688 uid:e039ea86-79eb-4dec-9c3b-e3678c1c6d78] num:map[num1:9223372036854775807 num2:1000000]]}
  E0601 13:46:51.263041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:52.263881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:53.263978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:54.264755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:55.265406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:56.266188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:57.266911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:58.267168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:46:59.267258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:00.267449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 06/01/24 13:47:00.956
  Jun  1 13:47:00.963: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-01T13:46:40Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-01T13:47:00Z]] name:name1 resourceVersion:39708 uid:d0068d44-409a-4c49-80c8-a55447b19387] num:map[num1:9223372036854775807 num2:1000000]]}
  E0601 13:47:01.267664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:02.267961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:03.268231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:04.269077      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:05.269143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:06.270215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:07.270321      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:08.270533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:09.271010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:10.271229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 06/01/24 13:47:10.963
  Jun  1 13:47:10.969: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-01T13:46:50Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-01T13:47:10Z]] name:name2 resourceVersion:39728 uid:e039ea86-79eb-4dec-9c3b-e3678c1c6d78] num:map[num1:9223372036854775807 num2:1000000]]}
  E0601 13:47:11.271755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:12.272130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:13.272342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:14.272521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:15.272705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:16.273684      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:17.273776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:18.274852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:19.274937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:20.275034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 06/01/24 13:47:20.969
  Jun  1 13:47:20.979: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-01T13:46:40Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-01T13:47:00Z]] name:name1 resourceVersion:39748 uid:d0068d44-409a-4c49-80c8-a55447b19387] num:map[num1:9223372036854775807 num2:1000000]]}
  E0601 13:47:21.275075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:22.275179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:23.275282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:24.275572      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:25.275747      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:26.276524      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:27.276629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:28.276837      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:29.277043      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:30.277150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 06/01/24 13:47:30.98
  Jun  1 13:47:30.987: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-01T13:46:50Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-01T13:47:10Z]] name:name2 resourceVersion:39768 uid:e039ea86-79eb-4dec-9c3b-e3678c1c6d78] num:map[num1:9223372036854775807 num2:1000000]]}
  E0601 13:47:31.278193      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:32.278544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:33.278718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:34.279332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:35.279525      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:36.279639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:37.280012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:38.280127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:39.280321      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:40.280504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:41.280582      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:47:41.503: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-1825" for this suite. @ 06/01/24 13:47:41.508
â€¢ [63.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 06/01/24 13:47:41.516
  Jun  1 13:47:41.516: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename configmap @ 06/01/24 13:47:41.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:47:41.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:47:41.536
  STEP: Creating configMap with name configmap-test-volume-d4867103-ebd1-45df-82cf-70caac737d95 @ 06/01/24 13:47:41.54
  STEP: Creating a pod to test consume configMaps @ 06/01/24 13:47:41.543
  E0601 13:47:42.281594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:43.281700      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:44.282316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:45.282372      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 13:47:45.567
  Jun  1 13:47:45.571: INFO: Trying to get logs from node ip-172-31-74-111 pod pod-configmaps-1d6fbe45-4ec8-43a1-8770-fbfee7c00207 container agnhost-container: <nil>
  STEP: delete the pod @ 06/01/24 13:47:45.576
  Jun  1 13:47:45.591: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6342" for this suite. @ 06/01/24 13:47:45.594
â€¢ [4.083 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 06/01/24 13:47:45.6
  Jun  1 13:47:45.600: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename resourcequota @ 06/01/24 13:47:45.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:47:45.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:47:45.619
  STEP: Discovering how many secrets are in namespace by default @ 06/01/24 13:47:45.622
  E0601 13:47:46.282653      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:47.283137      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:48.283222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:49.284101      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:50.285038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 06/01/24 13:47:50.626
  E0601 13:47:51.285741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:52.285817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:53.286217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:54.287237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:55.287512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/01/24 13:47:55.631
  STEP: Ensuring resource quota status is calculated @ 06/01/24 13:47:55.638
  E0601 13:47:56.287964      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:57.288074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 06/01/24 13:47:57.643
  STEP: Ensuring resource quota status captures secret creation @ 06/01/24 13:47:57.654
  E0601 13:47:58.288475      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:47:59.288631      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 06/01/24 13:47:59.658
  STEP: Ensuring resource quota status released usage @ 06/01/24 13:47:59.664
  E0601 13:48:00.288707      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:48:01.288876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:48:01.675: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2631" for this suite. @ 06/01/24 13:48:01.684
â€¢ [16.092 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 06/01/24 13:48:01.693
  Jun  1 13:48:01.693: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename container-probe @ 06/01/24 13:48:01.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:48:01.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:48:01.715
  STEP: Creating pod liveness-4742e4dd-d8f2-4ae7-8fe5-271f6ad7403f in namespace container-probe-8979 @ 06/01/24 13:48:01.717
  E0601 13:48:02.289162      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:48:03.289277      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/01/24 13:48:03.733
  Jun  1 13:48:03.736: INFO: Initial restart count of pod liveness-4742e4dd-d8f2-4ae7-8fe5-271f6ad7403f is 0
  Jun  1 13:48:03.740: INFO: Get pod liveness-4742e4dd-d8f2-4ae7-8fe5-271f6ad7403f in namespace container-probe-8979
  E0601 13:48:04.290207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:48:05.290462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:48:05.745: INFO: Get pod liveness-4742e4dd-d8f2-4ae7-8fe5-271f6ad7403f in namespace container-probe-8979
  E0601 13:48:06.291243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:48:07.291330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:48:07.749: INFO: Get pod liveness-4742e4dd-d8f2-4ae7-8fe5-271f6ad7403f in namespace container-probe-8979
  E0601 13:48:08.291608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:48:09.291709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:48:09.754: INFO: Get pod liveness-4742e4dd-d8f2-4ae7-8fe5-271f6ad7403f in namespace container-probe-8979
  E0601 13:48:10.291981      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:48:11.292075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:48:11.760: INFO: Get pod liveness-4742e4dd-d8f2-4ae7-8fe5-271f6ad7403f in namespace container-probe-8979
  E0601 13:48:12.293034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:48:13.293148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:48:13.765: INFO: Get pod liveness-4742e4dd-d8f2-4ae7-8fe5-271f6ad7403f in namespace container-probe-8979
  E0601 13:48:14.293760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:48:15.293842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:48:15.769: INFO: Get pod liveness-4742e4dd-d8f2-4ae7-8fe5-271f6ad7403f in namespace container-probe-8979
  E0601 13:48:16.294219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:48:17.294789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:48:17.773: INFO: Get pod liveness-4742e4dd-d8f2-4ae7-8fe5-271f6ad7403f in namespace container-probe-8979
  E0601 13:48:18.294342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:48:19.294893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:48:19.778: INFO: Get pod liveness-4742e4dd-d8f2-4ae7-8fe5-271f6ad7403f in namespace container-probe-8979
  E0601 13:48:20.295366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:48:21.295572      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:48:21.783: INFO: Get pod liveness-4742e4dd-d8f2-4ae7-8fe5-271f6ad7403f in namespace container-probe-8979
  E0601 13:48:22.295676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:48:23.295787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:48:23.787: INFO: Get pod liveness-4742e4dd-d8f2-4ae7-8fe5-271f6ad7403f in namespace container-probe-8979
  Jun  1 13:48:23.787: INFO: Restart count of pod container-probe-8979/liveness-4742e4dd-d8f2-4ae7-8fe5-271f6ad7403f is now 1 (20.051677866s elapsed)
  STEP: deleting the pod @ 06/01/24 13:48:23.788
  Jun  1 13:48:23.801: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8979" for this suite. @ 06/01/24 13:48:23.806
â€¢ [22.118 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:530
  STEP: Creating a kubernetes client @ 06/01/24 13:48:23.811
  Jun  1 13:48:23.811: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename security-context-test @ 06/01/24 13:48:23.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:48:23.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:48:23.838
  E0601 13:48:24.296008      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:48:25.296336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:48:25.861: INFO: Got logs for pod "busybox-privileged-false-7ea13fdc-fda1-4f5d-ac91-0d472b3693ac": "ip: RTNETLINK answers: Operation not permitted\n"
  Jun  1 13:48:25.861: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3522" for this suite. @ 06/01/24 13:48:25.865
â€¢ [2.063 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 06/01/24 13:48:25.874
  Jun  1 13:48:25.874: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename downward-api @ 06/01/24 13:48:25.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:48:25.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:48:25.892
  STEP: Creating a pod to test downward API volume plugin @ 06/01/24 13:48:25.895
  E0601 13:48:26.297265      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:48:27.297592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:48:28.298217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:48:29.298609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 13:48:29.916
  Jun  1 13:48:29.920: INFO: Trying to get logs from node ip-172-31-74-111 pod downwardapi-volume-8c592b42-8774-4d5d-a0ed-41939bcfd0e4 container client-container: <nil>
  STEP: delete the pod @ 06/01/24 13:48:29.925
  Jun  1 13:48:29.940: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8562" for this suite. @ 06/01/24 13:48:29.945
â€¢ [4.078 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 06/01/24 13:48:29.952
  Jun  1 13:48:29.952: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename namespaces @ 06/01/24 13:48:29.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:48:29.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:48:29.971
  STEP: Creating a test namespace @ 06/01/24 13:48:29.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:48:29.989
  STEP: Creating a service in the namespace @ 06/01/24 13:48:29.992
  STEP: Deleting the namespace @ 06/01/24 13:48:30.003
  STEP: Waiting for the namespace to be removed. @ 06/01/24 13:48:30.014
  E0601 13:48:30.299312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:48:31.300211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:48:32.301130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:48:33.301809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:48:34.302195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:48:35.302891      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 06/01/24 13:48:36.019
  STEP: Verifying there is no service in the namespace @ 06/01/24 13:48:36.034
  Jun  1 13:48:36.037: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1308" for this suite. @ 06/01/24 13:48:36.041
  STEP: Destroying namespace "nsdeletetest-7163" for this suite. @ 06/01/24 13:48:36.045
  Jun  1 13:48:36.049: INFO: Namespace nsdeletetest-7163 was already deleted
  STEP: Destroying namespace "nsdeletetest-2299" for this suite. @ 06/01/24 13:48:36.049
â€¢ [6.101 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 06/01/24 13:48:36.054
  Jun  1 13:48:36.054: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename gc @ 06/01/24 13:48:36.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:48:36.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:48:36.072
  STEP: create the deployment @ 06/01/24 13:48:36.074
  W0601 13:48:36.079231      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 06/01/24 13:48:36.079
  E0601 13:48:36.303739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 06/01/24 13:48:36.588
  STEP: wait for all rs to be garbage collected @ 06/01/24 13:48:36.594
  STEP: expected 0 rs, got 1 rs @ 06/01/24 13:48:36.599
  STEP: expected 0 pods, got 2 pods @ 06/01/24 13:48:36.604
  STEP: Gathering metrics @ 06/01/24 13:48:37.102
  W0601 13:48:37.108213      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jun  1 13:48:37.108: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun  1 13:48:37.109: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8501" for this suite. @ 06/01/24 13:48:37.113
â€¢ [1.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 06/01/24 13:48:37.121
  Jun  1 13:48:37.121: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename chunking @ 06/01/24 13:48:37.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:48:37.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:48:37.138
  STEP: creating a large number of resources @ 06/01/24 13:48:37.141
  E0601 13:48:37.304480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:48:38.305015      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:48:39.305619      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:48:40.306194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:48:41.306280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:48:42.306557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:48:43.307232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:48:44.308342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:48:45.308479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:48:46.308874      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:48:47.309344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:48:48.310131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:48:49.311095      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:48:50.311782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:48:51.312776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:48:52.313047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:48:53.313194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:48:54.313271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 06/01/24 13:48:54.829
  Jun  1 13:48:54.876: INFO: Retrieved 17/17 results with rv 40616 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTYsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Jun  1 13:48:54.926: INFO: Retrieved 17/17 results with rv 40616 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTYsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Jun  1 13:48:54.978: INFO: Retrieved 17/17 results with rv 40616 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTYsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Jun  1 13:48:55.027: INFO: Retrieved 17/17 results with rv 40616 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTYsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Jun  1 13:48:55.076: INFO: Retrieved 17/17 results with rv 40616 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTYsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Jun  1 13:48:55.128: INFO: Retrieved 17/17 results with rv 40616 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTYsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Jun  1 13:48:55.177: INFO: Retrieved 17/17 results with rv 40616 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTYsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Jun  1 13:48:55.226: INFO: Retrieved 17/17 results with rv 40616 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTYsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Jun  1 13:48:55.277: INFO: Retrieved 17/17 results with rv 40616 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTYsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  E0601 13:48:55.314280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:48:55.326: INFO: Retrieved 17/17 results with rv 40616 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTYsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Jun  1 13:48:55.376: INFO: Retrieved 17/17 results with rv 40616 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTYsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Jun  1 13:48:55.428: INFO: Retrieved 17/17 results with rv 40616 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTYsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Jun  1 13:48:55.476: INFO: Retrieved 17/17 results with rv 40616 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTYsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Jun  1 13:48:55.526: INFO: Retrieved 17/17 results with rv 40616 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTYsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Jun  1 13:48:55.577: INFO: Retrieved 17/17 results with rv 40616 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTYsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Jun  1 13:48:55.627: INFO: Retrieved 17/17 results with rv 40616 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTYsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Jun  1 13:48:55.675: INFO: Retrieved 17/17 results with rv 40616 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTYsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Jun  1 13:48:55.727: INFO: Retrieved 17/17 results with rv 40616 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTYsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Jun  1 13:48:55.777: INFO: Retrieved 17/17 results with rv 40616 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTYsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Jun  1 13:48:55.826: INFO: Retrieved 17/17 results with rv 40616 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTYsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Jun  1 13:48:55.877: INFO: Retrieved 17/17 results with rv 40616 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTYsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Jun  1 13:48:55.927: INFO: Retrieved 17/17 results with rv 40616 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTYsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Jun  1 13:48:55.975: INFO: Retrieved 17/17 results with rv 40616 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTYsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Jun  1 13:48:56.027: INFO: Retrieved 9/17 results with rv 40616 and continue 
  Jun  1 13:48:56.077: INFO: Retrieved 17/17 results with rv 40619 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTksInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Jun  1 13:48:56.126: INFO: Retrieved 17/17 results with rv 40619 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTksInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Jun  1 13:48:56.177: INFO: Retrieved 17/17 results with rv 40619 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTksInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Jun  1 13:48:56.226: INFO: Retrieved 17/17 results with rv 40619 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTksInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Jun  1 13:48:56.276: INFO: Retrieved 17/17 results with rv 40619 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTksInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  E0601 13:48:56.314548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:48:56.327: INFO: Retrieved 17/17 results with rv 40619 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTksInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Jun  1 13:48:56.377: INFO: Retrieved 17/17 results with rv 40619 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTksInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Jun  1 13:48:56.426: INFO: Retrieved 17/17 results with rv 40619 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTksInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Jun  1 13:48:56.477: INFO: Retrieved 17/17 results with rv 40619 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTksInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Jun  1 13:48:56.526: INFO: Retrieved 17/17 results with rv 40619 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTksInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Jun  1 13:48:56.576: INFO: Retrieved 17/17 results with rv 40619 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTksInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Jun  1 13:48:56.627: INFO: Retrieved 17/17 results with rv 40619 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTksInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Jun  1 13:48:56.677: INFO: Retrieved 17/17 results with rv 40619 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTksInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Jun  1 13:48:56.725: INFO: Retrieved 17/17 results with rv 40619 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTksInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Jun  1 13:48:56.777: INFO: Retrieved 17/17 results with rv 40619 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTksInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Jun  1 13:48:56.827: INFO: Retrieved 17/17 results with rv 40619 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTksInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Jun  1 13:48:56.876: INFO: Retrieved 17/17 results with rv 40619 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTksInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Jun  1 13:48:56.928: INFO: Retrieved 17/17 results with rv 40619 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTksInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Jun  1 13:48:56.976: INFO: Retrieved 17/17 results with rv 40619 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTksInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Jun  1 13:48:57.026: INFO: Retrieved 17/17 results with rv 40619 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTksInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Jun  1 13:48:57.077: INFO: Retrieved 17/17 results with rv 40619 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTksInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Jun  1 13:48:57.127: INFO: Retrieved 17/17 results with rv 40619 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTksInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Jun  1 13:48:57.175: INFO: Retrieved 17/17 results with rv 40619 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MTksInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Jun  1 13:48:57.228: INFO: Retrieved 9/17 results with rv 40619 and continue 
  Jun  1 13:48:57.276: INFO: Retrieved 17/17 results with rv 40621 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MjEsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  E0601 13:48:57.315381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:48:57.326: INFO: Retrieved 17/17 results with rv 40621 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MjEsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Jun  1 13:48:57.377: INFO: Retrieved 17/17 results with rv 40621 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MjEsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Jun  1 13:48:57.426: INFO: Retrieved 17/17 results with rv 40621 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MjEsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Jun  1 13:48:57.475: INFO: Retrieved 17/17 results with rv 40621 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MjEsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Jun  1 13:48:57.528: INFO: Retrieved 17/17 results with rv 40621 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MjEsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Jun  1 13:48:57.576: INFO: Retrieved 17/17 results with rv 40621 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MjEsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Jun  1 13:48:57.626: INFO: Retrieved 17/17 results with rv 40621 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MjEsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Jun  1 13:48:57.677: INFO: Retrieved 17/17 results with rv 40621 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MjEsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Jun  1 13:48:57.727: INFO: Retrieved 17/17 results with rv 40621 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MjEsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Jun  1 13:48:57.776: INFO: Retrieved 17/17 results with rv 40621 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MjEsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Jun  1 13:48:57.827: INFO: Retrieved 17/17 results with rv 40621 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MjEsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Jun  1 13:48:57.877: INFO: Retrieved 17/17 results with rv 40621 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MjEsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Jun  1 13:48:57.925: INFO: Retrieved 17/17 results with rv 40621 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MjEsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Jun  1 13:48:57.977: INFO: Retrieved 17/17 results with rv 40621 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MjEsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Jun  1 13:48:58.026: INFO: Retrieved 17/17 results with rv 40621 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MjEsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Jun  1 13:48:58.076: INFO: Retrieved 17/17 results with rv 40621 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MjEsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Jun  1 13:48:58.128: INFO: Retrieved 17/17 results with rv 40621 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MjEsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Jun  1 13:48:58.176: INFO: Retrieved 17/17 results with rv 40621 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MjEsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Jun  1 13:48:58.225: INFO: Retrieved 17/17 results with rv 40621 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MjEsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Jun  1 13:48:58.277: INFO: Retrieved 17/17 results with rv 40621 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MjEsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  E0601 13:48:58.315454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:48:58.327: INFO: Retrieved 17/17 results with rv 40621 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MjEsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Jun  1 13:48:58.375: INFO: Retrieved 17/17 results with rv 40621 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA2MjEsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Jun  1 13:48:58.427: INFO: Retrieved 9/17 results with rv 40621 and continue 
  STEP: retrieving those results all at once @ 06/01/24 13:48:58.427
  Jun  1 13:48:58.482: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-633" for this suite. @ 06/01/24 13:48:58.525
â€¢ [21.457 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 06/01/24 13:48:58.578
  Jun  1 13:48:58.578: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename webhook @ 06/01/24 13:48:58.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:48:58.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:48:58.598
  STEP: Setting up server cert @ 06/01/24 13:48:58.619
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/01/24 13:48:58.839
  STEP: Deploying the webhook pod @ 06/01/24 13:48:58.848
  STEP: Wait for the deployment to be ready @ 06/01/24 13:48:58.86
  Jun  1 13:48:58.871: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0601 13:48:59.315546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:00.315769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/01/24 13:49:00.881
  STEP: Verifying the service has paired with the endpoint @ 06/01/24 13:49:00.892
  E0601 13:49:01.316786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:49:01.892: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 06/01/24 13:49:01.9
  STEP: Creating a custom resource definition that should be denied by the webhook @ 06/01/24 13:49:01.914
  Jun  1 13:49:01.914: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 13:49:01.976: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3567" for this suite. @ 06/01/24 13:49:01.981
  STEP: Destroying namespace "webhook-markers-7790" for this suite. @ 06/01/24 13:49:01.989
â€¢ [3.418 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 06/01/24 13:49:01.997
  Jun  1 13:49:01.997: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename pods @ 06/01/24 13:49:01.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:49:02.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:49:02.012
  STEP: creating the pod @ 06/01/24 13:49:02.015
  STEP: setting up watch @ 06/01/24 13:49:02.015
  STEP: submitting the pod to kubernetes @ 06/01/24 13:49:02.119
  STEP: verifying the pod is in kubernetes @ 06/01/24 13:49:02.131
  STEP: verifying pod creation was observed @ 06/01/24 13:49:02.134
  E0601 13:49:02.316827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:03.316927      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 06/01/24 13:49:04.146
  STEP: verifying pod deletion was observed @ 06/01/24 13:49:04.152
  E0601 13:49:04.317450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:05.318136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:49:05.593: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3205" for this suite. @ 06/01/24 13:49:05.598
â€¢ [3.606 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:627
  STEP: Creating a kubernetes client @ 06/01/24 13:49:05.604
  Jun  1 13:49:05.604: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename job @ 06/01/24 13:49:05.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:49:05.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:49:05.622
  STEP: Creating a job @ 06/01/24 13:49:05.624
  STEP: Ensuring active pods == parallelism @ 06/01/24 13:49:05.631
  E0601 13:49:06.319161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:07.319238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete a job @ 06/01/24 13:49:07.637
  STEP: deleting Job.batch foo in namespace job-4566, will wait for the garbage collector to delete the pods @ 06/01/24 13:49:07.637
  Jun  1 13:49:07.699: INFO: Deleting Job.batch foo took: 7.945621ms
  Jun  1 13:49:07.799: INFO: Terminating Job.batch foo pods took: 100.659949ms
  E0601 13:49:08.319655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 06/01/24 13:49:08.7
  Jun  1 13:49:08.704: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4566" for this suite. @ 06/01/24 13:49:08.708
â€¢ [3.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 06/01/24 13:49:08.717
  Jun  1 13:49:08.717: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename proxy @ 06/01/24 13:49:08.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:49:08.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:49:08.739
  Jun  1 13:49:08.742: INFO: Creating pod...
  E0601 13:49:09.319786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:10.319883      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:49:10.759: INFO: Creating service...
  Jun  1 13:49:10.767: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3825/pods/agnhost/proxy/some/path/with/DELETE
  Jun  1 13:49:10.779: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jun  1 13:49:10.779: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3825/pods/agnhost/proxy/some/path/with/GET
  Jun  1 13:49:10.782: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Jun  1 13:49:10.782: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3825/pods/agnhost/proxy/some/path/with/HEAD
  Jun  1 13:49:10.786: INFO: http.Client request:HEAD | StatusCode:200
  Jun  1 13:49:10.786: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3825/pods/agnhost/proxy/some/path/with/OPTIONS
  Jun  1 13:49:10.789: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jun  1 13:49:10.789: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3825/pods/agnhost/proxy/some/path/with/PATCH
  Jun  1 13:49:10.793: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jun  1 13:49:10.793: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3825/pods/agnhost/proxy/some/path/with/POST
  Jun  1 13:49:10.798: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jun  1 13:49:10.798: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3825/pods/agnhost/proxy/some/path/with/PUT
  Jun  1 13:49:10.801: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jun  1 13:49:10.801: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3825/services/test-service/proxy/some/path/with/DELETE
  Jun  1 13:49:10.808: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jun  1 13:49:10.808: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3825/services/test-service/proxy/some/path/with/GET
  Jun  1 13:49:10.812: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Jun  1 13:49:10.812: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3825/services/test-service/proxy/some/path/with/HEAD
  Jun  1 13:49:10.816: INFO: http.Client request:HEAD | StatusCode:200
  Jun  1 13:49:10.816: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3825/services/test-service/proxy/some/path/with/OPTIONS
  Jun  1 13:49:10.822: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jun  1 13:49:10.823: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3825/services/test-service/proxy/some/path/with/PATCH
  Jun  1 13:49:10.828: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jun  1 13:49:10.828: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3825/services/test-service/proxy/some/path/with/POST
  Jun  1 13:49:10.832: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jun  1 13:49:10.832: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3825/services/test-service/proxy/some/path/with/PUT
  Jun  1 13:49:10.839: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jun  1 13:49:10.839: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-3825" for this suite. @ 06/01/24 13:49:10.843
â€¢ [2.131 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:332
  STEP: Creating a kubernetes client @ 06/01/24 13:49:10.848
  Jun  1 13:49:10.848: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename statefulset @ 06/01/24 13:49:10.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:49:10.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:49:10.868
  STEP: Creating service test in namespace statefulset-4662 @ 06/01/24 13:49:10.871
  STEP: Creating a new StatefulSet @ 06/01/24 13:49:10.878
  Jun  1 13:49:10.889: INFO: Found 0 stateful pods, waiting for 3
  E0601 13:49:11.319947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:12.320588      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:13.320671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:14.320880      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:15.321021      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:16.321182      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:17.321369      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:18.321490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:19.321594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:20.322215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:49:20.890: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun  1 13:49:20.890: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun  1 13:49:20.890: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 06/01/24 13:49:20.9
  Jun  1 13:49:20.920: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 06/01/24 13:49:20.92
  E0601 13:49:21.322846      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:22.322933      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:23.323183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:24.323444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:25.323742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:26.323905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:27.323995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:28.324026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:29.324113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:30.324689      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 06/01/24 13:49:30.929
  STEP: Performing a canary update @ 06/01/24 13:49:30.929
  Jun  1 13:49:30.950: INFO: Updating stateful set ss2
  Jun  1 13:49:30.961: INFO: Waiting for Pod statefulset-4662/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0601 13:49:31.325369      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:32.325461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:33.325538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:34.325661      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:35.326072      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:36.326203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:37.327170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:38.327255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:39.327353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:40.327600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 06/01/24 13:49:40.959
  Jun  1 13:49:41.005: INFO: Found 1 stateful pods, waiting for 3
  E0601 13:49:41.328567      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:42.328784      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:43.329595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:44.329797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:45.329873      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:46.330167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:47.330559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:48.330870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:49.331071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:50.331853      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:49:51.005: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun  1 13:49:51.005: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun  1 13:49:51.005: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 06/01/24 13:49:51.013
  Jun  1 13:49:51.031: INFO: Updating stateful set ss2
  Jun  1 13:49:51.040: INFO: Waiting for Pod statefulset-4662/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0601 13:49:51.332173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:52.332306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:53.332535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:54.332674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:55.332871      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:56.333170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:57.333262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:58.334185      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:49:59.335032      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:50:00.335109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:50:01.060: INFO: Updating stateful set ss2
  Jun  1 13:50:01.070: INFO: Waiting for StatefulSet statefulset-4662/ss2 to complete update
  Jun  1 13:50:01.070: INFO: Waiting for Pod statefulset-4662/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0601 13:50:01.335200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:50:02.335452      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:50:03.335570      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:50:04.335659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:50:05.335755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:50:06.335737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:50:07.335875      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:50:08.335944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:50:09.336131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:50:10.336311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:50:11.069: INFO: Deleting all statefulset in ns statefulset-4662
  Jun  1 13:50:11.072: INFO: Scaling statefulset ss2 to 0
  E0601 13:50:11.336975      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:50:12.337138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:50:13.337206      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:50:14.338239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:50:15.338347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:50:16.339414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:50:17.339456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:50:18.339628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:50:19.339733      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:50:20.339938      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:50:21.089: INFO: Waiting for statefulset status.replicas updated to 0
  Jun  1 13:50:21.093: INFO: Deleting statefulset ss2
  Jun  1 13:50:21.105: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4662" for this suite. @ 06/01/24 13:50:21.11
â€¢ [70.268 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 06/01/24 13:50:21.116
  Jun  1 13:50:21.116: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename watch @ 06/01/24 13:50:21.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:50:21.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:50:21.136
  STEP: getting a starting resourceVersion @ 06/01/24 13:50:21.138
  STEP: starting a background goroutine to produce watch events @ 06/01/24 13:50:21.142
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 06/01/24 13:50:21.142
  E0601 13:50:21.340038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:50:22.340528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:50:23.341083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:50:23.923: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8507" for this suite. @ 06/01/24 13:50:23.972
â€¢ [2.909 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1632
  STEP: Creating a kubernetes client @ 06/01/24 13:50:24.025
  Jun  1 13:50:24.025: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename kubectl @ 06/01/24 13:50:24.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:50:24.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:50:24.043
  STEP: creating the pod @ 06/01/24 13:50:24.046
  Jun  1 13:50:24.046: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-8208 create -f -'
  Jun  1 13:50:24.136: INFO: stderr: ""
  Jun  1 13:50:24.136: INFO: stdout: "pod/pause created\n"
  E0601 13:50:24.341580      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:50:25.341701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 06/01/24 13:50:26.146
  Jun  1 13:50:26.146: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-8208 label pods pause testing-label=testing-label-value'
  Jun  1 13:50:26.198: INFO: stderr: ""
  Jun  1 13:50:26.198: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 06/01/24 13:50:26.198
  Jun  1 13:50:26.198: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-8208 get pod pause -L testing-label'
  Jun  1 13:50:26.245: INFO: stderr: ""
  Jun  1 13:50:26.245: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 06/01/24 13:50:26.245
  Jun  1 13:50:26.245: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-8208 label pods pause testing-label-'
  Jun  1 13:50:26.299: INFO: stderr: ""
  Jun  1 13:50:26.299: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 06/01/24 13:50:26.299
  Jun  1 13:50:26.299: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-8208 get pod pause -L testing-label'
  E0601 13:50:26.342346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:50:26.343: INFO: stderr: ""
  Jun  1 13:50:26.343: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 06/01/24 13:50:26.343
  Jun  1 13:50:26.343: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-8208 delete --grace-period=0 --force -f -'
  Jun  1 13:50:26.396: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun  1 13:50:26.396: INFO: stdout: "pod \"pause\" force deleted\n"
  Jun  1 13:50:26.396: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-8208 get rc,svc -l name=pause --no-headers'
  Jun  1 13:50:26.445: INFO: stderr: "No resources found in kubectl-8208 namespace.\n"
  Jun  1 13:50:26.445: INFO: stdout: ""
  Jun  1 13:50:26.445: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-8208 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jun  1 13:50:26.489: INFO: stderr: ""
  Jun  1 13:50:26.489: INFO: stdout: ""
  Jun  1 13:50:26.490: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8208" for this suite. @ 06/01/24 13:50:26.493
â€¢ [2.475 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 06/01/24 13:50:26.5
  Jun  1 13:50:26.500: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename secrets @ 06/01/24 13:50:26.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:50:26.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:50:26.519
  STEP: Creating secret with name secret-test-map-90de6798-e2ee-47fc-bf3e-a723222e865f @ 06/01/24 13:50:26.523
  STEP: Creating a pod to test consume secrets @ 06/01/24 13:50:26.527
  E0601 13:50:27.342458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:50:28.343387      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:50:29.343485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:50:30.344105      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 13:50:30.554
  Jun  1 13:50:30.556: INFO: Trying to get logs from node ip-172-31-74-111 pod pod-secrets-b09e14f6-0b8d-4e73-bbae-0414c8275a72 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/01/24 13:50:30.567
  Jun  1 13:50:30.583: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8640" for this suite. @ 06/01/24 13:50:30.588
â€¢ [4.093 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 06/01/24 13:50:30.594
  Jun  1 13:50:30.594: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename configmap @ 06/01/24 13:50:30.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:50:30.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:50:30.615
  STEP: Creating configMap with name configmap-test-volume-6915f91f-05f7-4271-9ce2-d6ca13d5b184 @ 06/01/24 13:50:30.619
  STEP: Creating a pod to test consume configMaps @ 06/01/24 13:50:30.624
  E0601 13:50:31.344302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:50:32.344879      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:50:33.345261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:50:34.346200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 13:50:34.648
  Jun  1 13:50:34.651: INFO: Trying to get logs from node ip-172-31-74-111 pod pod-configmaps-94bfba5c-58b2-448b-80c7-9b738af046d4 container configmap-volume-test: <nil>
  STEP: delete the pod @ 06/01/24 13:50:34.657
  Jun  1 13:50:34.674: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3954" for this suite. @ 06/01/24 13:50:34.678
â€¢ [4.089 seconds]
------------------------------
S
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 06/01/24 13:50:34.683
  Jun  1 13:50:34.683: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename subjectreview @ 06/01/24 13:50:34.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:50:34.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:50:34.702
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-4414" @ 06/01/24 13:50:34.705
  Jun  1 13:50:34.709: INFO: saUsername: "system:serviceaccount:subjectreview-4414:e2e"
  Jun  1 13:50:34.709: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-4414"}
  Jun  1 13:50:34.709: INFO: saUID: "9fda711f-e5fd-4ddb-afb2-d16ec6006afb"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-4414:e2e" @ 06/01/24 13:50:34.709
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-4414:e2e" @ 06/01/24 13:50:34.71
  Jun  1 13:50:34.711: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-4414:e2e" api 'list' configmaps in "subjectreview-4414" namespace @ 06/01/24 13:50:34.711
  Jun  1 13:50:34.712: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-4414:e2e" @ 06/01/24 13:50:34.712
  Jun  1 13:50:34.714: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Jun  1 13:50:34.714: INFO: LocalSubjectAccessReview has been verified
  Jun  1 13:50:34.714: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-4414" for this suite. @ 06/01/24 13:50:34.717
â€¢ [0.039 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 06/01/24 13:50:34.722
  Jun  1 13:50:34.722: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename field-validation @ 06/01/24 13:50:34.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:50:34.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:50:34.741
  Jun  1 13:50:34.743: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  E0601 13:50:35.347073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:50:36.347277      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0601 13:50:37.277226      21 warnings.go:70] unknown field "alpha"
  W0601 13:50:37.277243      21 warnings.go:70] unknown field "beta"
  W0601 13:50:37.277247      21 warnings.go:70] unknown field "delta"
  W0601 13:50:37.277252      21 warnings.go:70] unknown field "epsilon"
  W0601 13:50:37.277256      21 warnings.go:70] unknown field "gamma"
  E0601 13:50:37.348300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:50:37.812: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1503" for this suite. @ 06/01/24 13:50:37.815
â€¢ [3.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 06/01/24 13:50:37.821
  Jun  1 13:50:37.821: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename webhook @ 06/01/24 13:50:37.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:50:37.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:50:37.84
  STEP: Setting up server cert @ 06/01/24 13:50:37.865
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/01/24 13:50:38.067
  STEP: Deploying the webhook pod @ 06/01/24 13:50:38.076
  STEP: Wait for the deployment to be ready @ 06/01/24 13:50:38.087
  Jun  1 13:50:38.094: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0601 13:50:38.349092      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:50:39.349191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/01/24 13:50:40.105
  STEP: Verifying the service has paired with the endpoint @ 06/01/24 13:50:40.115
  E0601 13:50:40.349779      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:50:41.115: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 06/01/24 13:50:41.122
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/01/24 13:50:41.122
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 06/01/24 13:50:41.134
  E0601 13:50:41.350599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 06/01/24 13:50:42.144
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/01/24 13:50:42.144
  E0601 13:50:42.351431      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 06/01/24 13:50:43.174
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/01/24 13:50:43.174
  E0601 13:50:43.351546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:50:44.351758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:50:45.351849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:50:46.351951      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:50:47.352026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 06/01/24 13:50:48.203
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/01/24 13:50:48.203
  E0601 13:50:48.352793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:50:49.353007      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:50:50.353154      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:50:51.353248      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:50:52.353505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:50:53.297: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9349" for this suite. @ 06/01/24 13:50:53.299
  STEP: Destroying namespace "webhook-markers-7323" for this suite. @ 06/01/24 13:50:53.304
â€¢ [15.491 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 06/01/24 13:50:53.312
  Jun  1 13:50:53.312: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename kubectl-logs @ 06/01/24 13:50:53.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:50:53.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:50:53.33
  STEP: creating an pod @ 06/01/24 13:50:53.333
  Jun  1 13:50:53.333: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-logs-1291 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.47 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  E0601 13:50:53.353518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:50:53.388: INFO: stderr: ""
  Jun  1 13:50:53.388: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 06/01/24 13:50:53.388
  Jun  1 13:50:53.388: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0601 13:50:54.353727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:50:55.354578      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:50:55.396: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 06/01/24 13:50:55.396
  Jun  1 13:50:55.396: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-logs-1291 logs logs-generator logs-generator'
  Jun  1 13:50:55.449: INFO: stderr: ""
  Jun  1 13:50:55.449: INFO: stdout: "I0601 13:50:53.967313       1 logs_generator.go:76] 0 POST /api/v1/namespaces/kube-system/pods/2zn 224\nI0601 13:50:54.167453       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/qgrk 583\nI0601 13:50:54.367757       1 logs_generator.go:76] 2 GET /api/v1/namespaces/default/pods/lvzx 545\nI0601 13:50:54.568090       1 logs_generator.go:76] 3 POST /api/v1/namespaces/default/pods/tqv 506\nI0601 13:50:54.768304       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/nkxp 529\nI0601 13:50:54.967386       1 logs_generator.go:76] 5 POST /api/v1/namespaces/kube-system/pods/jnx 370\nI0601 13:50:55.167681       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/lqj9 317\nI0601 13:50:55.367977       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/87z 405\n"
  STEP: limiting log lines @ 06/01/24 13:50:55.449
  Jun  1 13:50:55.450: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-logs-1291 logs logs-generator logs-generator --tail=1'
  Jun  1 13:50:55.500: INFO: stderr: ""
  Jun  1 13:50:55.500: INFO: stdout: "I0601 13:50:55.367977       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/87z 405\n"
  Jun  1 13:50:55.500: INFO: got output "I0601 13:50:55.367977       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/87z 405\n"
  STEP: limiting log bytes @ 06/01/24 13:50:55.5
  Jun  1 13:50:55.500: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-logs-1291 logs logs-generator logs-generator --limit-bytes=1'
  Jun  1 13:50:55.551: INFO: stderr: ""
  Jun  1 13:50:55.551: INFO: stdout: "I"
  Jun  1 13:50:55.551: INFO: got output "I"
  STEP: exposing timestamps @ 06/01/24 13:50:55.551
  Jun  1 13:50:55.551: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-logs-1291 logs logs-generator logs-generator --tail=1 --timestamps'
  Jun  1 13:50:55.599: INFO: stderr: ""
  Jun  1 13:50:55.599: INFO: stdout: "2024-06-01T13:50:55.568358933Z I0601 13:50:55.568282       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/m5d 453\n"
  Jun  1 13:50:55.599: INFO: got output "2024-06-01T13:50:55.568358933Z I0601 13:50:55.568282       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/m5d 453\n"
  STEP: restricting to a time range @ 06/01/24 13:50:55.599
  E0601 13:50:56.355435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:50:57.355546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:50:58.100: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-logs-1291 logs logs-generator logs-generator --since=1s'
  Jun  1 13:50:58.152: INFO: stderr: ""
  Jun  1 13:50:58.152: INFO: stdout: "I0601 13:50:57.167472       1 logs_generator.go:76] 16 GET /api/v1/namespaces/kube-system/pods/gmm 382\nI0601 13:50:57.367773       1 logs_generator.go:76] 17 GET /api/v1/namespaces/ns/pods/pvl 368\nI0601 13:50:57.568088       1 logs_generator.go:76] 18 POST /api/v1/namespaces/kube-system/pods/x4jt 365\nI0601 13:50:57.767351       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/kube-system/pods/q9bc 293\nI0601 13:50:57.967633       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/pgm 228\n"
  Jun  1 13:50:58.152: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-logs-1291 logs logs-generator logs-generator --since=24h'
  Jun  1 13:50:58.205: INFO: stderr: ""
  Jun  1 13:50:58.205: INFO: stdout: "I0601 13:50:53.967313       1 logs_generator.go:76] 0 POST /api/v1/namespaces/kube-system/pods/2zn 224\nI0601 13:50:54.167453       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/qgrk 583\nI0601 13:50:54.367757       1 logs_generator.go:76] 2 GET /api/v1/namespaces/default/pods/lvzx 545\nI0601 13:50:54.568090       1 logs_generator.go:76] 3 POST /api/v1/namespaces/default/pods/tqv 506\nI0601 13:50:54.768304       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/nkxp 529\nI0601 13:50:54.967386       1 logs_generator.go:76] 5 POST /api/v1/namespaces/kube-system/pods/jnx 370\nI0601 13:50:55.167681       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/lqj9 317\nI0601 13:50:55.367977       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/87z 405\nI0601 13:50:55.568282       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/m5d 453\nI0601 13:50:55.767519       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/default/pods/7lcr 562\nI0601 13:50:55.967801       1 logs_generator.go:76] 10 GET /api/v1/namespaces/default/pods/6vr 451\nI0601 13:50:56.168088       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/kube-system/pods/ww9 394\nI0601 13:50:56.367332       1 logs_generator.go:76] 12 POST /api/v1/namespaces/kube-system/pods/8jvs 211\nI0601 13:50:56.567638       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/default/pods/rcl 580\nI0601 13:50:56.767936       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/default/pods/nhrl 415\nI0601 13:50:56.968239       1 logs_generator.go:76] 15 POST /api/v1/namespaces/default/pods/nrn 449\nI0601 13:50:57.167472       1 logs_generator.go:76] 16 GET /api/v1/namespaces/kube-system/pods/gmm 382\nI0601 13:50:57.367773       1 logs_generator.go:76] 17 GET /api/v1/namespaces/ns/pods/pvl 368\nI0601 13:50:57.568088       1 logs_generator.go:76] 18 POST /api/v1/namespaces/kube-system/pods/x4jt 365\nI0601 13:50:57.767351       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/kube-system/pods/q9bc 293\nI0601 13:50:57.967633       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/pgm 228\nI0601 13:50:58.167928       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/kube-system/pods/x6j 400\n"
  Jun  1 13:50:58.205: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=kubectl-logs-1291 delete pod logs-generator'
  E0601 13:50:58.356601      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:50:58.816: INFO: stderr: ""
  Jun  1 13:50:58.816: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Jun  1 13:50:58.816: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-1291" for this suite. @ 06/01/24 13:50:58.823
â€¢ [5.521 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 06/01/24 13:50:58.834
  Jun  1 13:50:58.834: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename replicaset @ 06/01/24 13:50:58.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:50:58.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:50:58.86
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 06/01/24 13:50:58.863
  Jun  1 13:50:58.876: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0601 13:50:59.357058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:00.357207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:01.357311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:02.357379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:03.357503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:51:03.880: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/01/24 13:51:03.88
  STEP: getting scale subresource @ 06/01/24 13:51:03.88
  STEP: updating a scale subresource @ 06/01/24 13:51:03.884
  STEP: verifying the replicaset Spec.Replicas was modified @ 06/01/24 13:51:03.891
  STEP: Patch a scale subresource @ 06/01/24 13:51:03.894
  Jun  1 13:51:03.908: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6744" for this suite. @ 06/01/24 13:51:03.912
â€¢ [5.089 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 06/01/24 13:51:03.923
  Jun  1 13:51:03.923: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename webhook @ 06/01/24 13:51:03.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:51:03.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:51:03.941
  STEP: Setting up server cert @ 06/01/24 13:51:03.962
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/01/24 13:51:04.228
  STEP: Deploying the webhook pod @ 06/01/24 13:51:04.232
  STEP: Wait for the deployment to be ready @ 06/01/24 13:51:04.241
  Jun  1 13:51:04.249: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0601 13:51:04.357895      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:05.358021      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/01/24 13:51:06.262
  STEP: Verifying the service has paired with the endpoint @ 06/01/24 13:51:06.273
  E0601 13:51:06.358054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:51:07.274: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 06/01/24 13:51:07.28
  STEP: create a pod that should be updated by the webhook @ 06/01/24 13:51:07.293
  E0601 13:51:07.358063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:51:07.358: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1567" for this suite. @ 06/01/24 13:51:07.363
  STEP: Destroying namespace "webhook-markers-6692" for this suite. @ 06/01/24 13:51:07.371
â€¢ [3.453 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 06/01/24 13:51:07.376
  Jun  1 13:51:07.376: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename projected @ 06/01/24 13:51:07.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:51:07.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:51:07.393
  STEP: Creating secret with name projected-secret-test-b3c8131f-52a7-4878-94f2-363e52d63e73 @ 06/01/24 13:51:07.395
  STEP: Creating a pod to test consume secrets @ 06/01/24 13:51:07.399
  E0601 13:51:08.358418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:09.358674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:10.359332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:11.359406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 13:51:11.419
  Jun  1 13:51:11.421: INFO: Trying to get logs from node ip-172-31-74-111 pod pod-projected-secrets-4acdf7c6-1c9e-44af-a68f-c15a4f635e1d container secret-volume-test: <nil>
  STEP: delete the pod @ 06/01/24 13:51:11.428
  Jun  1 13:51:11.445: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6390" for this suite. @ 06/01/24 13:51:11.447
â€¢ [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 06/01/24 13:51:11.453
  Jun  1 13:51:11.453: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename watch @ 06/01/24 13:51:11.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:51:11.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:51:11.469
  STEP: creating a watch on configmaps @ 06/01/24 13:51:11.472
  STEP: creating a new configmap @ 06/01/24 13:51:11.473
  STEP: modifying the configmap once @ 06/01/24 13:51:11.477
  STEP: closing the watch once it receives two notifications @ 06/01/24 13:51:11.486
  Jun  1 13:51:11.486: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-332  7d2981bc-648a-4c7b-ace6-5d23d584fcf7 42421 0 2024-06-01 13:51:11 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-06-01 13:51:11 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  1 13:51:11.486: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-332  7d2981bc-648a-4c7b-ace6-5d23d584fcf7 42422 0 2024-06-01 13:51:11 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-06-01 13:51:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 06/01/24 13:51:11.486
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 06/01/24 13:51:11.493
  STEP: deleting the configmap @ 06/01/24 13:51:11.495
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 06/01/24 13:51:11.499
  Jun  1 13:51:11.499: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-332  7d2981bc-648a-4c7b-ace6-5d23d584fcf7 42423 0 2024-06-01 13:51:11 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-06-01 13:51:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  1 13:51:11.501: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-332  7d2981bc-648a-4c7b-ace6-5d23d584fcf7 42424 0 2024-06-01 13:51:11 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-06-01 13:51:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  1 13:51:11.501: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-332" for this suite. @ 06/01/24 13:51:11.505
â€¢ [0.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:139
  STEP: Creating a kubernetes client @ 06/01/24 13:51:11.513
  Jun  1 13:51:11.513: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename configmap @ 06/01/24 13:51:11.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:51:11.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:51:11.532
  STEP: Creating configMap that has name configmap-test-emptyKey-1b26c948-42e6-4603-b28f-cc038891f66f @ 06/01/24 13:51:11.537
  Jun  1 13:51:11.538: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8382" for this suite. @ 06/01/24 13:51:11.541
â€¢ [0.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 06/01/24 13:51:11.548
  Jun  1 13:51:11.548: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename secrets @ 06/01/24 13:51:11.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:51:11.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:51:11.567
  STEP: Creating secret with name secret-test-f9e9b1c2-2169-4a50-bcfc-6c8a03f917da @ 06/01/24 13:51:11.569
  STEP: Creating a pod to test consume secrets @ 06/01/24 13:51:11.575
  E0601 13:51:12.359567      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:13.359870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:14.360009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:15.360335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 13:51:15.598
  Jun  1 13:51:15.600: INFO: Trying to get logs from node ip-172-31-74-111 pod pod-secrets-3a8b60f1-c26b-43b3-bfc8-69ec2b737bf3 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/01/24 13:51:15.609
  Jun  1 13:51:15.624: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-506" for this suite. @ 06/01/24 13:51:15.627
â€¢ [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 06/01/24 13:51:15.636
  Jun  1 13:51:15.636: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename projected @ 06/01/24 13:51:15.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:51:15.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:51:15.653
  STEP: Creating secret with name s-test-opt-del-06736a61-2342-463f-b9a7-f16b212d4b93 @ 06/01/24 13:51:15.657
  STEP: Creating secret with name s-test-opt-upd-6eeb0a22-cada-4260-a40e-2488850adc21 @ 06/01/24 13:51:15.662
  STEP: Creating the pod @ 06/01/24 13:51:15.666
  E0601 13:51:16.361278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:17.362358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-06736a61-2342-463f-b9a7-f16b212d4b93 @ 06/01/24 13:51:17.704
  STEP: Updating secret s-test-opt-upd-6eeb0a22-cada-4260-a40e-2488850adc21 @ 06/01/24 13:51:17.711
  STEP: Creating secret with name s-test-opt-create-86de18b9-ec39-47ae-a336-f5b53b98708e @ 06/01/24 13:51:17.716
  STEP: waiting to observe update in volume @ 06/01/24 13:51:17.721
  E0601 13:51:18.363238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:19.363475      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:20.364387      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:21.364485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:22.364696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:23.364783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:24.365593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:25.365675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:26.365780      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:27.365868      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:28.366226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:29.366312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:30.366728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:31.366938      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:32.367713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:33.367808      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:34.368119      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:35.368237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:36.368353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:37.368476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:38.369426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:39.369512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:40.370214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:41.370311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:42.370472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:43.370562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:44.371314      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:45.371423      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:46.372290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:47.372386      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:48.372492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:49.372721      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:50.372832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:51.372929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:52.373077      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:53.373165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:54.374215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:55.374291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:56.375071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:57.375167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:58.375263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:51:59.375376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:00.376068      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:01.376256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:02.376385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:03.376600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:04.376977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:05.377168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:06.378077      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:07.378343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:08.378455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:09.378587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:10.378662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:11.378763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:12.378912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:13.379025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:14.379353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:15.379675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:16.379939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:17.380489      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:18.380806      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:19.381030      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:20.381114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:21.381158      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:22.381671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:23.381774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:52:24.018: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7161" for this suite. @ 06/01/24 13:52:24.021
â€¢ [68.390 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 06/01/24 13:52:24.027
  Jun  1 13:52:24.027: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename daemonsets @ 06/01/24 13:52:24.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:52:24.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:52:24.047
  STEP: Creating a simple DaemonSet "daemon-set" @ 06/01/24 13:52:24.069
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/01/24 13:52:24.073
  Jun  1 13:52:24.077: INFO: DaemonSet pods can't tolerate node ip-172-31-13-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:52:24.077: INFO: DaemonSet pods can't tolerate node ip-172-31-68-201 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:52:24.080: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  1 13:52:24.080: INFO: Node ip-172-31-17-129 is running 0 daemon pod, expected 1
  E0601 13:52:24.382233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:52:25.079: INFO: DaemonSet pods can't tolerate node ip-172-31-13-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:52:25.079: INFO: DaemonSet pods can't tolerate node ip-172-31-68-201 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:52:25.083: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun  1 13:52:25.083: INFO: Node ip-172-31-17-129 is running 0 daemon pod, expected 1
  E0601 13:52:25.382325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:52:26.080: INFO: DaemonSet pods can't tolerate node ip-172-31-13-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:52:26.080: INFO: DaemonSet pods can't tolerate node ip-172-31-68-201 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:52:26.082: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun  1 13:52:26.082: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 06/01/24 13:52:26.085
  Jun  1 13:52:26.101: INFO: DaemonSet pods can't tolerate node ip-172-31-13-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:52:26.101: INFO: DaemonSet pods can't tolerate node ip-172-31-68-201 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:52:26.108: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun  1 13:52:26.109: INFO: Node ip-172-31-80-202 is running 0 daemon pod, expected 1
  E0601 13:52:26.382359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:52:27.102: INFO: DaemonSet pods can't tolerate node ip-172-31-13-69 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:52:27.102: INFO: DaemonSet pods can't tolerate node ip-172-31-68-201 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  1 13:52:27.106: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun  1 13:52:27.106: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 06/01/24 13:52:27.106
  STEP: Deleting DaemonSet "daemon-set" @ 06/01/24 13:52:27.112
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8090, will wait for the garbage collector to delete the pods @ 06/01/24 13:52:27.112
  Jun  1 13:52:27.175: INFO: Deleting DaemonSet.extensions daemon-set took: 10.36859ms
  Jun  1 13:52:27.275: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.348246ms
  E0601 13:52:27.383181      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:28.383856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:52:28.881: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  1 13:52:28.881: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun  1 13:52:28.883: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"42788"},"items":null}

  Jun  1 13:52:28.886: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"42788"},"items":null}

  Jun  1 13:52:28.897: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8090" for this suite. @ 06/01/24 13:52:28.902
â€¢ [4.883 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 06/01/24 13:52:28.91
  Jun  1 13:52:28.910: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename limitrange @ 06/01/24 13:52:28.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:52:28.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:52:28.928
  STEP: Creating a LimitRange @ 06/01/24 13:52:28.931
  STEP: Setting up watch @ 06/01/24 13:52:28.931
  STEP: Submitting a LimitRange @ 06/01/24 13:52:29.034
  STEP: Verifying LimitRange creation was observed @ 06/01/24 13:52:29.039
  STEP: Fetching the LimitRange to ensure it has proper values @ 06/01/24 13:52:29.039
  Jun  1 13:52:29.042: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Jun  1 13:52:29.042: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 06/01/24 13:52:29.042
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 06/01/24 13:52:29.046
  Jun  1 13:52:29.050: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Jun  1 13:52:29.050: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 06/01/24 13:52:29.05
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 06/01/24 13:52:29.056
  Jun  1 13:52:29.060: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Jun  1 13:52:29.060: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 06/01/24 13:52:29.06
  STEP: Failing to create a Pod with more than max resources @ 06/01/24 13:52:29.062
  STEP: Updating a LimitRange @ 06/01/24 13:52:29.064
  STEP: Verifying LimitRange updating is effective @ 06/01/24 13:52:29.07
  E0601 13:52:29.383955      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:30.384059      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 06/01/24 13:52:31.075
  STEP: Failing to create a Pod with more than max resources @ 06/01/24 13:52:31.082
  STEP: Deleting a LimitRange @ 06/01/24 13:52:31.084
  STEP: Verifying the LimitRange was deleted @ 06/01/24 13:52:31.092
  E0601 13:52:31.384670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:32.384781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:33.384851      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:34.385132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:35.385282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:52:36.097: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 06/01/24 13:52:36.098
  Jun  1 13:52:36.106: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-57" for this suite. @ 06/01/24 13:52:36.117
â€¢ [7.215 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 06/01/24 13:52:36.126
  Jun  1 13:52:36.126: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename pod-network-test @ 06/01/24 13:52:36.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:52:36.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:52:36.142
  STEP: Performing setup for networking test in namespace pod-network-test-5677 @ 06/01/24 13:52:36.145
  STEP: creating a selector @ 06/01/24 13:52:36.145
  STEP: Creating the service pods in kubernetes @ 06/01/24 13:52:36.145
  Jun  1 13:52:36.145: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0601 13:52:36.386017      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:37.386171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:38.386371      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:39.386476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:40.387371      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:41.387449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:42.388242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:43.388358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:44.389168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:45.389262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:46.389882      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:47.389995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 06/01/24 13:52:48.25
  E0601 13:52:48.390200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:49.390300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:52:50.284: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jun  1 13:52:50.284: INFO: Going to poll 192.168.86.71 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Jun  1 13:52:50.288: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.86.71:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5677 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  1 13:52:50.288: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 13:52:50.288: INFO: ExecWithOptions: Clientset creation
  Jun  1 13:52:50.288: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5677/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.86.71%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun  1 13:52:50.337: INFO: Found all 1 expected endpoints: [netserver-0]
  Jun  1 13:52:50.337: INFO: Going to poll 192.168.118.172 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Jun  1 13:52:50.340: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.118.172:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5677 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  1 13:52:50.340: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 13:52:50.340: INFO: ExecWithOptions: Clientset creation
  Jun  1 13:52:50.340: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5677/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.118.172%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0601 13:52:50.390588      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:52:50.397: INFO: Found all 1 expected endpoints: [netserver-1]
  Jun  1 13:52:50.397: INFO: Going to poll 192.168.126.114 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Jun  1 13:52:50.402: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.126.114:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5677 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  1 13:52:50.402: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 13:52:50.402: INFO: ExecWithOptions: Clientset creation
  Jun  1 13:52:50.402: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5677/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.126.114%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun  1 13:52:50.456: INFO: Found all 1 expected endpoints: [netserver-2]
  Jun  1 13:52:50.456: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5677" for this suite. @ 06/01/24 13:52:50.46
â€¢ [14.341 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:214
  STEP: Creating a kubernetes client @ 06/01/24 13:52:50.467
  Jun  1 13:52:50.467: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/01/24 13:52:50.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:52:50.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:52:50.486
  STEP: create the container to handle the HTTPGet hook request. @ 06/01/24 13:52:50.493
  E0601 13:52:51.390692      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:52.390798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 06/01/24 13:52:52.514
  E0601 13:52:53.390905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:54.391225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 06/01/24 13:52:54.537
  E0601 13:52:55.391335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:56.391811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 06/01/24 13:52:56.551
  Jun  1 13:52:56.565: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2910" for this suite. @ 06/01/24 13:52:56.567
â€¢ [6.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 06/01/24 13:52:56.576
  Jun  1 13:52:56.576: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename cronjob @ 06/01/24 13:52:56.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:52:56.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:52:56.598
  STEP: Creating a ForbidConcurrent cronjob @ 06/01/24 13:52:56.6
  STEP: Ensuring a job is scheduled @ 06/01/24 13:52:56.604
  E0601 13:52:57.391912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:58.392071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:52:59.392404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:00.392517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 06/01/24 13:53:00.608
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 06/01/24 13:53:00.612
  STEP: Ensuring no more jobs are scheduled @ 06/01/24 13:53:00.615
  E0601 13:53:01.393148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:02.393257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:03.393453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:04.393651      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:05.393736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:06.394214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:07.394358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:08.394466      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:09.394600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:10.394676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:11.394775      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:12.394842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:13.394899      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:14.395127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:15.395242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:16.395317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:17.395446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:18.395532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:19.396563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:20.396748      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:21.396885      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:22.397124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:23.397220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:24.398216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:25.398841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:26.398960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:27.399573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:28.399674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:29.400152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:30.400272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:31.400377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:32.400833      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:33.401766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:34.402203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:35.403059      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:36.403738      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:37.403821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:38.404799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:39.405290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:40.406190      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:41.406327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:42.406410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:43.406974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:44.407099      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:45.407806      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:46.407906      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:47.408730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:48.408950      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:49.409131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:50.409171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:51.410185      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:52.410570      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:53.411060      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:54.411158      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:55.411262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:56.411508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:57.412569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:58.412732      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:53:59.413146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:00.413245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:01.413613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:02.414109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:03.415140      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:04.415478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:05.415594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:06.415762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:07.416603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:08.416801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:09.417128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:10.417226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:11.418054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:12.418154      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:13.418248      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:14.419223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:15.419412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:16.419858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:17.420122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:18.420320      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:19.420321      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:20.421345      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:21.422005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:22.422100      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:23.422200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:24.422316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:25.423359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:26.424432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:27.425117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:28.425211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:29.425569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:30.425674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:31.426302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:32.426705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:33.426758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:34.426849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:35.427197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:36.427311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:37.427863      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:38.427979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:39.428094      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:40.428192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:41.428317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:42.428720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:43.429164      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:44.430226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:45.430329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:46.430419      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:47.430523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:48.430621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:49.430717      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:50.430803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:51.431530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:52.431638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:53.432568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:54.432658      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:55.432788      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:56.433036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:57.433155      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:58.434213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:54:59.434313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:00.434436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:01.434528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:02.434629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:03.434809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:04.435405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:05.435516      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:06.435609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:07.435718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:08.435835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:09.435930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:10.436038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:11.436659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:12.437041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:13.437166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:14.437365      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:15.437449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:16.438207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:17.439290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:18.439975      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:19.441081      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:20.441167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:21.442150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:22.442229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:23.442346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:24.442486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:25.442602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:26.442784      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:27.442884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:28.443004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:29.443091      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:30.443243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:31.444263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:32.444335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:33.444478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:34.444523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:35.445146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:36.445243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:37.446240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:38.446333      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:39.446735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:40.447026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:41.447128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:42.447422      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:43.448368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:44.448690      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:45.448804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:46.449192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:47.449300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:48.450224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:49.450335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:50.450438      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:51.450531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:52.450626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:53.450851      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:54.450944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:55.451079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:56.451960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:57.452977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:58.453177      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:55:59.453263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:00.453358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:01.453532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:02.453661      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:03.454100      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:04.454322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:05.455219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:06.455433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:07.456402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:08.456621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:09.457104      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:10.457224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:11.457278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:12.458207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:13.458464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:14.459393      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:15.459503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:16.460090      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:17.460458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:18.460346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:19.460391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:20.460489      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:21.461543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:22.462191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:23.462415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:24.462757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:25.462859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:26.463857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:27.464687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:28.464937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:29.465586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:30.465675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:31.466482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:32.467271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:33.468007      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:34.468497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:35.468737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:36.469275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:37.469526      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:38.469623      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:39.470198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:40.470296      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:41.470487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:42.470729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:43.471292      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:44.471492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:45.472319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:46.472583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:47.472696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:48.472879      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:49.473149      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:50.473233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:51.473464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:52.474184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:53.474624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:54.475024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:55.475924      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:56.476419      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:57.476489      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:58.476674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:56:59.477135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:00.478189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:01.478787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:02.478883      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:03.478937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:04.479170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:05.479292      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:06.479550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:07.479661      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:08.479940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:09.480050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:10.480333      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:11.481222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:12.481323      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:13.481420      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:14.482214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:15.483109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:16.483533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:17.483615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:18.483728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:19.483820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:20.483908      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:21.484461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:22.484555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:23.484663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:24.484762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:25.485061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:26.485113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:27.485215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:28.486196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:29.486867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:30.487922      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:31.488439      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:32.488633      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:33.488728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:34.488943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:35.489125      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:36.489390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:37.489484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:38.490212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:39.490304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:40.490428      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:41.491282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:42.491527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:43.492187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:44.492356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:45.492417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:46.493421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:47.493725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:48.494178      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:49.494291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:50.494532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:51.495259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:52.495358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:53.496006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:54.496151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:55.496230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:56.496603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:57.497123      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:58.497219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:57:59.498214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:58:00.499002      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 06/01/24 13:58:00.622
  Jun  1 13:58:00.629: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6612" for this suite. @ 06/01/24 13:58:00.634
â€¢ [304.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 06/01/24 13:58:00.643
  Jun  1 13:58:00.643: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename projected @ 06/01/24 13:58:00.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:58:00.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:58:00.676
  STEP: Creating a pod to test downward API volume plugin @ 06/01/24 13:58:00.682
  E0601 13:58:01.499294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:58:02.499439      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 13:58:02.695
  Jun  1 13:58:02.698: INFO: Trying to get logs from node ip-172-31-74-111 pod downwardapi-volume-00f23143-7f39-426b-9076-81f351e04b47 container client-container: <nil>
  STEP: delete the pod @ 06/01/24 13:58:02.715
  Jun  1 13:58:02.732: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2142" for this suite. @ 06/01/24 13:58:02.738
â€¢ [2.101 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 06/01/24 13:58:02.744
  Jun  1 13:58:02.744: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename container-runtime @ 06/01/24 13:58:02.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:58:02.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:58:02.763
  STEP: create the container @ 06/01/24 13:58:02.765
  W0601 13:58:02.774957      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 06/01/24 13:58:02.775
  E0601 13:58:03.499515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:58:04.499616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 06/01/24 13:58:04.79
  STEP: the container should be terminated @ 06/01/24 13:58:04.794
  STEP: the termination message should be set @ 06/01/24 13:58:04.794
  Jun  1 13:58:04.794: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 06/01/24 13:58:04.794
  Jun  1 13:58:04.811: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-547" for this suite. @ 06/01/24 13:58:04.814
â€¢ [2.078 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 06/01/24 13:58:04.822
  Jun  1 13:58:04.823: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename emptydir @ 06/01/24 13:58:04.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:58:04.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:58:04.839
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 06/01/24 13:58:04.841
  E0601 13:58:05.499704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:58:06.500150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:58:07.501064      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:58:08.501145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 13:58:08.865
  Jun  1 13:58:08.868: INFO: Trying to get logs from node ip-172-31-74-111 pod pod-7569cf38-7985-4998-b31d-f852d75df425 container test-container: <nil>
  STEP: delete the pod @ 06/01/24 13:58:08.873
  Jun  1 13:58:08.890: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3282" for this suite. @ 06/01/24 13:58:08.894
â€¢ [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 06/01/24 13:58:08.902
  Jun  1 13:58:08.902: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename security-context @ 06/01/24 13:58:08.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:58:08.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:58:08.919
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 06/01/24 13:58:08.922
  E0601 13:58:09.502061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:58:10.502183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:58:11.502535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:58:12.502780      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 13:58:12.944
  Jun  1 13:58:12.946: INFO: Trying to get logs from node ip-172-31-74-111 pod security-context-153eb25a-0830-463c-bc97-c6617d6f0264 container test-container: <nil>
  STEP: delete the pod @ 06/01/24 13:58:12.952
  Jun  1 13:58:12.969: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-1188" for this suite. @ 06/01/24 13:58:12.973
â€¢ [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 06/01/24 13:58:12.981
  Jun  1 13:58:12.981: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename pods @ 06/01/24 13:58:12.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:58:12.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:58:13
  STEP: Create set of pods @ 06/01/24 13:58:13.003
  Jun  1 13:58:13.013: INFO: created test-pod-1
  Jun  1 13:58:13.021: INFO: created test-pod-2
  Jun  1 13:58:13.030: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 06/01/24 13:58:13.03
  E0601 13:58:13.503369      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:58:14.503824      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 06/01/24 13:58:15.082
  Jun  1 13:58:15.087: INFO: Pod quantity 3 is different from expected quantity 0
  E0601 13:58:15.504878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:58:16.088: INFO: Pod quantity 3 is different from expected quantity 0
  E0601 13:58:16.505399      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:58:17.086: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4166" for this suite. @ 06/01/24 13:58:17.089
â€¢ [4.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 06/01/24 13:58:17.097
  Jun  1 13:58:17.097: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename container-probe @ 06/01/24 13:58:17.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 13:58:17.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 13:58:17.117
  STEP: Creating pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816 @ 06/01/24 13:58:17.122
  E0601 13:58:17.505463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:58:18.505554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/01/24 13:58:19.141
  Jun  1 13:58:19.144: INFO: Initial restart count of pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff is 0
  Jun  1 13:58:19.148: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:58:19.505740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:58:20.505786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:58:21.153: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:58:21.506024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:58:22.506234      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:58:23.157: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:58:23.506509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:58:24.506531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:58:25.162: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:58:25.506722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:58:26.507759      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:58:27.167: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:58:27.508111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:58:28.508342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:58:29.173: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:58:29.508969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:58:30.509186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:58:31.179: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:58:31.509539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:58:32.509633      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:58:33.183: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:58:33.509957      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:58:34.510059      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:58:35.189: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:58:35.510609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:58:36.511505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:58:37.195: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:58:37.512126      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:58:38.512224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:58:39.199: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:58:39.513187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:58:40.513283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:58:41.204: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:58:41.514274      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:58:42.514814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:58:43.209: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:58:43.514921      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:58:44.515016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:58:45.213: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:58:45.515112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:58:46.515554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:58:47.219: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:58:47.515669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:58:48.515761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:58:49.224: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:58:49.516503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:58:50.516609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:58:51.228: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:58:51.517497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:58:52.517598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:58:53.232: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:58:53.518068      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:58:54.518177      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:58:55.236: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:58:55.519018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:58:56.519168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:58:57.241: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:58:57.519292      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:58:58.519390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:58:59.245: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:58:59.519992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:59:00.520084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:59:01.251: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:59:01.520660      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:59:02.520762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:59:03.255: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:59:03.521399      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:59:04.521511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:59:05.259: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:59:05.521824      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:59:06.522306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:59:07.264: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:59:07.523201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:59:08.523297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:59:09.268: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:59:09.524158      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:59:10.524238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:59:11.274: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:59:11.525055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:59:12.525159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:59:13.280: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:59:13.525504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:59:14.526197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:59:15.286: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:59:15.526840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:59:16.527280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:59:17.291: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:59:17.528290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:59:18.528375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:59:19.296: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:59:19.529403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:59:20.529478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:59:21.301: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:59:21.529814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:59:22.529906      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:59:23.305: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:59:23.530822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:59:24.530943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:59:25.311: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:59:25.531859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:59:26.532320      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:59:27.316: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:59:27.533401      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:59:28.534454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:59:29.321: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:59:29.534561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:59:30.534637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:59:31.327: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:59:31.534835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:59:32.534905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:59:33.331: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:59:33.535937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:59:34.536023      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:59:35.337: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:59:35.536405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:59:36.536475      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:59:37.342: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:59:37.536581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:59:38.536675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:59:39.346: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:59:39.537380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:59:40.538214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:59:41.351: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:59:41.538738      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:59:42.538817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:59:43.355: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:59:43.539335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:59:44.539575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:59:45.360: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:59:45.539889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:59:46.540758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:59:47.364: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:59:47.541564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:59:48.542219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:59:49.369: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:59:49.542880      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:59:50.542967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:59:51.373: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:59:51.543876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:59:52.543986      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:59:53.379: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:59:53.544960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:59:54.545146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:59:55.384: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:59:55.545931      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:59:56.546380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:59:57.390: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:59:57.547316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 13:59:58.547994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 13:59:59.395: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 13:59:59.548115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:00:00.548213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:00:01.401: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:00:01.549008      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:00:02.549139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:00:03.406: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:00:03.549897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:00:04.550237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:00:05.410: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:00:05.550593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:00:06.551567      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:00:07.414: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:00:07.552603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:00:08.552889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:00:09.419: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:00:09.553692      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:00:10.553800      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:00:11.423: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:00:11.553892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:00:12.553970      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:00:13.429: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:00:13.554433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:00:14.554782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:00:15.434: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:00:15.555289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:00:16.556128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:00:17.438: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:00:17.556375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:00:18.556492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:00:19.443: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:00:19.556541      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:00:20.557228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:00:21.447: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:00:21.557645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:00:22.558201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:00:23.452: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:00:23.558347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:00:24.558442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:00:25.457: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:00:25.559470      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:00:26.559844      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:00:27.462: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:00:27.560358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:00:28.560529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:00:29.468: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:00:29.561319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:00:30.562210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:00:31.473: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:00:31.563207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:00:32.563400      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:00:33.476: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:00:33.564159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:00:34.564259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:00:35.481: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:00:35.565064      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:00:36.565331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:00:37.486: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:00:37.566029      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:00:38.566232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:00:39.492: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:00:39.567257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:00:40.567357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:00:41.496: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:00:41.568044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:00:42.568165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:00:43.500: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:00:43.568817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:00:44.568961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:00:45.504: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:00:45.569396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:00:46.569525      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:00:47.511: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:00:47.570290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:00:48.570389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:00:49.515: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:00:49.571313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:00:50.571532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:00:51.518: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:00:51.571868      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:00:52.572071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:00:53.522: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:00:53.572733      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:00:54.572838      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:00:55.528: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:00:55.573680      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:00:56.574083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:00:57.534: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:00:57.574620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:00:58.574720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:00:59.538: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:00:59.575775      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:01:00.575949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:01:01.543: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:01:01.576708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:01:02.576920      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:01:03.547: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:01:03.577527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:01:04.578214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:01:05.551: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:01:05.578974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:01:06.579457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:01:07.555: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:01:07.580142      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:01:08.580854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:01:09.560: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:01:09.581641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:01:10.581755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:01:11.564: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:01:11.582544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:01:12.582666      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:01:13.569: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:01:13.583513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:01:14.584279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:01:15.574: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:01:15.584611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:01:16.584790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:01:17.580: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:01:17.585199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:01:18.586183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:01:19.585: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:01:19.586426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:01:20.586595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:01:21.586922      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:01:21.589: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:01:22.587044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:01:23.587696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:01:23.594: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:01:24.587803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:01:25.588009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:01:25.598: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:01:26.588419      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:01:27.588640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:01:27.603: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:01:28.588742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:01:29.589005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:01:29.607: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:01:30.589165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:01:31.589530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:01:31.614: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:01:32.590298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:01:33.590407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:01:33.619: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:01:34.590501      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:01:35.590740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:01:35.623: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:01:36.591732      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:01:37.592012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:01:37.630: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:01:38.592123      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:01:39.593094      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:01:39.635: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:01:40.593163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:01:41.593627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:01:41.641: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:01:42.594230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:01:43.594730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:01:43.653: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:01:44.595602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:01:45.595800      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:01:45.658: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:01:46.596657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:01:47.596854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:01:47.663: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:01:48.597150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:01:49.597259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:01:49.669: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:01:50.598228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:01:51.598626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:01:51.674: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:01:52.598746      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:01:53.598966      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:01:53.680: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:01:54.599456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:01:55.600066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:01:55.685: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:01:56.600620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:01:57.600833      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:01:57.688: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:01:58.600938      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:01:59.601151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:01:59.694: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:02:00.601184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:02:01.602245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:02:01.698: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:02:02.602339      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:02:03.602443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:02:03.702: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:02:04.602732      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:02:05.602807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:02:05.708: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:02:06.603440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:02:07.603539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:02:07.713: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:02:08.603641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:02:09.603857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:02:09.720: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:02:10.603961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:02:11.604580      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:02:11.726: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:02:12.605144      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:02:13.606228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:02:13.731: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:02:14.607155      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:02:15.607246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:02:15.736: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:02:16.607713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:02:17.607887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:02:17.741: INFO: Get pod test-webserver-1649e5ef-f556-4aa1-abd6-0817c3189bff in namespace container-probe-3816
  E0601 14:02:18.608743      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:02:19.609019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 06/01/24 14:02:19.742
  Jun  1 14:02:19.759: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3816" for this suite. @ 06/01/24 14:02:19.762
â€¢ [242.673 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 06/01/24 14:02:19.77
  Jun  1 14:02:19.770: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename container-runtime @ 06/01/24 14:02:19.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 14:02:19.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 14:02:19.788
  STEP: create the container @ 06/01/24 14:02:19.79
  W0601 14:02:19.797739      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 06/01/24 14:02:19.797
  E0601 14:02:20.609183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:02:21.609542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:02:22.609590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 06/01/24 14:02:22.819
  STEP: the container should be terminated @ 06/01/24 14:02:22.823
  STEP: the termination message should be set @ 06/01/24 14:02:22.823
  Jun  1 14:02:22.823: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 06/01/24 14:02:22.823
  Jun  1 14:02:22.839: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9300" for this suite. @ 06/01/24 14:02:22.843
â€¢ [3.079 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:47
  STEP: Creating a kubernetes client @ 06/01/24 14:02:22.849
  Jun  1 14:02:22.849: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename secrets @ 06/01/24 14:02:22.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 14:02:22.86
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 14:02:22.862
  STEP: Creating secret with name secret-test-61217645-3fd1-4900-ac70-45ca820a0efe @ 06/01/24 14:02:22.866
  STEP: Creating a pod to test consume secrets @ 06/01/24 14:02:22.871
  E0601 14:02:23.609690      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:02:24.609759      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:02:25.609869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:02:26.610485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 14:02:26.893
  Jun  1 14:02:26.898: INFO: Trying to get logs from node ip-172-31-74-111 pod pod-secrets-86f3f1a1-f998-4d77-bba5-1815a7b990c7 container secret-env-test: <nil>
  STEP: delete the pod @ 06/01/24 14:02:26.908
  Jun  1 14:02:26.922: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6523" for this suite. @ 06/01/24 14:02:26.926
â€¢ [4.084 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 06/01/24 14:02:26.933
  Jun  1 14:02:26.933: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename namespaces @ 06/01/24 14:02:26.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 14:02:26.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 14:02:26.95
  STEP: Creating a test namespace @ 06/01/24 14:02:26.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 14:02:26.969
  STEP: Creating a pod in the namespace @ 06/01/24 14:02:26.971
  STEP: Waiting for the pod to have running status @ 06/01/24 14:02:26.98
  E0601 14:02:27.610973      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:02:28.611928      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 06/01/24 14:02:28.989
  STEP: Waiting for the namespace to be removed. @ 06/01/24 14:02:28.994
  E0601 14:02:29.612047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:02:30.612897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:02:31.612981      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:02:32.613750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:02:33.614433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:02:34.614534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:02:35.614640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:02:36.615271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:02:37.615700      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:02:38.616693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:02:39.616890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 06/01/24 14:02:39.998
  STEP: Verifying there are no pods in the namespace @ 06/01/24 14:02:40.016
  Jun  1 14:02:40.020: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8334" for this suite. @ 06/01/24 14:02:40.024
  STEP: Destroying namespace "nsdeletetest-5476" for this suite. @ 06/01/24 14:02:40.031
  Jun  1 14:02:40.035: INFO: Namespace nsdeletetest-5476 was already deleted
  STEP: Destroying namespace "nsdeletetest-2341" for this suite. @ 06/01/24 14:02:40.035
â€¢ [13.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 06/01/24 14:02:40.04
  Jun  1 14:02:40.040: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename endpointslice @ 06/01/24 14:02:40.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 14:02:40.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 14:02:40.056
  STEP: getting /apis @ 06/01/24 14:02:40.059
  STEP: getting /apis/discovery.k8s.io @ 06/01/24 14:02:40.062
  STEP: getting /apis/discovery.k8s.iov1 @ 06/01/24 14:02:40.063
  STEP: creating @ 06/01/24 14:02:40.064
  STEP: getting @ 06/01/24 14:02:40.077
  STEP: listing @ 06/01/24 14:02:40.08
  STEP: watching @ 06/01/24 14:02:40.082
  Jun  1 14:02:40.082: INFO: starting watch
  STEP: cluster-wide listing @ 06/01/24 14:02:40.083
  STEP: cluster-wide watching @ 06/01/24 14:02:40.087
  Jun  1 14:02:40.087: INFO: starting watch
  STEP: patching @ 06/01/24 14:02:40.088
  STEP: updating @ 06/01/24 14:02:40.093
  Jun  1 14:02:40.100: INFO: waiting for watch events with expected annotations
  Jun  1 14:02:40.100: INFO: saw patched and updated annotations
  STEP: deleting @ 06/01/24 14:02:40.101
  STEP: deleting a collection @ 06/01/24 14:02:40.112
  Jun  1 14:02:40.125: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7390" for this suite. @ 06/01/24 14:02:40.129
â€¢ [0.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 06/01/24 14:02:40.134
  Jun  1 14:02:40.134: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/01/24 14:02:40.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 14:02:40.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 14:02:40.154
  Jun  1 14:02:40.157: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  E0601 14:02:40.617165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 06/01/24 14:02:41.365
  Jun  1 14:02:41.365: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=crd-publish-openapi-1572 --namespace=crd-publish-openapi-1572 create -f -'
  E0601 14:02:41.617454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:02:42.618202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:02:43.437: INFO: stderr: ""
  Jun  1 14:02:43.437: INFO: stdout: "e2e-test-crd-publish-openapi-1664-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Jun  1 14:02:43.437: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=crd-publish-openapi-1572 --namespace=crd-publish-openapi-1572 delete e2e-test-crd-publish-openapi-1664-crds test-cr'
  Jun  1 14:02:43.498: INFO: stderr: ""
  Jun  1 14:02:43.498: INFO: stdout: "e2e-test-crd-publish-openapi-1664-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Jun  1 14:02:43.498: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=crd-publish-openapi-1572 --namespace=crd-publish-openapi-1572 apply -f -'
  Jun  1 14:02:43.556: INFO: stderr: ""
  Jun  1 14:02:43.557: INFO: stdout: "e2e-test-crd-publish-openapi-1664-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Jun  1 14:02:43.557: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=crd-publish-openapi-1572 --namespace=crd-publish-openapi-1572 delete e2e-test-crd-publish-openapi-1664-crds test-cr'
  Jun  1 14:02:43.608: INFO: stderr: ""
  Jun  1 14:02:43.608: INFO: stdout: "e2e-test-crd-publish-openapi-1664-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 06/01/24 14:02:43.608
  Jun  1 14:02:43.608: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=crd-publish-openapi-1572 explain e2e-test-crd-publish-openapi-1664-crds'
  E0601 14:02:43.618848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:02:43.650: INFO: stderr: ""
  Jun  1 14:02:43.650: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-1664-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0601 14:02:44.619503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:02:44.878: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1572" for this suite. @ 06/01/24 14:02:44.884
â€¢ [4.757 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:136
  STEP: Creating a kubernetes client @ 06/01/24 14:02:44.891
  Jun  1 14:02:44.891: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/01/24 14:02:44.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 14:02:44.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 14:02:44.913
  STEP: create the container to handle the HTTPGet hook request. @ 06/01/24 14:02:44.919
  E0601 14:02:45.619634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:02:46.620586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 06/01/24 14:02:46.938
  E0601 14:02:47.621581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:02:48.621693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 06/01/24 14:02:48.955
  STEP: delete the pod with lifecycle hook @ 06/01/24 14:02:48.968
  E0601 14:02:49.622218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:02:50.622325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:02:50.986: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2485" for this suite. @ 06/01/24 14:02:50.989
â€¢ [6.106 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 06/01/24 14:02:50.997
  Jun  1 14:02:50.997: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename namespaces @ 06/01/24 14:02:50.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 14:02:51.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 14:02:51.015
  STEP: creating a Namespace @ 06/01/24 14:02:51.017
  STEP: patching the Namespace @ 06/01/24 14:02:51.032
  STEP: get the Namespace and ensuring it has the label @ 06/01/24 14:02:51.04
  Jun  1 14:02:51.046: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2743" for this suite. @ 06/01/24 14:02:51.049
  STEP: Destroying namespace "nspatchtest-0db531f4-2719-4b71-845c-09c09015ef1f-1334" for this suite. @ 06/01/24 14:02:51.055
â€¢ [0.062 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 06/01/24 14:02:51.06
  Jun  1 14:02:51.060: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename disruption @ 06/01/24 14:02:51.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 14:02:51.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 14:02:51.081
  STEP: creating the pdb @ 06/01/24 14:02:51.083
  STEP: Waiting for the pdb to be processed @ 06/01/24 14:02:51.089
  E0601 14:02:51.622743      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:02:52.622934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 06/01/24 14:02:53.094
  STEP: Waiting for the pdb to be processed @ 06/01/24 14:02:53.102
  E0601 14:02:53.623772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:02:54.623925      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 06/01/24 14:02:55.105
  STEP: Waiting for the pdb to be processed @ 06/01/24 14:02:55.114
  E0601 14:02:55.624180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:02:56.624567      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 06/01/24 14:02:57.124
  Jun  1 14:02:57.127: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5326" for this suite. @ 06/01/24 14:02:57.131
â€¢ [6.079 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 06/01/24 14:02:57.139
  Jun  1 14:02:57.139: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename subpath @ 06/01/24 14:02:57.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 14:02:57.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 14:02:57.153
  STEP: Setting up data @ 06/01/24 14:02:57.156
  STEP: Creating pod pod-subpath-test-secret-4f5f @ 06/01/24 14:02:57.164
  STEP: Creating a pod to test atomic-volume-subpath @ 06/01/24 14:02:57.164
  E0601 14:02:57.625518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:02:58.625618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:02:59.626215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:00.626335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:01.626418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:02.626525      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:03.627174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:04.627276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:05.627361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:06.627465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:07.627806      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:08.627893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:09.627993      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:10.628353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:11.628887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:12.629048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:13.629744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:14.629857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:15.630621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:16.631110      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:17.632020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:18.632222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 14:03:19.235
  Jun  1 14:03:19.238: INFO: Trying to get logs from node ip-172-31-74-111 pod pod-subpath-test-secret-4f5f container test-container-subpath-secret-4f5f: <nil>
  STEP: delete the pod @ 06/01/24 14:03:19.248
  STEP: Deleting pod pod-subpath-test-secret-4f5f @ 06/01/24 14:03:19.264
  Jun  1 14:03:19.264: INFO: Deleting pod "pod-subpath-test-secret-4f5f" in namespace "subpath-6690"
  Jun  1 14:03:19.268: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6690" for this suite. @ 06/01/24 14:03:19.272
â€¢ [22.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 06/01/24 14:03:19.278
  Jun  1 14:03:19.278: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename prestop @ 06/01/24 14:03:19.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 14:03:19.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 14:03:19.296
  STEP: Creating server pod server in namespace prestop-3540 @ 06/01/24 14:03:19.299
  STEP: Waiting for pods to come up. @ 06/01/24 14:03:19.309
  E0601 14:03:19.632936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:20.633144      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-3540 @ 06/01/24 14:03:21.322
  E0601 14:03:21.633253      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:22.634206      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 06/01/24 14:03:23.336
  E0601 14:03:23.634669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:24.634777      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:25.634838      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:26.635719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:27.635826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:03:28.348: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 06/01/24 14:03:28.348
  Jun  1 14:03:28.364: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-3540" for this suite. @ 06/01/24 14:03:28.366
â€¢ [9.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 06/01/24 14:03:28.373
  Jun  1 14:03:28.373: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename svcaccounts @ 06/01/24 14:03:28.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 14:03:28.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 14:03:28.391
  STEP: creating a ServiceAccount @ 06/01/24 14:03:28.398
  STEP: watching for the ServiceAccount to be added @ 06/01/24 14:03:28.405
  STEP: patching the ServiceAccount @ 06/01/24 14:03:28.406
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 06/01/24 14:03:28.413
  STEP: deleting the ServiceAccount @ 06/01/24 14:03:28.415
  Jun  1 14:03:28.429: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2362" for this suite. @ 06/01/24 14:03:28.436
â€¢ [0.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 06/01/24 14:03:28.442
  Jun  1 14:03:28.442: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename endpointslice @ 06/01/24 14:03:28.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 14:03:28.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 14:03:28.46
  Jun  1 14:03:28.469: INFO: Endpoints addresses: [172.31.13.69 172.31.68.201] , ports: [6443]
  Jun  1 14:03:28.469: INFO: EndpointSlices addresses: [172.31.13.69 172.31.68.201] , ports: [6443]
  Jun  1 14:03:28.469: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4468" for this suite. @ 06/01/24 14:03:28.473
â€¢ [0.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 06/01/24 14:03:28.48
  Jun  1 14:03:28.480: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename container-runtime @ 06/01/24 14:03:28.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 14:03:28.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 14:03:28.497
  STEP: create the container @ 06/01/24 14:03:28.5
  W0601 14:03:28.509966      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 06/01/24 14:03:28.51
  E0601 14:03:28.635906      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:29.636358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:30.637099      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 06/01/24 14:03:31.528
  STEP: the container should be terminated @ 06/01/24 14:03:31.531
  STEP: the termination message should be set @ 06/01/24 14:03:31.531
  Jun  1 14:03:31.531: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 06/01/24 14:03:31.531
  Jun  1 14:03:31.548: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3490" for this suite. @ 06/01/24 14:03:31.551
â€¢ [3.078 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 06/01/24 14:03:31.558
  Jun  1 14:03:31.558: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 06/01/24 14:03:31.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 14:03:31.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 14:03:31.576
  STEP: Setting up the test @ 06/01/24 14:03:31.578
  STEP: Creating hostNetwork=false pod @ 06/01/24 14:03:31.578
  E0601 14:03:31.641340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:32.641432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 06/01/24 14:03:33.6
  E0601 14:03:33.641570      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:34.642219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running the test @ 06/01/24 14:03:35.618
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 06/01/24 14:03:35.618
  Jun  1 14:03:35.618: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4949 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  1 14:03:35.618: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 14:03:35.619: INFO: ExecWithOptions: Clientset creation
  Jun  1 14:03:35.619: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4949/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  E0601 14:03:35.643109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:03:35.669: INFO: Exec stderr: ""
  Jun  1 14:03:35.669: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4949 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  1 14:03:35.669: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 14:03:35.670: INFO: ExecWithOptions: Clientset creation
  Jun  1 14:03:35.670: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4949/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jun  1 14:03:35.724: INFO: Exec stderr: ""
  Jun  1 14:03:35.724: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4949 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  1 14:03:35.725: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 14:03:35.725: INFO: ExecWithOptions: Clientset creation
  Jun  1 14:03:35.725: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4949/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jun  1 14:03:35.765: INFO: Exec stderr: ""
  Jun  1 14:03:35.765: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4949 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  1 14:03:35.765: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 14:03:35.765: INFO: ExecWithOptions: Clientset creation
  Jun  1 14:03:35.765: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4949/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jun  1 14:03:35.809: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 06/01/24 14:03:35.809
  Jun  1 14:03:35.809: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4949 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  1 14:03:35.809: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 14:03:35.809: INFO: ExecWithOptions: Clientset creation
  Jun  1 14:03:35.809: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4949/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Jun  1 14:03:35.856: INFO: Exec stderr: ""
  Jun  1 14:03:35.856: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4949 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  1 14:03:35.856: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 14:03:35.857: INFO: ExecWithOptions: Clientset creation
  Jun  1 14:03:35.857: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4949/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Jun  1 14:03:35.908: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 06/01/24 14:03:35.908
  Jun  1 14:03:35.909: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4949 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  1 14:03:35.909: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 14:03:35.909: INFO: ExecWithOptions: Clientset creation
  Jun  1 14:03:35.909: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4949/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jun  1 14:03:35.961: INFO: Exec stderr: ""
  Jun  1 14:03:35.961: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4949 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  1 14:03:35.961: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 14:03:35.962: INFO: ExecWithOptions: Clientset creation
  Jun  1 14:03:35.962: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4949/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jun  1 14:03:36.009: INFO: Exec stderr: ""
  Jun  1 14:03:36.009: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4949 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  1 14:03:36.009: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 14:03:36.009: INFO: ExecWithOptions: Clientset creation
  Jun  1 14:03:36.009: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4949/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jun  1 14:03:36.053: INFO: Exec stderr: ""
  Jun  1 14:03:36.053: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4949 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  1 14:03:36.053: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  Jun  1 14:03:36.053: INFO: ExecWithOptions: Clientset creation
  Jun  1 14:03:36.053: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4949/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jun  1 14:03:36.101: INFO: Exec stderr: ""
  Jun  1 14:03:36.101: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-4949" for this suite. @ 06/01/24 14:03:36.105
â€¢ [4.552 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 06/01/24 14:03:36.111
  Jun  1 14:03:36.111: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename projected @ 06/01/24 14:03:36.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 14:03:36.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 14:03:36.13
  STEP: Creating configMap with name cm-test-opt-del-27f4b7cf-973b-4a73-bba9-9feda4fe223e @ 06/01/24 14:03:36.136
  STEP: Creating configMap with name cm-test-opt-upd-88544720-47c6-45df-bb3c-0f29d06aa4b4 @ 06/01/24 14:03:36.141
  STEP: Creating the pod @ 06/01/24 14:03:36.147
  E0601 14:03:36.643461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:37.643638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-27f4b7cf-973b-4a73-bba9-9feda4fe223e @ 06/01/24 14:03:38.186
  STEP: Updating configmap cm-test-opt-upd-88544720-47c6-45df-bb3c-0f29d06aa4b4 @ 06/01/24 14:03:38.192
  STEP: Creating configMap with name cm-test-opt-create-3597558c-ce02-4d87-abea-d2fe3323600c @ 06/01/24 14:03:38.196
  STEP: waiting to observe update in volume @ 06/01/24 14:03:38.202
  E0601 14:03:38.644670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:39.644868      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:40.644933      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:41.645664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:03:42.240: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5693" for this suite. @ 06/01/24 14:03:42.244
â€¢ [6.140 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 06/01/24 14:03:42.251
  Jun  1 14:03:42.251: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename webhook @ 06/01/24 14:03:42.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 14:03:42.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 14:03:42.267
  STEP: Setting up server cert @ 06/01/24 14:03:42.289
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/01/24 14:03:42.489
  STEP: Deploying the webhook pod @ 06/01/24 14:03:42.499
  STEP: Wait for the deployment to be ready @ 06/01/24 14:03:42.511
  Jun  1 14:03:42.520: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0601 14:03:42.645704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:43.646207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/01/24 14:03:44.53
  STEP: Verifying the service has paired with the endpoint @ 06/01/24 14:03:44.539
  E0601 14:03:44.646558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:03:45.540: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun  1 14:03:45.548: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  E0601 14:03:45.647475      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7690-crds.webhook.example.com via the AdmissionRegistration API @ 06/01/24 14:03:46.064
  STEP: Creating a custom resource that should be mutated by the webhook @ 06/01/24 14:03:46.077
  E0601 14:03:46.647488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:47.647609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:48.648213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:03:48.675: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9045" for this suite. @ 06/01/24 14:03:48.678
  STEP: Destroying namespace "webhook-markers-1317" for this suite. @ 06/01/24 14:03:48.686
â€¢ [6.441 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 06/01/24 14:03:48.693
  Jun  1 14:03:48.693: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename downward-api @ 06/01/24 14:03:48.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 14:03:48.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 14:03:48.71
  STEP: Creating a pod to test downward API volume plugin @ 06/01/24 14:03:48.712
  E0601 14:03:49.648325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:50.648434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:51.648629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:52.648693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 14:03:52.738
  Jun  1 14:03:52.741: INFO: Trying to get logs from node ip-172-31-80-202 pod downwardapi-volume-8647f777-3122-48f2-a8b0-16973ddec961 container client-container: <nil>
  STEP: delete the pod @ 06/01/24 14:03:52.749
  Jun  1 14:03:52.765: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9617" for this suite. @ 06/01/24 14:03:52.768
â€¢ [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 06/01/24 14:03:52.777
  Jun  1 14:03:52.777: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename security-context @ 06/01/24 14:03:52.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 14:03:52.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 14:03:52.842
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 06/01/24 14:03:52.845
  E0601 14:03:53.649157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:54.650220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:55.650320      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:56.650648      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 14:03:56.869
  Jun  1 14:03:56.873: INFO: Trying to get logs from node ip-172-31-80-202 pod security-context-5858f3fa-539e-4f86-ad91-581f9c1dad3d container test-container: <nil>
  STEP: delete the pod @ 06/01/24 14:03:56.88
  Jun  1 14:03:56.893: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-4147" for this suite. @ 06/01/24 14:03:56.897
â€¢ [4.125 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 06/01/24 14:03:56.902
  Jun  1 14:03:56.902: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename gc @ 06/01/24 14:03:56.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 14:03:56.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 14:03:56.919
  STEP: create the rc1 @ 06/01/24 14:03:56.924
  STEP: create the rc2 @ 06/01/24 14:03:56.929
  E0601 14:03:57.651422      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:58.653250      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:03:59.659891      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:00.661485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:01.691513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:02.691628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 06/01/24 14:04:02.94
  STEP: delete the rc simpletest-rc-to-be-deleted @ 06/01/24 14:04:03.549
  STEP: wait for the rc to be deleted @ 06/01/24 14:04:03.557
  E0601 14:04:03.692729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:04.692790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:05.693289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:06.694193      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:07.694282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:04:08.567: INFO: 71 pods remaining
  Jun  1 14:04:08.567: INFO: 71 pods has nil DeletionTimestamp
  Jun  1 14:04:08.568: INFO: 
  E0601 14:04:08.694342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:09.698893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:10.697713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:11.698720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:12.699277      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 06/01/24 14:04:13.569
  W0601 14:04:13.575021      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jun  1 14:04:13.575: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun  1 14:04:13.575: INFO: Deleting pod "simpletest-rc-to-be-deleted-2t456" in namespace "gc-2880"
  Jun  1 14:04:13.588: INFO: Deleting pod "simpletest-rc-to-be-deleted-2vjrh" in namespace "gc-2880"
  Jun  1 14:04:13.599: INFO: Deleting pod "simpletest-rc-to-be-deleted-4659n" in namespace "gc-2880"
  Jun  1 14:04:13.611: INFO: Deleting pod "simpletest-rc-to-be-deleted-4fb75" in namespace "gc-2880"
  Jun  1 14:04:13.623: INFO: Deleting pod "simpletest-rc-to-be-deleted-4k49r" in namespace "gc-2880"
  Jun  1 14:04:13.637: INFO: Deleting pod "simpletest-rc-to-be-deleted-4p8pk" in namespace "gc-2880"
  Jun  1 14:04:13.652: INFO: Deleting pod "simpletest-rc-to-be-deleted-4tcx7" in namespace "gc-2880"
  Jun  1 14:04:13.669: INFO: Deleting pod "simpletest-rc-to-be-deleted-57qk8" in namespace "gc-2880"
  Jun  1 14:04:13.684: INFO: Deleting pod "simpletest-rc-to-be-deleted-5flkd" in namespace "gc-2880"
  Jun  1 14:04:13.699: INFO: Deleting pod "simpletest-rc-to-be-deleted-626h8" in namespace "gc-2880"
  E0601 14:04:13.699470      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:04:13.713: INFO: Deleting pod "simpletest-rc-to-be-deleted-6c7l8" in namespace "gc-2880"
  Jun  1 14:04:13.727: INFO: Deleting pod "simpletest-rc-to-be-deleted-6dpqh" in namespace "gc-2880"
  Jun  1 14:04:13.741: INFO: Deleting pod "simpletest-rc-to-be-deleted-6hlcx" in namespace "gc-2880"
  Jun  1 14:04:13.753: INFO: Deleting pod "simpletest-rc-to-be-deleted-6n6lh" in namespace "gc-2880"
  Jun  1 14:04:13.769: INFO: Deleting pod "simpletest-rc-to-be-deleted-7246z" in namespace "gc-2880"
  Jun  1 14:04:13.788: INFO: Deleting pod "simpletest-rc-to-be-deleted-75mxk" in namespace "gc-2880"
  Jun  1 14:04:13.799: INFO: Deleting pod "simpletest-rc-to-be-deleted-75xgc" in namespace "gc-2880"
  Jun  1 14:04:13.811: INFO: Deleting pod "simpletest-rc-to-be-deleted-7q8qp" in namespace "gc-2880"
  Jun  1 14:04:13.825: INFO: Deleting pod "simpletest-rc-to-be-deleted-8czpn" in namespace "gc-2880"
  Jun  1 14:04:13.837: INFO: Deleting pod "simpletest-rc-to-be-deleted-8fcn6" in namespace "gc-2880"
  Jun  1 14:04:13.851: INFO: Deleting pod "simpletest-rc-to-be-deleted-8vnt9" in namespace "gc-2880"
  Jun  1 14:04:13.864: INFO: Deleting pod "simpletest-rc-to-be-deleted-bbk6s" in namespace "gc-2880"
  Jun  1 14:04:13.879: INFO: Deleting pod "simpletest-rc-to-be-deleted-bgh2v" in namespace "gc-2880"
  Jun  1 14:04:13.894: INFO: Deleting pod "simpletest-rc-to-be-deleted-bz7pv" in namespace "gc-2880"
  Jun  1 14:04:13.908: INFO: Deleting pod "simpletest-rc-to-be-deleted-cck9w" in namespace "gc-2880"
  Jun  1 14:04:13.920: INFO: Deleting pod "simpletest-rc-to-be-deleted-cdqdd" in namespace "gc-2880"
  Jun  1 14:04:13.959: INFO: Deleting pod "simpletest-rc-to-be-deleted-chq4t" in namespace "gc-2880"
  Jun  1 14:04:13.973: INFO: Deleting pod "simpletest-rc-to-be-deleted-cj6vz" in namespace "gc-2880"
  Jun  1 14:04:13.985: INFO: Deleting pod "simpletest-rc-to-be-deleted-ctghm" in namespace "gc-2880"
  Jun  1 14:04:14.000: INFO: Deleting pod "simpletest-rc-to-be-deleted-cxtzd" in namespace "gc-2880"
  Jun  1 14:04:14.017: INFO: Deleting pod "simpletest-rc-to-be-deleted-d5vz9" in namespace "gc-2880"
  Jun  1 14:04:14.029: INFO: Deleting pod "simpletest-rc-to-be-deleted-d7wqw" in namespace "gc-2880"
  Jun  1 14:04:14.040: INFO: Deleting pod "simpletest-rc-to-be-deleted-dcn6x" in namespace "gc-2880"
  Jun  1 14:04:14.052: INFO: Deleting pod "simpletest-rc-to-be-deleted-dhbfv" in namespace "gc-2880"
  Jun  1 14:04:14.066: INFO: Deleting pod "simpletest-rc-to-be-deleted-dv8fn" in namespace "gc-2880"
  Jun  1 14:04:14.082: INFO: Deleting pod "simpletest-rc-to-be-deleted-dxbp2" in namespace "gc-2880"
  Jun  1 14:04:14.095: INFO: Deleting pod "simpletest-rc-to-be-deleted-dz485" in namespace "gc-2880"
  Jun  1 14:04:14.106: INFO: Deleting pod "simpletest-rc-to-be-deleted-f8jrn" in namespace "gc-2880"
  Jun  1 14:04:14.120: INFO: Deleting pod "simpletest-rc-to-be-deleted-fl8md" in namespace "gc-2880"
  Jun  1 14:04:14.133: INFO: Deleting pod "simpletest-rc-to-be-deleted-flrbj" in namespace "gc-2880"
  Jun  1 14:04:14.148: INFO: Deleting pod "simpletest-rc-to-be-deleted-fnc5k" in namespace "gc-2880"
  Jun  1 14:04:14.162: INFO: Deleting pod "simpletest-rc-to-be-deleted-fvj7x" in namespace "gc-2880"
  Jun  1 14:04:14.176: INFO: Deleting pod "simpletest-rc-to-be-deleted-g4r8s" in namespace "gc-2880"
  Jun  1 14:04:14.191: INFO: Deleting pod "simpletest-rc-to-be-deleted-grc2t" in namespace "gc-2880"
  Jun  1 14:04:14.209: INFO: Deleting pod "simpletest-rc-to-be-deleted-gtlch" in namespace "gc-2880"
  Jun  1 14:04:14.241: INFO: Deleting pod "simpletest-rc-to-be-deleted-hs6ld" in namespace "gc-2880"
  Jun  1 14:04:14.255: INFO: Deleting pod "simpletest-rc-to-be-deleted-j2n59" in namespace "gc-2880"
  Jun  1 14:04:14.274: INFO: Deleting pod "simpletest-rc-to-be-deleted-jbggd" in namespace "gc-2880"
  Jun  1 14:04:14.294: INFO: Deleting pod "simpletest-rc-to-be-deleted-jffjh" in namespace "gc-2880"
  Jun  1 14:04:14.321: INFO: Deleting pod "simpletest-rc-to-be-deleted-jhw4x" in namespace "gc-2880"
  Jun  1 14:04:14.346: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2880" for this suite. @ 06/01/24 14:04:14.349
â€¢ [17.452 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 06/01/24 14:04:14.355
  Jun  1 14:04:14.355: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename init-container @ 06/01/24 14:04:14.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 14:04:14.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 14:04:14.394
  STEP: creating the pod @ 06/01/24 14:04:14.397
  Jun  1 14:04:14.397: INFO: PodSpec: initContainers in spec.initContainers
  E0601 14:04:14.701122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:15.708897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:16.709442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:17.709609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:18.709706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:19.709809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:20.709893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:21.710672      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:22.710780      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:23.710855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:24.710973      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:25.711100      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:26.711632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:27.711728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:28.711947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:29.712167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:30.712855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:31.713588      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:32.713678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:33.713707      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:34.713902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:35.714042      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:36.714478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:37.714559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:38.714665      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:39.715261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:40.715334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:41.715699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:42.715850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:43.716058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:44.716832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:45.717837      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:46.718710      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:47.718813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:48.718936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:49.719042      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:50.719206      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:51.719579      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:52.719679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:53.719927      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:54.720233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:55.720425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:56.720544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:57.720644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:04:58.720827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:04:59.145: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-0be0be7b-1f0b-480f-a224-f1de5c467de7", GenerateName:"", Namespace:"init-container-3574", SelfLink:"", UID:"65bfe0b9-ff1f-47ad-992a-3af4a6bfdbe7", ResourceVersion:"48070", Generation:0, CreationTimestamp:time.Date(2024, time.June, 1, 14, 4, 14, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"397816572"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 14, 4, 14, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0056da228), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 1, 14, 4, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0056da270), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-8qbxf", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0050b18a0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-8qbxf", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-8qbxf", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-8qbxf", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc003112e40), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-74-111", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0000c24d0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003112ee0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003112f00)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc003112f08), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc003112f0c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc004d7f4f0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 1, 14, 4, 17, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 1, 14, 4, 14, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 1, 14, 4, 14, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 1, 14, 4, 14, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 1, 14, 4, 14, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.74.111", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.74.111"}}, PodIP:"192.168.118.180", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.118.180"}}, StartTime:time.Date(2024, time.June, 1, 14, 4, 14, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0000c25b0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0000c2690)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://7262770f5ab49a38092c461379a3b6224c0e75b1e3cbfb64ca9f7414c4d5e3c0", Started:(*bool)(0xc003112faf), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0050b1900), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc003112fb5), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0050b18e0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc003112f84), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Jun  1 14:04:59.145: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3574" for this suite. @ 06/01/24 14:04:59.149
â€¢ [44.802 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 06/01/24 14:04:59.158
  Jun  1 14:04:59.158: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename webhook @ 06/01/24 14:04:59.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 14:04:59.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 14:04:59.174
  STEP: Setting up server cert @ 06/01/24 14:04:59.197
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/01/24 14:04:59.514
  STEP: Deploying the webhook pod @ 06/01/24 14:04:59.522
  STEP: Wait for the deployment to be ready @ 06/01/24 14:04:59.536
  Jun  1 14:04:59.544: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0601 14:04:59.721228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:00.722221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/01/24 14:05:01.555
  STEP: Verifying the service has paired with the endpoint @ 06/01/24 14:05:01.57
  E0601 14:05:01.722314      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:05:02.571: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun  1 14:05:02.578: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  E0601 14:05:02.722893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 06/01/24 14:05:03.089
  Jun  1 14:05:03.109: INFO: Waiting for webhook configuration to be ready...
  STEP: Creating a custom resource that should be denied by the webhook @ 06/01/24 14:05:03.216
  E0601 14:05:03.723348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:04.723548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 06/01/24 14:05:05.232
  STEP: Updating the custom resource with disallowed data should be denied @ 06/01/24 14:05:05.239
  STEP: Deleting the custom resource should be denied @ 06/01/24 14:05:05.246
  STEP: Remove the offending key and value from the custom resource data @ 06/01/24 14:05:05.253
  STEP: Deleting the updated custom resource should be successful @ 06/01/24 14:05:05.262
  E0601 14:05:05.723712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:05:05.834: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8427" for this suite. @ 06/01/24 14:05:05.837
  STEP: Destroying namespace "webhook-markers-1643" for this suite. @ 06/01/24 14:05:05.844
â€¢ [6.691 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 06/01/24 14:05:05.849
  Jun  1 14:05:05.849: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename projected @ 06/01/24 14:05:05.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 14:05:05.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 14:05:05.879
  STEP: Creating configMap with name projected-configmap-test-volume-a8babfe7-1c2e-4cb8-9160-bd2a46c20818 @ 06/01/24 14:05:05.882
  STEP: Creating a pod to test consume configMaps @ 06/01/24 14:05:05.886
  E0601 14:05:06.723813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:07.724110      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:08.724197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:09.724217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 14:05:09.907
  Jun  1 14:05:09.910: INFO: Trying to get logs from node ip-172-31-74-111 pod pod-projected-configmaps-313c71e3-2498-45f7-94c5-bbd15c3474a6 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 06/01/24 14:05:09.921
  Jun  1 14:05:09.939: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3792" for this suite. @ 06/01/24 14:05:09.941
â€¢ [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 06/01/24 14:05:09.953
  Jun  1 14:05:09.953: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename downward-api @ 06/01/24 14:05:09.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 14:05:09.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 14:05:09.97
  STEP: Creating a pod to test downward API volume plugin @ 06/01/24 14:05:09.973
  E0601 14:05:10.725180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:11.725435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:12.726057      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:13.726263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/01/24 14:05:13.994
  Jun  1 14:05:13.996: INFO: Trying to get logs from node ip-172-31-74-111 pod downwardapi-volume-37ab7825-cc50-4c86-97c1-7c9761ad4497 container client-container: <nil>
  STEP: delete the pod @ 06/01/24 14:05:14.003
  Jun  1 14:05:14.019: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4358" for this suite. @ 06/01/24 14:05:14.021
â€¢ [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 06/01/24 14:05:14.028
  Jun  1 14:05:14.028: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename webhook @ 06/01/24 14:05:14.029
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 14:05:14.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 14:05:14.045
  STEP: Setting up server cert @ 06/01/24 14:05:14.066
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/01/24 14:05:14.227
  STEP: Deploying the webhook pod @ 06/01/24 14:05:14.232
  STEP: Wait for the deployment to be ready @ 06/01/24 14:05:14.244
  Jun  1 14:05:14.252: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0601 14:05:14.726554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:15.726631      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/01/24 14:05:16.264
  STEP: Verifying the service has paired with the endpoint @ 06/01/24 14:05:16.273
  E0601 14:05:16.727182      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:05:17.273: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 06/01/24 14:05:17.345
  STEP: Creating a configMap that should be mutated @ 06/01/24 14:05:17.356
  STEP: Deleting the collection of validation webhooks @ 06/01/24 14:05:17.38
  STEP: Creating a configMap that should not be mutated @ 06/01/24 14:05:17.426
  Jun  1 14:05:17.472: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9109" for this suite. @ 06/01/24 14:05:17.476
  STEP: Destroying namespace "webhook-markers-6116" for this suite. @ 06/01/24 14:05:17.484
â€¢ [3.462 seconds]
------------------------------
SS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 06/01/24 14:05:17.49
  Jun  1 14:05:17.490: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename taint-multiple-pods @ 06/01/24 14:05:17.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 14:05:17.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 14:05:17.512
  Jun  1 14:05:17.514: INFO: Waiting up to 1m0s for all nodes to be ready
  E0601 14:05:17.727235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:18.727335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:19.728073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:20.728186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:21.729158      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:22.729272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:23.729867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:24.730228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:25.731227      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:26.731675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:27.732243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:28.732333      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:29.733368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:30.733477      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:31.734125      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:32.734344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:33.735251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:34.735319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:35.736159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:36.736333      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:37.737202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:38.738180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:39.738575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:40.738708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:41.739744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:42.739841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:43.739868      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:44.740415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:45.740488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:46.740607      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:47.740725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:48.740927      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:49.741719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:50.741797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:51.742416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:52.742618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:53.743041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:54.743131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:55.743240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:56.743730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:57.744104      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:58.744181      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:05:59.744743      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:00.744806      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:01.747659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:02.747655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:03.748441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:04.748535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:05.749294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:06.749393      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:07.749464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:08.749565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:09.750418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:10.750528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:11.750988      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:12.751105      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:13.752098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:14.752138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:15.753126      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:16.753714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:06:17.515: INFO: Waiting for terminating namespaces to be deleted...
  Jun  1 14:06:17.519: INFO: Starting informer...
  STEP: Starting pods... @ 06/01/24 14:06:17.519
  Jun  1 14:06:17.737: INFO: Pod1 is running on ip-172-31-74-111. Tainting Node
  E0601 14:06:17.754559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:18.755441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:19.756258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:06:19.961: INFO: Pod2 is running on ip-172-31-74-111. Tainting Node
  STEP: Trying to apply a taint on the Node @ 06/01/24 14:06:19.961
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/01/24 14:06:19.972
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 06/01/24 14:06:19.977
  E0601 14:06:20.756824      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:21.757038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:22.757132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:23.757176      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:24.757249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:06:25.608: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  E0601 14:06:25.757324      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:26.757796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:27.758275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:28.758356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:29.758449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:30.758575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:31.758724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:32.758849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:33.759919      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:34.760031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:35.760214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:36.760739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:37.761114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:38.761229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:39.762196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:40.762520      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:41.762622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:42.762827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:43.762922      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:44.763031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:06:45.642: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/01/24 14:06:45.653
  Jun  1 14:06:45.657: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-7042" for this suite. @ 06/01/24 14:06:45.66
â€¢ [88.187 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 06/01/24 14:06:45.677
  Jun  1 14:06:45.677: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename replicaset @ 06/01/24 14:06:45.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 14:06:45.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 14:06:45.698
  STEP: Create a ReplicaSet @ 06/01/24 14:06:45.7
  STEP: Verify that the required pods have come up @ 06/01/24 14:06:45.707
  Jun  1 14:06:45.710: INFO: Pod name sample-pod: Found 0 pods out of 3
  E0601 14:06:45.763094      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:46.763625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:47.763730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:48.763811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:49.763904      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:06:50.714: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 06/01/24 14:06:50.714
  Jun  1 14:06:50.719: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 06/01/24 14:06:50.719
  STEP: DeleteCollection of the ReplicaSets @ 06/01/24 14:06:50.724
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 06/01/24 14:06:50.733
  Jun  1 14:06:50.735: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6091" for this suite. @ 06/01/24 14:06:50.74
â€¢ [5.071 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 06/01/24 14:06:50.749
  Jun  1 14:06:50.749: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename deployment @ 06/01/24 14:06:50.75
  E0601 14:06:50.764704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 14:06:50.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 14:06:50.784
  Jun  1 14:06:50.787: INFO: Creating deployment "test-recreate-deployment"
  Jun  1 14:06:50.793: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Jun  1 14:06:50.802: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  E0601 14:06:51.765588      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:52.765873      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:06:52.812: INFO: Waiting deployment "test-recreate-deployment" to complete
  Jun  1 14:06:52.814: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Jun  1 14:06:52.825: INFO: Updating deployment test-recreate-deployment
  Jun  1 14:06:52.825: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Jun  1 14:06:52.903: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2539",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4fa29d9a-e00b-4e2d-af17-4bc301beba64",
      ResourceVersion: (string) (len=5) "48781",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852847610,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852847612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852847612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852847612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852847612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852847612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852847610,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun  1 14:06:52.907: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2539",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b63e2bed-d1ee-4d79-95eb-126b3e2eed09",
      ResourceVersion: (string) (len=5) "48779",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852847612,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "4fa29d9a-e00b-4e2d-af17-4bc301beba64",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852847612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 66 61 32 39 64  39 61 2d 65 30 30 62 2d  |\"4fa29d9a-e00b-|
              00000120  34 65 32 64 2d 61 66 31  37 2d 34 62 63 33 30 31  |4e2d-af17-4bc301|
              00000130  62 65 62 61 36 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |beba64\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852847612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun  1 14:06:52.908: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Jun  1 14:06:52.908: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-5cf87b5b86",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2539",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3b561778-b689-494e-b3a7-b35cc8391b2a",
      ResourceVersion: (string) (len=5) "48769",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852847610,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "4fa29d9a-e00b-4e2d-af17-4bc301beba64",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852847612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 66 61 32 39 64  39 61 2d 65 30 30 62 2d  |\"4fa29d9a-e00b-|
              00000120  34 65 32 64 2d 61 66 31  37 2d 34 62 63 33 30 31  |4e2d-af17-4bc301|
              00000130  62 65 62 61 36 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |beba64\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852847612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun  1 14:06:52.914: INFO: Pod "test-recreate-deployment-76fb77d45-5f8l2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-5f8l2",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-2539",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5be3d1bc-27a0-49c0-ac87-1cfeeabc9769",
      ResourceVersion: (string) (len=5) "48780",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852847612,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "b63e2bed-d1ee-4d79-95eb-126b3e2eed09",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852847612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 36  33 65 32 62 65 64 2d 64  |d\":\"b63e2bed-d|
              00000090  31 65 65 2d 34 64 37 39  2d 39 35 65 62 2d 31 32  |1ee-4d79-95eb-12|
              000000a0  36 62 33 65 32 65 65 64  30 39 5c 22 7d 22 3a 7b  |6b3e2eed09\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852847612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gcb6p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gcb6p",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-74-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852847612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852847612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852847612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852847612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63852847612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.74.111",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.74.111"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63852847612,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  1 14:06:52.915: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2539" for this suite. @ 06/01/24 14:06:52.918
â€¢ [2.177 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2236
  STEP: Creating a kubernetes client @ 06/01/24 14:06:52.926
  Jun  1 14:06:52.926: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename services @ 06/01/24 14:06:52.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 14:06:52.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 14:06:52.943
  STEP: creating service in namespace services-9173 @ 06/01/24 14:06:52.945
  STEP: creating service affinity-nodeport-transition in namespace services-9173 @ 06/01/24 14:06:52.945
  STEP: creating replication controller affinity-nodeport-transition in namespace services-9173 @ 06/01/24 14:06:52.957
  I0601 14:06:52.969760      21 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-9173, replica count: 3
  E0601 14:06:53.766091      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:54.766939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:55.767137      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0601 14:06:56.020549      21 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun  1 14:06:56.029: INFO: Creating new exec pod
  E0601 14:06:56.767677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:57.768298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:06:58.768391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:06:59.048: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-9173 exec execpod-affinity7xvnr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Jun  1 14:06:59.146: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Jun  1 14:06:59.146: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  1 14:06:59.146: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-9173 exec execpod-affinity7xvnr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.26 80'
  Jun  1 14:06:59.249: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.26 80\nConnection to 10.152.183.26 80 port [tcp/http] succeeded!\n"
  Jun  1 14:06:59.249: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  1 14:06:59.249: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-9173 exec execpod-affinity7xvnr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.17.129 30646'
  Jun  1 14:06:59.345: INFO: stderr: "+ nc -v -t -w 2 172.31.17.129 30646\n+ echo hostName\nConnection to 172.31.17.129 30646 port [tcp/*] succeeded!\n"
  Jun  1 14:06:59.345: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  1 14:06:59.345: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-9173 exec execpod-affinity7xvnr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.74.111 30646'
  Jun  1 14:06:59.436: INFO: stderr: "+ nc -v -t -w 2 172.31.74.111 30646\n+ echo hostName\nConnection to 172.31.74.111 30646 port [tcp/*] succeeded!\n"
  Jun  1 14:06:59.436: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  1 14:06:59.447: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-9173 exec execpod-affinity7xvnr -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.17.129:30646/ ; done'
  Jun  1 14:06:59.608: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30646/\n"
  Jun  1 14:06:59.609: INFO: stdout: "\naffinity-nodeport-transition-b2jmw\naffinity-nodeport-transition-lwbjt\naffinity-nodeport-transition-qrwb5\naffinity-nodeport-transition-lwbjt\naffinity-nodeport-transition-qrwb5\naffinity-nodeport-transition-qrwb5\naffinity-nodeport-transition-b2jmw\naffinity-nodeport-transition-lwbjt\naffinity-nodeport-transition-lwbjt\naffinity-nodeport-transition-b2jmw\naffinity-nodeport-transition-lwbjt\naffinity-nodeport-transition-qrwb5\naffinity-nodeport-transition-qrwb5\naffinity-nodeport-transition-lwbjt\naffinity-nodeport-transition-qrwb5\naffinity-nodeport-transition-b2jmw"
  Jun  1 14:06:59.609: INFO: Received response from host: affinity-nodeport-transition-b2jmw
  Jun  1 14:06:59.609: INFO: Received response from host: affinity-nodeport-transition-lwbjt
  Jun  1 14:06:59.609: INFO: Received response from host: affinity-nodeport-transition-qrwb5
  Jun  1 14:06:59.609: INFO: Received response from host: affinity-nodeport-transition-lwbjt
  Jun  1 14:06:59.609: INFO: Received response from host: affinity-nodeport-transition-qrwb5
  Jun  1 14:06:59.609: INFO: Received response from host: affinity-nodeport-transition-qrwb5
  Jun  1 14:06:59.609: INFO: Received response from host: affinity-nodeport-transition-b2jmw
  Jun  1 14:06:59.609: INFO: Received response from host: affinity-nodeport-transition-lwbjt
  Jun  1 14:06:59.609: INFO: Received response from host: affinity-nodeport-transition-lwbjt
  Jun  1 14:06:59.609: INFO: Received response from host: affinity-nodeport-transition-b2jmw
  Jun  1 14:06:59.609: INFO: Received response from host: affinity-nodeport-transition-lwbjt
  Jun  1 14:06:59.609: INFO: Received response from host: affinity-nodeport-transition-qrwb5
  Jun  1 14:06:59.609: INFO: Received response from host: affinity-nodeport-transition-qrwb5
  Jun  1 14:06:59.609: INFO: Received response from host: affinity-nodeport-transition-lwbjt
  Jun  1 14:06:59.609: INFO: Received response from host: affinity-nodeport-transition-qrwb5
  Jun  1 14:06:59.609: INFO: Received response from host: affinity-nodeport-transition-b2jmw
  Jun  1 14:06:59.616: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1622227283 --namespace=services-9173 exec execpod-affinity7xvnr -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.17.129:30646/ ; done'
  E0601 14:06:59.769795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:06:59.784: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.17.129:30646/\n"
  Jun  1 14:06:59.784: INFO: stdout: "\naffinity-nodeport-transition-b2jmw\naffinity-nodeport-transition-b2jmw\naffinity-nodeport-transition-b2jmw\naffinity-nodeport-transition-b2jmw\naffinity-nodeport-transition-b2jmw\naffinity-nodeport-transition-b2jmw\naffinity-nodeport-transition-b2jmw\naffinity-nodeport-transition-b2jmw\naffinity-nodeport-transition-b2jmw\naffinity-nodeport-transition-b2jmw\naffinity-nodeport-transition-b2jmw\naffinity-nodeport-transition-b2jmw\naffinity-nodeport-transition-b2jmw\naffinity-nodeport-transition-b2jmw\naffinity-nodeport-transition-b2jmw\naffinity-nodeport-transition-b2jmw"
  Jun  1 14:06:59.784: INFO: Received response from host: affinity-nodeport-transition-b2jmw
  Jun  1 14:06:59.784: INFO: Received response from host: affinity-nodeport-transition-b2jmw
  Jun  1 14:06:59.784: INFO: Received response from host: affinity-nodeport-transition-b2jmw
  Jun  1 14:06:59.784: INFO: Received response from host: affinity-nodeport-transition-b2jmw
  Jun  1 14:06:59.784: INFO: Received response from host: affinity-nodeport-transition-b2jmw
  Jun  1 14:06:59.784: INFO: Received response from host: affinity-nodeport-transition-b2jmw
  Jun  1 14:06:59.784: INFO: Received response from host: affinity-nodeport-transition-b2jmw
  Jun  1 14:06:59.784: INFO: Received response from host: affinity-nodeport-transition-b2jmw
  Jun  1 14:06:59.784: INFO: Received response from host: affinity-nodeport-transition-b2jmw
  Jun  1 14:06:59.784: INFO: Received response from host: affinity-nodeport-transition-b2jmw
  Jun  1 14:06:59.784: INFO: Received response from host: affinity-nodeport-transition-b2jmw
  Jun  1 14:06:59.784: INFO: Received response from host: affinity-nodeport-transition-b2jmw
  Jun  1 14:06:59.784: INFO: Received response from host: affinity-nodeport-transition-b2jmw
  Jun  1 14:06:59.784: INFO: Received response from host: affinity-nodeport-transition-b2jmw
  Jun  1 14:06:59.784: INFO: Received response from host: affinity-nodeport-transition-b2jmw
  Jun  1 14:06:59.784: INFO: Received response from host: affinity-nodeport-transition-b2jmw
  Jun  1 14:06:59.785: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-9173, will wait for the garbage collector to delete the pods @ 06/01/24 14:06:59.801
  Jun  1 14:06:59.863: INFO: Deleting ReplicationController affinity-nodeport-transition took: 8.783778ms
  Jun  1 14:06:59.967: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 104.284756ms
  E0601 14:07:00.769827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:07:01.770208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:07:02.770497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:07:03.193: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9173" for this suite. @ 06/01/24 14:07:03.197
â€¢ [10.276 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 06/01/24 14:07:03.203
  Jun  1 14:07:03.203: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename limitrange @ 06/01/24 14:07:03.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 14:07:03.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 14:07:03.222
  STEP: Creating LimitRange "e2e-limitrange-b9hsb" in namespace "limitrange-8882" @ 06/01/24 14:07:03.225
  STEP: Creating another limitRange in another namespace @ 06/01/24 14:07:03.23
  Jun  1 14:07:03.244: INFO: Namespace "e2e-limitrange-b9hsb-6126" created
  Jun  1 14:07:03.244: INFO: Creating LimitRange "e2e-limitrange-b9hsb" in namespace "e2e-limitrange-b9hsb-6126"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-b9hsb" @ 06/01/24 14:07:03.25
  Jun  1 14:07:03.252: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-b9hsb" in "limitrange-8882" namespace @ 06/01/24 14:07:03.252
  Jun  1 14:07:03.260: INFO: LimitRange "e2e-limitrange-b9hsb" has been patched
  STEP: Delete LimitRange "e2e-limitrange-b9hsb" by Collection with labelSelector: "e2e-limitrange-b9hsb=patched" @ 06/01/24 14:07:03.26
  STEP: Confirm that the limitRange "e2e-limitrange-b9hsb" has been deleted @ 06/01/24 14:07:03.268
  Jun  1 14:07:03.268: INFO: Requesting list of LimitRange to confirm quantity
  Jun  1 14:07:03.271: INFO: Found 0 LimitRange with label "e2e-limitrange-b9hsb=patched"
  Jun  1 14:07:03.271: INFO: LimitRange "e2e-limitrange-b9hsb" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-b9hsb" @ 06/01/24 14:07:03.271
  Jun  1 14:07:03.273: INFO: Found 1 limitRange
  Jun  1 14:07:03.273: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-8882" for this suite. @ 06/01/24 14:07:03.275
  STEP: Destroying namespace "e2e-limitrange-b9hsb-6126" for this suite. @ 06/01/24 14:07:03.281
â€¢ [0.083 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 06/01/24 14:07:03.287
  Jun  1 14:07:03.287: INFO: >>> kubeConfig: /tmp/kubeconfig-1622227283
  STEP: Building a namespace api object, basename webhook @ 06/01/24 14:07:03.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/01/24 14:07:03.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/01/24 14:07:03.305
  STEP: Setting up server cert @ 06/01/24 14:07:03.328
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/01/24 14:07:03.457
  STEP: Deploying the webhook pod @ 06/01/24 14:07:03.465
  STEP: Wait for the deployment to be ready @ 06/01/24 14:07:03.478
  Jun  1 14:07:03.491: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0601 14:07:03.770608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0601 14:07:04.770704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/01/24 14:07:05.503
  STEP: Verifying the service has paired with the endpoint @ 06/01/24 14:07:05.513
  E0601 14:07:05.771523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  1 14:07:06.513: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 06/01/24 14:07:06.519
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 06/01/24 14:07:06.521
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 06/01/24 14:07:06.521
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 06/01/24 14:07:06.521
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 06/01/24 14:07:06.522
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 06/01/24 14:07:06.522
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 06/01/24 14:07:06.523
  Jun  1 14:07:06.560: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6094" for this suite. @ 06/01/24 14:07:06.563
  STEP: Destroying namespace "webhook-markers-1680" for this suite. @ 06/01/24 14:07:06.571
â€¢ [3.293 seconds]
------------------------------
SSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:88
  Jun  1 14:07:06.581: INFO: Running AfterSuite actions on node 1
  Jun  1 14:07:06.581: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:621
[ReportAfterSuite] PASSED [0.032 seconds]
------------------------------

Ran 388 of 7408 Specs in 6499.981 seconds
SUCCESS! -- 388 Passed | 0 Failed | 0 Pending | 7020 Skipped
PASS

Ginkgo ran 1 suite in 1h48m20.812219899s
Test Suite Passed
