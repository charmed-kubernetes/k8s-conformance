  I0420 12:15:16.419223      20 e2e.go:117] Starting e2e run "4c21cad3-750d-4728-bc3f-c782b0a026e0" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1713615315 - will randomize all specs

Will run 388 of 7407 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:77
  Apr 20 12:15:16.603: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  Apr 20 12:15:16.604: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Apr 20 12:15:16.642: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Apr 20 12:15:16.647: INFO: 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  Apr 20 12:15:16.647: INFO: e2e test version: v1.29.4
  Apr 20 12:15:16.648: INFO: kube-apiserver version: v1.29.4
  Apr 20 12:15:16.648: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  Apr 20 12:15:16.653: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.050 seconds]
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 04/20/24 12:15:16.804
  Apr 20 12:15:16.804: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename proxy @ 04/20/24 12:15:16.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:15:16.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:15:16.823
  STEP: starting an echo server on multiple ports @ 04/20/24 12:15:16.838
  STEP: creating replication controller proxy-service-zpzsf in namespace proxy-8167 @ 04/20/24 12:15:16.838
  I0420 12:15:16.849529      20 runners.go:197] Created replication controller with name: proxy-service-zpzsf, namespace: proxy-8167, replica count: 1
  I0420 12:15:17.899972      20 runners.go:197] proxy-service-zpzsf Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0420 12:15:18.900484      20 runners.go:197] proxy-service-zpzsf Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0420 12:15:19.901444      20 runners.go:197] proxy-service-zpzsf Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I0420 12:15:20.902402      20 runners.go:197] proxy-service-zpzsf Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 20 12:15:20.907: INFO: setup took 4.080887105s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 04/20/24 12:15:20.907
  Apr 20 12:15:20.912: INFO: (0) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:162/proxy/: bar (200; 5.350067ms)
  Apr 20 12:15:20.913: INFO: (0) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:162/proxy/: bar (200; 5.900851ms)
  Apr 20 12:15:20.914: INFO: (0) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9/proxy/rewriteme">test</a> (200; 6.595147ms)
  Apr 20 12:15:20.915: INFO: (0) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:1080/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:1080/proxy/rewriteme">... (200; 7.288699ms)
  Apr 20 12:15:20.915: INFO: (0) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:160/proxy/: foo (200; 7.587512ms)
  Apr 20 12:15:20.915: INFO: (0) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:160/proxy/: foo (200; 7.540299ms)
  Apr 20 12:15:20.915: INFO: (0) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:443/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:443/proxy/tlsrewritem... (200; 7.956181ms)
  Apr 20 12:15:20.916: INFO: (0) /api/v1/namespaces/proxy-8167/services/proxy-service-zpzsf:portname1/proxy/: foo (200; 8.452226ms)
  Apr 20 12:15:20.916: INFO: (0) /api/v1/namespaces/proxy-8167/services/http:proxy-service-zpzsf:portname1/proxy/: foo (200; 8.981845ms)
  Apr 20 12:15:20.916: INFO: (0) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:1080/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:1080/proxy/rewriteme">test<... (200; 9.130026ms)
  Apr 20 12:15:20.917: INFO: (0) /api/v1/namespaces/proxy-8167/services/http:proxy-service-zpzsf:portname2/proxy/: bar (200; 9.50999ms)
  Apr 20 12:15:20.917: INFO: (0) /api/v1/namespaces/proxy-8167/services/proxy-service-zpzsf:portname2/proxy/: bar (200; 9.483762ms)
  Apr 20 12:15:20.917: INFO: (0) /api/v1/namespaces/proxy-8167/services/https:proxy-service-zpzsf:tlsportname1/proxy/: tls baz (200; 9.661407ms)
  Apr 20 12:15:20.918: INFO: (0) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:460/proxy/: tls baz (200; 10.760366ms)
  Apr 20 12:15:20.918: INFO: (0) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:462/proxy/: tls qux (200; 10.970191ms)
  Apr 20 12:15:20.918: INFO: (0) /api/v1/namespaces/proxy-8167/services/https:proxy-service-zpzsf:tlsportname2/proxy/: tls qux (200; 10.992378ms)
  Apr 20 12:15:20.922: INFO: (1) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:1080/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:1080/proxy/rewriteme">test<... (200; 3.957024ms)
  Apr 20 12:15:20.923: INFO: (1) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:460/proxy/: tls baz (200; 4.177187ms)
  Apr 20 12:15:20.923: INFO: (1) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:462/proxy/: tls qux (200; 4.72364ms)
  Apr 20 12:15:20.924: INFO: (1) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9/proxy/rewriteme">test</a> (200; 5.833995ms)
  Apr 20 12:15:20.924: INFO: (1) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:1080/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:1080/proxy/rewriteme">... (200; 5.806237ms)
  Apr 20 12:15:20.925: INFO: (1) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:162/proxy/: bar (200; 6.227737ms)
  Apr 20 12:15:20.925: INFO: (1) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:160/proxy/: foo (200; 6.816785ms)
  Apr 20 12:15:20.926: INFO: (1) /api/v1/namespaces/proxy-8167/services/http:proxy-service-zpzsf:portname2/proxy/: bar (200; 7.123424ms)
  Apr 20 12:15:20.926: INFO: (1) /api/v1/namespaces/proxy-8167/services/proxy-service-zpzsf:portname1/proxy/: foo (200; 7.411792ms)
  Apr 20 12:15:20.926: INFO: (1) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:160/proxy/: foo (200; 7.930571ms)
  Apr 20 12:15:20.926: INFO: (1) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:162/proxy/: bar (200; 7.793461ms)
  Apr 20 12:15:20.926: INFO: (1) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:443/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:443/proxy/tlsrewritem... (200; 8.036499ms)
  Apr 20 12:15:20.926: INFO: (1) /api/v1/namespaces/proxy-8167/services/http:proxy-service-zpzsf:portname1/proxy/: foo (200; 8.010738ms)
  Apr 20 12:15:20.927: INFO: (1) /api/v1/namespaces/proxy-8167/services/https:proxy-service-zpzsf:tlsportname2/proxy/: tls qux (200; 8.160423ms)
  Apr 20 12:15:20.927: INFO: (1) /api/v1/namespaces/proxy-8167/services/proxy-service-zpzsf:portname2/proxy/: bar (200; 8.383223ms)
  Apr 20 12:15:20.927: INFO: (1) /api/v1/namespaces/proxy-8167/services/https:proxy-service-zpzsf:tlsportname1/proxy/: tls baz (200; 8.662119ms)
  Apr 20 12:15:20.931: INFO: (2) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:443/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:443/proxy/tlsrewritem... (200; 3.791363ms)
  Apr 20 12:15:20.932: INFO: (2) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:160/proxy/: foo (200; 4.403014ms)
  Apr 20 12:15:20.932: INFO: (2) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:1080/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:1080/proxy/rewriteme">... (200; 4.502224ms)
  Apr 20 12:15:20.933: INFO: (2) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:462/proxy/: tls qux (200; 5.069823ms)
  Apr 20 12:15:20.934: INFO: (2) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:162/proxy/: bar (200; 6.059692ms)
  Apr 20 12:15:20.934: INFO: (2) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:1080/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:1080/proxy/rewriteme">test<... (200; 6.588935ms)
  Apr 20 12:15:20.934: INFO: (2) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:460/proxy/: tls baz (200; 6.606173ms)
  Apr 20 12:15:20.934: INFO: (2) /api/v1/namespaces/proxy-8167/services/https:proxy-service-zpzsf:tlsportname2/proxy/: tls qux (200; 6.88654ms)
  Apr 20 12:15:20.934: INFO: (2) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:160/proxy/: foo (200; 6.640486ms)
  Apr 20 12:15:20.934: INFO: (2) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:162/proxy/: bar (200; 6.863816ms)
  Apr 20 12:15:20.934: INFO: (2) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9/proxy/rewriteme">test</a> (200; 6.62259ms)
  Apr 20 12:15:20.935: INFO: (2) /api/v1/namespaces/proxy-8167/services/http:proxy-service-zpzsf:portname2/proxy/: bar (200; 7.329954ms)
  Apr 20 12:15:20.935: INFO: (2) /api/v1/namespaces/proxy-8167/services/proxy-service-zpzsf:portname1/proxy/: foo (200; 7.351613ms)
  Apr 20 12:15:20.935: INFO: (2) /api/v1/namespaces/proxy-8167/services/https:proxy-service-zpzsf:tlsportname1/proxy/: tls baz (200; 7.553271ms)
  Apr 20 12:15:20.935: INFO: (2) /api/v1/namespaces/proxy-8167/services/proxy-service-zpzsf:portname2/proxy/: bar (200; 7.773891ms)
  Apr 20 12:15:20.935: INFO: (2) /api/v1/namespaces/proxy-8167/services/http:proxy-service-zpzsf:portname1/proxy/: foo (200; 7.958262ms)
  Apr 20 12:15:20.940: INFO: (3) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:1080/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:1080/proxy/rewriteme">test<... (200; 3.987666ms)
  Apr 20 12:15:20.940: INFO: (3) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:443/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:443/proxy/tlsrewritem... (200; 4.290967ms)
  Apr 20 12:15:20.940: INFO: (3) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:160/proxy/: foo (200; 4.58912ms)
  Apr 20 12:15:20.941: INFO: (3) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:162/proxy/: bar (200; 5.391158ms)
  Apr 20 12:15:20.942: INFO: (3) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:162/proxy/: bar (200; 6.1238ms)
  Apr 20 12:15:20.942: INFO: (3) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:462/proxy/: tls qux (200; 6.575296ms)
  Apr 20 12:15:20.943: INFO: (3) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:1080/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:1080/proxy/rewriteme">... (200; 7.107727ms)
  Apr 20 12:15:20.943: INFO: (3) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9/proxy/rewriteme">test</a> (200; 7.126946ms)
  Apr 20 12:15:20.943: INFO: (3) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:460/proxy/: tls baz (200; 7.3818ms)
  Apr 20 12:15:20.943: INFO: (3) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:160/proxy/: foo (200; 7.324523ms)
  Apr 20 12:15:20.943: INFO: (3) /api/v1/namespaces/proxy-8167/services/https:proxy-service-zpzsf:tlsportname1/proxy/: tls baz (200; 7.531501ms)
  Apr 20 12:15:20.943: INFO: (3) /api/v1/namespaces/proxy-8167/services/https:proxy-service-zpzsf:tlsportname2/proxy/: tls qux (200; 7.638918ms)
  Apr 20 12:15:20.943: INFO: (3) /api/v1/namespaces/proxy-8167/services/proxy-service-zpzsf:portname2/proxy/: bar (200; 7.702217ms)
  Apr 20 12:15:20.944: INFO: (3) /api/v1/namespaces/proxy-8167/services/proxy-service-zpzsf:portname1/proxy/: foo (200; 8.191078ms)
  Apr 20 12:15:20.944: INFO: (3) /api/v1/namespaces/proxy-8167/services/http:proxy-service-zpzsf:portname1/proxy/: foo (200; 8.29401ms)
  Apr 20 12:15:20.944: INFO: (3) /api/v1/namespaces/proxy-8167/services/http:proxy-service-zpzsf:portname2/proxy/: bar (200; 8.702048ms)
  Apr 20 12:15:20.948: INFO: (4) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:462/proxy/: tls qux (200; 3.270994ms)
  Apr 20 12:15:20.949: INFO: (4) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:160/proxy/: foo (200; 4.882272ms)
  Apr 20 12:15:20.950: INFO: (4) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:443/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:443/proxy/tlsrewritem... (200; 4.974524ms)
  Apr 20 12:15:20.950: INFO: (4) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:1080/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:1080/proxy/rewriteme">... (200; 4.936556ms)
  Apr 20 12:15:20.950: INFO: (4) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:160/proxy/: foo (200; 5.547602ms)
  Apr 20 12:15:20.951: INFO: (4) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9/proxy/rewriteme">test</a> (200; 6.057466ms)
  Apr 20 12:15:20.951: INFO: (4) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:460/proxy/: tls baz (200; 6.405559ms)
  Apr 20 12:15:20.951: INFO: (4) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:162/proxy/: bar (200; 6.619767ms)
  Apr 20 12:15:20.952: INFO: (4) /api/v1/namespaces/proxy-8167/services/https:proxy-service-zpzsf:tlsportname2/proxy/: tls qux (200; 7.161624ms)
  Apr 20 12:15:20.952: INFO: (4) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:162/proxy/: bar (200; 7.332412ms)
  Apr 20 12:15:20.952: INFO: (4) /api/v1/namespaces/proxy-8167/services/https:proxy-service-zpzsf:tlsportname1/proxy/: tls baz (200; 7.413701ms)
  Apr 20 12:15:20.952: INFO: (4) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:1080/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:1080/proxy/rewriteme">test<... (200; 7.472937ms)
  Apr 20 12:15:20.952: INFO: (4) /api/v1/namespaces/proxy-8167/services/proxy-service-zpzsf:portname2/proxy/: bar (200; 7.929158ms)
  Apr 20 12:15:20.953: INFO: (4) /api/v1/namespaces/proxy-8167/services/http:proxy-service-zpzsf:portname2/proxy/: bar (200; 7.990558ms)
  Apr 20 12:15:20.953: INFO: (4) /api/v1/namespaces/proxy-8167/services/proxy-service-zpzsf:portname1/proxy/: foo (200; 8.362777ms)
  Apr 20 12:15:20.953: INFO: (4) /api/v1/namespaces/proxy-8167/services/http:proxy-service-zpzsf:portname1/proxy/: foo (200; 8.611803ms)
  Apr 20 12:15:20.958: INFO: (5) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:1080/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:1080/proxy/rewriteme">test<... (200; 4.903994ms)
  Apr 20 12:15:20.959: INFO: (5) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:162/proxy/: bar (200; 5.156421ms)
  Apr 20 12:15:20.959: INFO: (5) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:1080/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:1080/proxy/rewriteme">... (200; 5.655745ms)
  Apr 20 12:15:20.959: INFO: (5) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:460/proxy/: tls baz (200; 5.565595ms)
  Apr 20 12:15:20.959: INFO: (5) /api/v1/namespaces/proxy-8167/services/http:proxy-service-zpzsf:portname1/proxy/: foo (200; 5.945484ms)
  Apr 20 12:15:20.959: INFO: (5) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:160/proxy/: foo (200; 6.110482ms)
  Apr 20 12:15:20.960: INFO: (5) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:160/proxy/: foo (200; 6.548408ms)
  Apr 20 12:15:20.961: INFO: (5) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:162/proxy/: bar (200; 7.22487ms)
  Apr 20 12:15:20.961: INFO: (5) /api/v1/namespaces/proxy-8167/services/http:proxy-service-zpzsf:portname2/proxy/: bar (200; 7.399874ms)
  Apr 20 12:15:20.961: INFO: (5) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:462/proxy/: tls qux (200; 7.411428ms)
  Apr 20 12:15:20.961: INFO: (5) /api/v1/namespaces/proxy-8167/services/https:proxy-service-zpzsf:tlsportname1/proxy/: tls baz (200; 7.528636ms)
  Apr 20 12:15:20.961: INFO: (5) /api/v1/namespaces/proxy-8167/services/proxy-service-zpzsf:portname1/proxy/: foo (200; 7.820495ms)
  Apr 20 12:15:20.961: INFO: (5) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:443/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:443/proxy/tlsrewritem... (200; 8.061702ms)
  Apr 20 12:15:20.962: INFO: (5) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9/proxy/rewriteme">test</a> (200; 8.069855ms)
  Apr 20 12:15:20.962: INFO: (5) /api/v1/namespaces/proxy-8167/services/proxy-service-zpzsf:portname2/proxy/: bar (200; 8.570256ms)
  Apr 20 12:15:20.963: INFO: (5) /api/v1/namespaces/proxy-8167/services/https:proxy-service-zpzsf:tlsportname2/proxy/: tls qux (200; 9.819414ms)
  Apr 20 12:15:20.967: INFO: (6) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:460/proxy/: tls baz (200; 3.729317ms)
  Apr 20 12:15:20.967: INFO: (6) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:160/proxy/: foo (200; 3.785125ms)
  Apr 20 12:15:20.967: INFO: (6) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:1080/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:1080/proxy/rewriteme">test<... (200; 4.045667ms)
  Apr 20 12:15:20.969: INFO: (6) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:162/proxy/: bar (200; 4.856314ms)
  Apr 20 12:15:20.969: INFO: (6) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:1080/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:1080/proxy/rewriteme">... (200; 4.96587ms)
  Apr 20 12:15:20.969: INFO: (6) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:160/proxy/: foo (200; 5.089775ms)
  Apr 20 12:15:20.970: INFO: (6) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9/proxy/rewriteme">test</a> (200; 6.313167ms)
  Apr 20 12:15:20.970: INFO: (6) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:462/proxy/: tls qux (200; 6.523774ms)
  Apr 20 12:15:20.970: INFO: (6) /api/v1/namespaces/proxy-8167/services/proxy-service-zpzsf:portname1/proxy/: foo (200; 6.559241ms)
  Apr 20 12:15:20.970: INFO: (6) /api/v1/namespaces/proxy-8167/services/http:proxy-service-zpzsf:portname2/proxy/: bar (200; 6.819118ms)
  Apr 20 12:15:20.971: INFO: (6) /api/v1/namespaces/proxy-8167/services/https:proxy-service-zpzsf:tlsportname2/proxy/: tls qux (200; 7.37173ms)
  Apr 20 12:15:20.971: INFO: (6) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:443/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:443/proxy/tlsrewritem... (200; 7.538497ms)
  Apr 20 12:15:20.971: INFO: (6) /api/v1/namespaces/proxy-8167/services/proxy-service-zpzsf:portname2/proxy/: bar (200; 7.726278ms)
  Apr 20 12:15:20.971: INFO: (6) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:162/proxy/: bar (200; 7.692849ms)
  Apr 20 12:15:20.972: INFO: (6) /api/v1/namespaces/proxy-8167/services/http:proxy-service-zpzsf:portname1/proxy/: foo (200; 8.212733ms)
  Apr 20 12:15:20.972: INFO: (6) /api/v1/namespaces/proxy-8167/services/https:proxy-service-zpzsf:tlsportname1/proxy/: tls baz (200; 8.305449ms)
  Apr 20 12:15:20.975: INFO: (7) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:160/proxy/: foo (200; 3.327915ms)
  Apr 20 12:15:20.977: INFO: (7) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:162/proxy/: bar (200; 4.652224ms)
  Apr 20 12:15:20.978: INFO: (7) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:1080/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:1080/proxy/rewriteme">test<... (200; 5.298307ms)
  Apr 20 12:15:20.978: INFO: (7) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:462/proxy/: tls qux (200; 5.223397ms)
  Apr 20 12:15:20.978: INFO: (7) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:443/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:443/proxy/tlsrewritem... (200; 5.485848ms)
  Apr 20 12:15:20.978: INFO: (7) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:160/proxy/: foo (200; 5.368242ms)
  Apr 20 12:15:20.978: INFO: (7) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9/proxy/rewriteme">test</a> (200; 6.099156ms)
  Apr 20 12:15:20.978: INFO: (7) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:162/proxy/: bar (200; 6.103165ms)
  Apr 20 12:15:20.979: INFO: (7) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:1080/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:1080/proxy/rewriteme">... (200; 6.557404ms)
  Apr 20 12:15:20.979: INFO: (7) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:460/proxy/: tls baz (200; 6.669318ms)
  Apr 20 12:15:20.979: INFO: (7) /api/v1/namespaces/proxy-8167/services/http:proxy-service-zpzsf:portname2/proxy/: bar (200; 6.945497ms)
  Apr 20 12:15:20.979: INFO: (7) /api/v1/namespaces/proxy-8167/services/proxy-service-zpzsf:portname1/proxy/: foo (200; 7.070767ms)
  Apr 20 12:15:20.979: INFO: (7) /api/v1/namespaces/proxy-8167/services/https:proxy-service-zpzsf:tlsportname1/proxy/: tls baz (200; 7.253989ms)
  Apr 20 12:15:20.980: INFO: (7) /api/v1/namespaces/proxy-8167/services/http:proxy-service-zpzsf:portname1/proxy/: foo (200; 7.896065ms)
  Apr 20 12:15:20.980: INFO: (7) /api/v1/namespaces/proxy-8167/services/proxy-service-zpzsf:portname2/proxy/: bar (200; 7.968088ms)
  Apr 20 12:15:20.980: INFO: (7) /api/v1/namespaces/proxy-8167/services/https:proxy-service-zpzsf:tlsportname2/proxy/: tls qux (200; 8.180428ms)
  Apr 20 12:15:20.984: INFO: (8) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:462/proxy/: tls qux (200; 3.479024ms)
  Apr 20 12:15:20.985: INFO: (8) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:162/proxy/: bar (200; 4.570505ms)
  Apr 20 12:15:20.986: INFO: (8) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:1080/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:1080/proxy/rewriteme">... (200; 5.183917ms)
  Apr 20 12:15:20.986: INFO: (8) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:443/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:443/proxy/tlsrewritem... (200; 5.478731ms)
  Apr 20 12:15:20.986: INFO: (8) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9/proxy/rewriteme">test</a> (200; 5.555532ms)
  Apr 20 12:15:20.986: INFO: (8) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:1080/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:1080/proxy/rewriteme">test<... (200; 5.51323ms)
  Apr 20 12:15:20.986: INFO: (8) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:162/proxy/: bar (200; 5.833673ms)
  Apr 20 12:15:20.987: INFO: (8) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:160/proxy/: foo (200; 6.585019ms)
  Apr 20 12:15:20.987: INFO: (8) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:160/proxy/: foo (200; 6.878598ms)
  Apr 20 12:15:20.987: INFO: (8) /api/v1/namespaces/proxy-8167/services/http:proxy-service-zpzsf:portname1/proxy/: foo (200; 7.077201ms)
  Apr 20 12:15:20.988: INFO: (8) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:460/proxy/: tls baz (200; 7.051103ms)
  Apr 20 12:15:20.988: INFO: (8) /api/v1/namespaces/proxy-8167/services/https:proxy-service-zpzsf:tlsportname1/proxy/: tls baz (200; 7.448433ms)
  Apr 20 12:15:20.989: INFO: (8) /api/v1/namespaces/proxy-8167/services/proxy-service-zpzsf:portname2/proxy/: bar (200; 8.184953ms)
  Apr 20 12:15:20.989: INFO: (8) /api/v1/namespaces/proxy-8167/services/https:proxy-service-zpzsf:tlsportname2/proxy/: tls qux (200; 8.514318ms)
  Apr 20 12:15:20.989: INFO: (8) /api/v1/namespaces/proxy-8167/services/http:proxy-service-zpzsf:portname2/proxy/: bar (200; 8.632361ms)
  Apr 20 12:15:20.990: INFO: (8) /api/v1/namespaces/proxy-8167/services/proxy-service-zpzsf:portname1/proxy/: foo (200; 9.23591ms)
  Apr 20 12:15:20.994: INFO: (9) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9/proxy/rewriteme">test</a> (200; 4.083588ms)
  Apr 20 12:15:20.995: INFO: (9) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:162/proxy/: bar (200; 5.167022ms)
  Apr 20 12:15:20.995: INFO: (9) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:462/proxy/: tls qux (200; 5.443077ms)
  Apr 20 12:15:20.995: INFO: (9) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:160/proxy/: foo (200; 5.492087ms)
  Apr 20 12:15:20.995: INFO: (9) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:1080/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:1080/proxy/rewriteme">... (200; 5.454126ms)
  Apr 20 12:15:20.996: INFO: (9) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:1080/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:1080/proxy/rewriteme">test<... (200; 6.200708ms)
  Apr 20 12:15:20.996: INFO: (9) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:162/proxy/: bar (200; 6.143916ms)
  Apr 20 12:15:20.996: INFO: (9) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:443/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:443/proxy/tlsrewritem... (200; 6.214867ms)
  Apr 20 12:15:20.996: INFO: (9) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:160/proxy/: foo (200; 6.285392ms)
  Apr 20 12:15:20.997: INFO: (9) /api/v1/namespaces/proxy-8167/services/https:proxy-service-zpzsf:tlsportname2/proxy/: tls qux (200; 6.990783ms)
  Apr 20 12:15:20.997: INFO: (9) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:460/proxy/: tls baz (200; 7.406769ms)
  Apr 20 12:15:20.998: INFO: (9) /api/v1/namespaces/proxy-8167/services/proxy-service-zpzsf:portname2/proxy/: bar (200; 7.692122ms)
  Apr 20 12:15:20.998: INFO: (9) /api/v1/namespaces/proxy-8167/services/http:proxy-service-zpzsf:portname2/proxy/: bar (200; 8.238777ms)
  Apr 20 12:15:20.998: INFO: (9) /api/v1/namespaces/proxy-8167/services/http:proxy-service-zpzsf:portname1/proxy/: foo (200; 8.296744ms)
  Apr 20 12:15:20.998: INFO: (9) /api/v1/namespaces/proxy-8167/services/proxy-service-zpzsf:portname1/proxy/: foo (200; 8.349057ms)
  Apr 20 12:15:20.999: INFO: (9) /api/v1/namespaces/proxy-8167/services/https:proxy-service-zpzsf:tlsportname1/proxy/: tls baz (200; 8.688909ms)
  Apr 20 12:15:21.005: INFO: (10) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:1080/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:1080/proxy/rewriteme">... (200; 5.82031ms)
  Apr 20 12:15:21.005: INFO: (10) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:1080/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:1080/proxy/rewriteme">test<... (200; 5.929268ms)
  Apr 20 12:15:21.005: INFO: (10) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:160/proxy/: foo (200; 5.949165ms)
  Apr 20 12:15:21.005: INFO: (10) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9/proxy/rewriteme">test</a> (200; 5.952576ms)
  Apr 20 12:15:21.005: INFO: (10) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:162/proxy/: bar (200; 5.962679ms)
  Apr 20 12:15:21.006: INFO: (10) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:162/proxy/: bar (200; 7.035962ms)
  Apr 20 12:15:21.006: INFO: (10) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:462/proxy/: tls qux (200; 6.992155ms)
  Apr 20 12:15:21.006: INFO: (10) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:160/proxy/: foo (200; 7.191402ms)
  Apr 20 12:15:21.006: INFO: (10) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:460/proxy/: tls baz (200; 7.285781ms)
  Apr 20 12:15:21.006: INFO: (10) /api/v1/namespaces/proxy-8167/services/https:proxy-service-zpzsf:tlsportname1/proxy/: tls baz (200; 7.623282ms)
  Apr 20 12:15:21.007: INFO: (10) /api/v1/namespaces/proxy-8167/services/http:proxy-service-zpzsf:portname2/proxy/: bar (200; 7.546372ms)
  Apr 20 12:15:21.007: INFO: (10) /api/v1/namespaces/proxy-8167/services/proxy-service-zpzsf:portname1/proxy/: foo (200; 7.757701ms)
  Apr 20 12:15:21.007: INFO: (10) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:443/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:443/proxy/tlsrewritem... (200; 7.718332ms)
  Apr 20 12:15:21.007: INFO: (10) /api/v1/namespaces/proxy-8167/services/http:proxy-service-zpzsf:portname1/proxy/: foo (200; 7.930083ms)
  Apr 20 12:15:21.007: INFO: (10) /api/v1/namespaces/proxy-8167/services/https:proxy-service-zpzsf:tlsportname2/proxy/: tls qux (200; 7.99125ms)
  Apr 20 12:15:21.007: INFO: (10) /api/v1/namespaces/proxy-8167/services/proxy-service-zpzsf:portname2/proxy/: bar (200; 8.299244ms)
  Apr 20 12:15:21.011: INFO: (11) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:1080/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:1080/proxy/rewriteme">test<... (200; 3.664359ms)
  Apr 20 12:15:21.011: INFO: (11) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:160/proxy/: foo (200; 3.779238ms)
  Apr 20 12:15:21.012: INFO: (11) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:160/proxy/: foo (200; 4.783896ms)
  Apr 20 12:15:21.013: INFO: (11) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:162/proxy/: bar (200; 5.573451ms)
  Apr 20 12:15:21.013: INFO: (11) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:460/proxy/: tls baz (200; 5.60075ms)
  Apr 20 12:15:21.013: INFO: (11) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:443/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:443/proxy/tlsrewritem... (200; 5.542219ms)
  Apr 20 12:15:21.013: INFO: (11) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:462/proxy/: tls qux (200; 5.583999ms)
  Apr 20 12:15:21.014: INFO: (11) /api/v1/namespaces/proxy-8167/services/http:proxy-service-zpzsf:portname2/proxy/: bar (200; 6.611657ms)
  Apr 20 12:15:21.015: INFO: (11) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:162/proxy/: bar (200; 7.141764ms)
  Apr 20 12:15:21.015: INFO: (11) /api/v1/namespaces/proxy-8167/services/proxy-service-zpzsf:portname1/proxy/: foo (200; 7.36745ms)
  Apr 20 12:15:21.015: INFO: (11) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9/proxy/rewriteme">test</a> (200; 7.227966ms)
  Apr 20 12:15:21.015: INFO: (11) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:1080/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:1080/proxy/rewriteme">... (200; 7.174857ms)
  Apr 20 12:15:21.015: INFO: (11) /api/v1/namespaces/proxy-8167/services/proxy-service-zpzsf:portname2/proxy/: bar (200; 7.488497ms)
  Apr 20 12:15:21.016: INFO: (11) /api/v1/namespaces/proxy-8167/services/https:proxy-service-zpzsf:tlsportname2/proxy/: tls qux (200; 8.385685ms)
  Apr 20 12:15:21.016: INFO: (11) /api/v1/namespaces/proxy-8167/services/https:proxy-service-zpzsf:tlsportname1/proxy/: tls baz (200; 8.812778ms)
  Apr 20 12:15:21.016: INFO: (11) /api/v1/namespaces/proxy-8167/services/http:proxy-service-zpzsf:portname1/proxy/: foo (200; 8.977047ms)
  Apr 20 12:15:21.020: INFO: (12) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:160/proxy/: foo (200; 3.694312ms)
  Apr 20 12:15:21.021: INFO: (12) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:162/proxy/: bar (200; 4.018866ms)
  Apr 20 12:15:21.021: INFO: (12) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:162/proxy/: bar (200; 4.118205ms)
  Apr 20 12:15:21.021: INFO: (12) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:460/proxy/: tls baz (200; 4.641649ms)
  Apr 20 12:15:21.022: INFO: (12) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9/proxy/rewriteme">test</a> (200; 4.996468ms)
  Apr 20 12:15:21.022: INFO: (12) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:462/proxy/: tls qux (200; 5.555051ms)
  Apr 20 12:15:21.023: INFO: (12) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:160/proxy/: foo (200; 6.110962ms)
  Apr 20 12:15:21.023: INFO: (12) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:1080/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:1080/proxy/rewriteme">test<... (200; 6.221336ms)
  Apr 20 12:15:21.023: INFO: (12) /api/v1/namespaces/proxy-8167/services/proxy-service-zpzsf:portname1/proxy/: foo (200; 6.437409ms)
  Apr 20 12:15:21.023: INFO: (12) /api/v1/namespaces/proxy-8167/services/https:proxy-service-zpzsf:tlsportname1/proxy/: tls baz (200; 6.495604ms)
  Apr 20 12:15:21.024: INFO: (12) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:1080/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:1080/proxy/rewriteme">... (200; 6.95103ms)
  Apr 20 12:15:21.024: INFO: (12) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:443/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:443/proxy/tlsrewritem... (200; 7.141093ms)
  Apr 20 12:15:21.024: INFO: (12) /api/v1/namespaces/proxy-8167/services/http:proxy-service-zpzsf:portname1/proxy/: foo (200; 7.180552ms)
  Apr 20 12:15:21.024: INFO: (12) /api/v1/namespaces/proxy-8167/services/proxy-service-zpzsf:portname2/proxy/: bar (200; 7.359871ms)
  Apr 20 12:15:21.025: INFO: (12) /api/v1/namespaces/proxy-8167/services/https:proxy-service-zpzsf:tlsportname2/proxy/: tls qux (200; 7.979439ms)
  Apr 20 12:15:21.025: INFO: (12) /api/v1/namespaces/proxy-8167/services/http:proxy-service-zpzsf:portname2/proxy/: bar (200; 8.222254ms)
  Apr 20 12:15:21.029: INFO: (13) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:1080/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:1080/proxy/rewriteme">... (200; 3.822721ms)
  Apr 20 12:15:21.030: INFO: (13) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9/proxy/rewriteme">test</a> (200; 4.699143ms)
  Apr 20 12:15:21.030: INFO: (13) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:460/proxy/: tls baz (200; 4.893274ms)
  Apr 20 12:15:21.030: INFO: (13) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:1080/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:1080/proxy/rewriteme">test<... (200; 5.346537ms)
  Apr 20 12:15:21.030: INFO: (13) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:443/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:443/proxy/tlsrewritem... (200; 5.268349ms)
  Apr 20 12:15:21.030: INFO: (13) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:160/proxy/: foo (200; 5.480293ms)
  Apr 20 12:15:21.031: INFO: (13) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:162/proxy/: bar (200; 6.28248ms)
  Apr 20 12:15:21.031: INFO: (13) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:160/proxy/: foo (200; 6.288954ms)
  Apr 20 12:15:21.032: INFO: (13) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:462/proxy/: tls qux (200; 7.134583ms)
  Apr 20 12:15:21.032: INFO: (13) /api/v1/namespaces/proxy-8167/services/proxy-service-zpzsf:portname2/proxy/: bar (200; 7.11522ms)
  Apr 20 12:15:21.032: INFO: (13) /api/v1/namespaces/proxy-8167/services/http:proxy-service-zpzsf:portname1/proxy/: foo (200; 7.40941ms)
  Apr 20 12:15:21.032: INFO: (13) /api/v1/namespaces/proxy-8167/services/proxy-service-zpzsf:portname1/proxy/: foo (200; 7.53585ms)
  Apr 20 12:15:21.032: INFO: (13) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:162/proxy/: bar (200; 7.319966ms)
  Apr 20 12:15:21.034: INFO: (13) /api/v1/namespaces/proxy-8167/services/http:proxy-service-zpzsf:portname2/proxy/: bar (200; 8.569506ms)
  Apr 20 12:15:21.034: INFO: (13) /api/v1/namespaces/proxy-8167/services/https:proxy-service-zpzsf:tlsportname2/proxy/: tls qux (200; 8.634835ms)
  Apr 20 12:15:21.034: INFO: (13) /api/v1/namespaces/proxy-8167/services/https:proxy-service-zpzsf:tlsportname1/proxy/: tls baz (200; 8.783756ms)
  Apr 20 12:15:21.038: INFO: (14) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:1080/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:1080/proxy/rewriteme">test<... (200; 3.732545ms)
  Apr 20 12:15:21.039: INFO: (14) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:162/proxy/: bar (200; 4.997124ms)
  Apr 20 12:15:21.039: INFO: (14) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:160/proxy/: foo (200; 5.23536ms)
  Apr 20 12:15:21.039: INFO: (14) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:162/proxy/: bar (200; 5.216755ms)
  Apr 20 12:15:21.039: INFO: (14) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9/proxy/rewriteme">test</a> (200; 5.349818ms)
  Apr 20 12:15:21.039: INFO: (14) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:1080/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:1080/proxy/rewriteme">... (200; 5.399698ms)
  Apr 20 12:15:21.040: INFO: (14) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:460/proxy/: tls baz (200; 5.843215ms)
  Apr 20 12:15:21.040: INFO: (14) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:462/proxy/: tls qux (200; 5.903641ms)
  Apr 20 12:15:21.042: INFO: (14) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:160/proxy/: foo (200; 8.393132ms)
  Apr 20 12:15:21.044: INFO: (14) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:443/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:443/proxy/tlsrewritem... (200; 9.610222ms)
  Apr 20 12:15:21.044: INFO: (14) /api/v1/namespaces/proxy-8167/services/http:proxy-service-zpzsf:portname1/proxy/: foo (200; 10.340105ms)
  Apr 20 12:15:21.044: INFO: (14) /api/v1/namespaces/proxy-8167/services/https:proxy-service-zpzsf:tlsportname2/proxy/: tls qux (200; 10.48144ms)
  Apr 20 12:15:21.046: INFO: (14) /api/v1/namespaces/proxy-8167/services/proxy-service-zpzsf:portname1/proxy/: foo (200; 12.040287ms)
  Apr 20 12:15:21.047: INFO: (14) /api/v1/namespaces/proxy-8167/services/https:proxy-service-zpzsf:tlsportname1/proxy/: tls baz (200; 13.06774ms)
  Apr 20 12:15:21.047: INFO: (14) /api/v1/namespaces/proxy-8167/services/proxy-service-zpzsf:portname2/proxy/: bar (200; 13.062799ms)
  Apr 20 12:15:21.047: INFO: (14) /api/v1/namespaces/proxy-8167/services/http:proxy-service-zpzsf:portname2/proxy/: bar (200; 13.18957ms)
  Apr 20 12:15:21.056: INFO: (15) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:162/proxy/: bar (200; 8.286685ms)
  Apr 20 12:15:21.056: INFO: (15) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:1080/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:1080/proxy/rewriteme">... (200; 8.364935ms)
  Apr 20 12:15:21.059: INFO: (15) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:1080/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:1080/proxy/rewriteme">test<... (200; 11.621615ms)
  Apr 20 12:15:21.060: INFO: (15) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:462/proxy/: tls qux (200; 12.532599ms)
  Apr 20 12:15:21.060: INFO: (15) /api/v1/namespaces/proxy-8167/services/http:proxy-service-zpzsf:portname2/proxy/: bar (200; 12.72232ms)
  Apr 20 12:15:21.060: INFO: (15) /api/v1/namespaces/proxy-8167/services/https:proxy-service-zpzsf:tlsportname1/proxy/: tls baz (200; 12.66227ms)
  Apr 20 12:15:21.060: INFO: (15) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:460/proxy/: tls baz (200; 12.65064ms)
  Apr 20 12:15:21.060: INFO: (15) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:443/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:443/proxy/tlsrewritem... (200; 12.804246ms)
  Apr 20 12:15:21.062: INFO: (15) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:162/proxy/: bar (200; 14.509669ms)
  Apr 20 12:15:21.062: INFO: (15) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9/proxy/rewriteme">test</a> (200; 14.561201ms)
  Apr 20 12:15:21.062: INFO: (15) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:160/proxy/: foo (200; 15.043463ms)
  Apr 20 12:15:21.063: INFO: (15) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:160/proxy/: foo (200; 15.448238ms)
  Apr 20 12:15:21.063: INFO: (15) /api/v1/namespaces/proxy-8167/services/http:proxy-service-zpzsf:portname1/proxy/: foo (200; 15.837362ms)
  Apr 20 12:15:21.064: INFO: (15) /api/v1/namespaces/proxy-8167/services/https:proxy-service-zpzsf:tlsportname2/proxy/: tls qux (200; 16.234554ms)
  Apr 20 12:15:21.064: INFO: (15) /api/v1/namespaces/proxy-8167/services/proxy-service-zpzsf:portname1/proxy/: foo (200; 16.473054ms)
  Apr 20 12:15:21.064: INFO: (15) /api/v1/namespaces/proxy-8167/services/proxy-service-zpzsf:portname2/proxy/: bar (200; 16.982031ms)
  Apr 20 12:15:21.072: INFO: (16) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9/proxy/rewriteme">test</a> (200; 7.588791ms)
  Apr 20 12:15:21.073: INFO: (16) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:160/proxy/: foo (200; 8.00369ms)
  Apr 20 12:15:21.073: INFO: (16) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:162/proxy/: bar (200; 7.960628ms)
  Apr 20 12:15:21.073: INFO: (16) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:162/proxy/: bar (200; 8.169638ms)
  Apr 20 12:15:21.073: INFO: (16) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:1080/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:1080/proxy/rewriteme">... (200; 8.16244ms)
  Apr 20 12:15:21.073: INFO: (16) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:462/proxy/: tls qux (200; 8.964687ms)
  Apr 20 12:15:21.074: INFO: (16) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:443/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:443/proxy/tlsrewritem... (200; 8.958569ms)
  Apr 20 12:15:21.074: INFO: (16) /api/v1/namespaces/proxy-8167/services/http:proxy-service-zpzsf:portname1/proxy/: foo (200; 9.013352ms)
  Apr 20 12:15:21.074: INFO: (16) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:160/proxy/: foo (200; 9.80638ms)
  Apr 20 12:15:21.075: INFO: (16) /api/v1/namespaces/proxy-8167/services/proxy-service-zpzsf:portname2/proxy/: bar (200; 9.974953ms)
  Apr 20 12:15:21.075: INFO: (16) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:1080/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:1080/proxy/rewriteme">test<... (200; 9.859175ms)
  Apr 20 12:15:21.075: INFO: (16) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:460/proxy/: tls baz (200; 9.979373ms)
  Apr 20 12:15:21.075: INFO: (16) /api/v1/namespaces/proxy-8167/services/proxy-service-zpzsf:portname1/proxy/: foo (200; 10.40716ms)
  Apr 20 12:15:21.076: INFO: (16) /api/v1/namespaces/proxy-8167/services/https:proxy-service-zpzsf:tlsportname1/proxy/: tls baz (200; 11.113395ms)
  Apr 20 12:15:21.076: INFO: (16) /api/v1/namespaces/proxy-8167/services/http:proxy-service-zpzsf:portname2/proxy/: bar (200; 11.39981ms)
  Apr 20 12:15:21.077: INFO: (16) /api/v1/namespaces/proxy-8167/services/https:proxy-service-zpzsf:tlsportname2/proxy/: tls qux (200; 12.178832ms)
  Apr 20 12:15:21.084: INFO: (17) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:1080/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:1080/proxy/rewriteme">test<... (200; 7.197324ms)
  Apr 20 12:15:21.086: INFO: (17) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:1080/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:1080/proxy/rewriteme">... (200; 8.799265ms)
  Apr 20 12:15:21.086: INFO: (17) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:462/proxy/: tls qux (200; 8.625359ms)
  Apr 20 12:15:21.087: INFO: (17) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9/proxy/rewriteme">test</a> (200; 9.868767ms)
  Apr 20 12:15:21.089: INFO: (17) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:160/proxy/: foo (200; 11.54964ms)
  Apr 20 12:15:21.089: INFO: (17) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:160/proxy/: foo (200; 12.152747ms)
  Apr 20 12:15:21.089: INFO: (17) /api/v1/namespaces/proxy-8167/services/https:proxy-service-zpzsf:tlsportname2/proxy/: tls qux (200; 12.395019ms)
  Apr 20 12:15:21.090: INFO: (17) /api/v1/namespaces/proxy-8167/services/proxy-service-zpzsf:portname2/proxy/: bar (200; 13.30502ms)
  Apr 20 12:15:21.090: INFO: (17) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:443/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:443/proxy/tlsrewritem... (200; 13.431954ms)
  Apr 20 12:15:21.091: INFO: (17) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:162/proxy/: bar (200; 13.876532ms)
  Apr 20 12:15:21.091: INFO: (17) /api/v1/namespaces/proxy-8167/services/http:proxy-service-zpzsf:portname2/proxy/: bar (200; 14.183105ms)
  Apr 20 12:15:21.092: INFO: (17) /api/v1/namespaces/proxy-8167/services/http:proxy-service-zpzsf:portname1/proxy/: foo (200; 14.557833ms)
  Apr 20 12:15:21.092: INFO: (17) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:162/proxy/: bar (200; 14.62182ms)
  Apr 20 12:15:21.092: INFO: (17) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:460/proxy/: tls baz (200; 15.139072ms)
  Apr 20 12:15:21.094: INFO: (17) /api/v1/namespaces/proxy-8167/services/https:proxy-service-zpzsf:tlsportname1/proxy/: tls baz (200; 16.902026ms)
  Apr 20 12:15:21.094: INFO: (17) /api/v1/namespaces/proxy-8167/services/proxy-service-zpzsf:portname1/proxy/: foo (200; 17.37848ms)
  Apr 20 12:15:21.099: INFO: (18) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:443/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:443/proxy/tlsrewritem... (200; 4.697631ms)
  Apr 20 12:15:21.102: INFO: (18) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:160/proxy/: foo (200; 7.923053ms)
  Apr 20 12:15:21.102: INFO: (18) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:1080/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:1080/proxy/rewriteme">... (200; 7.951738ms)
  Apr 20 12:15:21.103: INFO: (18) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:160/proxy/: foo (200; 7.954702ms)
  Apr 20 12:15:21.103: INFO: (18) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:162/proxy/: bar (200; 7.976767ms)
  Apr 20 12:15:21.103: INFO: (18) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:462/proxy/: tls qux (200; 8.082928ms)
  Apr 20 12:15:21.106: INFO: (18) /api/v1/namespaces/proxy-8167/services/http:proxy-service-zpzsf:portname2/proxy/: bar (200; 11.019533ms)
  Apr 20 12:15:21.106: INFO: (18) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:1080/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:1080/proxy/rewriteme">test<... (200; 10.981427ms)
  Apr 20 12:15:21.106: INFO: (18) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:162/proxy/: bar (200; 11.403572ms)
  Apr 20 12:15:21.106: INFO: (18) /api/v1/namespaces/proxy-8167/services/http:proxy-service-zpzsf:portname1/proxy/: foo (200; 11.312963ms)
  Apr 20 12:15:21.106: INFO: (18) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:460/proxy/: tls baz (200; 11.323363ms)
  Apr 20 12:15:21.106: INFO: (18) /api/v1/namespaces/proxy-8167/services/proxy-service-zpzsf:portname1/proxy/: foo (200; 11.31921ms)
  Apr 20 12:15:21.106: INFO: (18) /api/v1/namespaces/proxy-8167/services/proxy-service-zpzsf:portname2/proxy/: bar (200; 11.313937ms)
  Apr 20 12:15:21.106: INFO: (18) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9/proxy/rewriteme">test</a> (200; 11.347403ms)
  Apr 20 12:15:21.106: INFO: (18) /api/v1/namespaces/proxy-8167/services/https:proxy-service-zpzsf:tlsportname2/proxy/: tls qux (200; 11.803052ms)
  Apr 20 12:15:21.107: INFO: (18) /api/v1/namespaces/proxy-8167/services/https:proxy-service-zpzsf:tlsportname1/proxy/: tls baz (200; 12.338124ms)
  Apr 20 12:15:21.111: INFO: (19) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:1080/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:1080/proxy/rewriteme">test<... (200; 4.204712ms)
  Apr 20 12:15:21.113: INFO: (19) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:460/proxy/: tls baz (200; 6.136593ms)
  Apr 20 12:15:21.114: INFO: (19) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:162/proxy/: bar (200; 6.906749ms)
  Apr 20 12:15:21.114: INFO: (19) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9:160/proxy/: foo (200; 7.002375ms)
  Apr 20 12:15:21.114: INFO: (19) /api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/proxy-service-zpzsf-c7dl9/proxy/rewriteme">test</a> (200; 6.997698ms)
  Apr 20 12:15:21.115: INFO: (19) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:162/proxy/: bar (200; 7.519075ms)
  Apr 20 12:15:21.115: INFO: (19) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:160/proxy/: foo (200; 7.617584ms)
  Apr 20 12:15:21.115: INFO: (19) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:443/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:443/proxy/tlsrewritem... (200; 7.730926ms)
  Apr 20 12:15:21.117: INFO: (19) /api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:1080/proxy/: <a href="/api/v1/namespaces/proxy-8167/pods/http:proxy-service-zpzsf-c7dl9:1080/proxy/rewriteme">... (200; 9.338362ms)
  Apr 20 12:15:21.117: INFO: (19) /api/v1/namespaces/proxy-8167/services/proxy-service-zpzsf:portname1/proxy/: foo (200; 9.523935ms)
  Apr 20 12:15:21.117: INFO: (19) /api/v1/namespaces/proxy-8167/services/proxy-service-zpzsf:portname2/proxy/: bar (200; 9.67737ms)
  Apr 20 12:15:21.117: INFO: (19) /api/v1/namespaces/proxy-8167/pods/https:proxy-service-zpzsf-c7dl9:462/proxy/: tls qux (200; 9.537686ms)
  Apr 20 12:15:21.117: INFO: (19) /api/v1/namespaces/proxy-8167/services/https:proxy-service-zpzsf:tlsportname1/proxy/: tls baz (200; 9.465979ms)
  Apr 20 12:15:21.117: INFO: (19) /api/v1/namespaces/proxy-8167/services/http:proxy-service-zpzsf:portname2/proxy/: bar (200; 9.543803ms)
  Apr 20 12:15:21.117: INFO: (19) /api/v1/namespaces/proxy-8167/services/https:proxy-service-zpzsf:tlsportname2/proxy/: tls qux (200; 9.545696ms)
  Apr 20 12:15:21.117: INFO: (19) /api/v1/namespaces/proxy-8167/services/http:proxy-service-zpzsf:portname1/proxy/: foo (200; 10.230672ms)
  STEP: deleting ReplicationController proxy-service-zpzsf in namespace proxy-8167, will wait for the garbage collector to delete the pods @ 04/20/24 12:15:21.118
  Apr 20 12:15:21.181: INFO: Deleting ReplicationController proxy-service-zpzsf took: 7.702633ms
  Apr 20 12:15:21.281: INFO: Terminating ReplicationController proxy-service-zpzsf pods took: 100.839454ms
  Apr 20 12:15:27.683: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-8167" for this suite. @ 04/20/24 12:15:27.688
• [10.891 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 04/20/24 12:15:27.695
  Apr 20 12:15:27.695: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename svcaccounts @ 04/20/24 12:15:27.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:15:27.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:15:27.715
  Apr 20 12:15:27.737: INFO: created pod pod-service-account-defaultsa
  Apr 20 12:15:27.737: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Apr 20 12:15:27.745: INFO: created pod pod-service-account-mountsa
  Apr 20 12:15:27.745: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Apr 20 12:15:27.751: INFO: created pod pod-service-account-nomountsa
  Apr 20 12:15:27.752: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Apr 20 12:15:27.761: INFO: created pod pod-service-account-defaultsa-mountspec
  Apr 20 12:15:27.761: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Apr 20 12:15:27.772: INFO: created pod pod-service-account-mountsa-mountspec
  Apr 20 12:15:27.772: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Apr 20 12:15:27.780: INFO: created pod pod-service-account-nomountsa-mountspec
  Apr 20 12:15:27.780: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Apr 20 12:15:27.788: INFO: created pod pod-service-account-defaultsa-nomountspec
  Apr 20 12:15:27.788: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Apr 20 12:15:27.795: INFO: created pod pod-service-account-mountsa-nomountspec
  Apr 20 12:15:27.795: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Apr 20 12:15:27.803: INFO: created pod pod-service-account-nomountsa-nomountspec
  Apr 20 12:15:27.804: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Apr 20 12:15:27.804: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3947" for this suite. @ 04/20/24 12:15:27.819
• [0.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 04/20/24 12:15:27.826
  Apr 20 12:15:27.826: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 12:15:27.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:15:27.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:15:27.844
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 04/20/24 12:15:27.848
  STEP: Saw pod success @ 04/20/24 12:15:37.891
  Apr 20 12:15:37.895: INFO: Trying to get logs from node ip-172-31-27-26 pod pod-04a77939-ce5d-40c7-9631-4d963c25bcdb container test-container: <nil>
  STEP: delete the pod @ 04/20/24 12:15:37.915
  Apr 20 12:15:37.933: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7515" for this suite. @ 04/20/24 12:15:37.936
• [10.117 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3649
  STEP: Creating a kubernetes client @ 04/20/24 12:15:37.944
  Apr 20 12:15:37.944: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename services @ 04/20/24 12:15:37.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:15:37.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:15:37.962
  STEP: creating service multiprotocol-test in namespace services-3087 @ 04/20/24 12:15:37.965
  STEP: creating pod pod1 in namespace services-3087 @ 04/20/24 12:15:37.976
  STEP: Creating pod pod1 in namespace services-3087 @ 04/20/24 12:15:37.976
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-3087 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 04/20/24 12:15:40.007
  Apr 20 12:15:40.019: INFO: successfully validated that service multiprotocol-test in namespace services-3087 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 04/20/24 12:15:40.019
  Apr 20 12:15:40.019: INFO: Creating new exec pod
  Apr 20 12:15:42.033: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-3087 exec execpod74c6w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.72 80'
  Apr 20 12:15:42.139: INFO: stderr: "+ nc -v -t -w 2 10.152.183.72 80\nConnection to 10.152.183.72 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Apr 20 12:15:42.139: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 12:15:42.140: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-3087 exec execpod74c6w -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.72 80'
  Apr 20 12:15:46.245: INFO: stderr: "+ nc -v -u -w 2 10.152.183.72 80\n+ echo hostName\nConnection to 10.152.183.72 80 port [udp/*] succeeded!\n"
  Apr 20 12:15:46.245: INFO: stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 04/20/24 12:15:46.245
  Apr 20 12:15:46.256: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-3087 exec execpod74c6w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.72 80'
  Apr 20 12:15:46.351: INFO: stderr: "+ nc -v -t -w 2 10.152.183.72 80\nConnection to 10.152.183.72 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Apr 20 12:15:46.351: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 12:15:46.351: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-3087 exec execpod74c6w -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.72 80'
  Apr 20 12:15:50.441: INFO: stderr: "+ nc -v -u -w 2 10.152.183.72 80\n+ echo hostName\nConnection to 10.152.183.72 80 port [udp/*] succeeded!\n"
  Apr 20 12:15:50.441: INFO: stdout: ""
  Apr 20 12:15:50.441: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-3087 exec execpod74c6w -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.72 80'
  Apr 20 12:15:54.529: INFO: stderr: "+ nc -v -u -w 2 10.152.183.72 80\n+ echo hostName\nConnection to 10.152.183.72 80 port [udp/*] succeeded!\n"
  Apr 20 12:15:54.529: INFO: stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 04/20/24 12:15:54.529
  Apr 20 12:15:54.540: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-3087 exec execpod74c6w -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.72 80'
  Apr 20 12:15:58.650: INFO: stderr: "+ nc -v -u -w 2 10.152.183.72 80\n+ echo hostName\nConnection to 10.152.183.72 80 port [udp/*] succeeded!\n"
  Apr 20 12:15:58.650: INFO: stdout: "pod1"
  Apr 20 12:15:58.650: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-3087 exec execpod74c6w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.72 80'
  Apr 20 12:16:00.741: INFO: rc: 1
  Apr 20 12:16:00.741: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-3087 exec execpod74c6w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.72 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.152.183.72 80
  + echo hostName
  nc: connect to 10.152.183.72 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Apr 20 12:16:00.741: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-3087 exec execpod74c6w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.72 80'
  Apr 20 12:16:02.829: INFO: rc: 1
  Apr 20 12:16:02.829: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-3087 exec execpod74c6w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.72 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.152.183.72 80
  + echo hostName
  nc: connect to 10.152.183.72 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Apr 20 12:16:02.829: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-3087 exec execpod74c6w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.72 80'
  Apr 20 12:16:04.922: INFO: rc: 1
  Apr 20 12:16:04.922: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-3087 exec execpod74c6w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.72 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.152.183.72 80
  + echo hostName
  nc: connect to 10.152.183.72 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Apr 20 12:16:04.922: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3087" for this suite. @ 04/20/24 12:16:04.927
• [26.990 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 04/20/24 12:16:04.934
  Apr 20 12:16:04.934: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename deployment @ 04/20/24 12:16:04.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:16:04.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:16:04.956
  Apr 20 12:16:04.960: INFO: Creating deployment "test-recreate-deployment"
  Apr 20 12:16:04.967: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Apr 20 12:16:04.975: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  Apr 20 12:16:06.983: INFO: Waiting deployment "test-recreate-deployment" to complete
  Apr 20 12:16:06.987: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Apr 20 12:16:06.997: INFO: Updating deployment test-recreate-deployment
  Apr 20 12:16:06.997: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Apr 20 12:16:07.093: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9671",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7ea0fca1-358d-4bef-a2c6-61b0a7cd6dd3",
      ResourceVersion: (string) (len=4) "4703",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849212164,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212166,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212167,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212167,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212167,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212167,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212164,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 20 12:16:07.100: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9671",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e4c885c4-f1d8-47c1-844e-d53d8445b2b2",
      ResourceVersion: (string) (len=4) "4701",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849212167,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "7ea0fca1-358d-4bef-a2c6-61b0a7cd6dd3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212167,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 65 61 30 66 63  61 31 2d 33 35 38 64 2d  |\"7ea0fca1-358d-|
              00000120  34 62 65 66 2d 61 32 63  36 2d 36 31 62 30 61 37  |4bef-a2c6-61b0a7|
              00000130  63 64 36 64 64 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |cd6dd3\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212167,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 20 12:16:07.101: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Apr 20 12:16:07.101: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-5cf87b5b86",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9671",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "21c5a380-5e39-4d7e-9701-a7379f8a4ee0",
      ResourceVersion: (string) (len=4) "4691",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849212164,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "7ea0fca1-358d-4bef-a2c6-61b0a7cd6dd3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212166,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 65 61 30 66 63  61 31 2d 33 35 38 64 2d  |\"7ea0fca1-358d-|
              00000120  34 62 65 66 2d 61 32 63  36 2d 36 31 62 30 61 37  |4bef-a2c6-61b0a7|
              00000130  63 64 36 64 64 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |cd6dd3\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212167,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 20 12:16:07.105: INFO: Pod "test-recreate-deployment-76fb77d45-khpxz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-khpxz",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-9671",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ab68963e-ee4e-4156-8732-665a3e5024d8",
      ResourceVersion: (string) (len=4) "4702",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849212167,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "e4c885c4-f1d8-47c1-844e-d53d8445b2b2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212167,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 34  63 38 38 35 63 34 2d 66  |d\":\"e4c885c4-f|
              00000090  31 64 38 2d 34 37 63 31  2d 38 34 34 65 2d 64 35  |1d8-47c1-844e-d5|
              000000a0  33 64 38 34 34 35 62 32  62 32 5c 22 7d 22 3a 7b  |3d8445b2b2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212167,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l875d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l875d",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-81-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212167,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212167,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212167,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212167,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212167,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.81.0",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.81.0"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849212167,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 12:16:07.109: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9671" for this suite. @ 04/20/24 12:16:07.113
• [2.185 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:47
  STEP: Creating a kubernetes client @ 04/20/24 12:16:07.12
  Apr 20 12:16:07.120: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename secrets @ 04/20/24 12:16:07.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:16:07.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:16:07.138
  STEP: Creating secret with name secret-test-c35810e6-195a-4579-8ddc-c8b9769a47fd @ 04/20/24 12:16:07.142
  STEP: Creating a pod to test consume secrets @ 04/20/24 12:16:07.147
  STEP: Saw pod success @ 04/20/24 12:16:11.172
  Apr 20 12:16:11.176: INFO: Trying to get logs from node ip-172-31-81-0 pod pod-secrets-8c0ef428-6e6a-415b-82f1-a5c77eac00ed container secret-env-test: <nil>
  STEP: delete the pod @ 04/20/24 12:16:11.192
  Apr 20 12:16:11.210: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2436" for this suite. @ 04/20/24 12:16:11.214
• [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 04/20/24 12:16:11.221
  Apr 20 12:16:11.221: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename hostport @ 04/20/24 12:16:11.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:16:11.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:16:11.24
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 04/20/24 12:16:11.247
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.27.26 on the node which pod1 resides and expect scheduled @ 04/20/24 12:16:13.265
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.27.26 but use UDP protocol on the node which pod2 resides @ 04/20/24 12:16:17.288
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 04/20/24 12:16:21.327
  Apr 20 12:16:21.327: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.27.26 http://127.0.0.1:54323/hostname] Namespace:hostport-6197 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 12:16:21.327: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  Apr 20 12:16:21.327: INFO: ExecWithOptions: Clientset creation
  Apr 20 12:16:21.327: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-6197/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.27.26+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.27.26, port: 54323 @ 04/20/24 12:16:21.401
  Apr 20 12:16:21.401: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.27.26:54323/hostname] Namespace:hostport-6197 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 12:16:21.401: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  Apr 20 12:16:21.402: INFO: ExecWithOptions: Clientset creation
  Apr 20 12:16:21.402: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-6197/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.27.26%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.27.26, port: 54323 UDP @ 04/20/24 12:16:21.458
  Apr 20 12:16:21.458: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.27.26 54323] Namespace:hostport-6197 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 12:16:21.458: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  Apr 20 12:16:21.458: INFO: ExecWithOptions: Clientset creation
  Apr 20 12:16:21.458: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-6197/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.27.26+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  Apr 20 12:16:26.513: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-6197" for this suite. @ 04/20/24 12:16:26.517
• [15.303 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 04/20/24 12:16:26.524
  Apr 20 12:16:26.524: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename deployment @ 04/20/24 12:16:26.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:16:26.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:16:26.555
  STEP: creating a Deployment @ 04/20/24 12:16:26.566
  STEP: waiting for Deployment to be created @ 04/20/24 12:16:26.575
  STEP: waiting for all Replicas to be Ready @ 04/20/24 12:16:26.579
  Apr 20 12:16:26.586: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 20 12:16:26.586: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 20 12:16:26.600: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 20 12:16:26.600: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 20 12:16:26.630: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 20 12:16:26.630: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 20 12:16:26.670: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 20 12:16:26.670: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 20 12:16:27.693: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Apr 20 12:16:27.693: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Apr 20 12:16:27.930: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 04/20/24 12:16:27.93
  Apr 20 12:16:27.939: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 04/20/24 12:16:27.939
  Apr 20 12:16:27.940: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 0
  Apr 20 12:16:27.940: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 0
  Apr 20 12:16:27.940: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 0
  Apr 20 12:16:27.940: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 0
  Apr 20 12:16:27.940: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 0
  Apr 20 12:16:27.940: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 0
  Apr 20 12:16:27.940: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 0
  Apr 20 12:16:27.940: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 0
  Apr 20 12:16:27.940: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 1
  Apr 20 12:16:27.940: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 1
  Apr 20 12:16:27.940: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 2
  Apr 20 12:16:27.941: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 2
  Apr 20 12:16:27.941: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 2
  Apr 20 12:16:27.941: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 2
  Apr 20 12:16:27.953: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 2
  Apr 20 12:16:27.953: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 2
  Apr 20 12:16:27.974: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 2
  Apr 20 12:16:27.974: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 2
  Apr 20 12:16:27.986: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 1
  Apr 20 12:16:27.986: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 1
  Apr 20 12:16:27.998: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 1
  Apr 20 12:16:27.998: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 1
  Apr 20 12:16:28.708: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 2
  Apr 20 12:16:28.708: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 2
  Apr 20 12:16:28.733: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 1
  STEP: listing Deployments @ 04/20/24 12:16:28.733
  Apr 20 12:16:28.737: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 04/20/24 12:16:28.737
  Apr 20 12:16:28.749: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 04/20/24 12:16:28.749
  Apr 20 12:16:28.757: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 20 12:16:28.760: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 20 12:16:28.789: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 20 12:16:28.802: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 20 12:16:28.815: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 20 12:16:29.977: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 20 12:16:31.717: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 20 12:16:31.746: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 20 12:16:31.756: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 20 12:16:34.962: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 04/20/24 12:16:34.981
  STEP: fetching the DeploymentStatus @ 04/20/24 12:16:34.989
  Apr 20 12:16:34.995: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 1
  Apr 20 12:16:34.995: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 1
  Apr 20 12:16:34.995: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 1
  Apr 20 12:16:34.995: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 1
  Apr 20 12:16:34.995: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 1
  Apr 20 12:16:34.995: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 2
  Apr 20 12:16:34.995: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 3
  Apr 20 12:16:34.995: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 2
  Apr 20 12:16:34.995: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 2
  Apr 20 12:16:34.995: INFO: observed Deployment test-deployment in namespace deployment-1992 with ReadyReplicas 3
  STEP: deleting the Deployment @ 04/20/24 12:16:34.995
  Apr 20 12:16:35.006: INFO: observed event type MODIFIED
  Apr 20 12:16:35.007: INFO: observed event type MODIFIED
  Apr 20 12:16:35.007: INFO: observed event type MODIFIED
  Apr 20 12:16:35.007: INFO: observed event type MODIFIED
  Apr 20 12:16:35.007: INFO: observed event type MODIFIED
  Apr 20 12:16:35.007: INFO: observed event type MODIFIED
  Apr 20 12:16:35.007: INFO: observed event type MODIFIED
  Apr 20 12:16:35.007: INFO: observed event type MODIFIED
  Apr 20 12:16:35.007: INFO: observed event type MODIFIED
  Apr 20 12:16:35.007: INFO: observed event type MODIFIED
  Apr 20 12:16:35.007: INFO: observed event type MODIFIED
  Apr 20 12:16:35.007: INFO: observed event type MODIFIED
  Apr 20 12:16:35.007: INFO: observed event type MODIFIED
  Apr 20 12:16:35.011: INFO: Log out all the ReplicaSets if there is no deployment created
  Apr 20 12:16:35.015: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1992",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0338b7ae-6829-4118-bbf0-2489e242aa6a",
      ResourceVersion: (string) (len=4) "5120",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849212187,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "50cf5a01-ff21-4898-94a3-0ea6310a1b6b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212194,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 35 30 63 66  35 61 30 31 2d 66 66 32  |":\"50cf5a01-ff2|
              00000130  31 2d 34 38 39 38 2d 39  34 61 33 2d 30 65 61 36  |1-4898-94a3-0ea6|
              00000140  33 31 30 61 31 62 36 62  5c 22 7d 22 3a 7b 7d 7d  |310a1b6b\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212194,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Apr 20 12:16:35.022: INFO: pod: "test-deployment-64fd565c98-qw7g8":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-qw7g8",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-1992",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2f41ef79-98cf-4796-a358-097f7476cda5",
      ResourceVersion: (string) (len=4) "5116",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849212188,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849212196,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "0338b7ae-6829-4118-bbf0-2489e242aa6a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212188,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  30 33 33 38 62 37 61 65  |uid\":\"0338b7ae|
              000000a0  2d 36 38 32 39 2d 34 31  31 38 2d 62 62 66 30 2d  |-6829-4118-bbf0-|
              000000b0  32 34 38 39 65 32 34 32  61 61 36 61 5c 22 7d 22  |2489e242aa6a\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212189,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 34  34 2e 37 31 5c 22 7d 22  |2.168.144.71\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tt4xz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tt4xz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-81-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212189,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212188,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212189,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212189,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212188,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.81.0",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.81.0"
        }
      },
      PodIP: (string) (len=14) "192.168.144.71",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.144.71"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849212188,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849212189,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://0456a1cedff60323d0d07b160ce7c1572e334a134eaed496ddf3a7adbf57a7bb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Apr 20 12:16:35.023: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1992",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3d81d5b5-d8ba-4d0d-b55a-b669ade7a3a4",
      ResourceVersion: (string) (len=4) "5112",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849212188,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "50cf5a01-ff21-4898-94a3-0ea6310a1b6b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212191,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 35 30 63 66  35 61 30 31 2d 66 66 32  |":\"50cf5a01-ff2|
              00000130  31 2d 34 38 39 38 2d 39  34 61 33 2d 30 65 61 36  |1-4898-94a3-0ea6|
              00000140  33 31 30 61 31 62 36 62  5c 22 7d 22 3a 7b 7d 7d  |310a1b6b\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212194,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Apr 20 12:16:35.031: INFO: pod: "test-deployment-79ff746c4-fzz69":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-fzz69",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-1992",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bacea6aa-13c8-48f0-b600-3a13d00b24c2",
      ResourceVersion: (string) (len=4) "5111",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849212191,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "3d81d5b5-d8ba-4d0d-b55a-b669ade7a3a4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212191,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  33 64 38 31 64 35 62 35  |uid\":\"3d81d5b5|
              000000a0  2d 64 38 62 61 2d 34 64  30 64 2d 62 35 35 61 2d  |-d8ba-4d0d-b55a-|
              000000b0  62 36 36 39 61 64 65 37  61 33 61 34 5c 22 7d 22  |b669ade7a3a4\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212194,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 34  34 2e 37 32 5c 22 7d 22  |2.168.144.72\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cz84n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cz84n",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-81-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212194,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212191,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212194,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212194,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212191,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.81.0",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.81.0"
        }
      },
      PodIP: (string) (len=14) "192.168.144.72",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.144.72"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849212191,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849212194,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e90382613c04064fe46c6f6f226192e3286364ca5cd01c5da58c43495e0170c0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Apr 20 12:16:35.036: INFO: pod: "test-deployment-79ff746c4-xtfqt":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-xtfqt",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-1992",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "472f7571-1c0b-40bb-8125-f9317318d169",
      ResourceVersion: (string) (len=4) "5128",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849212188,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849212196,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "3d81d5b5-d8ba-4d0d-b55a-b669ade7a3a4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212188,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  33 64 38 31 64 35 62 35  |uid\":\"3d81d5b5|
              000000a0  2d 64 38 62 61 2d 34 64  30 64 2d 62 35 35 61 2d  |-d8ba-4d0d-b55a-|
              000000b0  62 36 36 39 61 64 65 37  61 33 61 34 5c 22 7d 22  |b669ade7a3a4\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212191,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 31  33 2e 32 30 31 5c 22 7d  |2.168.213.201\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tf5wz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tf5wz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-41-198",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212191,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212188,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212191,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212191,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212188,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.41.198",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.41.198"
        }
      },
      PodIP: (string) (len=15) "192.168.213.201",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.213.201"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849212188,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849212191,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://336a11aaf078b887fee3dbb5d73b522546154c952f3404dbfc447486fc706f78",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Apr 20 12:16:35.037: INFO: ReplicaSet "test-deployment-7fcc79b8c7":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-7fcc79b8c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1992",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "74630224-f02f-4f58-afe1-83afa2d34d0e",
      ResourceVersion: (string) (len=4) "4964",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849212186,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "50cf5a01-ff21-4898-94a3-0ea6310a1b6b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212188,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 35 30 63 66  35 61 30 31 2d 66 66 32  |":\"50cf5a01-ff2|
              00000130  31 2d 34 38 39 38 2d 39  34 61 33 2d 30 65 61 36  |1-4898-94a3-0ea6|
              00000140  33 31 30 61 31 62 36 62  5c 22 7d 22 3a 7b 7d 7d  |310a1b6b\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212188,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=22) "test-deployment-static": (string) (len=4) "true",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Apr 20 12:16:35.041: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1992" for this suite. @ 04/20/24 12:16:35.045
• [8.528 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 04/20/24 12:16:35.053
  Apr 20 12:16:35.053: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename pods @ 04/20/24 12:16:35.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:16:35.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:16:35.07
  STEP: creating the pod @ 04/20/24 12:16:35.073
  STEP: submitting the pod to kubernetes @ 04/20/24 12:16:35.073
  STEP: verifying QOS class is set on the pod @ 04/20/24 12:16:35.082
  Apr 20 12:16:35.087: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6414" for this suite. @ 04/20/24 12:16:35.092
• [0.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 04/20/24 12:16:35.099
  Apr 20 12:16:35.099: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename gc @ 04/20/24 12:16:35.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:16:35.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:16:35.12
  STEP: create the rc @ 04/20/24 12:16:35.123
  W0420 12:16:35.128776      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 04/20/24 12:16:40.135
  STEP: wait for all pods to be garbage collected @ 04/20/24 12:16:40.142
  STEP: Gathering metrics @ 04/20/24 12:16:45.153
  W0420 12:16:45.160219      20 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Apr 20 12:16:45.160: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 20 12:16:45.161: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3792" for this suite. @ 04/20/24 12:16:45.165
• [10.073 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1863
  STEP: Creating a kubernetes client @ 04/20/24 12:16:45.172
  Apr 20 12:16:45.172: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 12:16:45.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:16:45.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:16:45.194
  STEP: Starting the proxy @ 04/20/24 12:16:45.197
  Apr 20 12:16:45.197: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-9412 proxy --unix-socket=/tmp/kubectl-proxy-unix3794130456/test'
  STEP: retrieving proxy /api/ output @ 04/20/24 12:16:45.235
  Apr 20 12:16:45.235: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9412" for this suite. @ 04/20/24 12:16:45.24
• [0.074 seconds]
------------------------------
SSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 04/20/24 12:16:45.247
  Apr 20 12:16:45.247: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename events @ 04/20/24 12:16:45.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:16:45.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:16:45.264
  STEP: creating a test event @ 04/20/24 12:16:45.267
  STEP: listing events in all namespaces @ 04/20/24 12:16:45.271
  STEP: listing events in test namespace @ 04/20/24 12:16:45.283
  STEP: listing events with field selection filtering on source @ 04/20/24 12:16:45.287
  STEP: listing events with field selection filtering on reportingController @ 04/20/24 12:16:45.291
  STEP: getting the test event @ 04/20/24 12:16:45.294
  STEP: patching the test event @ 04/20/24 12:16:45.298
  STEP: getting the test event @ 04/20/24 12:16:45.306
  STEP: updating the test event @ 04/20/24 12:16:45.31
  STEP: getting the test event @ 04/20/24 12:16:45.318
  STEP: deleting the test event @ 04/20/24 12:16:45.322
  STEP: listing events in all namespaces @ 04/20/24 12:16:45.33
  STEP: listing events in test namespace @ 04/20/24 12:16:45.343
  Apr 20 12:16:45.347: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9299" for this suite. @ 04/20/24 12:16:45.351
• [0.111 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 04/20/24 12:16:45.358
  Apr 20 12:16:45.358: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/20/24 12:16:45.358
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:16:45.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:16:45.376
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 04/20/24 12:16:45.38
  Apr 20 12:16:45.380: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  Apr 20 12:16:46.783: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  Apr 20 12:16:51.714: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4617" for this suite. @ 04/20/24 12:16:51.721
• [6.371 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 04/20/24 12:16:51.729
  Apr 20 12:16:51.729: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename webhook @ 04/20/24 12:16:51.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:16:51.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:16:51.747
  STEP: Setting up server cert @ 04/20/24 12:16:51.773
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 12:16:51.939
  STEP: Deploying the webhook pod @ 04/20/24 12:16:51.947
  STEP: Wait for the deployment to be ready @ 04/20/24 12:16:51.958
  Apr 20 12:16:51.965: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/20/24 12:16:53.976
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 12:16:53.984
  Apr 20 12:16:54.985: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 04/20/24 12:16:54.993
  STEP: create a pod that should be denied by the webhook @ 04/20/24 12:16:55.008
  STEP: create a pod that causes the webhook to hang @ 04/20/24 12:16:55.019
  STEP: create a configmap that should be denied by the webhook @ 04/20/24 12:17:05.027
  STEP: create a configmap that should be admitted by the webhook @ 04/20/24 12:17:05.058
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 04/20/24 12:17:05.067
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 04/20/24 12:17:05.075
  STEP: create a namespace that bypass the webhook @ 04/20/24 12:17:05.08
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 04/20/24 12:17:05.106
  Apr 20 12:17:05.152: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6453" for this suite. @ 04/20/24 12:17:05.158
  STEP: Destroying namespace "webhook-markers-1173" for this suite. @ 04/20/24 12:17:05.165
  STEP: Destroying namespace "exempted-namespace-4470" for this suite. @ 04/20/24 12:17:05.17
• [13.446 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 04/20/24 12:17:05.175
  Apr 20 12:17:05.175: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename kubelet-test @ 04/20/24 12:17:05.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:17:05.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:17:05.196
  Apr 20 12:17:07.238: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5579" for this suite. @ 04/20/24 12:17:07.242
• [2.073 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 04/20/24 12:17:07.248
  Apr 20 12:17:07.248: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename webhook @ 04/20/24 12:17:07.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:17:07.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:17:07.267
  STEP: Setting up server cert @ 04/20/24 12:17:07.291
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 12:17:07.508
  STEP: Deploying the webhook pod @ 04/20/24 12:17:07.514
  STEP: Wait for the deployment to be ready @ 04/20/24 12:17:07.525
  Apr 20 12:17:07.533: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/20/24 12:17:09.544
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 12:17:09.554
  Apr 20 12:17:10.554: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 04/20/24 12:17:10.562
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/20/24 12:17:10.574
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 04/20/24 12:17:10.58
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/20/24 12:17:10.589
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 04/20/24 12:17:10.601
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/20/24 12:17:10.607
  Apr 20 12:17:10.643: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2191" for this suite. @ 04/20/24 12:17:10.646
  STEP: Destroying namespace "webhook-markers-8111" for this suite. @ 04/20/24 12:17:10.661
• [3.418 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1838
  STEP: Creating a kubernetes client @ 04/20/24 12:17:10.667
  Apr 20 12:17:10.667: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 12:17:10.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:17:10.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:17:10.684
  STEP: starting the proxy server @ 04/20/24 12:17:10.687
  Apr 20 12:17:10.687: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-1699 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 04/20/24 12:17:10.716
  Apr 20 12:17:10.720: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1699" for this suite. @ 04/20/24 12:17:10.724
• [0.063 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:902
  STEP: Creating a kubernetes client @ 04/20/24 12:17:10.73
  Apr 20 12:17:10.730: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename statefulset @ 04/20/24 12:17:10.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:17:10.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:17:10.748
  STEP: Creating service test in namespace statefulset-9487 @ 04/20/24 12:17:10.751
  STEP: Creating statefulset ss in namespace statefulset-9487 @ 04/20/24 12:17:10.757
  Apr 20 12:17:10.765: INFO: Found 0 stateful pods, waiting for 1
  Apr 20 12:17:20.768: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 04/20/24 12:17:20.774
  STEP: updating a scale subresource @ 04/20/24 12:17:20.777
  STEP: verifying the statefulset Spec.Replicas was modified @ 04/20/24 12:17:20.784
  STEP: Patch a scale subresource @ 04/20/24 12:17:20.79
  STEP: verifying the statefulset Spec.Replicas was modified @ 04/20/24 12:17:20.798
  Apr 20 12:17:20.802: INFO: Deleting all statefulset in ns statefulset-9487
  Apr 20 12:17:20.805: INFO: Scaling statefulset ss to 0
  Apr 20 12:17:30.819: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 20 12:17:30.822: INFO: Deleting statefulset ss
  Apr 20 12:17:30.834: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9487" for this suite. @ 04/20/24 12:17:30.837
• [20.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:170
  STEP: Creating a kubernetes client @ 04/20/24 12:17:30.843
  Apr 20 12:17:30.843: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename configmap @ 04/20/24 12:17:30.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:17:30.86
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:17:30.862
  STEP: creating a ConfigMap @ 04/20/24 12:17:30.865
  STEP: fetching the ConfigMap @ 04/20/24 12:17:30.87
  STEP: patching the ConfigMap @ 04/20/24 12:17:30.873
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 04/20/24 12:17:30.879
  STEP: deleting the ConfigMap by collection with a label selector @ 04/20/24 12:17:30.882
  STEP: listing all ConfigMaps in test namespace @ 04/20/24 12:17:30.891
  Apr 20 12:17:30.893: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1662" for this suite. @ 04/20/24 12:17:30.896
• [0.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 04/20/24 12:17:30.902
  Apr 20 12:17:30.902: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 12:17:30.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:17:30.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:17:30.923
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 12:17:30.925
  STEP: Saw pod success @ 04/20/24 12:17:34.947
  Apr 20 12:17:34.951: INFO: Trying to get logs from node ip-172-31-81-0 pod downwardapi-volume-030e3176-2eec-4038-b202-92e609a41feb container client-container: <nil>
  STEP: delete the pod @ 04/20/24 12:17:34.961
  Apr 20 12:17:34.977: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4006" for this suite. @ 04/20/24 12:17:34.98
• [4.084 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:469
  STEP: Creating a kubernetes client @ 04/20/24 12:17:34.986
  Apr 20 12:17:34.986: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename sched-pred @ 04/20/24 12:17:34.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:17:35.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:17:35.005
  Apr 20 12:17:35.007: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Apr 20 12:17:35.014: INFO: Waiting for terminating namespaces to be deleted...
  Apr 20 12:17:35.016: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-27-26 before test
  Apr 20 12:17:35.021: INFO: nginx-ingress-controller-kubernetes-worker-q29js from ingress-nginx-kubernetes-worker started at 2024-04-20 11:58:09 +0000 UTC (1 container statuses recorded)
  Apr 20 12:17:35.021: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 1
  Apr 20 12:17:35.021: INFO: calico-node-sm5jg from kube-system started at 2024-04-20 12:12:05 +0000 UTC (1 container statuses recorded)
  Apr 20 12:17:35.021: INFO: 	Container calico-node ready: true, restart count 0
  Apr 20 12:17:35.021: INFO: coredns-bddfd76d7-cmhz4 from kube-system started at 2024-04-20 11:58:09 +0000 UTC (1 container statuses recorded)
  Apr 20 12:17:35.021: INFO: 	Container coredns ready: true, restart count 0
  Apr 20 12:17:35.021: INFO: kube-state-metrics-6f48cdd76-xv4p5 from kube-system started at 2024-04-20 11:58:09 +0000 UTC (1 container statuses recorded)
  Apr 20 12:17:35.021: INFO: 	Container kube-state-metrics ready: true, restart count 2
  Apr 20 12:17:35.021: INFO: metrics-server-v0.6.3-69d7fbfdf8-rs74s from kube-system started at 2024-04-20 11:58:09 +0000 UTC (2 container statuses recorded)
  Apr 20 12:17:35.021: INFO: 	Container metrics-server ready: true, restart count 2
  Apr 20 12:17:35.021: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Apr 20 12:17:35.021: INFO: dashboard-metrics-scraper-5dd7cb5fc-fxbxd from kubernetes-dashboard started at 2024-04-20 11:58:09 +0000 UTC (1 container statuses recorded)
  Apr 20 12:17:35.021: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Apr 20 12:17:35.021: INFO: kubernetes-dashboard-7b899cb9d9-szd7n from kubernetes-dashboard started at 2024-04-20 11:58:09 +0000 UTC (1 container statuses recorded)
  Apr 20 12:17:35.021: INFO: 	Container kubernetes-dashboard ready: true, restart count 3
  Apr 20 12:17:35.021: INFO: sonobuoy-systemd-logs-daemon-set-6cab97477919492d-zm76r from sonobuoy started at 2024-04-20 12:15:05 +0000 UTC (2 container statuses recorded)
  Apr 20 12:17:35.021: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 12:17:35.021: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 20 12:17:35.021: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-41-198 before test
  Apr 20 12:17:35.026: INFO: nginx-ingress-controller-kubernetes-worker-2x5lx from ingress-nginx-kubernetes-worker started at 2024-04-20 12:08:15 +0000 UTC (1 container statuses recorded)
  Apr 20 12:17:35.026: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Apr 20 12:17:35.026: INFO: calico-node-w7qjq from kube-system started at 2024-04-20 12:11:55 +0000 UTC (1 container statuses recorded)
  Apr 20 12:17:35.026: INFO: 	Container calico-node ready: true, restart count 0
  Apr 20 12:17:35.026: INFO: busybox-scheduling-88528bf2-70da-4c9f-9112-16624a000fbe from kubelet-test-5579 started at 2024-04-20 12:17:05 +0000 UTC (1 container statuses recorded)
  Apr 20 12:17:35.026: INFO: 	Container busybox-scheduling-88528bf2-70da-4c9f-9112-16624a000fbe ready: true, restart count 0
  Apr 20 12:17:35.026: INFO: sonobuoy from sonobuoy started at 2024-04-20 12:15:03 +0000 UTC (1 container statuses recorded)
  Apr 20 12:17:35.026: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Apr 20 12:17:35.026: INFO: sonobuoy-systemd-logs-daemon-set-6cab97477919492d-6r9kd from sonobuoy started at 2024-04-20 12:15:05 +0000 UTC (2 container statuses recorded)
  Apr 20 12:17:35.026: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 12:17:35.026: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 20 12:17:35.026: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-81-0 before test
  Apr 20 12:17:35.030: INFO: nginx-ingress-controller-kubernetes-worker-7l4n2 from ingress-nginx-kubernetes-worker started at 2024-04-20 12:11:39 +0000 UTC (1 container statuses recorded)
  Apr 20 12:17:35.030: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Apr 20 12:17:35.030: INFO: calico-node-r8pwr from kube-system started at 2024-04-20 12:11:13 +0000 UTC (1 container statuses recorded)
  Apr 20 12:17:35.030: INFO: 	Container calico-node ready: true, restart count 0
  Apr 20 12:17:35.030: INFO: sonobuoy-e2e-job-b1821af8da4b44dc from sonobuoy started at 2024-04-20 12:15:05 +0000 UTC (2 container statuses recorded)
  Apr 20 12:17:35.030: INFO: 	Container e2e ready: true, restart count 0
  Apr 20 12:17:35.030: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 12:17:35.030: INFO: sonobuoy-systemd-logs-daemon-set-6cab97477919492d-qpl6s from sonobuoy started at 2024-04-20 12:15:05 +0000 UTC (2 container statuses recorded)
  Apr 20 12:17:35.030: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 12:17:35.030: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/20/24 12:17:35.03
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/20/24 12:17:37.05
  STEP: Trying to apply a random label on the found node. @ 04/20/24 12:17:37.061
  STEP: verifying the node has the label kubernetes.io/e2e-64c24edc-21cd-42e5-9e38-fc1b0849e861 42 @ 04/20/24 12:17:37.071
  STEP: Trying to relaunch the pod, now with labels. @ 04/20/24 12:17:37.074
  STEP: removing the label kubernetes.io/e2e-64c24edc-21cd-42e5-9e38-fc1b0849e861 off the node ip-172-31-41-198 @ 04/20/24 12:17:39.092
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-64c24edc-21cd-42e5-9e38-fc1b0849e861 @ 04/20/24 12:17:39.104
  Apr 20 12:17:39.108: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5954" for this suite. @ 04/20/24 12:17:39.111
• [4.130 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 04/20/24 12:17:39.117
  Apr 20 12:17:39.117: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename svcaccounts @ 04/20/24 12:17:39.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:17:39.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:17:39.142
  STEP: Creating ServiceAccount "e2e-sa-qgtl6"  @ 04/20/24 12:17:39.144
  Apr 20 12:17:39.148: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-qgtl6"  @ 04/20/24 12:17:39.148
  Apr 20 12:17:39.156: INFO: AutomountServiceAccountToken: true
  Apr 20 12:17:39.156: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1776" for this suite. @ 04/20/24 12:17:39.158
• [0.047 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 04/20/24 12:17:39.164
  Apr 20 12:17:39.164: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename runtimeclass @ 04/20/24 12:17:39.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:17:39.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:17:39.183
  STEP: getting /apis @ 04/20/24 12:17:39.186
  STEP: getting /apis/node.k8s.io @ 04/20/24 12:17:39.189
  STEP: getting /apis/node.k8s.io/v1 @ 04/20/24 12:17:39.19
  STEP: creating @ 04/20/24 12:17:39.191
  STEP: watching @ 04/20/24 12:17:39.206
  Apr 20 12:17:39.206: INFO: starting watch
  STEP: getting @ 04/20/24 12:17:39.212
  STEP: listing @ 04/20/24 12:17:39.215
  STEP: patching @ 04/20/24 12:17:39.217
  STEP: updating @ 04/20/24 12:17:39.222
  Apr 20 12:17:39.226: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 04/20/24 12:17:39.226
  STEP: deleting a collection @ 04/20/24 12:17:39.236
  Apr 20 12:17:39.249: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2008" for this suite. @ 04/20/24 12:17:39.252
• [0.093 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 04/20/24 12:17:39.257
  Apr 20 12:17:39.257: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename crd-webhook @ 04/20/24 12:17:39.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:17:39.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:17:39.277
  STEP: Setting up server cert @ 04/20/24 12:17:39.279
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 04/20/24 12:17:39.455
  STEP: Deploying the custom resource conversion webhook pod @ 04/20/24 12:17:39.462
  STEP: Wait for the deployment to be ready @ 04/20/24 12:17:39.474
  Apr 20 12:17:39.481: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/20/24 12:17:41.494
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 12:17:41.506
  Apr 20 12:17:42.507: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Apr 20 12:17:42.514: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Creating a v1 custom resource @ 04/20/24 12:17:45.072
  STEP: Create a v2 custom resource @ 04/20/24 12:17:45.089
  STEP: List CRs in v1 @ 04/20/24 12:17:45.114
  STEP: List CRs in v2 @ 04/20/24 12:17:45.118
  Apr 20 12:17:45.668: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-4199" for this suite. @ 04/20/24 12:17:45.672
• [6.420 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3338
  STEP: Creating a kubernetes client @ 04/20/24 12:17:45.677
  Apr 20 12:17:45.677: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename services @ 04/20/24 12:17:45.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:17:45.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:17:45.701
  STEP: creating a Service @ 04/20/24 12:17:45.71
  STEP: watching for the Service to be added @ 04/20/24 12:17:45.725
  Apr 20 12:17:45.726: INFO: Found Service test-service-7l4r8 in namespace services-7887 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 31321}]
  Apr 20 12:17:45.726: INFO: Service test-service-7l4r8 created
  STEP: Getting /status @ 04/20/24 12:17:45.726
  Apr 20 12:17:45.729: INFO: Service test-service-7l4r8 has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 04/20/24 12:17:45.729
  STEP: watching for the Service to be patched @ 04/20/24 12:17:45.733
  Apr 20 12:17:45.735: INFO: observed Service test-service-7l4r8 in namespace services-7887 with annotations: map[] & LoadBalancer: {[]}
  Apr 20 12:17:45.735: INFO: Found Service test-service-7l4r8 in namespace services-7887 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  <nil> []}]}
  Apr 20 12:17:45.735: INFO: Service test-service-7l4r8 has service status patched
  STEP: updating the ServiceStatus @ 04/20/24 12:17:45.735
  Apr 20 12:17:45.743: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 04/20/24 12:17:45.743
  Apr 20 12:17:45.744: INFO: Observed Service test-service-7l4r8 in namespace services-7887 with annotations: map[] & Conditions: {[]}
  Apr 20 12:17:45.744: INFO: Observed event: &Service{ObjectMeta:{test-service-7l4r8  services-7887  b0b6d4ed-cf80-4459-8beb-6fb660a29f78 6021 0 2024-04-20 12:17:45 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-04-20 12:17:45 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-04-20 12:17:45 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:31321,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.152.183.177,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.152.183.177],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:nil,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Apr 20 12:17:45.744: INFO: Found Service test-service-7l4r8 in namespace services-7887 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Apr 20 12:17:45.744: INFO: Service test-service-7l4r8 has service status updated
  STEP: patching the service @ 04/20/24 12:17:45.744
  STEP: watching for the Service to be patched @ 04/20/24 12:17:45.753
  Apr 20 12:17:45.754: INFO: observed Service test-service-7l4r8 in namespace services-7887 with labels: map[test-service-static:true]
  Apr 20 12:17:45.754: INFO: observed Service test-service-7l4r8 in namespace services-7887 with labels: map[test-service-static:true]
  Apr 20 12:17:45.754: INFO: observed Service test-service-7l4r8 in namespace services-7887 with labels: map[test-service-static:true]
  Apr 20 12:17:45.754: INFO: Found Service test-service-7l4r8 in namespace services-7887 with labels: map[test-service:patched test-service-static:true]
  Apr 20 12:17:45.754: INFO: Service test-service-7l4r8 patched
  STEP: deleting the service @ 04/20/24 12:17:45.754
  STEP: watching for the Service to be deleted @ 04/20/24 12:17:45.769
  Apr 20 12:17:45.770: INFO: Observed event: ADDED
  Apr 20 12:17:45.770: INFO: Observed event: MODIFIED
  Apr 20 12:17:45.770: INFO: Observed event: MODIFIED
  Apr 20 12:17:45.770: INFO: Observed event: MODIFIED
  Apr 20 12:17:45.770: INFO: Found Service test-service-7l4r8 in namespace services-7887 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Apr 20 12:17:45.770: INFO: Service test-service-7l4r8 deleted
  Apr 20 12:17:45.770: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7887" for this suite. @ 04/20/24 12:17:45.774
• [0.102 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 04/20/24 12:17:45.779
  Apr 20 12:17:45.779: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 04/20/24 12:17:45.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:17:45.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:17:45.801
  STEP: creating a target pod @ 04/20/24 12:17:45.803
  STEP: adding an ephemeral container @ 04/20/24 12:17:47.822
  STEP: checking pod container endpoints @ 04/20/24 12:17:49.839
  Apr 20 12:17:49.839: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-9349 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 12:17:49.839: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  Apr 20 12:17:49.840: INFO: ExecWithOptions: Clientset creation
  Apr 20 12:17:49.840: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-9349/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Apr 20 12:17:49.898: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 04/20/24 12:17:49.904
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 04/20/24 12:17:49.908
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 04/20/24 12:17:49.917
  Apr 20 12:17:49.920: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-9349" for this suite. @ 04/20/24 12:17:49.923
• [4.151 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 04/20/24 12:17:49.931
  Apr 20 12:17:49.931: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename projected @ 04/20/24 12:17:49.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:17:49.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:17:49.951
  STEP: Creating configMap with name configmap-projected-all-test-volume-2849b289-5053-47a5-92c7-ed58817dcc26 @ 04/20/24 12:17:49.954
  STEP: Creating secret with name secret-projected-all-test-volume-d199a50b-2c45-42c0-89e8-5212a9a01245 @ 04/20/24 12:17:49.958
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 04/20/24 12:17:49.962
  STEP: Saw pod success @ 04/20/24 12:17:53.982
  Apr 20 12:17:53.985: INFO: Trying to get logs from node ip-172-31-81-0 pod projected-volume-afd7c599-6d89-4e36-bef4-f5f0b905b3da container projected-all-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 12:17:53.991
  Apr 20 12:17:54.008: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7373" for this suite. @ 04/20/24 12:17:54.011
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1538
  STEP: Creating a kubernetes client @ 04/20/24 12:17:54.017
  Apr 20 12:17:54.017: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 12:17:54.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:17:54.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:17:54.038
  STEP: creating Agnhost RC @ 04/20/24 12:17:54.041
  Apr 20 12:17:54.041: INFO: namespace kubectl-1217
  Apr 20 12:17:54.041: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-1217 create -f -'
  Apr 20 12:17:54.124: INFO: stderr: ""
  Apr 20 12:17:54.124: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/20/24 12:17:54.124
  Apr 20 12:17:55.128: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 20 12:17:55.128: INFO: Found 1 / 1
  Apr 20 12:17:55.128: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Apr 20 12:17:55.131: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 20 12:17:55.131: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Apr 20 12:17:55.131: INFO: wait on agnhost-primary startup in kubectl-1217 
  Apr 20 12:17:55.131: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-1217 logs agnhost-primary-zj8m7 agnhost-primary'
  Apr 20 12:17:55.193: INFO: stderr: ""
  Apr 20 12:17:55.193: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 04/20/24 12:17:55.193
  Apr 20 12:17:55.193: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-1217 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Apr 20 12:17:55.274: INFO: stderr: ""
  Apr 20 12:17:55.274: INFO: stdout: "service/rm2 exposed\n"
  Apr 20 12:17:55.278: INFO: Service rm2 in namespace kubectl-1217 found.
  STEP: exposing service @ 04/20/24 12:17:57.286
  Apr 20 12:17:57.286: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-1217 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Apr 20 12:17:57.347: INFO: stderr: ""
  Apr 20 12:17:57.347: INFO: stdout: "service/rm3 exposed\n"
  Apr 20 12:17:57.355: INFO: Service rm3 in namespace kubectl-1217 found.
  Apr 20 12:17:59.364: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1217" for this suite. @ 04/20/24 12:17:59.367
• [5.357 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 04/20/24 12:17:59.375
  Apr 20 12:17:59.375: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 12:17:59.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:17:59.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:17:59.394
  STEP: Counting existing ResourceQuota @ 04/20/24 12:17:59.397
  STEP: Creating a ResourceQuota @ 04/20/24 12:18:04.403
  STEP: Ensuring resource quota status is calculated @ 04/20/24 12:18:04.411
  STEP: Creating a Pod that fits quota @ 04/20/24 12:18:06.416
  STEP: Ensuring ResourceQuota status captures the pod usage @ 04/20/24 12:18:06.431
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 04/20/24 12:18:08.437
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 04/20/24 12:18:08.439
  STEP: Ensuring a pod cannot update its resource requirements @ 04/20/24 12:18:08.441
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 04/20/24 12:18:08.445
  STEP: Deleting the pod @ 04/20/24 12:18:10.45
  STEP: Ensuring resource quota status released the pod usage @ 04/20/24 12:18:10.461
  Apr 20 12:18:12.466: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2793" for this suite. @ 04/20/24 12:18:12.472
• [13.103 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 04/20/24 12:18:12.478
  Apr 20 12:18:12.478: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename projected @ 04/20/24 12:18:12.479
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:18:12.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:18:12.499
  STEP: Creating secret with name s-test-opt-del-d0f7a005-0fc9-4d9a-b224-e7abbe23dea7 @ 04/20/24 12:18:12.506
  STEP: Creating secret with name s-test-opt-upd-561c3fe2-9d39-4d2f-8d6e-e576de303a91 @ 04/20/24 12:18:12.51
  STEP: Creating the pod @ 04/20/24 12:18:12.514
  STEP: Deleting secret s-test-opt-del-d0f7a005-0fc9-4d9a-b224-e7abbe23dea7 @ 04/20/24 12:18:14.555
  STEP: Updating secret s-test-opt-upd-561c3fe2-9d39-4d2f-8d6e-e576de303a91 @ 04/20/24 12:18:14.562
  STEP: Creating secret with name s-test-opt-create-63fa006b-620e-457a-867f-c1d1d3c46fd3 @ 04/20/24 12:18:14.567
  STEP: waiting to observe update in volume @ 04/20/24 12:18:14.571
  Apr 20 12:19:18.872: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3293" for this suite. @ 04/20/24 12:19:18.875
• [66.403 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 04/20/24 12:19:18.881
  Apr 20 12:19:18.881: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename events @ 04/20/24 12:19:18.882
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:19:18.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:19:18.903
  STEP: Create set of events @ 04/20/24 12:19:18.906
  STEP: get a list of Events with a label in the current namespace @ 04/20/24 12:19:18.922
  STEP: delete a list of events @ 04/20/24 12:19:18.925
  Apr 20 12:19:18.925: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 04/20/24 12:19:18.943
  Apr 20 12:19:18.948: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7977" for this suite. @ 04/20/24 12:19:18.952
• [0.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 04/20/24 12:19:18.958
  Apr 20 12:19:18.958: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename replication-controller @ 04/20/24 12:19:18.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:19:18.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:19:18.977
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 04/20/24 12:19:18.98
  STEP: When a replication controller with a matching selector is created @ 04/20/24 12:19:21
  STEP: Then the orphan pod is adopted @ 04/20/24 12:19:21.005
  Apr 20 12:19:22.013: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3930" for this suite. @ 04/20/24 12:19:22.017
• [3.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 04/20/24 12:19:22.023
  Apr 20 12:19:22.023: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename replicaset @ 04/20/24 12:19:22.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:19:22.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:19:22.044
  STEP: Create a ReplicaSet @ 04/20/24 12:19:22.047
  STEP: Verify that the required pods have come up @ 04/20/24 12:19:22.054
  Apr 20 12:19:22.059: INFO: Pod name sample-pod: Found 0 pods out of 3
  Apr 20 12:19:27.063: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 04/20/24 12:19:27.063
  Apr 20 12:19:27.066: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 04/20/24 12:19:27.066
  STEP: DeleteCollection of the ReplicaSets @ 04/20/24 12:19:27.072
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 04/20/24 12:19:27.082
  Apr 20 12:19:27.087: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9582" for this suite. @ 04/20/24 12:19:27.099
• [5.097 seconds]
------------------------------
SSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:96
  STEP: Creating a kubernetes client @ 04/20/24 12:19:27.121
  Apr 20 12:19:27.121: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename secrets @ 04/20/24 12:19:27.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:19:27.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:19:27.145
  STEP: creating secret secrets-4705/secret-test-28a65854-fcd2-4d1e-a069-ef8dcd8d517a @ 04/20/24 12:19:27.154
  STEP: Creating a pod to test consume secrets @ 04/20/24 12:19:27.159
  STEP: Saw pod success @ 04/20/24 12:19:31.18
  Apr 20 12:19:31.183: INFO: Trying to get logs from node ip-172-31-41-198 pod pod-configmaps-eacb9904-1756-4a42-acb8-9c8f295f68ec container env-test: <nil>
  STEP: delete the pod @ 04/20/24 12:19:31.19
  Apr 20 12:19:31.207: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4705" for this suite. @ 04/20/24 12:19:31.21
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:153
  STEP: Creating a kubernetes client @ 04/20/24 12:19:31.215
  Apr 20 12:19:31.215: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/20/24 12:19:31.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:19:31.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:19:31.237
  STEP: create the container to handle the HTTPGet hook request. @ 04/20/24 12:19:31.242
  STEP: create the pod with lifecycle hook @ 04/20/24 12:19:33.264
  STEP: delete the pod with lifecycle hook @ 04/20/24 12:19:35.282
  STEP: check prestop hook @ 04/20/24 12:19:37.296
  Apr 20 12:19:37.307: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5156" for this suite. @ 04/20/24 12:19:37.311
• [6.104 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 04/20/24 12:19:37.319
  Apr 20 12:19:37.319: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename container-probe @ 04/20/24 12:19:37.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:19:37.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:19:37.338
  STEP: Creating pod liveness-9780fcef-fd41-42db-a0cf-94811747296b in namespace container-probe-4962 @ 04/20/24 12:19:37.341
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/20/24 12:19:39.355
  Apr 20 12:19:39.358: INFO: Initial restart count of pod liveness-9780fcef-fd41-42db-a0cf-94811747296b is 0
  Apr 20 12:19:39.362: INFO: Get pod liveness-9780fcef-fd41-42db-a0cf-94811747296b in namespace container-probe-4962
  Apr 20 12:19:41.366: INFO: Get pod liveness-9780fcef-fd41-42db-a0cf-94811747296b in namespace container-probe-4962
  Apr 20 12:19:43.371: INFO: Get pod liveness-9780fcef-fd41-42db-a0cf-94811747296b in namespace container-probe-4962
  Apr 20 12:19:45.376: INFO: Get pod liveness-9780fcef-fd41-42db-a0cf-94811747296b in namespace container-probe-4962
  Apr 20 12:19:47.381: INFO: Get pod liveness-9780fcef-fd41-42db-a0cf-94811747296b in namespace container-probe-4962
  Apr 20 12:19:49.387: INFO: Get pod liveness-9780fcef-fd41-42db-a0cf-94811747296b in namespace container-probe-4962
  Apr 20 12:19:51.392: INFO: Get pod liveness-9780fcef-fd41-42db-a0cf-94811747296b in namespace container-probe-4962
  Apr 20 12:19:53.396: INFO: Get pod liveness-9780fcef-fd41-42db-a0cf-94811747296b in namespace container-probe-4962
  Apr 20 12:19:55.401: INFO: Get pod liveness-9780fcef-fd41-42db-a0cf-94811747296b in namespace container-probe-4962
  Apr 20 12:19:57.406: INFO: Get pod liveness-9780fcef-fd41-42db-a0cf-94811747296b in namespace container-probe-4962
  Apr 20 12:19:59.411: INFO: Get pod liveness-9780fcef-fd41-42db-a0cf-94811747296b in namespace container-probe-4962
  Apr 20 12:19:59.411: INFO: Restart count of pod container-probe-4962/liveness-9780fcef-fd41-42db-a0cf-94811747296b is now 1 (20.052927042s elapsed)
  STEP: deleting the pod @ 04/20/24 12:19:59.411
  Apr 20 12:19:59.569: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4962" for this suite. @ 04/20/24 12:19:59.574
• [22.260 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 04/20/24 12:19:59.58
  Apr 20 12:19:59.580: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename csistoragecapacity @ 04/20/24 12:19:59.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:19:59.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:19:59.599
  STEP: getting /apis @ 04/20/24 12:19:59.602
  STEP: getting /apis/storage.k8s.io @ 04/20/24 12:19:59.605
  STEP: getting /apis/storage.k8s.io/v1 @ 04/20/24 12:19:59.606
  STEP: creating @ 04/20/24 12:19:59.607
  STEP: watching @ 04/20/24 12:19:59.622
  Apr 20 12:19:59.622: INFO: starting watch
  STEP: getting @ 04/20/24 12:19:59.628
  STEP: listing in namespace @ 04/20/24 12:19:59.631
  STEP: listing across namespaces @ 04/20/24 12:19:59.634
  STEP: patching @ 04/20/24 12:19:59.637
  STEP: updating @ 04/20/24 12:19:59.641
  Apr 20 12:19:59.646: INFO: waiting for watch events with expected annotations in namespace
  Apr 20 12:19:59.646: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 04/20/24 12:19:59.647
  STEP: deleting a collection @ 04/20/24 12:19:59.657
  Apr 20 12:19:59.673: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-7637" for this suite. @ 04/20/24 12:19:59.677
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 04/20/24 12:19:59.682
  Apr 20 12:19:59.682: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename webhook @ 04/20/24 12:19:59.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:19:59.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:19:59.702
  STEP: Setting up server cert @ 04/20/24 12:19:59.729
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 12:20:00.014
  STEP: Deploying the webhook pod @ 04/20/24 12:20:00.023
  STEP: Wait for the deployment to be ready @ 04/20/24 12:20:00.035
  Apr 20 12:20:00.043: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/20/24 12:20:02.055
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 12:20:02.064
  Apr 20 12:20:03.065: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 04/20/24 12:20:03.072
  STEP: create a configmap that should be updated by the webhook @ 04/20/24 12:20:03.086
  Apr 20 12:20:03.134: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8616" for this suite. @ 04/20/24 12:20:03.14
  STEP: Destroying namespace "webhook-markers-3157" for this suite. @ 04/20/24 12:20:03.146
• [3.470 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 04/20/24 12:20:03.152
  Apr 20 12:20:03.152: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename projected @ 04/20/24 12:20:03.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:20:03.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:20:03.169
  STEP: Creating configMap with name projected-configmap-test-volume-map-4b13ace5-a38e-414c-b5e1-1dbd87668174 @ 04/20/24 12:20:03.172
  STEP: Creating a pod to test consume configMaps @ 04/20/24 12:20:03.177
  STEP: Saw pod success @ 04/20/24 12:20:07.196
  Apr 20 12:20:07.200: INFO: Trying to get logs from node ip-172-31-41-198 pod pod-projected-configmaps-cbe75010-8d09-48c7-ab90-a7d71c499921 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 12:20:07.207
  Apr 20 12:20:07.222: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9391" for this suite. @ 04/20/24 12:20:07.225
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 04/20/24 12:20:07.231
  Apr 20 12:20:07.231: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename webhook @ 04/20/24 12:20:07.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:20:07.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:20:07.251
  STEP: Setting up server cert @ 04/20/24 12:20:07.276
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 12:20:07.441
  STEP: Deploying the webhook pod @ 04/20/24 12:20:07.446
  STEP: Wait for the deployment to be ready @ 04/20/24 12:20:07.461
  Apr 20 12:20:07.469: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/20/24 12:20:09.479
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 12:20:09.489
  Apr 20 12:20:10.490: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Apr 20 12:20:10.497: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4617-crds.webhook.example.com via the AdmissionRegistration API @ 04/20/24 12:20:11.011
  STEP: Creating a custom resource that should be mutated by the webhook @ 04/20/24 12:20:11.025
  Apr 20 12:20:13.628: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-106" for this suite. @ 04/20/24 12:20:13.632
  STEP: Destroying namespace "webhook-markers-4917" for this suite. @ 04/20/24 12:20:13.638
• [6.414 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 04/20/24 12:20:13.645
  Apr 20 12:20:13.645: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename runtimeclass @ 04/20/24 12:20:13.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:20:13.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:20:13.666
  STEP: Deleting RuntimeClass runtimeclass-5123-delete-me @ 04/20/24 12:20:13.672
  STEP: Waiting for the RuntimeClass to disappear @ 04/20/24 12:20:13.677
  Apr 20 12:20:13.686: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5123" for this suite. @ 04/20/24 12:20:13.689
• [0.048 seconds]
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 04/20/24 12:20:13.694
  Apr 20 12:20:13.694: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename deployment @ 04/20/24 12:20:13.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:20:13.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:20:13.712
  Apr 20 12:20:13.723: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  Apr 20 12:20:18.727: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/20/24 12:20:18.727
  Apr 20 12:20:18.727: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 04/20/24 12:20:18.736
  Apr 20 12:20:18.744: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8253",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c522a11a-157b-4ff1-9daa-7380960724b0",
      ResourceVersion: (string) (len=4) "7106",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849212418,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212418,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 20 12:20:18.750: INFO: New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  Apr 20 12:20:18.750: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Apr 20 12:20:18.751: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8253",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4fa19a3d-736e-4b08-8460-7fb84042e790",
      ResourceVersion: (string) (len=4) "7107",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849212413,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "c522a11a-157b-4ff1-9daa-7380960724b0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212413,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212415,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212418,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 63 35 32 32 61 31 31  |"uid\":\"c522a11|
              00000040  61 2d 31 35 37 62 2d 34  66 66 31 2d 39 64 61 61  |a-157b-4ff1-9daa|
              00000050  2d 37 33 38 30 39 36 30  37 32 34 62 30 5c 22 7d  |-7380960724b0\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 20 12:20:18.755: INFO: Pod "test-cleanup-controller-tt8c8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-tt8c8",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-8253",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a6768333-5890-4a10-846e-d073a00fbdee",
      ResourceVersion: (string) (len=4) "7088",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849212413,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "4fa19a3d-736e-4b08-8460-7fb84042e790",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212413,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  34 66 61 31 39 61 33 64  |uid\":\"4fa19a3d|
              00000080  2d 37 33 36 65 2d 34 62  30 38 2d 38 34 36 30 2d  |-736e-4b08-8460-|
              00000090  37 66 62 38 34 30 34 32  65 37 39 30 5c 22 7d 22  |7fb84042e790\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212415,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 31  33 2e 32 31 37 5c 22 7d  |2.168.213.217\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f5gdb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f5gdb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-41-198",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212415,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212413,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212415,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212415,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849212413,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.41.198",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.41.198"
        }
      },
      PodIP: (string) (len=15) "192.168.213.217",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.213.217"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849212413,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849212414,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://dda61200b0005ebbbcc2f10d2fd18873d76a4b5e93fc1a7d3673fda3480d3584",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 12:20:18.756: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8253" for this suite. @ 04/20/24 12:20:18.76
• [5.080 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2236
  STEP: Creating a kubernetes client @ 04/20/24 12:20:18.774
  Apr 20 12:20:18.774: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename services @ 04/20/24 12:20:18.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:20:18.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:20:18.808
  STEP: creating service in namespace services-3321 @ 04/20/24 12:20:18.811
  STEP: creating service affinity-nodeport-transition in namespace services-3321 @ 04/20/24 12:20:18.811
  STEP: creating replication controller affinity-nodeport-transition in namespace services-3321 @ 04/20/24 12:20:18.826
  I0420 12:20:18.833282      20 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-3321, replica count: 3
  I0420 12:20:21.884621      20 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 20 12:20:21.895: INFO: Creating new exec pod
  Apr 20 12:20:24.939: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-3321 exec execpod-affinity7zd9p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Apr 20 12:20:25.031: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Apr 20 12:20:25.031: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 12:20:25.031: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-3321 exec execpod-affinity7zd9p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.154 80'
  Apr 20 12:20:25.116: INFO: stderr: "+ nc -v -t -w 2 10.152.183.154 80\n+ echo hostName\nConnection to 10.152.183.154 80 port [tcp/http] succeeded!\n"
  Apr 20 12:20:25.116: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 12:20:25.116: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-3321 exec execpod-affinity7zd9p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.41.198 32647'
  Apr 20 12:20:25.207: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.41.198 32647\nConnection to 172.31.41.198 32647 port [tcp/*] succeeded!\n"
  Apr 20 12:20:25.207: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 12:20:25.207: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-3321 exec execpod-affinity7zd9p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.27.26 32647'
  Apr 20 12:20:25.310: INFO: stderr: "+ nc -v -t -w 2 172.31.27.26 32647\n+ echo hostName\nConnection to 172.31.27.26 32647 port [tcp/*] succeeded!\n"
  Apr 20 12:20:25.310: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 12:20:25.320: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-3321 exec execpod-affinity7zd9p -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.27.26:32647/ ; done'
  Apr 20 12:20:25.487: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:32647/\n"
  Apr 20 12:20:25.487: INFO: stdout: "\naffinity-nodeport-transition-hgrf2\naffinity-nodeport-transition-sksbj\naffinity-nodeport-transition-hgrf2\naffinity-nodeport-transition-sksbj\naffinity-nodeport-transition-pkfqq\naffinity-nodeport-transition-sksbj\naffinity-nodeport-transition-pkfqq\naffinity-nodeport-transition-sksbj\naffinity-nodeport-transition-sksbj\naffinity-nodeport-transition-hgrf2\naffinity-nodeport-transition-sksbj\naffinity-nodeport-transition-pkfqq\naffinity-nodeport-transition-hgrf2\naffinity-nodeport-transition-sksbj\naffinity-nodeport-transition-hgrf2\naffinity-nodeport-transition-pkfqq"
  Apr 20 12:20:25.487: INFO: Received response from host: affinity-nodeport-transition-hgrf2
  Apr 20 12:20:25.487: INFO: Received response from host: affinity-nodeport-transition-sksbj
  Apr 20 12:20:25.487: INFO: Received response from host: affinity-nodeport-transition-hgrf2
  Apr 20 12:20:25.487: INFO: Received response from host: affinity-nodeport-transition-sksbj
  Apr 20 12:20:25.487: INFO: Received response from host: affinity-nodeport-transition-pkfqq
  Apr 20 12:20:25.487: INFO: Received response from host: affinity-nodeport-transition-sksbj
  Apr 20 12:20:25.487: INFO: Received response from host: affinity-nodeport-transition-pkfqq
  Apr 20 12:20:25.487: INFO: Received response from host: affinity-nodeport-transition-sksbj
  Apr 20 12:20:25.487: INFO: Received response from host: affinity-nodeport-transition-sksbj
  Apr 20 12:20:25.487: INFO: Received response from host: affinity-nodeport-transition-hgrf2
  Apr 20 12:20:25.487: INFO: Received response from host: affinity-nodeport-transition-sksbj
  Apr 20 12:20:25.487: INFO: Received response from host: affinity-nodeport-transition-pkfqq
  Apr 20 12:20:25.487: INFO: Received response from host: affinity-nodeport-transition-hgrf2
  Apr 20 12:20:25.487: INFO: Received response from host: affinity-nodeport-transition-sksbj
  Apr 20 12:20:25.487: INFO: Received response from host: affinity-nodeport-transition-hgrf2
  Apr 20 12:20:25.487: INFO: Received response from host: affinity-nodeport-transition-pkfqq
  Apr 20 12:20:25.496: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-3321 exec execpod-affinity7zd9p -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.27.26:32647/ ; done'
  Apr 20 12:20:25.679: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:32647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:32647/\n"
  Apr 20 12:20:25.679: INFO: stdout: "\naffinity-nodeport-transition-pkfqq\naffinity-nodeport-transition-pkfqq\naffinity-nodeport-transition-pkfqq\naffinity-nodeport-transition-pkfqq\naffinity-nodeport-transition-pkfqq\naffinity-nodeport-transition-pkfqq\naffinity-nodeport-transition-pkfqq\naffinity-nodeport-transition-pkfqq\naffinity-nodeport-transition-pkfqq\naffinity-nodeport-transition-pkfqq\naffinity-nodeport-transition-pkfqq\naffinity-nodeport-transition-pkfqq\naffinity-nodeport-transition-pkfqq\naffinity-nodeport-transition-pkfqq\naffinity-nodeport-transition-pkfqq\naffinity-nodeport-transition-pkfqq"
  Apr 20 12:20:25.679: INFO: Received response from host: affinity-nodeport-transition-pkfqq
  Apr 20 12:20:25.679: INFO: Received response from host: affinity-nodeport-transition-pkfqq
  Apr 20 12:20:25.679: INFO: Received response from host: affinity-nodeport-transition-pkfqq
  Apr 20 12:20:25.679: INFO: Received response from host: affinity-nodeport-transition-pkfqq
  Apr 20 12:20:25.679: INFO: Received response from host: affinity-nodeport-transition-pkfqq
  Apr 20 12:20:25.679: INFO: Received response from host: affinity-nodeport-transition-pkfqq
  Apr 20 12:20:25.679: INFO: Received response from host: affinity-nodeport-transition-pkfqq
  Apr 20 12:20:25.679: INFO: Received response from host: affinity-nodeport-transition-pkfqq
  Apr 20 12:20:25.679: INFO: Received response from host: affinity-nodeport-transition-pkfqq
  Apr 20 12:20:25.679: INFO: Received response from host: affinity-nodeport-transition-pkfqq
  Apr 20 12:20:25.679: INFO: Received response from host: affinity-nodeport-transition-pkfqq
  Apr 20 12:20:25.679: INFO: Received response from host: affinity-nodeport-transition-pkfqq
  Apr 20 12:20:25.679: INFO: Received response from host: affinity-nodeport-transition-pkfqq
  Apr 20 12:20:25.679: INFO: Received response from host: affinity-nodeport-transition-pkfqq
  Apr 20 12:20:25.679: INFO: Received response from host: affinity-nodeport-transition-pkfqq
  Apr 20 12:20:25.679: INFO: Received response from host: affinity-nodeport-transition-pkfqq
  Apr 20 12:20:25.679: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-3321, will wait for the garbage collector to delete the pods @ 04/20/24 12:20:25.694
  Apr 20 12:20:25.755: INFO: Deleting ReplicationController affinity-nodeport-transition took: 5.839895ms
  Apr 20 12:20:25.855: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.530819ms
  Apr 20 12:20:28.477: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3321" for this suite. @ 04/20/24 12:20:28.481
• [9.714 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 04/20/24 12:20:28.488
  Apr 20 12:20:28.488: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename init-container @ 04/20/24 12:20:28.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:20:28.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:20:28.508
  STEP: creating the pod @ 04/20/24 12:20:28.511
  Apr 20 12:20:28.511: INFO: PodSpec: initContainers in spec.initContainers
  Apr 20 12:20:33.292: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4524" for this suite. @ 04/20/24 12:20:33.296
• [4.813 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 04/20/24 12:20:33.302
  Apr 20 12:20:33.302: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename container-probe @ 04/20/24 12:20:33.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:20:33.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:20:33.319
  STEP: Creating pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988 @ 04/20/24 12:20:33.322
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/20/24 12:20:35.339
  Apr 20 12:20:35.342: INFO: Initial restart count of pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f is 0
  Apr 20 12:20:35.345: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:20:37.350: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:20:39.354: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:20:41.360: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:20:43.364: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:20:45.369: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:20:47.373: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:20:49.379: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:20:51.383: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:20:53.389: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:20:55.394: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:20:57.399: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:20:59.403: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:21:01.407: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:21:03.413: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:21:05.417: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:21:07.422: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:21:09.429: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:21:11.433: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:21:13.438: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:21:15.443: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:21:17.447: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:21:19.453: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:21:21.457: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:21:23.462: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:21:25.467: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:21:27.471: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:21:29.476: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:21:31.481: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:21:33.486: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:21:35.491: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:21:37.494: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:21:39.500: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:21:41.504: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:21:43.509: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:21:45.513: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:21:47.518: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:21:49.524: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:21:51.528: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:21:53.534: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:21:55.539: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:21:57.543: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:21:59.548: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:22:01.553: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:22:03.559: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:22:05.563: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:22:07.567: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:22:09.573: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:22:11.578: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:22:13.583: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:22:15.587: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:22:17.592: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:22:19.598: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:22:21.603: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:22:23.607: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:22:25.612: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:22:27.616: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:22:29.620: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:22:31.626: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:22:33.630: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:22:35.634: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:22:37.639: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:22:39.643: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:22:41.648: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:22:43.651: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:22:45.656: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:22:47.661: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:22:49.665: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:22:51.670: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:22:53.675: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:22:55.680: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:22:57.685: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:22:59.689: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:23:01.695: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:23:03.700: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:23:05.705: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:23:07.710: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:23:09.714: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:23:11.718: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:23:13.723: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:23:15.727: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:23:17.732: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:23:19.737: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:23:21.742: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:23:23.747: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:23:25.752: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:23:27.756: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:23:29.762: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:23:31.767: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:23:33.772: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:23:35.777: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:23:37.782: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:23:39.788: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:23:41.793: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:23:43.797: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:23:45.804: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:23:47.809: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:23:49.815: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:23:51.822: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:23:53.827: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:23:55.831: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:23:57.836: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:23:59.841: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:24:01.845: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:24:03.851: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:24:05.855: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:24:07.860: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:24:09.866: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:24:11.871: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:24:13.876: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:24:15.881: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:24:17.887: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:24:19.892: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:24:21.898: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:24:23.903: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:24:25.908: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:24:27.913: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:24:29.918: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:24:31.923: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  Apr 20 12:24:33.928: INFO: Get pod busybox-ea42e13c-bf49-452e-a5e1-4372094c982f in namespace container-probe-4988
  STEP: deleting the pod @ 04/20/24 12:24:35.928
  Apr 20 12:24:35.943: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4988" for this suite. @ 04/20/24 12:24:35.947
• [242.651 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 04/20/24 12:24:35.953
  Apr 20 12:24:35.953: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename podtemplate @ 04/20/24 12:24:35.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:24:35.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:24:35.973
  Apr 20 12:24:36.003: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6453" for this suite. @ 04/20/24 12:24:36.006
• [0.058 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 04/20/24 12:24:36.012
  Apr 20 12:24:36.012: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename kubelet-test @ 04/20/24 12:24:36.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:24:36.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:24:36.033
  STEP: Waiting for pod completion @ 04/20/24 12:24:36.045
  Apr 20 12:24:40.074: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3938" for this suite. @ 04/20/24 12:24:40.077
• [4.072 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 04/20/24 12:24:40.084
  Apr 20 12:24:40.084: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename gc @ 04/20/24 12:24:40.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:24:40.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:24:40.103
  STEP: create the rc @ 04/20/24 12:24:40.109
  W0420 12:24:40.114626      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 04/20/24 12:24:46.118
  STEP: wait for the rc to be deleted @ 04/20/24 12:24:46.124
  Apr 20 12:24:47.135: INFO: 80 pods remaining
  Apr 20 12:24:47.135: INFO: 80 pods has nil DeletionTimestamp
  Apr 20 12:24:47.135: INFO: 
  Apr 20 12:24:48.138: INFO: 71 pods remaining
  Apr 20 12:24:48.138: INFO: 71 pods has nil DeletionTimestamp
  Apr 20 12:24:48.138: INFO: 
  Apr 20 12:24:49.134: INFO: 60 pods remaining
  Apr 20 12:24:49.134: INFO: 60 pods has nil DeletionTimestamp
  Apr 20 12:24:49.134: INFO: 
  Apr 20 12:24:50.134: INFO: 40 pods remaining
  Apr 20 12:24:50.134: INFO: 40 pods has nil DeletionTimestamp
  Apr 20 12:24:50.134: INFO: 
  Apr 20 12:24:51.132: INFO: 31 pods remaining
  Apr 20 12:24:51.132: INFO: 31 pods has nil DeletionTimestamp
  Apr 20 12:24:51.132: INFO: 
  Apr 20 12:24:52.131: INFO: 20 pods remaining
  Apr 20 12:24:52.131: INFO: 20 pods has nil DeletionTimestamp
  Apr 20 12:24:52.131: INFO: 
  STEP: Gathering metrics @ 04/20/24 12:24:53.135
  W0420 12:24:53.145368      20 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Apr 20 12:24:53.145: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 20 12:24:53.146: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9904" for this suite. @ 04/20/24 12:24:53.151
• [13.075 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 04/20/24 12:24:53.159
  Apr 20 12:24:53.159: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename subpath @ 04/20/24 12:24:53.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:24:53.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:24:53.182
  STEP: Setting up data @ 04/20/24 12:24:53.184
  STEP: Creating pod pod-subpath-test-projected-7crv @ 04/20/24 12:24:53.194
  STEP: Creating a pod to test atomic-volume-subpath @ 04/20/24 12:24:53.194
  STEP: Saw pod success @ 04/20/24 12:25:17.262
  Apr 20 12:25:17.266: INFO: Trying to get logs from node ip-172-31-41-198 pod pod-subpath-test-projected-7crv container test-container-subpath-projected-7crv: <nil>
  STEP: delete the pod @ 04/20/24 12:25:17.273
  STEP: Deleting pod pod-subpath-test-projected-7crv @ 04/20/24 12:25:17.287
  Apr 20 12:25:17.287: INFO: Deleting pod "pod-subpath-test-projected-7crv" in namespace "subpath-8971"
  Apr 20 12:25:17.290: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8971" for this suite. @ 04/20/24 12:25:17.293
• [24.140 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 04/20/24 12:25:17.299
  Apr 20 12:25:17.299: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename configmap @ 04/20/24 12:25:17.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:25:17.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:25:17.32
  STEP: Creating configMap with name configmap-test-volume-ce5f4725-2d46-40c3-a9da-f2c57bbdaafe @ 04/20/24 12:25:17.322
  STEP: Creating a pod to test consume configMaps @ 04/20/24 12:25:17.328
  STEP: Saw pod success @ 04/20/24 12:25:21.347
  Apr 20 12:25:21.350: INFO: Trying to get logs from node ip-172-31-41-198 pod pod-configmaps-8d6743dd-821d-4f48-9c33-02e7066e8635 container configmap-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 12:25:21.357
  Apr 20 12:25:21.374: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1423" for this suite. @ 04/20/24 12:25:21.377
• [4.084 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 04/20/24 12:25:21.383
  Apr 20 12:25:21.383: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename configmap @ 04/20/24 12:25:21.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:25:21.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:25:21.406
  STEP: Creating configMap with name configmap-test-upd-9f62f52b-f119-4afd-8ad3-43f924728ebc @ 04/20/24 12:25:21.411
  STEP: Creating the pod @ 04/20/24 12:25:21.419
  STEP: Updating configmap configmap-test-upd-9f62f52b-f119-4afd-8ad3-43f924728ebc @ 04/20/24 12:25:23.446
  STEP: waiting to observe update in volume @ 04/20/24 12:25:23.452
  Apr 20 12:26:41.799: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2035" for this suite. @ 04/20/24 12:26:41.802
• [80.425 seconds]
------------------------------
S
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2177
  STEP: Creating a kubernetes client @ 04/20/24 12:26:41.809
  Apr 20 12:26:41.809: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename services @ 04/20/24 12:26:41.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:26:41.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:26:41.83
  STEP: creating service in namespace services-4667 @ 04/20/24 12:26:41.833
  STEP: creating service affinity-clusterip in namespace services-4667 @ 04/20/24 12:26:41.833
  STEP: creating replication controller affinity-clusterip in namespace services-4667 @ 04/20/24 12:26:41.842
  I0420 12:26:41.847292      20 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-4667, replica count: 3
  I0420 12:26:44.898053      20 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 20 12:26:44.906: INFO: Creating new exec pod
  Apr 20 12:26:47.924: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-4667 exec execpod-affinitynxpzb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Apr 20 12:26:48.022: INFO: stderr: "+ nc -v -t -w 2 affinity-clusterip 80\n+ echo hostName\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Apr 20 12:26:48.022: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 12:26:48.022: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-4667 exec execpod-affinitynxpzb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.61 80'
  Apr 20 12:26:48.117: INFO: stderr: "+ nc -v -t -w 2 10.152.183.61 80\n+ echo hostName\nConnection to 10.152.183.61 80 port [tcp/http] succeeded!\n"
  Apr 20 12:26:48.117: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 12:26:48.117: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-4667 exec execpod-affinitynxpzb -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.61:80/ ; done'
  Apr 20 12:26:48.257: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.61:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.61:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.61:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.61:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.61:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.61:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.61:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.61:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.61:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.61:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.61:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.61:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.61:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.61:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.61:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.61:80/\n"
  Apr 20 12:26:48.257: INFO: stdout: "\naffinity-clusterip-zrtjj\naffinity-clusterip-zrtjj\naffinity-clusterip-zrtjj\naffinity-clusterip-zrtjj\naffinity-clusterip-zrtjj\naffinity-clusterip-zrtjj\naffinity-clusterip-zrtjj\naffinity-clusterip-zrtjj\naffinity-clusterip-zrtjj\naffinity-clusterip-zrtjj\naffinity-clusterip-zrtjj\naffinity-clusterip-zrtjj\naffinity-clusterip-zrtjj\naffinity-clusterip-zrtjj\naffinity-clusterip-zrtjj\naffinity-clusterip-zrtjj"
  Apr 20 12:26:48.257: INFO: Received response from host: affinity-clusterip-zrtjj
  Apr 20 12:26:48.257: INFO: Received response from host: affinity-clusterip-zrtjj
  Apr 20 12:26:48.257: INFO: Received response from host: affinity-clusterip-zrtjj
  Apr 20 12:26:48.257: INFO: Received response from host: affinity-clusterip-zrtjj
  Apr 20 12:26:48.257: INFO: Received response from host: affinity-clusterip-zrtjj
  Apr 20 12:26:48.257: INFO: Received response from host: affinity-clusterip-zrtjj
  Apr 20 12:26:48.257: INFO: Received response from host: affinity-clusterip-zrtjj
  Apr 20 12:26:48.257: INFO: Received response from host: affinity-clusterip-zrtjj
  Apr 20 12:26:48.257: INFO: Received response from host: affinity-clusterip-zrtjj
  Apr 20 12:26:48.257: INFO: Received response from host: affinity-clusterip-zrtjj
  Apr 20 12:26:48.257: INFO: Received response from host: affinity-clusterip-zrtjj
  Apr 20 12:26:48.257: INFO: Received response from host: affinity-clusterip-zrtjj
  Apr 20 12:26:48.257: INFO: Received response from host: affinity-clusterip-zrtjj
  Apr 20 12:26:48.257: INFO: Received response from host: affinity-clusterip-zrtjj
  Apr 20 12:26:48.257: INFO: Received response from host: affinity-clusterip-zrtjj
  Apr 20 12:26:48.257: INFO: Received response from host: affinity-clusterip-zrtjj
  Apr 20 12:26:48.257: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-4667, will wait for the garbage collector to delete the pods @ 04/20/24 12:26:48.275
  Apr 20 12:26:48.335: INFO: Deleting ReplicationController affinity-clusterip took: 6.528926ms
  Apr 20 12:26:48.439: INFO: Terminating ReplicationController affinity-clusterip pods took: 104.032109ms
  Apr 20 12:26:51.554: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4667" for this suite. @ 04/20/24 12:26:51.56
• [9.757 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 04/20/24 12:26:51.565
  Apr 20 12:26:51.565: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename projected @ 04/20/24 12:26:51.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:26:51.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:26:51.586
  STEP: Creating the pod @ 04/20/24 12:26:51.589
  Apr 20 12:26:54.125: INFO: Successfully updated pod "labelsupdate9c6204a4-1869-4708-b0e9-6a81193358bc"
  Apr 20 12:26:58.149: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-156" for this suite. @ 04/20/24 12:26:58.152
• [6.592 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:139
  STEP: Creating a kubernetes client @ 04/20/24 12:26:58.158
  Apr 20 12:26:58.158: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename configmap @ 04/20/24 12:26:58.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:26:58.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:26:58.177
  STEP: Creating configMap that has name configmap-test-emptyKey-36f3efaa-0934-4d6b-8d41-96b86440d637 @ 04/20/24 12:26:58.18
  Apr 20 12:26:58.182: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5937" for this suite. @ 04/20/24 12:26:58.185
• [0.034 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 04/20/24 12:26:58.192
  Apr 20 12:26:58.192: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 12:26:58.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:26:58.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:26:58.212
  STEP: Counting existing ResourceQuota @ 04/20/24 12:26:58.214
  STEP: Creating a ResourceQuota @ 04/20/24 12:27:03.219
  STEP: Ensuring resource quota status is calculated @ 04/20/24 12:27:03.224
  STEP: Creating a Service @ 04/20/24 12:27:05.229
  STEP: Creating a NodePort Service @ 04/20/24 12:27:05.245
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 04/20/24 12:27:05.265
  STEP: Ensuring resource quota status captures service creation @ 04/20/24 12:27:05.283
  STEP: Deleting Services @ 04/20/24 12:27:07.288
  STEP: Ensuring resource quota status released usage @ 04/20/24 12:27:07.32
  Apr 20 12:27:09.324: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5180" for this suite. @ 04/20/24 12:27:09.328
• [11.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 04/20/24 12:27:09.336
  Apr 20 12:27:09.336: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename pods @ 04/20/24 12:27:09.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:27:09.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:27:09.356
  Apr 20 12:27:09.358: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: creating the pod @ 04/20/24 12:27:09.359
  STEP: submitting the pod to kubernetes @ 04/20/24 12:27:09.359
  Apr 20 12:27:11.432: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9936" for this suite. @ 04/20/24 12:27:11.436
• [2.107 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 04/20/24 12:27:11.443
  Apr 20 12:27:11.443: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 12:27:11.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:27:11.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:27:11.463
  STEP: Creating a pod to test downward api env vars @ 04/20/24 12:27:11.466
  STEP: Saw pod success @ 04/20/24 12:27:15.484
  Apr 20 12:27:15.488: INFO: Trying to get logs from node ip-172-31-81-0 pod downward-api-bddb0eb3-d7ca-45da-b5b4-5e182ab7f1d4 container dapi-container: <nil>
  STEP: delete the pod @ 04/20/24 12:27:15.509
  Apr 20 12:27:15.526: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2980" for this suite. @ 04/20/24 12:27:15.529
• [4.094 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:887
  STEP: Creating a kubernetes client @ 04/20/24 12:27:15.536
  Apr 20 12:27:15.536: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 12:27:15.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:27:15.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:27:15.556
  STEP: validating api versions @ 04/20/24 12:27:15.558
  Apr 20 12:27:15.558: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-8547 api-versions'
  Apr 20 12:27:15.598: INFO: stderr: ""
  Apr 20 12:27:15.598: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Apr 20 12:27:15.598: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8547" for this suite. @ 04/20/24 12:27:15.602
• [0.071 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 04/20/24 12:27:15.608
  Apr 20 12:27:15.608: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename pods @ 04/20/24 12:27:15.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:27:15.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:27:15.626
  Apr 20 12:27:15.629: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: creating the pod @ 04/20/24 12:27:15.63
  STEP: submitting the pod to kubernetes @ 04/20/24 12:27:15.63
  Apr 20 12:27:17.657: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3344" for this suite. @ 04/20/24 12:27:17.661
• [2.059 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 04/20/24 12:27:17.667
  Apr 20 12:27:17.667: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/20/24 12:27:17.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:27:17.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:27:17.688
  Apr 20 12:27:17.690: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  Apr 20 12:27:20.770: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5149" for this suite. @ 04/20/24 12:27:20.775
• [3.114 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 04/20/24 12:27:20.78
  Apr 20 12:27:20.780: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 12:27:20.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:27:20.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:27:20.798
  STEP: Counting existing ResourceQuota @ 04/20/24 12:27:20.801
  STEP: Creating a ResourceQuota @ 04/20/24 12:27:25.807
  STEP: Ensuring resource quota status is calculated @ 04/20/24 12:27:25.812
  STEP: Creating a ReplicationController @ 04/20/24 12:27:27.816
  STEP: Ensuring resource quota status captures replication controller creation @ 04/20/24 12:27:27.829
  STEP: Deleting a ReplicationController @ 04/20/24 12:27:29.833
  STEP: Ensuring resource quota status released usage @ 04/20/24 12:27:29.839
  Apr 20 12:27:31.843: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9757" for this suite. @ 04/20/24 12:27:31.846
• [11.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 04/20/24 12:27:31.858
  Apr 20 12:27:31.858: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename subpath @ 04/20/24 12:27:31.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:27:31.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:27:31.88
  STEP: Setting up data @ 04/20/24 12:27:31.883
  STEP: Creating pod pod-subpath-test-downwardapi-v2z8 @ 04/20/24 12:27:31.893
  STEP: Creating a pod to test atomic-volume-subpath @ 04/20/24 12:27:31.893
  STEP: Saw pod success @ 04/20/24 12:27:53.96
  Apr 20 12:27:53.965: INFO: Trying to get logs from node ip-172-31-41-198 pod pod-subpath-test-downwardapi-v2z8 container test-container-subpath-downwardapi-v2z8: <nil>
  STEP: delete the pod @ 04/20/24 12:27:53.972
  STEP: Deleting pod pod-subpath-test-downwardapi-v2z8 @ 04/20/24 12:27:53.987
  Apr 20 12:27:53.987: INFO: Deleting pod "pod-subpath-test-downwardapi-v2z8" in namespace "subpath-5741"
  Apr 20 12:27:53.990: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5741" for this suite. @ 04/20/24 12:27:53.993
• [22.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 04/20/24 12:27:54
  Apr 20 12:27:54.000: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename field-validation @ 04/20/24 12:27:54
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:27:54.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:27:54.021
  Apr 20 12:27:54.023: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  W0420 12:27:56.558695      20 warnings.go:70] unknown field "alpha"
  W0420 12:27:56.558713      20 warnings.go:70] unknown field "beta"
  W0420 12:27:56.558716      20 warnings.go:70] unknown field "delta"
  W0420 12:27:56.558718      20 warnings.go:70] unknown field "epsilon"
  W0420 12:27:56.558721      20 warnings.go:70] unknown field "gamma"
  Apr 20 12:27:57.097: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9947" for this suite. @ 04/20/24 12:27:57.1
• [3.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 04/20/24 12:27:57.108
  Apr 20 12:27:57.108: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename endpointslice @ 04/20/24 12:27:57.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:27:57.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:27:57.13
  STEP: getting /apis @ 04/20/24 12:27:57.132
  STEP: getting /apis/discovery.k8s.io @ 04/20/24 12:27:57.135
  STEP: getting /apis/discovery.k8s.iov1 @ 04/20/24 12:27:57.136
  STEP: creating @ 04/20/24 12:27:57.137
  STEP: getting @ 04/20/24 12:27:57.15
  STEP: listing @ 04/20/24 12:27:57.153
  STEP: watching @ 04/20/24 12:27:57.156
  Apr 20 12:27:57.156: INFO: starting watch
  STEP: cluster-wide listing @ 04/20/24 12:27:57.157
  STEP: cluster-wide watching @ 04/20/24 12:27:57.16
  Apr 20 12:27:57.160: INFO: starting watch
  STEP: patching @ 04/20/24 12:27:57.161
  STEP: updating @ 04/20/24 12:27:57.167
  Apr 20 12:27:57.175: INFO: waiting for watch events with expected annotations
  Apr 20 12:27:57.175: INFO: saw patched and updated annotations
  STEP: deleting @ 04/20/24 12:27:57.175
  STEP: deleting a collection @ 04/20/24 12:27:57.185
  Apr 20 12:27:57.200: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2690" for this suite. @ 04/20/24 12:27:57.204
• [0.101 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 04/20/24 12:27:57.21
  Apr 20 12:27:57.210: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename svcaccounts @ 04/20/24 12:27:57.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:27:57.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:27:57.23
  STEP: creating a ServiceAccount @ 04/20/24 12:27:57.233
  STEP: watching for the ServiceAccount to be added @ 04/20/24 12:27:57.241
  STEP: patching the ServiceAccount @ 04/20/24 12:27:57.242
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 04/20/24 12:27:57.247
  STEP: deleting the ServiceAccount @ 04/20/24 12:27:57.25
  Apr 20 12:27:57.264: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9802" for this suite. @ 04/20/24 12:27:57.267
• [0.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 04/20/24 12:27:57.275
  Apr 20 12:27:57.275: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename field-validation @ 04/20/24 12:27:57.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:27:57.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:27:57.295
  Apr 20 12:27:57.298: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  W0420 12:27:59.831218      20 warnings.go:70] unknown field "alpha"
  W0420 12:27:59.831235      20 warnings.go:70] unknown field "beta"
  W0420 12:27:59.831238      20 warnings.go:70] unknown field "delta"
  W0420 12:27:59.831241      20 warnings.go:70] unknown field "epsilon"
  W0420 12:27:59.831244      20 warnings.go:70] unknown field "gamma"
  Apr 20 12:28:00.370: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9239" for this suite. @ 04/20/24 12:28:00.374
• [3.104 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 04/20/24 12:28:00.38
  Apr 20 12:28:00.380: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename projected @ 04/20/24 12:28:00.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:28:00.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:28:00.398
  STEP: Creating configMap with name projected-configmap-test-volume-ab71301c-b7de-46f6-9bff-831bd33ed7ed @ 04/20/24 12:28:00.401
  STEP: Creating a pod to test consume configMaps @ 04/20/24 12:28:00.405
  STEP: Saw pod success @ 04/20/24 12:28:04.428
  Apr 20 12:28:04.430: INFO: Trying to get logs from node ip-172-31-41-198 pod pod-projected-configmaps-d7b84d58-8e97-43da-a30e-8ad52d801b37 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 12:28:04.437
  Apr 20 12:28:04.453: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7067" for this suite. @ 04/20/24 12:28:04.456
• [4.084 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 04/20/24 12:28:04.464
  Apr 20 12:28:04.464: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename dns @ 04/20/24 12:28:04.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:28:04.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:28:04.483
  STEP: Creating a test headless service @ 04/20/24 12:28:04.485
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9144.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-9144.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9144.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9144.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-9144.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-9144.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-9144.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-9144.svc.cluster.local;sleep 1; done
   @ 04/20/24 12:28:04.49
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9144.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-9144.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9144.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-9144.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-9144.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-9144.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-9144.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-9144.svc.cluster.local;sleep 1; done
   @ 04/20/24 12:28:04.49
  STEP: creating a pod to probe DNS @ 04/20/24 12:28:04.49
  STEP: submitting the pod to kubernetes @ 04/20/24 12:28:04.49
  STEP: retrieving the pod @ 04/20/24 12:28:10.517
  STEP: looking for the results for each expected name from probers @ 04/20/24 12:28:10.52
  Apr 20 12:28:10.541: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9144.svc.cluster.local from pod dns-9144/dns-test-4535d042-d8d5-4c6d-bfb0-d5392c19e380: the server could not find the requested resource (get pods dns-test-4535d042-d8d5-4c6d-bfb0-d5392c19e380)
  Apr 20 12:28:10.544: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9144.svc.cluster.local from pod dns-9144/dns-test-4535d042-d8d5-4c6d-bfb0-d5392c19e380: the server could not find the requested resource (get pods dns-test-4535d042-d8d5-4c6d-bfb0-d5392c19e380)
  Apr 20 12:28:10.548: INFO: Unable to read jessie_udp@dns-test-service-2.dns-9144.svc.cluster.local from pod dns-9144/dns-test-4535d042-d8d5-4c6d-bfb0-d5392c19e380: the server could not find the requested resource (get pods dns-test-4535d042-d8d5-4c6d-bfb0-d5392c19e380)
  Apr 20 12:28:10.552: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-9144.svc.cluster.local from pod dns-9144/dns-test-4535d042-d8d5-4c6d-bfb0-d5392c19e380: the server could not find the requested resource (get pods dns-test-4535d042-d8d5-4c6d-bfb0-d5392c19e380)
  Apr 20 12:28:10.552: INFO: Lookups using dns-9144/dns-test-4535d042-d8d5-4c6d-bfb0-d5392c19e380 failed for: [jessie_udp@dns-querier-2.dns-test-service-2.dns-9144.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9144.svc.cluster.local jessie_udp@dns-test-service-2.dns-9144.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9144.svc.cluster.local]

  Apr 20 12:28:10.558: INFO: Pod client logs for webserver: 
  Apr 20 12:28:10.565: INFO: Pod client logs for querier: 
  Apr 20 12:28:10.571: INFO: Pod client logs for jessie-querier: 
  Apr 20 12:28:15.556: INFO: DNS probes using dns-9144/dns-test-4535d042-d8d5-4c6d-bfb0-d5392c19e380 succeeded

  STEP: deleting the pod @ 04/20/24 12:28:15.556
  STEP: deleting the test headless service @ 04/20/24 12:28:15.571
  Apr 20 12:28:15.585: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9144" for this suite. @ 04/20/24 12:28:15.592
• [11.134 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 04/20/24 12:28:15.598
  Apr 20 12:28:15.598: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 12:28:15.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:28:15.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:28:15.617
  STEP: Creating resourceQuota "e2e-rq-status-9rwdz" @ 04/20/24 12:28:15.623
  Apr 20 12:28:15.629: INFO: Resource quota "e2e-rq-status-9rwdz" reports spec: hard cpu limit of 500m
  Apr 20 12:28:15.629: INFO: Resource quota "e2e-rq-status-9rwdz" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-9rwdz" /status @ 04/20/24 12:28:15.629
  STEP: Confirm /status for "e2e-rq-status-9rwdz" resourceQuota via watch @ 04/20/24 12:28:15.639
  Apr 20 12:28:15.641: INFO: observed resourceQuota "e2e-rq-status-9rwdz" in namespace "resourcequota-2885" with hard status: v1.ResourceList(nil)
  Apr 20 12:28:15.641: INFO: Found resourceQuota "e2e-rq-status-9rwdz" in namespace "resourcequota-2885" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Apr 20 12:28:15.641: INFO: ResourceQuota "e2e-rq-status-9rwdz" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 04/20/24 12:28:15.645
  Apr 20 12:28:15.650: INFO: Resource quota "e2e-rq-status-9rwdz" reports spec: hard cpu limit of 1
  Apr 20 12:28:15.650: INFO: Resource quota "e2e-rq-status-9rwdz" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-9rwdz" /status @ 04/20/24 12:28:15.65
  STEP: Confirm /status for "e2e-rq-status-9rwdz" resourceQuota via watch @ 04/20/24 12:28:15.656
  Apr 20 12:28:15.657: INFO: observed resourceQuota "e2e-rq-status-9rwdz" in namespace "resourcequota-2885" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Apr 20 12:28:15.657: INFO: Found resourceQuota "e2e-rq-status-9rwdz" in namespace "resourcequota-2885" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Apr 20 12:28:15.657: INFO: ResourceQuota "e2e-rq-status-9rwdz" /status was patched
  STEP: Get "e2e-rq-status-9rwdz" /status @ 04/20/24 12:28:15.657
  Apr 20 12:28:15.660: INFO: Resourcequota "e2e-rq-status-9rwdz" reports status: hard cpu of 1
  Apr 20 12:28:15.660: INFO: Resourcequota "e2e-rq-status-9rwdz" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-9rwdz" /status before checking Spec is unchanged @ 04/20/24 12:28:15.664
  Apr 20 12:28:15.672: INFO: Resourcequota "e2e-rq-status-9rwdz" reports status: hard cpu of 2
  Apr 20 12:28:15.672: INFO: Resourcequota "e2e-rq-status-9rwdz" reports status: hard memory of 2Gi
  Apr 20 12:28:15.673: INFO: observed resourceQuota "e2e-rq-status-9rwdz" in namespace "resourcequota-2885" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Apr 20 12:28:15.673: INFO: Found resourceQuota "e2e-rq-status-9rwdz" in namespace "resourcequota-2885" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  Apr 20 12:28:15.676: INFO: ResourceQuota "e2e-rq-status-9rwdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9rwdz", GenerateName:"", Namespace:"resourcequota-2885", SelfLink:"", UID:"970afef7-847b-419e-8928-291ef7a557bd", ResourceVersion:"11479", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9rwdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c4da28), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c4da58), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c4da88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Apr 20 12:28:20.679: INFO: ResourceQuota "e2e-rq-status-9rwdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9rwdz", GenerateName:"", Namespace:"resourcequota-2885", SelfLink:"", UID:"970afef7-847b-419e-8928-291ef7a557bd", ResourceVersion:"11479", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9rwdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c4dc38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c4dc68), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c4dc98), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Apr 20 12:28:25.679: INFO: ResourceQuota "e2e-rq-status-9rwdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9rwdz", GenerateName:"", Namespace:"resourcequota-2885", SelfLink:"", UID:"970afef7-847b-419e-8928-291ef7a557bd", ResourceVersion:"11479", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9rwdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c4de00), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c4de30), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c4de60), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Apr 20 12:28:30.679: INFO: ResourceQuota "e2e-rq-status-9rwdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9rwdz", GenerateName:"", Namespace:"resourcequota-2885", SelfLink:"", UID:"970afef7-847b-419e-8928-291ef7a557bd", ResourceVersion:"11479", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9rwdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c4dfc8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f00060), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f00090), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Apr 20 12:28:35.682: INFO: ResourceQuota "e2e-rq-status-9rwdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9rwdz", GenerateName:"", Namespace:"resourcequota-2885", SelfLink:"", UID:"970afef7-847b-419e-8928-291ef7a557bd", ResourceVersion:"11479", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9rwdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f002e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f00330), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f00360), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Apr 20 12:28:40.680: INFO: ResourceQuota "e2e-rq-status-9rwdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9rwdz", GenerateName:"", Namespace:"resourcequota-2885", SelfLink:"", UID:"970afef7-847b-419e-8928-291ef7a557bd", ResourceVersion:"11479", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9rwdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f005d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f00618), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f00648), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Apr 20 12:28:45.682: INFO: ResourceQuota "e2e-rq-status-9rwdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9rwdz", GenerateName:"", Namespace:"resourcequota-2885", SelfLink:"", UID:"970afef7-847b-419e-8928-291ef7a557bd", ResourceVersion:"11479", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9rwdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554c4e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554c510), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554c540), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Apr 20 12:28:50.679: INFO: ResourceQuota "e2e-rq-status-9rwdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9rwdz", GenerateName:"", Namespace:"resourcequota-2885", SelfLink:"", UID:"970afef7-847b-419e-8928-291ef7a557bd", ResourceVersion:"11479", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9rwdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f007e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f00810), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f00858), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Apr 20 12:28:55.681: INFO: ResourceQuota "e2e-rq-status-9rwdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9rwdz", GenerateName:"", Namespace:"resourcequota-2885", SelfLink:"", UID:"970afef7-847b-419e-8928-291ef7a557bd", ResourceVersion:"11479", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9rwdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f009f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f00a20), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f00a50), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Apr 20 12:29:00.682: INFO: ResourceQuota "e2e-rq-status-9rwdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9rwdz", GenerateName:"", Namespace:"resourcequota-2885", SelfLink:"", UID:"970afef7-847b-419e-8928-291ef7a557bd", ResourceVersion:"11479", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9rwdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554c7e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554c810), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554c870), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Apr 20 12:29:05.680: INFO: ResourceQuota "e2e-rq-status-9rwdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9rwdz", GenerateName:"", Namespace:"resourcequota-2885", SelfLink:"", UID:"970afef7-847b-419e-8928-291ef7a557bd", ResourceVersion:"11479", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9rwdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554cb40), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554cba0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554cbe8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Apr 20 12:29:10.682: INFO: ResourceQuota "e2e-rq-status-9rwdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9rwdz", GenerateName:"", Namespace:"resourcequota-2885", SelfLink:"", UID:"970afef7-847b-419e-8928-291ef7a557bd", ResourceVersion:"11479", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9rwdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554cd98), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554cde0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554ce10), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Apr 20 12:29:15.679: INFO: ResourceQuota "e2e-rq-status-9rwdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9rwdz", GenerateName:"", Namespace:"resourcequota-2885", SelfLink:"", UID:"970afef7-847b-419e-8928-291ef7a557bd", ResourceVersion:"11479", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9rwdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554cf90), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554cfc0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554cff0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Apr 20 12:29:20.679: INFO: ResourceQuota "e2e-rq-status-9rwdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9rwdz", GenerateName:"", Namespace:"resourcequota-2885", SelfLink:"", UID:"970afef7-847b-419e-8928-291ef7a557bd", ResourceVersion:"11479", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9rwdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f01080), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f010c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f01158), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Apr 20 12:29:25.679: INFO: ResourceQuota "e2e-rq-status-9rwdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9rwdz", GenerateName:"", Namespace:"resourcequota-2885", SelfLink:"", UID:"970afef7-847b-419e-8928-291ef7a557bd", ResourceVersion:"11479", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9rwdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554d140), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554d170), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554d1e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Apr 20 12:29:30.679: INFO: ResourceQuota "e2e-rq-status-9rwdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9rwdz", GenerateName:"", Namespace:"resourcequota-2885", SelfLink:"", UID:"970afef7-847b-419e-8928-291ef7a557bd", ResourceVersion:"11479", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9rwdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f01548), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f01590), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f015d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Apr 20 12:29:35.680: INFO: ResourceQuota "e2e-rq-status-9rwdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9rwdz", GenerateName:"", Namespace:"resourcequota-2885", SelfLink:"", UID:"970afef7-847b-419e-8928-291ef7a557bd", ResourceVersion:"11479", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9rwdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f017d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f01818), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f01878), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Apr 20 12:29:40.680: INFO: ResourceQuota "e2e-rq-status-9rwdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9rwdz", GenerateName:"", Namespace:"resourcequota-2885", SelfLink:"", UID:"970afef7-847b-419e-8928-291ef7a557bd", ResourceVersion:"11479", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9rwdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f01b30), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f01b78), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f01ba8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Apr 20 12:29:45.679: INFO: ResourceQuota "e2e-rq-status-9rwdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9rwdz", GenerateName:"", Namespace:"resourcequota-2885", SelfLink:"", UID:"970afef7-847b-419e-8928-291ef7a557bd", ResourceVersion:"11479", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9rwdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f01e90), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f01ed8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f01f08), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Apr 20 12:29:50.679: INFO: ResourceQuota "e2e-rq-status-9rwdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9rwdz", GenerateName:"", Namespace:"resourcequota-2885", SelfLink:"", UID:"970afef7-847b-419e-8928-291ef7a557bd", ResourceVersion:"11479", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9rwdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554d428), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554d458), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554d488), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Apr 20 12:29:55.679: INFO: ResourceQuota "e2e-rq-status-9rwdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9rwdz", GenerateName:"", Namespace:"resourcequota-2885", SelfLink:"", UID:"970afef7-847b-419e-8928-291ef7a557bd", ResourceVersion:"11479", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9rwdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554d6f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554d740), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554d770), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Apr 20 12:30:00.680: INFO: ResourceQuota "e2e-rq-status-9rwdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9rwdz", GenerateName:"", Namespace:"resourcequota-2885", SelfLink:"", UID:"970afef7-847b-419e-8928-291ef7a557bd", ResourceVersion:"11479", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9rwdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f66180), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f661c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f66210), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Apr 20 12:30:05.679: INFO: ResourceQuota "e2e-rq-status-9rwdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9rwdz", GenerateName:"", Namespace:"resourcequota-2885", SelfLink:"", UID:"970afef7-847b-419e-8928-291ef7a557bd", ResourceVersion:"11479", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9rwdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554c090), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554c0d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554c150), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Apr 20 12:30:10.679: INFO: ResourceQuota "e2e-rq-status-9rwdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9rwdz", GenerateName:"", Namespace:"resourcequota-2885", SelfLink:"", UID:"970afef7-847b-419e-8928-291ef7a557bd", ResourceVersion:"11479", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9rwdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f66420), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f66450), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f66480), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Apr 20 12:30:15.678: INFO: ResourceQuota "e2e-rq-status-9rwdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9rwdz", GenerateName:"", Namespace:"resourcequota-2885", SelfLink:"", UID:"970afef7-847b-419e-8928-291ef7a557bd", ResourceVersion:"11479", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9rwdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554c3f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554c438), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554c468), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Apr 20 12:30:20.679: INFO: ResourceQuota "e2e-rq-status-9rwdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9rwdz", GenerateName:"", Namespace:"resourcequota-2885", SelfLink:"", UID:"970afef7-847b-419e-8928-291ef7a557bd", ResourceVersion:"11479", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9rwdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554c660), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554c690), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554c6c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Apr 20 12:30:25.680: INFO: ResourceQuota "e2e-rq-status-9rwdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9rwdz", GenerateName:"", Namespace:"resourcequota-2885", SelfLink:"", UID:"970afef7-847b-419e-8928-291ef7a557bd", ResourceVersion:"11479", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9rwdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554c900), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554c930), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554c960), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Apr 20 12:30:30.681: INFO: ResourceQuota "e2e-rq-status-9rwdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9rwdz", GenerateName:"", Namespace:"resourcequota-2885", SelfLink:"", UID:"970afef7-847b-419e-8928-291ef7a557bd", ResourceVersion:"11479", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9rwdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f66690), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f666c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f66708), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Apr 20 12:30:35.679: INFO: ResourceQuota "e2e-rq-status-9rwdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9rwdz", GenerateName:"", Namespace:"resourcequota-2885", SelfLink:"", UID:"970afef7-847b-419e-8928-291ef7a557bd", ResourceVersion:"11479", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9rwdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f66888), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f668b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f668e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Apr 20 12:30:40.680: INFO: ResourceQuota "e2e-rq-status-9rwdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9rwdz", GenerateName:"", Namespace:"resourcequota-2885", SelfLink:"", UID:"970afef7-847b-419e-8928-291ef7a557bd", ResourceVersion:"11479", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9rwdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554cdc8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554cdf8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554ce28), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Apr 20 12:30:45.679: INFO: ResourceQuota "e2e-rq-status-9rwdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9rwdz", GenerateName:"", Namespace:"resourcequota-2885", SelfLink:"", UID:"970afef7-847b-419e-8928-291ef7a557bd", ResourceVersion:"11479", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9rwdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554cfa8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554cfd8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554d008), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Apr 20 12:30:50.680: INFO: ResourceQuota "e2e-rq-status-9rwdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9rwdz", GenerateName:"", Namespace:"resourcequota-2885", SelfLink:"", UID:"970afef7-847b-419e-8928-291ef7a557bd", ResourceVersion:"11479", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9rwdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f66b10), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f66b40), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f66b70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Apr 20 12:30:55.679: INFO: ResourceQuota "e2e-rq-status-9rwdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9rwdz", GenerateName:"", Namespace:"resourcequota-2885", SelfLink:"", UID:"970afef7-847b-419e-8928-291ef7a557bd", ResourceVersion:"11479", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9rwdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f66cf0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f66d20), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f66d50), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Apr 20 12:31:00.679: INFO: ResourceQuota "e2e-rq-status-9rwdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9rwdz", GenerateName:"", Namespace:"resourcequota-2885", SelfLink:"", UID:"970afef7-847b-419e-8928-291ef7a557bd", ResourceVersion:"11479", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9rwdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f66fa8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f66fd8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f67020), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Apr 20 12:31:05.679: INFO: ResourceQuota "e2e-rq-status-9rwdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9rwdz", GenerateName:"", Namespace:"resourcequota-2885", SelfLink:"", UID:"970afef7-847b-419e-8928-291ef7a557bd", ResourceVersion:"11479", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9rwdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f67188), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f671b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f67200), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Apr 20 12:31:10.679: INFO: ResourceQuota "e2e-rq-status-9rwdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9rwdz", GenerateName:"", Namespace:"resourcequota-2885", SelfLink:"", UID:"970afef7-847b-419e-8928-291ef7a557bd", ResourceVersion:"11479", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9rwdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f67380), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f673b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f673e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Apr 20 12:31:15.680: INFO: ResourceQuota "e2e-rq-status-9rwdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9rwdz", GenerateName:"", Namespace:"resourcequota-2885", SelfLink:"", UID:"970afef7-847b-419e-8928-291ef7a557bd", ResourceVersion:"11479", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9rwdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554d488), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554d4b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554d4e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Apr 20 12:31:20.680: INFO: ResourceQuota "e2e-rq-status-9rwdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9rwdz", GenerateName:"", Namespace:"resourcequota-2885", SelfLink:"", UID:"970afef7-847b-419e-8928-291ef7a557bd", ResourceVersion:"11479", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9rwdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554da10), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554da40), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554da70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Apr 20 12:31:25.681: INFO: ResourceQuota "e2e-rq-status-9rwdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9rwdz", GenerateName:"", Namespace:"resourcequota-2885", SelfLink:"", UID:"970afef7-847b-419e-8928-291ef7a557bd", ResourceVersion:"11479", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9rwdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f67788), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f677d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005f67860), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Apr 20 12:31:30.680: INFO: ResourceQuota "e2e-rq-status-9rwdz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9rwdz", GenerateName:"", Namespace:"resourcequota-2885", SelfLink:"", UID:"970afef7-847b-419e-8928-291ef7a557bd", ResourceVersion:"11479", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9rwdz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554db90), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554dbc0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 28, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00554dbf0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Apr 20 12:31:35.680: INFO: ResourceQuota "e2e-rq-status-9rwdz" Spec was unchanged and /status reset
  Apr 20 12:31:35.680: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2885" for this suite. @ 04/20/24 12:31:35.684
• [200.093 seconds]
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 04/20/24 12:31:35.691
  Apr 20 12:31:35.691: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename var-expansion @ 04/20/24 12:31:35.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:31:35.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:31:35.71
  STEP: Creating a pod to test substitution in volume subpath @ 04/20/24 12:31:35.713
  STEP: Saw pod success @ 04/20/24 12:31:39.736
  Apr 20 12:31:39.740: INFO: Trying to get logs from node ip-172-31-41-198 pod var-expansion-41a0b871-ee0f-4f52-a5f1-781d6033fc3a container dapi-container: <nil>
  STEP: delete the pod @ 04/20/24 12:31:39.757
  Apr 20 12:31:39.774: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4578" for this suite. @ 04/20/24 12:31:39.777
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:349
  STEP: Creating a kubernetes client @ 04/20/24 12:31:39.784
  Apr 20 12:31:39.784: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename security-context-test @ 04/20/24 12:31:39.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:31:39.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:31:39.802
  Apr 20 12:31:43.827: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5676" for this suite. @ 04/20/24 12:31:43.831
• [4.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 04/20/24 12:31:43.837
  Apr 20 12:31:43.837: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/20/24 12:31:43.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:31:43.855
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:31:43.857
  STEP: set up a multi version CRD @ 04/20/24 12:31:43.86
  Apr 20 12:31:43.860: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: mark a version not serverd @ 04/20/24 12:31:47.007
  STEP: check the unserved version gets removed @ 04/20/24 12:31:47.022
  STEP: check the other version is not changed @ 04/20/24 12:31:47.824
  Apr 20 12:31:50.270: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4284" for this suite. @ 04/20/24 12:31:50.277
• [6.446 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 04/20/24 12:31:50.284
  Apr 20 12:31:50.284: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename daemonsets @ 04/20/24 12:31:50.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:31:50.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:31:50.305
  STEP: Creating simple DaemonSet "daemon-set" @ 04/20/24 12:31:50.323
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/20/24 12:31:50.329
  Apr 20 12:31:50.332: INFO: DaemonSet pods can't tolerate node ip-172-31-45-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 12:31:50.332: INFO: DaemonSet pods can't tolerate node ip-172-31-9-171 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 12:31:50.335: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 12:31:50.335: INFO: Node ip-172-31-27-26 is running 0 daemon pod, expected 1
  Apr 20 12:31:51.335: INFO: DaemonSet pods can't tolerate node ip-172-31-45-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 12:31:51.335: INFO: DaemonSet pods can't tolerate node ip-172-31-9-171 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 12:31:51.339: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 20 12:31:51.339: INFO: Node ip-172-31-27-26 is running 0 daemon pod, expected 1
  Apr 20 12:31:52.334: INFO: DaemonSet pods can't tolerate node ip-172-31-45-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 12:31:52.334: INFO: DaemonSet pods can't tolerate node ip-172-31-9-171 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 12:31:52.338: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 20 12:31:52.338: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 04/20/24 12:31:52.341
  STEP: DeleteCollection of the DaemonSets @ 04/20/24 12:31:52.344
  STEP: Verify that ReplicaSets have been deleted @ 04/20/24 12:31:52.352
  Apr 20 12:31:52.361: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"12060"},"items":null}

  Apr 20 12:31:52.367: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"12060"},"items":[{"metadata":{"name":"daemon-set-pf7nl","generateName":"daemon-set-","namespace":"daemonsets-6268","uid":"984efaec-c605-428d-a8a5-2d66eaaa709f","resourceVersion":"12057","creationTimestamp":"2024-04-20T12:31:50Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"2deb11fe-ad82-4305-9610-11738c8a9d63","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-04-20T12:31:50Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2deb11fe-ad82-4305-9610-11738c8a9d63\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-04-20T12:31:51Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.144.121\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-5dkmj","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-5dkmj","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-81-0","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-81-0"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T12:31:51Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T12:31:50Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T12:31:51Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T12:31:51Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T12:31:50Z"}],"hostIP":"172.31.81.0","hostIPs":[{"ip":"172.31.81.0"}],"podIP":"192.168.144.121","podIPs":[{"ip":"192.168.144.121"}],"startTime":"2024-04-20T12:31:50Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-04-20T12:31:50Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://340a59f671b7d9ae617454a5eed1ddeec859be448b0bcfc05572e8ce24a1aa0c","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-t9f5t","generateName":"daemon-set-","namespace":"daemonsets-6268","uid":"e2cc356c-2042-4fad-aa3c-f593f6a5ee79","resourceVersion":"12049","creationTimestamp":"2024-04-20T12:31:50Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"2deb11fe-ad82-4305-9610-11738c8a9d63","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-04-20T12:31:50Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2deb11fe-ad82-4305-9610-11738c8a9d63\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-04-20T12:31:50Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.213.204\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-b5ptr","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-b5ptr","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-41-198","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-41-198"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T12:31:50Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T12:31:50Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T12:31:50Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T12:31:50Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T12:31:50Z"}],"hostIP":"172.31.41.198","hostIPs":[{"ip":"172.31.41.198"}],"podIP":"192.168.213.204","podIPs":[{"ip":"192.168.213.204"}],"startTime":"2024-04-20T12:31:50Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-04-20T12:31:50Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://39750730b284351da2f9deec23cda475ab1fba0b7dc7068de5b56a6742d07ce7","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-zzwq5","generateName":"daemon-set-","namespace":"daemonsets-6268","uid":"ee497559-bed9-4d87-8d15-3bbf4716b600","resourceVersion":"12052","creationTimestamp":"2024-04-20T12:31:50Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"2deb11fe-ad82-4305-9610-11738c8a9d63","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-04-20T12:31:50Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2deb11fe-ad82-4305-9610-11738c8a9d63\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-04-20T12:31:51Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.161.46\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-lxhvg","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-lxhvg","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-27-26","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-27-26"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T12:31:51Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T12:31:50Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T12:31:51Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T12:31:51Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T12:31:50Z"}],"hostIP":"172.31.27.26","hostIPs":[{"ip":"172.31.27.26"}],"podIP":"192.168.161.46","podIPs":[{"ip":"192.168.161.46"}],"startTime":"2024-04-20T12:31:50Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-04-20T12:31:50Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://242112545e65c8d386a853a755c4bba9328013f934a85aadb2137960dbc0faff","started":true}],"qosClass":"BestEffort"}}]}

  Apr 20 12:31:52.381: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6268" for this suite. @ 04/20/24 12:31:52.384
• [2.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1698
  STEP: Creating a kubernetes client @ 04/20/24 12:31:52.39
  Apr 20 12:31:52.390: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 12:31:52.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:31:52.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:31:52.41
  STEP: creating Agnhost RC @ 04/20/24 12:31:52.412
  Apr 20 12:31:52.412: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-2584 create -f -'
  Apr 20 12:31:52.488: INFO: stderr: ""
  Apr 20 12:31:52.488: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/20/24 12:31:52.488
  Apr 20 12:31:53.492: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 20 12:31:53.492: INFO: Found 0 / 1
  Apr 20 12:31:54.493: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 20 12:31:54.493: INFO: Found 1 / 1
  Apr 20 12:31:54.493: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 04/20/24 12:31:54.493
  Apr 20 12:31:54.496: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 20 12:31:54.496: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Apr 20 12:31:54.496: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-2584 patch pod agnhost-primary-7nb7w -p {"metadata":{"annotations":{"x":"y"}}}'
  Apr 20 12:31:54.546: INFO: stderr: ""
  Apr 20 12:31:54.546: INFO: stdout: "pod/agnhost-primary-7nb7w patched\n"
  STEP: checking annotations @ 04/20/24 12:31:54.546
  Apr 20 12:31:54.549: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 20 12:31:54.549: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Apr 20 12:31:54.549: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2584" for this suite. @ 04/20/24 12:31:54.553
• [2.169 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 04/20/24 12:31:54.558
  Apr 20 12:31:54.558: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename cronjob @ 04/20/24 12:31:54.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:31:54.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:31:54.575
  STEP: Creating a ForbidConcurrent cronjob @ 04/20/24 12:31:54.577
  STEP: Ensuring a job is scheduled @ 04/20/24 12:31:54.583
  STEP: Ensuring exactly one is scheduled @ 04/20/24 12:32:00.587
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 04/20/24 12:32:00.591
  STEP: Ensuring no more jobs are scheduled @ 04/20/24 12:32:00.593
  STEP: Removing cronjob @ 04/20/24 12:37:00.602
  Apr 20 12:37:00.608: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3045" for this suite. @ 04/20/24 12:37:00.611
• [306.059 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 04/20/24 12:37:00.617
  Apr 20 12:37:00.617: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename field-validation @ 04/20/24 12:37:00.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:37:00.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:37:00.64
  Apr 20 12:37:00.643: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  Apr 20 12:37:03.714: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4839" for this suite. @ 04/20/24 12:37:03.717
• [3.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 04/20/24 12:37:03.723
  Apr 20 12:37:03.723: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 12:37:03.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:37:03.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:37:03.745
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 04/20/24 12:37:03.748
  STEP: Saw pod success @ 04/20/24 12:37:05.765
  Apr 20 12:37:05.768: INFO: Trying to get logs from node ip-172-31-41-198 pod pod-4c5cb5ed-6909-428c-ad31-a28b30190b50 container test-container: <nil>
  STEP: delete the pod @ 04/20/24 12:37:05.787
  Apr 20 12:37:05.803: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6862" for this suite. @ 04/20/24 12:37:05.806
• [2.089 seconds]
------------------------------
SS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 04/20/24 12:37:05.812
  Apr 20 12:37:05.812: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename prestop @ 04/20/24 12:37:05.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:37:05.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:37:05.833
  STEP: Creating server pod server in namespace prestop-2375 @ 04/20/24 12:37:05.835
  STEP: Waiting for pods to come up. @ 04/20/24 12:37:05.848
  STEP: Creating tester pod tester in namespace prestop-2375 @ 04/20/24 12:37:07.859
  STEP: Deleting pre-stop pod @ 04/20/24 12:37:09.873
  Apr 20 12:37:14.890: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 04/20/24 12:37:14.89
  Apr 20 12:37:14.904: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-2375" for this suite. @ 04/20/24 12:37:14.908
• [9.101 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1798
  STEP: Creating a kubernetes client @ 04/20/24 12:37:14.913
  Apr 20 12:37:14.913: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 12:37:14.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:37:14.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:37:14.934
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/20/24 12:37:14.937
  Apr 20 12:37:14.937: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-868 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Apr 20 12:37:15.001: INFO: stderr: ""
  Apr 20 12:37:15.001: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 04/20/24 12:37:15.001
  STEP: verifying the pod e2e-test-httpd-pod was created @ 04/20/24 12:37:20.051
  Apr 20 12:37:20.051: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-868 get pod e2e-test-httpd-pod -o json'
  Apr 20 12:37:20.093: INFO: stderr: ""
  Apr 20 12:37:20.093: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-04-20T12:37:14Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-868\",\n        \"resourceVersion\": \"12938\",\n        \"uid\": \"b8704517-ac08-452d-a609-577cfe1c6284\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-mpz4r\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-41-198\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-mpz4r\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-20T12:37:16Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-20T12:37:15Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-20T12:37:16Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-20T12:37:16Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-20T12:37:14Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://7c33fa964975d3a280bd9f18498cfad66438020709d843ae1a99240a1ee724c9\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-04-20T12:37:15Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.31.41.198\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.41.198\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.213.210\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.213.210\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-04-20T12:37:15Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 04/20/24 12:37:20.093
  Apr 20 12:37:20.093: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-868 replace -f -'
  Apr 20 12:37:20.183: INFO: stderr: ""
  Apr 20 12:37:20.183: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 04/20/24 12:37:20.183
  Apr 20 12:37:20.186: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-868 delete pods e2e-test-httpd-pod'
  Apr 20 12:37:21.534: INFO: stderr: ""
  Apr 20 12:37:21.534: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Apr 20 12:37:21.534: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-868" for this suite. @ 04/20/24 12:37:21.537
• [6.629 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 04/20/24 12:37:21.542
  Apr 20 12:37:21.542: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename projected @ 04/20/24 12:37:21.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:37:21.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:37:21.561
  STEP: Creating the pod @ 04/20/24 12:37:21.564
  Apr 20 12:37:24.101: INFO: Successfully updated pod "annotationupdate643aa139-1bb8-4160-8171-b83e830f0ecd"
  Apr 20 12:37:28.124: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8242" for this suite. @ 04/20/24 12:37:28.128
• [6.593 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 04/20/24 12:37:28.135
  Apr 20 12:37:28.135: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename svc-latency @ 04/20/24 12:37:28.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:37:28.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:37:28.158
  Apr 20 12:37:28.161: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-8215 @ 04/20/24 12:37:28.162
  I0420 12:37:28.166580      20 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-8215, replica count: 1
  I0420 12:37:29.217263      20 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0420 12:37:30.217555      20 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 20 12:37:30.329: INFO: Created: latency-svc-drp8c
  Apr 20 12:37:30.337: INFO: Got endpoints: latency-svc-drp8c [20.056968ms]
  Apr 20 12:37:30.361: INFO: Created: latency-svc-cnlv7
  Apr 20 12:37:30.362: INFO: Got endpoints: latency-svc-cnlv7 [24.538548ms]
  Apr 20 12:37:30.367: INFO: Created: latency-svc-nt7j8
  Apr 20 12:37:30.374: INFO: Got endpoints: latency-svc-nt7j8 [36.364698ms]
  Apr 20 12:37:30.378: INFO: Created: latency-svc-z64rn
  Apr 20 12:37:30.381: INFO: Got endpoints: latency-svc-z64rn [42.878067ms]
  Apr 20 12:37:30.385: INFO: Created: latency-svc-jl58w
  Apr 20 12:37:30.390: INFO: Got endpoints: latency-svc-jl58w [52.266866ms]
  Apr 20 12:37:30.391: INFO: Created: latency-svc-dfrj2
  Apr 20 12:37:30.400: INFO: Created: latency-svc-28xzw
  Apr 20 12:37:30.400: INFO: Got endpoints: latency-svc-dfrj2 [61.891213ms]
  Apr 20 12:37:30.407: INFO: Got endpoints: latency-svc-28xzw [69.125283ms]
  Apr 20 12:37:30.410: INFO: Created: latency-svc-w7md5
  Apr 20 12:37:30.412: INFO: Created: latency-svc-2l5qp
  Apr 20 12:37:30.417: INFO: Got endpoints: latency-svc-w7md5 [79.079325ms]
  Apr 20 12:37:30.418: INFO: Got endpoints: latency-svc-2l5qp [79.506686ms]
  Apr 20 12:37:30.423: INFO: Created: latency-svc-znrjq
  Apr 20 12:37:30.429: INFO: Got endpoints: latency-svc-znrjq [90.594137ms]
  Apr 20 12:37:30.431: INFO: Created: latency-svc-jk6rd
  Apr 20 12:37:30.437: INFO: Got endpoints: latency-svc-jk6rd [98.683905ms]
  Apr 20 12:37:30.437: INFO: Created: latency-svc-g6pcr
  Apr 20 12:37:30.445: INFO: Got endpoints: latency-svc-g6pcr [106.862223ms]
  Apr 20 12:37:30.446: INFO: Created: latency-svc-79mh9
  Apr 20 12:37:30.449: INFO: Got endpoints: latency-svc-79mh9 [110.78658ms]
  Apr 20 12:37:30.452: INFO: Created: latency-svc-cl5d2
  Apr 20 12:37:30.458: INFO: Got endpoints: latency-svc-cl5d2 [119.344248ms]
  Apr 20 12:37:30.458: INFO: Created: latency-svc-mtn9z
  Apr 20 12:37:30.466: INFO: Got endpoints: latency-svc-mtn9z [128.104137ms]
  Apr 20 12:37:30.469: INFO: Created: latency-svc-2rz6r
  Apr 20 12:37:30.476: INFO: Got endpoints: latency-svc-2rz6r [137.193652ms]
  Apr 20 12:37:30.477: INFO: Created: latency-svc-844wf
  Apr 20 12:37:30.484: INFO: Created: latency-svc-rnwnq
  Apr 20 12:37:30.484: INFO: Got endpoints: latency-svc-844wf [122.271533ms]
  Apr 20 12:37:30.490: INFO: Created: latency-svc-hf5b7
  Apr 20 12:37:30.493: INFO: Got endpoints: latency-svc-rnwnq [118.46728ms]
  Apr 20 12:37:30.497: INFO: Created: latency-svc-4gdm2
  Apr 20 12:37:30.498: INFO: Got endpoints: latency-svc-hf5b7 [116.72355ms]
  Apr 20 12:37:30.504: INFO: Got endpoints: latency-svc-4gdm2 [113.983391ms]
  Apr 20 12:37:30.505: INFO: Created: latency-svc-jbz6p
  Apr 20 12:37:30.512: INFO: Got endpoints: latency-svc-jbz6p [111.653274ms]
  Apr 20 12:37:30.513: INFO: Created: latency-svc-c79jw
  Apr 20 12:37:30.518: INFO: Got endpoints: latency-svc-c79jw [110.441965ms]
  Apr 20 12:37:30.519: INFO: Created: latency-svc-sn2g6
  Apr 20 12:37:30.525: INFO: Got endpoints: latency-svc-sn2g6 [108.147426ms]
  Apr 20 12:37:30.526: INFO: Created: latency-svc-zlt7v
  Apr 20 12:37:30.534: INFO: Got endpoints: latency-svc-zlt7v [116.425382ms]
  Apr 20 12:37:30.536: INFO: Created: latency-svc-m7slm
  Apr 20 12:37:30.542: INFO: Got endpoints: latency-svc-m7slm [113.428248ms]
  Apr 20 12:37:30.543: INFO: Created: latency-svc-8w76v
  Apr 20 12:37:30.547: INFO: Created: latency-svc-xqplj
  Apr 20 12:37:30.550: INFO: Got endpoints: latency-svc-8w76v [113.181738ms]
  Apr 20 12:37:30.552: INFO: Got endpoints: latency-svc-xqplj [106.418832ms]
  Apr 20 12:37:30.555: INFO: Created: latency-svc-k5bv9
  Apr 20 12:37:30.563: INFO: Got endpoints: latency-svc-k5bv9 [113.633491ms]
  Apr 20 12:37:30.563: INFO: Created: latency-svc-p9x7h
  Apr 20 12:37:30.567: INFO: Created: latency-svc-rq4hw
  Apr 20 12:37:30.569: INFO: Got endpoints: latency-svc-p9x7h [111.302125ms]
  Apr 20 12:37:30.572: INFO: Got endpoints: latency-svc-rq4hw [105.221523ms]
  Apr 20 12:37:30.576: INFO: Created: latency-svc-pslsl
  Apr 20 12:37:30.582: INFO: Created: latency-svc-qs8fv
  Apr 20 12:37:30.585: INFO: Got endpoints: latency-svc-pslsl [109.026195ms]
  Apr 20 12:37:30.590: INFO: Created: latency-svc-j4m5f
  Apr 20 12:37:30.590: INFO: Got endpoints: latency-svc-qs8fv [105.746337ms]
  Apr 20 12:37:30.597: INFO: Got endpoints: latency-svc-j4m5f [104.215323ms]
  Apr 20 12:37:30.598: INFO: Created: latency-svc-rzb4l
  Apr 20 12:37:30.605: INFO: Got endpoints: latency-svc-rzb4l [106.973252ms]
  Apr 20 12:37:30.605: INFO: Created: latency-svc-xbmc8
  Apr 20 12:37:30.611: INFO: Created: latency-svc-v2gg7
  Apr 20 12:37:30.613: INFO: Got endpoints: latency-svc-xbmc8 [108.185965ms]
  Apr 20 12:37:30.617: INFO: Created: latency-svc-8s59t
  Apr 20 12:37:30.622: INFO: Created: latency-svc-nrhk6
  Apr 20 12:37:30.626: INFO: Created: latency-svc-x86mh
  Apr 20 12:37:30.633: INFO: Got endpoints: latency-svc-v2gg7 [121.494988ms]
  Apr 20 12:37:30.634: INFO: Created: latency-svc-j4x6d
  Apr 20 12:37:30.643: INFO: Created: latency-svc-fqx4c
  Apr 20 12:37:30.647: INFO: Created: latency-svc-tkwnx
  Apr 20 12:37:30.653: INFO: Created: latency-svc-j488x
  Apr 20 12:37:30.658: INFO: Created: latency-svc-w2cgh
  Apr 20 12:37:30.665: INFO: Created: latency-svc-cgc25
  Apr 20 12:37:30.672: INFO: Created: latency-svc-v9hnb
  Apr 20 12:37:30.680: INFO: Created: latency-svc-bcrkr
  Apr 20 12:37:30.685: INFO: Created: latency-svc-wz94l
  Apr 20 12:37:30.685: INFO: Got endpoints: latency-svc-8s59t [167.399209ms]
  Apr 20 12:37:30.691: INFO: Created: latency-svc-d9jm2
  Apr 20 12:37:30.697: INFO: Created: latency-svc-zddb9
  Apr 20 12:37:30.702: INFO: Created: latency-svc-qwpk7
  Apr 20 12:37:30.707: INFO: Created: latency-svc-xcr8j
  Apr 20 12:37:30.736: INFO: Got endpoints: latency-svc-nrhk6 [210.616642ms]
  Apr 20 12:37:30.745: INFO: Created: latency-svc-xlhfl
  Apr 20 12:37:30.787: INFO: Got endpoints: latency-svc-x86mh [252.972964ms]
  Apr 20 12:37:30.797: INFO: Created: latency-svc-4lcmh
  Apr 20 12:37:30.835: INFO: Got endpoints: latency-svc-j4x6d [292.320798ms]
  Apr 20 12:37:30.847: INFO: Created: latency-svc-hf9pj
  Apr 20 12:37:30.884: INFO: Got endpoints: latency-svc-fqx4c [334.003254ms]
  Apr 20 12:37:30.896: INFO: Created: latency-svc-n6jhb
  Apr 20 12:37:30.936: INFO: Got endpoints: latency-svc-tkwnx [383.922268ms]
  Apr 20 12:37:30.946: INFO: Created: latency-svc-jwr9b
  Apr 20 12:37:30.987: INFO: Got endpoints: latency-svc-j488x [423.573823ms]
  Apr 20 12:37:30.996: INFO: Created: latency-svc-gh6ch
  Apr 20 12:37:31.035: INFO: Got endpoints: latency-svc-w2cgh [466.195588ms]
  Apr 20 12:37:31.046: INFO: Created: latency-svc-5j8z2
  Apr 20 12:37:31.084: INFO: Got endpoints: latency-svc-cgc25 [511.8319ms]
  Apr 20 12:37:31.094: INFO: Created: latency-svc-mfwlt
  Apr 20 12:37:31.137: INFO: Got endpoints: latency-svc-v9hnb [552.177292ms]
  Apr 20 12:37:31.147: INFO: Created: latency-svc-q6dkn
  Apr 20 12:37:31.185: INFO: Got endpoints: latency-svc-bcrkr [595.061985ms]
  Apr 20 12:37:31.194: INFO: Created: latency-svc-jjkdw
  Apr 20 12:37:31.235: INFO: Got endpoints: latency-svc-wz94l [638.214885ms]
  Apr 20 12:37:31.246: INFO: Created: latency-svc-f8gm4
  Apr 20 12:37:31.285: INFO: Got endpoints: latency-svc-d9jm2 [680.080346ms]
  Apr 20 12:37:31.295: INFO: Created: latency-svc-sdm9t
  Apr 20 12:37:31.333: INFO: Got endpoints: latency-svc-zddb9 [720.426056ms]
  Apr 20 12:37:31.347: INFO: Created: latency-svc-78wtw
  Apr 20 12:37:31.387: INFO: Got endpoints: latency-svc-qwpk7 [753.453041ms]
  Apr 20 12:37:31.396: INFO: Created: latency-svc-mz6wf
  Apr 20 12:37:31.436: INFO: Got endpoints: latency-svc-xcr8j [750.809571ms]
  Apr 20 12:37:31.451: INFO: Created: latency-svc-z6mdt
  Apr 20 12:37:31.486: INFO: Got endpoints: latency-svc-xlhfl [749.597202ms]
  Apr 20 12:37:31.494: INFO: Created: latency-svc-vs89v
  Apr 20 12:37:31.536: INFO: Got endpoints: latency-svc-4lcmh [749.036905ms]
  Apr 20 12:37:31.546: INFO: Created: latency-svc-bl4qg
  Apr 20 12:37:31.584: INFO: Got endpoints: latency-svc-hf9pj [749.649895ms]
  Apr 20 12:37:31.595: INFO: Created: latency-svc-pkb8h
  Apr 20 12:37:31.636: INFO: Got endpoints: latency-svc-n6jhb [751.603567ms]
  Apr 20 12:37:31.645: INFO: Created: latency-svc-pshvg
  Apr 20 12:37:31.685: INFO: Got endpoints: latency-svc-jwr9b [749.515854ms]
  Apr 20 12:37:31.694: INFO: Created: latency-svc-q8tnz
  Apr 20 12:37:31.735: INFO: Got endpoints: latency-svc-gh6ch [748.631582ms]
  Apr 20 12:37:31.744: INFO: Created: latency-svc-x8s98
  Apr 20 12:37:31.783: INFO: Got endpoints: latency-svc-5j8z2 [748.162983ms]
  Apr 20 12:37:31.793: INFO: Created: latency-svc-pmkwg
  Apr 20 12:37:31.834: INFO: Got endpoints: latency-svc-mfwlt [750.068649ms]
  Apr 20 12:37:31.843: INFO: Created: latency-svc-dcgcc
  Apr 20 12:37:31.891: INFO: Got endpoints: latency-svc-q6dkn [753.957895ms]
  Apr 20 12:37:31.900: INFO: Created: latency-svc-5d9nx
  Apr 20 12:37:31.935: INFO: Got endpoints: latency-svc-jjkdw [749.457798ms]
  Apr 20 12:37:31.944: INFO: Created: latency-svc-89h8c
  Apr 20 12:37:31.986: INFO: Got endpoints: latency-svc-f8gm4 [750.707369ms]
  Apr 20 12:37:31.996: INFO: Created: latency-svc-dzwbn
  Apr 20 12:37:32.034: INFO: Got endpoints: latency-svc-sdm9t [749.309294ms]
  Apr 20 12:37:32.044: INFO: Created: latency-svc-kmt5g
  Apr 20 12:37:32.084: INFO: Got endpoints: latency-svc-78wtw [750.828572ms]
  Apr 20 12:37:32.094: INFO: Created: latency-svc-rhszq
  Apr 20 12:37:32.138: INFO: Got endpoints: latency-svc-mz6wf [751.292946ms]
  Apr 20 12:37:32.147: INFO: Created: latency-svc-x8gb9
  Apr 20 12:37:32.185: INFO: Got endpoints: latency-svc-z6mdt [749.325646ms]
  Apr 20 12:37:32.195: INFO: Created: latency-svc-rzmn2
  Apr 20 12:37:32.242: INFO: Got endpoints: latency-svc-vs89v [755.959575ms]
  Apr 20 12:37:32.252: INFO: Created: latency-svc-dbl2d
  Apr 20 12:37:32.285: INFO: Got endpoints: latency-svc-bl4qg [748.372389ms]
  Apr 20 12:37:32.296: INFO: Created: latency-svc-jjq26
  Apr 20 12:37:32.334: INFO: Got endpoints: latency-svc-pkb8h [749.363757ms]
  Apr 20 12:37:32.393: INFO: Got endpoints: latency-svc-pshvg [756.531529ms]
  Apr 20 12:37:32.398: INFO: Created: latency-svc-wpwx6
  Apr 20 12:37:32.402: INFO: Created: latency-svc-lt945
  Apr 20 12:37:32.437: INFO: Got endpoints: latency-svc-q8tnz [751.589296ms]
  Apr 20 12:37:32.445: INFO: Created: latency-svc-2mbzj
  Apr 20 12:37:32.484: INFO: Got endpoints: latency-svc-x8s98 [749.244635ms]
  Apr 20 12:37:32.495: INFO: Created: latency-svc-mzc4p
  Apr 20 12:37:32.534: INFO: Got endpoints: latency-svc-pmkwg [750.147665ms]
  Apr 20 12:37:32.543: INFO: Created: latency-svc-j6hqw
  Apr 20 12:37:32.583: INFO: Got endpoints: latency-svc-dcgcc [749.443748ms]
  Apr 20 12:37:32.592: INFO: Created: latency-svc-llm7t
  Apr 20 12:37:32.636: INFO: Got endpoints: latency-svc-5d9nx [744.779131ms]
  Apr 20 12:37:32.645: INFO: Created: latency-svc-6gtnx
  Apr 20 12:37:32.686: INFO: Got endpoints: latency-svc-89h8c [751.128859ms]
  Apr 20 12:37:32.695: INFO: Created: latency-svc-pzllr
  Apr 20 12:37:32.735: INFO: Got endpoints: latency-svc-dzwbn [749.542169ms]
  Apr 20 12:37:32.745: INFO: Created: latency-svc-4wg8v
  Apr 20 12:37:32.784: INFO: Got endpoints: latency-svc-kmt5g [750.204664ms]
  Apr 20 12:37:32.794: INFO: Created: latency-svc-2zppj
  Apr 20 12:37:32.836: INFO: Got endpoints: latency-svc-rhszq [751.75137ms]
  Apr 20 12:37:32.845: INFO: Created: latency-svc-wt6b9
  Apr 20 12:37:32.885: INFO: Got endpoints: latency-svc-x8gb9 [746.758541ms]
  Apr 20 12:37:32.894: INFO: Created: latency-svc-22dpj
  Apr 20 12:37:32.935: INFO: Got endpoints: latency-svc-rzmn2 [749.556817ms]
  Apr 20 12:37:32.943: INFO: Created: latency-svc-55w2x
  Apr 20 12:37:32.985: INFO: Got endpoints: latency-svc-dbl2d [742.63372ms]
  Apr 20 12:37:32.996: INFO: Created: latency-svc-pr25p
  Apr 20 12:37:33.034: INFO: Got endpoints: latency-svc-jjq26 [749.096016ms]
  Apr 20 12:37:33.042: INFO: Created: latency-svc-p62d6
  Apr 20 12:37:33.085: INFO: Got endpoints: latency-svc-wpwx6 [750.950708ms]
  Apr 20 12:37:33.095: INFO: Created: latency-svc-4wqz6
  Apr 20 12:37:33.135: INFO: Got endpoints: latency-svc-lt945 [742.643891ms]
  Apr 20 12:37:33.145: INFO: Created: latency-svc-q4ph5
  Apr 20 12:37:33.183: INFO: Got endpoints: latency-svc-2mbzj [746.009596ms]
  Apr 20 12:37:33.191: INFO: Created: latency-svc-t77hc
  Apr 20 12:37:33.233: INFO: Got endpoints: latency-svc-mzc4p [748.498981ms]
  Apr 20 12:37:33.243: INFO: Created: latency-svc-q8nlt
  Apr 20 12:37:33.286: INFO: Got endpoints: latency-svc-j6hqw [752.14797ms]
  Apr 20 12:37:33.296: INFO: Created: latency-svc-zfsb7
  Apr 20 12:37:33.334: INFO: Got endpoints: latency-svc-llm7t [750.672798ms]
  Apr 20 12:37:33.350: INFO: Created: latency-svc-sb8jr
  Apr 20 12:37:33.384: INFO: Got endpoints: latency-svc-6gtnx [748.10439ms]
  Apr 20 12:37:33.394: INFO: Created: latency-svc-l8v9j
  Apr 20 12:37:33.435: INFO: Got endpoints: latency-svc-pzllr [749.662842ms]
  Apr 20 12:37:33.444: INFO: Created: latency-svc-k5mx7
  Apr 20 12:37:33.485: INFO: Got endpoints: latency-svc-4wg8v [749.925069ms]
  Apr 20 12:37:33.493: INFO: Created: latency-svc-tj8tk
  Apr 20 12:37:33.533: INFO: Got endpoints: latency-svc-2zppj [748.430922ms]
  Apr 20 12:37:33.543: INFO: Created: latency-svc-vgbrf
  Apr 20 12:37:33.584: INFO: Got endpoints: latency-svc-wt6b9 [747.592129ms]
  Apr 20 12:37:33.593: INFO: Created: latency-svc-rc27n
  Apr 20 12:37:33.636: INFO: Got endpoints: latency-svc-22dpj [750.56722ms]
  Apr 20 12:37:33.645: INFO: Created: latency-svc-fq8ms
  Apr 20 12:37:33.686: INFO: Got endpoints: latency-svc-55w2x [750.755066ms]
  Apr 20 12:37:33.695: INFO: Created: latency-svc-bxrnh
  Apr 20 12:37:33.736: INFO: Got endpoints: latency-svc-pr25p [751.133364ms]
  Apr 20 12:37:33.745: INFO: Created: latency-svc-9kg9n
  Apr 20 12:37:33.784: INFO: Got endpoints: latency-svc-p62d6 [750.227073ms]
  Apr 20 12:37:33.794: INFO: Created: latency-svc-8srq9
  Apr 20 12:37:33.835: INFO: Got endpoints: latency-svc-4wqz6 [750.23598ms]
  Apr 20 12:37:33.845: INFO: Created: latency-svc-wnwxn
  Apr 20 12:37:33.886: INFO: Got endpoints: latency-svc-q4ph5 [750.486633ms]
  Apr 20 12:37:33.895: INFO: Created: latency-svc-v8wn5
  Apr 20 12:37:33.936: INFO: Got endpoints: latency-svc-t77hc [753.026011ms]
  Apr 20 12:37:33.945: INFO: Created: latency-svc-mkzc4
  Apr 20 12:37:33.985: INFO: Got endpoints: latency-svc-q8nlt [751.618914ms]
  Apr 20 12:37:33.994: INFO: Created: latency-svc-gx9pb
  Apr 20 12:37:34.034: INFO: Got endpoints: latency-svc-zfsb7 [747.921262ms]
  Apr 20 12:37:34.044: INFO: Created: latency-svc-dbnst
  Apr 20 12:37:34.084: INFO: Got endpoints: latency-svc-sb8jr [749.837003ms]
  Apr 20 12:37:34.092: INFO: Created: latency-svc-h2hxh
  Apr 20 12:37:34.135: INFO: Got endpoints: latency-svc-l8v9j [750.695823ms]
  Apr 20 12:37:34.144: INFO: Created: latency-svc-cgzv6
  Apr 20 12:37:34.185: INFO: Got endpoints: latency-svc-k5mx7 [749.821446ms]
  Apr 20 12:37:34.195: INFO: Created: latency-svc-d6sm2
  Apr 20 12:37:34.235: INFO: Got endpoints: latency-svc-tj8tk [749.463305ms]
  Apr 20 12:37:34.244: INFO: Created: latency-svc-2swsr
  Apr 20 12:37:34.284: INFO: Got endpoints: latency-svc-vgbrf [750.416941ms]
  Apr 20 12:37:34.295: INFO: Created: latency-svc-ljll7
  Apr 20 12:37:34.334: INFO: Got endpoints: latency-svc-rc27n [750.492583ms]
  Apr 20 12:37:34.346: INFO: Created: latency-svc-pwxm5
  Apr 20 12:37:34.384: INFO: Got endpoints: latency-svc-fq8ms [748.288083ms]
  Apr 20 12:37:34.393: INFO: Created: latency-svc-7dksw
  Apr 20 12:37:34.436: INFO: Got endpoints: latency-svc-bxrnh [749.945958ms]
  Apr 20 12:37:34.445: INFO: Created: latency-svc-c9lsg
  Apr 20 12:37:34.485: INFO: Got endpoints: latency-svc-9kg9n [748.693404ms]
  Apr 20 12:37:34.494: INFO: Created: latency-svc-6hm4g
  Apr 20 12:37:34.535: INFO: Got endpoints: latency-svc-8srq9 [750.433569ms]
  Apr 20 12:37:34.545: INFO: Created: latency-svc-cwb55
  Apr 20 12:37:34.584: INFO: Got endpoints: latency-svc-wnwxn [748.345157ms]
  Apr 20 12:37:34.594: INFO: Created: latency-svc-fklmq
  Apr 20 12:37:34.634: INFO: Got endpoints: latency-svc-v8wn5 [748.156867ms]
  Apr 20 12:37:34.643: INFO: Created: latency-svc-q724x
  Apr 20 12:37:34.686: INFO: Got endpoints: latency-svc-mkzc4 [749.573908ms]
  Apr 20 12:37:34.693: INFO: Created: latency-svc-d7r8v
  Apr 20 12:37:34.735: INFO: Got endpoints: latency-svc-gx9pb [750.677627ms]
  Apr 20 12:37:34.745: INFO: Created: latency-svc-d4ph2
  Apr 20 12:37:34.784: INFO: Got endpoints: latency-svc-dbnst [750.285933ms]
  Apr 20 12:37:34.795: INFO: Created: latency-svc-r7kml
  Apr 20 12:37:34.833: INFO: Got endpoints: latency-svc-h2hxh [749.710223ms]
  Apr 20 12:37:34.843: INFO: Created: latency-svc-xxclr
  Apr 20 12:37:34.885: INFO: Got endpoints: latency-svc-cgzv6 [749.592001ms]
  Apr 20 12:37:34.894: INFO: Created: latency-svc-qbp6n
  Apr 20 12:37:34.935: INFO: Got endpoints: latency-svc-d6sm2 [749.775453ms]
  Apr 20 12:37:34.948: INFO: Created: latency-svc-8r77j
  Apr 20 12:37:34.986: INFO: Got endpoints: latency-svc-2swsr [750.845103ms]
  Apr 20 12:37:34.994: INFO: Created: latency-svc-jj9pd
  Apr 20 12:37:35.034: INFO: Got endpoints: latency-svc-ljll7 [750.038684ms]
  Apr 20 12:37:35.044: INFO: Created: latency-svc-48sf7
  Apr 20 12:37:35.084: INFO: Got endpoints: latency-svc-pwxm5 [750.09695ms]
  Apr 20 12:37:35.094: INFO: Created: latency-svc-f25qw
  Apr 20 12:37:35.135: INFO: Got endpoints: latency-svc-7dksw [751.029ms]
  Apr 20 12:37:35.143: INFO: Created: latency-svc-k7sdp
  Apr 20 12:37:35.185: INFO: Got endpoints: latency-svc-c9lsg [749.252576ms]
  Apr 20 12:37:35.200: INFO: Created: latency-svc-fj426
  Apr 20 12:37:35.235: INFO: Got endpoints: latency-svc-6hm4g [749.785897ms]
  Apr 20 12:37:35.246: INFO: Created: latency-svc-vqs75
  Apr 20 12:37:35.283: INFO: Got endpoints: latency-svc-cwb55 [748.632715ms]
  Apr 20 12:37:35.297: INFO: Created: latency-svc-lqct4
  Apr 20 12:37:35.333: INFO: Got endpoints: latency-svc-fklmq [749.498543ms]
  Apr 20 12:37:35.344: INFO: Created: latency-svc-pfl4k
  Apr 20 12:37:35.385: INFO: Got endpoints: latency-svc-q724x [751.144171ms]
  Apr 20 12:37:35.395: INFO: Created: latency-svc-rqgxx
  Apr 20 12:37:35.437: INFO: Got endpoints: latency-svc-d7r8v [751.04923ms]
  Apr 20 12:37:35.446: INFO: Created: latency-svc-hxpfq
  Apr 20 12:37:35.486: INFO: Got endpoints: latency-svc-d4ph2 [750.956897ms]
  Apr 20 12:37:35.497: INFO: Created: latency-svc-d546m
  Apr 20 12:37:35.534: INFO: Got endpoints: latency-svc-r7kml [749.578881ms]
  Apr 20 12:37:35.545: INFO: Created: latency-svc-zjsl4
  Apr 20 12:37:35.584: INFO: Got endpoints: latency-svc-xxclr [749.983261ms]
  Apr 20 12:37:35.593: INFO: Created: latency-svc-qkxcz
  Apr 20 12:37:35.636: INFO: Got endpoints: latency-svc-qbp6n [750.804026ms]
  Apr 20 12:37:35.645: INFO: Created: latency-svc-npsmr
  Apr 20 12:37:35.685: INFO: Got endpoints: latency-svc-8r77j [749.436572ms]
  Apr 20 12:37:35.696: INFO: Created: latency-svc-h6qlv
  Apr 20 12:37:35.736: INFO: Got endpoints: latency-svc-jj9pd [750.034686ms]
  Apr 20 12:37:35.747: INFO: Created: latency-svc-26dlx
  Apr 20 12:37:35.783: INFO: Got endpoints: latency-svc-48sf7 [749.4693ms]
  Apr 20 12:37:35.794: INFO: Created: latency-svc-qzbwt
  Apr 20 12:37:35.836: INFO: Got endpoints: latency-svc-f25qw [751.45602ms]
  Apr 20 12:37:35.845: INFO: Created: latency-svc-dvw2m
  Apr 20 12:37:35.885: INFO: Got endpoints: latency-svc-k7sdp [750.439692ms]
  Apr 20 12:37:35.894: INFO: Created: latency-svc-thz7t
  Apr 20 12:37:35.936: INFO: Got endpoints: latency-svc-fj426 [750.232045ms]
  Apr 20 12:37:35.944: INFO: Created: latency-svc-9sknl
  Apr 20 12:37:35.984: INFO: Got endpoints: latency-svc-vqs75 [749.203465ms]
  Apr 20 12:37:35.994: INFO: Created: latency-svc-zdrs6
  Apr 20 12:37:36.034: INFO: Got endpoints: latency-svc-lqct4 [751.139979ms]
  Apr 20 12:37:36.043: INFO: Created: latency-svc-6ngvr
  Apr 20 12:37:36.085: INFO: Got endpoints: latency-svc-pfl4k [751.503726ms]
  Apr 20 12:37:36.094: INFO: Created: latency-svc-kfdgj
  Apr 20 12:37:36.136: INFO: Got endpoints: latency-svc-rqgxx [750.485094ms]
  Apr 20 12:37:36.145: INFO: Created: latency-svc-ck4wf
  Apr 20 12:37:36.186: INFO: Got endpoints: latency-svc-hxpfq [749.103869ms]
  Apr 20 12:37:36.196: INFO: Created: latency-svc-6xwt4
  Apr 20 12:37:36.233: INFO: Got endpoints: latency-svc-d546m [746.803593ms]
  Apr 20 12:37:36.244: INFO: Created: latency-svc-6trf8
  Apr 20 12:37:36.284: INFO: Got endpoints: latency-svc-zjsl4 [750.461171ms]
  Apr 20 12:37:36.294: INFO: Created: latency-svc-55kpw
  Apr 20 12:37:36.335: INFO: Got endpoints: latency-svc-qkxcz [751.194111ms]
  Apr 20 12:37:36.345: INFO: Created: latency-svc-9ztt9
  Apr 20 12:37:36.386: INFO: Got endpoints: latency-svc-npsmr [750.074135ms]
  Apr 20 12:37:36.395: INFO: Created: latency-svc-dqw5q
  Apr 20 12:37:36.435: INFO: Got endpoints: latency-svc-h6qlv [749.972087ms]
  Apr 20 12:37:36.445: INFO: Created: latency-svc-txfms
  Apr 20 12:37:36.484: INFO: Got endpoints: latency-svc-26dlx [747.661911ms]
  Apr 20 12:37:36.495: INFO: Created: latency-svc-7pvt9
  Apr 20 12:37:36.533: INFO: Got endpoints: latency-svc-qzbwt [749.722458ms]
  Apr 20 12:37:36.542: INFO: Created: latency-svc-knjhv
  Apr 20 12:37:36.585: INFO: Got endpoints: latency-svc-dvw2m [749.161455ms]
  Apr 20 12:37:36.594: INFO: Created: latency-svc-ct8v7
  Apr 20 12:37:36.636: INFO: Got endpoints: latency-svc-thz7t [750.677029ms]
  Apr 20 12:37:36.645: INFO: Created: latency-svc-zqtmx
  Apr 20 12:37:36.685: INFO: Got endpoints: latency-svc-9sknl [749.62442ms]
  Apr 20 12:37:36.695: INFO: Created: latency-svc-fqkcz
  Apr 20 12:37:36.733: INFO: Got endpoints: latency-svc-zdrs6 [749.205941ms]
  Apr 20 12:37:36.743: INFO: Created: latency-svc-qs8h6
  Apr 20 12:37:36.784: INFO: Got endpoints: latency-svc-6ngvr [749.319784ms]
  Apr 20 12:37:36.793: INFO: Created: latency-svc-dsdbm
  Apr 20 12:37:36.841: INFO: Got endpoints: latency-svc-kfdgj [755.898132ms]
  Apr 20 12:37:36.851: INFO: Created: latency-svc-bz29s
  Apr 20 12:37:36.886: INFO: Got endpoints: latency-svc-ck4wf [750.21879ms]
  Apr 20 12:37:36.897: INFO: Created: latency-svc-7rf8t
  Apr 20 12:37:36.934: INFO: Got endpoints: latency-svc-6xwt4 [747.873476ms]
  Apr 20 12:37:36.947: INFO: Created: latency-svc-hz65x
  Apr 20 12:37:36.984: INFO: Got endpoints: latency-svc-6trf8 [750.595345ms]
  Apr 20 12:37:36.994: INFO: Created: latency-svc-vhdmr
  Apr 20 12:37:37.034: INFO: Got endpoints: latency-svc-55kpw [749.805214ms]
  Apr 20 12:37:37.044: INFO: Created: latency-svc-s7t87
  Apr 20 12:37:37.086: INFO: Got endpoints: latency-svc-9ztt9 [751.399883ms]
  Apr 20 12:37:37.095: INFO: Created: latency-svc-x284c
  Apr 20 12:37:37.136: INFO: Got endpoints: latency-svc-dqw5q [750.295576ms]
  Apr 20 12:37:37.145: INFO: Created: latency-svc-d8zds
  Apr 20 12:37:37.185: INFO: Got endpoints: latency-svc-txfms [750.076882ms]
  Apr 20 12:37:37.197: INFO: Created: latency-svc-vjd2p
  Apr 20 12:37:37.234: INFO: Got endpoints: latency-svc-7pvt9 [750.746803ms]
  Apr 20 12:37:37.243: INFO: Created: latency-svc-46bls
  Apr 20 12:37:37.285: INFO: Got endpoints: latency-svc-knjhv [752.053854ms]
  Apr 20 12:37:37.295: INFO: Created: latency-svc-ncljx
  Apr 20 12:37:37.337: INFO: Got endpoints: latency-svc-ct8v7 [751.290747ms]
  Apr 20 12:37:37.347: INFO: Created: latency-svc-zqprq
  Apr 20 12:37:37.385: INFO: Got endpoints: latency-svc-zqtmx [748.72846ms]
  Apr 20 12:37:37.393: INFO: Created: latency-svc-kxsfs
  Apr 20 12:37:37.436: INFO: Got endpoints: latency-svc-fqkcz [750.742546ms]
  Apr 20 12:37:37.445: INFO: Created: latency-svc-qvc9l
  Apr 20 12:37:37.484: INFO: Got endpoints: latency-svc-qs8h6 [751.029288ms]
  Apr 20 12:37:37.496: INFO: Created: latency-svc-5x6wc
  Apr 20 12:37:37.535: INFO: Got endpoints: latency-svc-dsdbm [751.002915ms]
  Apr 20 12:37:37.546: INFO: Created: latency-svc-dcsx8
  Apr 20 12:37:37.586: INFO: Got endpoints: latency-svc-bz29s [744.733222ms]
  Apr 20 12:37:37.595: INFO: Created: latency-svc-b7986
  Apr 20 12:37:37.643: INFO: Got endpoints: latency-svc-7rf8t [756.393036ms]
  Apr 20 12:37:37.653: INFO: Created: latency-svc-jlntp
  Apr 20 12:37:37.685: INFO: Got endpoints: latency-svc-hz65x [750.796455ms]
  Apr 20 12:37:37.695: INFO: Created: latency-svc-s67bk
  Apr 20 12:37:37.734: INFO: Got endpoints: latency-svc-vhdmr [749.105222ms]
  Apr 20 12:37:37.744: INFO: Created: latency-svc-cd6jb
  Apr 20 12:37:37.787: INFO: Got endpoints: latency-svc-s7t87 [752.730344ms]
  Apr 20 12:37:37.797: INFO: Created: latency-svc-9w6qf
  Apr 20 12:37:37.835: INFO: Got endpoints: latency-svc-x284c [749.03445ms]
  Apr 20 12:37:37.844: INFO: Created: latency-svc-f5t89
  Apr 20 12:37:37.885: INFO: Got endpoints: latency-svc-d8zds [749.339519ms]
  Apr 20 12:37:37.895: INFO: Created: latency-svc-qfdk7
  Apr 20 12:37:37.933: INFO: Got endpoints: latency-svc-vjd2p [748.136057ms]
  Apr 20 12:37:37.943: INFO: Created: latency-svc-fq9dw
  Apr 20 12:37:37.983: INFO: Got endpoints: latency-svc-46bls [748.99301ms]
  Apr 20 12:37:37.992: INFO: Created: latency-svc-jp6gt
  Apr 20 12:37:38.036: INFO: Got endpoints: latency-svc-ncljx [751.350519ms]
  Apr 20 12:37:38.046: INFO: Created: latency-svc-9rnjw
  Apr 20 12:37:38.086: INFO: Got endpoints: latency-svc-zqprq [749.478999ms]
  Apr 20 12:37:38.096: INFO: Created: latency-svc-tkj7l
  Apr 20 12:37:38.135: INFO: Got endpoints: latency-svc-kxsfs [750.31821ms]
  Apr 20 12:37:38.145: INFO: Created: latency-svc-d7flw
  Apr 20 12:37:38.185: INFO: Got endpoints: latency-svc-qvc9l [748.510336ms]
  Apr 20 12:37:38.235: INFO: Got endpoints: latency-svc-5x6wc [750.325495ms]
  Apr 20 12:37:38.284: INFO: Got endpoints: latency-svc-dcsx8 [748.76538ms]
  Apr 20 12:37:38.336: INFO: Got endpoints: latency-svc-b7986 [750.444755ms]
  Apr 20 12:37:38.385: INFO: Got endpoints: latency-svc-jlntp [742.183683ms]
  Apr 20 12:37:38.435: INFO: Got endpoints: latency-svc-s67bk [750.17319ms]
  Apr 20 12:37:38.485: INFO: Got endpoints: latency-svc-cd6jb [750.714281ms]
  Apr 20 12:37:38.536: INFO: Got endpoints: latency-svc-9w6qf [748.931329ms]
  Apr 20 12:37:38.585: INFO: Got endpoints: latency-svc-f5t89 [748.976112ms]
  Apr 20 12:37:38.635: INFO: Got endpoints: latency-svc-qfdk7 [749.915138ms]
  Apr 20 12:37:38.684: INFO: Got endpoints: latency-svc-fq9dw [750.191435ms]
  Apr 20 12:37:38.737: INFO: Got endpoints: latency-svc-jp6gt [753.256429ms]
  Apr 20 12:37:38.784: INFO: Got endpoints: latency-svc-9rnjw [747.387783ms]
  Apr 20 12:37:38.836: INFO: Got endpoints: latency-svc-tkj7l [749.827438ms]
  Apr 20 12:37:38.884: INFO: Got endpoints: latency-svc-d7flw [749.017843ms]
  Apr 20 12:37:38.885: INFO: Latencies: [24.538548ms 36.364698ms 42.878067ms 52.266866ms 61.891213ms 69.125283ms 79.079325ms 79.506686ms 90.594137ms 98.683905ms 104.215323ms 105.221523ms 105.746337ms 106.418832ms 106.862223ms 106.973252ms 108.147426ms 108.185965ms 109.026195ms 110.441965ms 110.78658ms 111.302125ms 111.653274ms 113.181738ms 113.428248ms 113.633491ms 113.983391ms 116.425382ms 116.72355ms 118.46728ms 119.344248ms 121.494988ms 122.271533ms 128.104137ms 137.193652ms 167.399209ms 210.616642ms 252.972964ms 292.320798ms 334.003254ms 383.922268ms 423.573823ms 466.195588ms 511.8319ms 552.177292ms 595.061985ms 638.214885ms 680.080346ms 720.426056ms 742.183683ms 742.63372ms 742.643891ms 744.733222ms 744.779131ms 746.009596ms 746.758541ms 746.803593ms 747.387783ms 747.592129ms 747.661911ms 747.873476ms 747.921262ms 748.10439ms 748.136057ms 748.156867ms 748.162983ms 748.288083ms 748.345157ms 748.372389ms 748.430922ms 748.498981ms 748.510336ms 748.631582ms 748.632715ms 748.693404ms 748.72846ms 748.76538ms 748.931329ms 748.976112ms 748.99301ms 749.017843ms 749.03445ms 749.036905ms 749.096016ms 749.103869ms 749.105222ms 749.161455ms 749.203465ms 749.205941ms 749.244635ms 749.252576ms 749.309294ms 749.319784ms 749.325646ms 749.339519ms 749.363757ms 749.436572ms 749.443748ms 749.457798ms 749.463305ms 749.4693ms 749.478999ms 749.498543ms 749.515854ms 749.542169ms 749.556817ms 749.573908ms 749.578881ms 749.592001ms 749.597202ms 749.62442ms 749.649895ms 749.662842ms 749.710223ms 749.722458ms 749.775453ms 749.785897ms 749.805214ms 749.821446ms 749.827438ms 749.837003ms 749.915138ms 749.925069ms 749.945958ms 749.972087ms 749.983261ms 750.034686ms 750.038684ms 750.068649ms 750.074135ms 750.076882ms 750.09695ms 750.147665ms 750.17319ms 750.191435ms 750.204664ms 750.21879ms 750.227073ms 750.232045ms 750.23598ms 750.285933ms 750.295576ms 750.31821ms 750.325495ms 750.416941ms 750.433569ms 750.439692ms 750.444755ms 750.461171ms 750.485094ms 750.486633ms 750.492583ms 750.56722ms 750.595345ms 750.672798ms 750.677029ms 750.677627ms 750.695823ms 750.707369ms 750.714281ms 750.742546ms 750.746803ms 750.755066ms 750.796455ms 750.804026ms 750.809571ms 750.828572ms 750.845103ms 750.950708ms 750.956897ms 751.002915ms 751.029ms 751.029288ms 751.04923ms 751.128859ms 751.133364ms 751.139979ms 751.144171ms 751.194111ms 751.290747ms 751.292946ms 751.350519ms 751.399883ms 751.45602ms 751.503726ms 751.589296ms 751.603567ms 751.618914ms 751.75137ms 752.053854ms 752.14797ms 752.730344ms 753.026011ms 753.256429ms 753.453041ms 753.957895ms 755.898132ms 755.959575ms 756.393036ms 756.531529ms]
  Apr 20 12:37:38.885: INFO: 50 %ile: 749.4693ms
  Apr 20 12:37:38.885: INFO: 90 %ile: 751.292946ms
  Apr 20 12:37:38.885: INFO: 99 %ile: 756.393036ms
  Apr 20 12:37:38.885: INFO: Total sample count: 200
  Apr 20 12:37:38.885: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-8215" for this suite. @ 04/20/24 12:37:38.89
• [10.762 seconds]
------------------------------
S
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 04/20/24 12:37:38.897
  Apr 20 12:37:38.897: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 04/20/24 12:37:38.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:37:38.914
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:37:38.917
  STEP: creating a target pod @ 04/20/24 12:37:38.919
  STEP: adding an ephemeral container @ 04/20/24 12:37:40.938
  STEP: checking pod container endpoints @ 04/20/24 12:37:42.952
  Apr 20 12:37:42.952: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-4049 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 12:37:42.952: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  Apr 20 12:37:42.953: INFO: ExecWithOptions: Clientset creation
  Apr 20 12:37:42.953: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-4049/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Apr 20 12:37:43.010: INFO: Exec stderr: ""
  Apr 20 12:37:43.017: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-4049" for this suite. @ 04/20/24 12:37:43.02
• [4.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 04/20/24 12:37:43.028
  Apr 20 12:37:43.028: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename secrets @ 04/20/24 12:37:43.029
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:37:43.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:37:43.048
  STEP: Creating secret with name secret-test-959b3705-bc1f-4da8-bbfb-2ac0f9f8dbdf @ 04/20/24 12:37:43.051
  STEP: Creating a pod to test consume secrets @ 04/20/24 12:37:43.057
  STEP: Saw pod success @ 04/20/24 12:37:47.077
  Apr 20 12:37:47.080: INFO: Trying to get logs from node ip-172-31-81-0 pod pod-secrets-feb23a93-b406-4e4f-b3f3-0b92975f8278 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 12:37:47.094
  Apr 20 12:37:47.110: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3415" for this suite. @ 04/20/24 12:37:47.113
• [4.090 seconds]
------------------------------
S
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 04/20/24 12:37:47.118
  Apr 20 12:37:47.118: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename cronjob @ 04/20/24 12:37:47.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:37:47.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:37:47.14
  STEP: Creating a suspended cronjob @ 04/20/24 12:37:47.142
  STEP: Ensuring no jobs are scheduled @ 04/20/24 12:37:47.148
  STEP: Ensuring no job exists by listing jobs explicitly @ 04/20/24 12:42:47.155
  STEP: Removing cronjob @ 04/20/24 12:42:47.158
  Apr 20 12:42:47.163: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7856" for this suite. @ 04/20/24 12:42:47.166
• [300.055 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 04/20/24 12:42:47.173
  Apr 20 12:42:47.173: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename projected @ 04/20/24 12:42:47.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:42:47.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:42:47.194
  STEP: Creating projection with secret that has name projected-secret-test-map-7fe07c91-e86a-49e9-ae0b-f7e9ab71bd43 @ 04/20/24 12:42:47.196
  STEP: Creating a pod to test consume secrets @ 04/20/24 12:42:47.2
  STEP: Saw pod success @ 04/20/24 12:42:49.212
  Apr 20 12:42:49.215: INFO: Trying to get logs from node ip-172-31-41-198 pod pod-projected-secrets-6c37716c-14a9-4675-9270-f7b3a2d63691 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 12:42:49.23
  Apr 20 12:42:49.245: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2395" for this suite. @ 04/20/24 12:42:49.248
• [2.083 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 04/20/24 12:42:49.256
  Apr 20 12:42:49.256: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename namespaces @ 04/20/24 12:42:49.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:42:49.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:42:49.274
  STEP: Creating a test namespace @ 04/20/24 12:42:49.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:42:49.292
  STEP: Creating a pod in the namespace @ 04/20/24 12:42:49.294
  STEP: Waiting for the pod to have running status @ 04/20/24 12:42:49.301
  STEP: Deleting the namespace @ 04/20/24 12:42:51.311
  STEP: Waiting for the namespace to be removed. @ 04/20/24 12:42:51.318
  STEP: Recreating the namespace @ 04/20/24 12:43:02.323
  STEP: Verifying there are no pods in the namespace @ 04/20/24 12:43:02.341
  Apr 20 12:43:02.344: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5793" for this suite. @ 04/20/24 12:43:02.348
  STEP: Destroying namespace "nsdeletetest-2203" for this suite. @ 04/20/24 12:43:02.356
  Apr 20 12:43:02.359: INFO: Namespace nsdeletetest-2203 was already deleted
  STEP: Destroying namespace "nsdeletetest-4330" for this suite. @ 04/20/24 12:43:02.359
• [13.108 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 04/20/24 12:43:02.364
  Apr 20 12:43:02.364: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename webhook @ 04/20/24 12:43:02.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:43:02.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:43:02.383
  STEP: Setting up server cert @ 04/20/24 12:43:02.407
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 12:43:02.583
  STEP: Deploying the webhook pod @ 04/20/24 12:43:02.592
  STEP: Wait for the deployment to be ready @ 04/20/24 12:43:02.604
  Apr 20 12:43:02.612: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/20/24 12:43:04.624
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 12:43:04.633
  Apr 20 12:43:05.633: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 04/20/24 12:43:05.64
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/20/24 12:43:05.64
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 04/20/24 12:43:05.653
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 04/20/24 12:43:06.665
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/20/24 12:43:06.665
  STEP: Having no error when timeout is longer than webhook latency @ 04/20/24 12:43:07.699
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/20/24 12:43:07.699
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 04/20/24 12:43:12.733
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/20/24 12:43:12.733
  Apr 20 12:43:17.804: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5291" for this suite. @ 04/20/24 12:43:17.809
  STEP: Destroying namespace "webhook-markers-2413" for this suite. @ 04/20/24 12:43:17.816
• [15.457 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1084
  STEP: Creating a kubernetes client @ 04/20/24 12:43:17.822
  Apr 20 12:43:17.822: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 12:43:17.822
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:43:17.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:43:17.841
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/20/24 12:43:17.844
  Apr 20 12:43:17.844: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-6223 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Apr 20 12:43:17.895: INFO: stderr: ""
  Apr 20 12:43:17.895: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 04/20/24 12:43:17.895
  Apr 20 12:43:17.895: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-6223 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  Apr 20 12:43:17.942: INFO: stderr: ""
  Apr 20 12:43:17.942: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/20/24 12:43:17.942
  Apr 20 12:43:17.945: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-6223 delete pods e2e-test-httpd-pod'
  Apr 20 12:43:19.111: INFO: stderr: ""
  Apr 20 12:43:19.111: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Apr 20 12:43:19.111: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6223" for this suite. @ 04/20/24 12:43:19.115
• [1.300 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 04/20/24 12:43:19.122
  Apr 20 12:43:19.122: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename services @ 04/20/24 12:43:19.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:43:19.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:43:19.14
  STEP: creating service endpoint-test2 in namespace services-4216 @ 04/20/24 12:43:19.143
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4216 to expose endpoints map[] @ 04/20/24 12:43:19.153
  Apr 20 12:43:19.156: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  Apr 20 12:43:20.164: INFO: successfully validated that service endpoint-test2 in namespace services-4216 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-4216 @ 04/20/24 12:43:20.164
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4216 to expose endpoints map[pod1:[80]] @ 04/20/24 12:43:22.186
  Apr 20 12:43:22.196: INFO: successfully validated that service endpoint-test2 in namespace services-4216 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 04/20/24 12:43:22.196
  Apr 20 12:43:22.196: INFO: Creating new exec pod
  Apr 20 12:43:25.210: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-4216 exec execpodb778k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Apr 20 12:43:25.312: INFO: stderr: "+ + ncecho -v hostName -t\n -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Apr 20 12:43:25.312: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 12:43:25.312: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-4216 exec execpodb778k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.140 80'
  Apr 20 12:43:25.407: INFO: stderr: "+ nc -v -t -w 2 10.152.183.140 80\n+ echo hostName\nConnection to 10.152.183.140 80 port [tcp/http] succeeded!\n"
  Apr 20 12:43:25.407: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-4216 @ 04/20/24 12:43:25.407
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4216 to expose endpoints map[pod1:[80] pod2:[80]] @ 04/20/24 12:43:27.425
  Apr 20 12:43:27.438: INFO: successfully validated that service endpoint-test2 in namespace services-4216 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 04/20/24 12:43:27.438
  Apr 20 12:43:28.438: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-4216 exec execpodb778k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Apr 20 12:43:28.526: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Apr 20 12:43:28.526: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 12:43:28.526: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-4216 exec execpodb778k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.140 80'
  Apr 20 12:43:28.619: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.140 80\nConnection to 10.152.183.140 80 port [tcp/http] succeeded!\n"
  Apr 20 12:43:28.619: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-4216 @ 04/20/24 12:43:28.619
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4216 to expose endpoints map[pod2:[80]] @ 04/20/24 12:43:28.638
  Apr 20 12:43:29.659: INFO: successfully validated that service endpoint-test2 in namespace services-4216 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 04/20/24 12:43:29.659
  Apr 20 12:43:30.659: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-4216 exec execpodb778k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Apr 20 12:43:30.752: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Apr 20 12:43:30.752: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 12:43:30.753: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-4216 exec execpodb778k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.140 80'
  Apr 20 12:43:30.841: INFO: stderr: "+ nc -v -t -w 2 10.152.183.140 80\n+ echo hostName\nConnection to 10.152.183.140 80 port [tcp/http] succeeded!\n"
  Apr 20 12:43:30.841: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-4216 @ 04/20/24 12:43:30.841
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4216 to expose endpoints map[] @ 04/20/24 12:43:30.856
  Apr 20 12:43:30.866: INFO: successfully validated that service endpoint-test2 in namespace services-4216 exposes endpoints map[]
  Apr 20 12:43:30.879: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4216" for this suite. @ 04/20/24 12:43:30.883
• [11.767 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 04/20/24 12:43:30.889
  Apr 20 12:43:30.889: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename dns @ 04/20/24 12:43:30.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:43:30.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:43:30.913
  STEP: Creating a test externalName service @ 04/20/24 12:43:30.916
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1968.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-1968.svc.cluster.local; sleep 1; done
   @ 04/20/24 12:43:30.922
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1968.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-1968.svc.cluster.local; sleep 1; done
   @ 04/20/24 12:43:30.922
  STEP: creating a pod to probe DNS @ 04/20/24 12:43:30.922
  STEP: submitting the pod to kubernetes @ 04/20/24 12:43:30.922
  STEP: retrieving the pod @ 04/20/24 12:43:32.938
  STEP: looking for the results for each expected name from probers @ 04/20/24 12:43:32.942
  Apr 20 12:43:32.951: INFO: DNS probes using dns-test-f6c2ac13-bd96-43f8-bf8e-a374d5968f31 succeeded

  STEP: changing the externalName to bar.example.com @ 04/20/24 12:43:32.951
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1968.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-1968.svc.cluster.local; sleep 1; done
   @ 04/20/24 12:43:32.959
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1968.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-1968.svc.cluster.local; sleep 1; done
   @ 04/20/24 12:43:32.959
  STEP: creating a second pod to probe DNS @ 04/20/24 12:43:32.959
  STEP: submitting the pod to kubernetes @ 04/20/24 12:43:32.959
  STEP: retrieving the pod @ 04/20/24 12:43:38.983
  STEP: looking for the results for each expected name from probers @ 04/20/24 12:43:38.986
  Apr 20 12:43:38.995: INFO: DNS probes using dns-test-e1c233a5-6d64-48f0-adbb-8f8f24b2e11e succeeded

  STEP: changing the service to type=ClusterIP @ 04/20/24 12:43:38.995
  W0420 12:43:39.008847      20 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1968.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-1968.svc.cluster.local; sleep 1; done
   @ 04/20/24 12:43:39.009
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1968.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-1968.svc.cluster.local; sleep 1; done
   @ 04/20/24 12:43:39.009
  STEP: creating a third pod to probe DNS @ 04/20/24 12:43:39.01
  STEP: submitting the pod to kubernetes @ 04/20/24 12:43:39.013
  STEP: retrieving the pod @ 04/20/24 12:43:41.028
  STEP: looking for the results for each expected name from probers @ 04/20/24 12:43:41.031
  Apr 20 12:43:41.041: INFO: DNS probes using dns-test-1f3a8ebc-a56b-4a13-8914-0de9e1eaf8af succeeded

  STEP: deleting the pod @ 04/20/24 12:43:41.041
  STEP: deleting the pod @ 04/20/24 12:43:41.055
  STEP: deleting the pod @ 04/20/24 12:43:41.07
  STEP: deleting the test externalName service @ 04/20/24 12:43:41.092
  Apr 20 12:43:41.105: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1968" for this suite. @ 04/20/24 12:43:41.108
• [10.227 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 04/20/24 12:43:41.116
  Apr 20 12:43:41.116: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 12:43:41.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:43:41.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:43:41.136
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 04/20/24 12:43:41.138
  STEP: Saw pod success @ 04/20/24 12:43:45.158
  Apr 20 12:43:45.162: INFO: Trying to get logs from node ip-172-31-41-198 pod pod-f4769d50-6e72-4a81-ba33-aa824c425adb container test-container: <nil>
  STEP: delete the pod @ 04/20/24 12:43:45.169
  Apr 20 12:43:45.187: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5878" for this suite. @ 04/20/24 12:43:45.19
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 04/20/24 12:43:45.198
  Apr 20 12:43:45.198: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename disruption @ 04/20/24 12:43:45.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:43:45.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:43:45.217
  STEP: creating the pdb @ 04/20/24 12:43:45.222
  STEP: Waiting for the pdb to be processed @ 04/20/24 12:43:45.227
  STEP: updating the pdb @ 04/20/24 12:43:45.237
  STEP: Waiting for the pdb to be processed @ 04/20/24 12:43:45.243
  STEP: patching the pdb @ 04/20/24 12:43:47.247
  STEP: Waiting for the pdb to be processed @ 04/20/24 12:43:47.255
  STEP: Waiting for the pdb to be deleted @ 04/20/24 12:43:49.265
  Apr 20 12:43:49.268: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9070" for this suite. @ 04/20/24 12:43:49.271
• [4.080 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 04/20/24 12:43:49.278
  Apr 20 12:43:49.278: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 12:43:49.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:43:49.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:43:49.298
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 04/20/24 12:43:49.301
  STEP: Saw pod success @ 04/20/24 12:43:51.316
  Apr 20 12:43:51.319: INFO: Trying to get logs from node ip-172-31-41-198 pod pod-57196077-67a2-4d58-8f9a-75d780fe4913 container test-container: <nil>
  STEP: delete the pod @ 04/20/24 12:43:51.325
  Apr 20 12:43:51.340: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-119" for this suite. @ 04/20/24 12:43:51.343
• [2.071 seconds]
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 04/20/24 12:43:51.349
  Apr 20 12:43:51.349: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename services @ 04/20/24 12:43:51.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:43:51.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:43:51.367
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-5424 @ 04/20/24 12:43:51.37
  STEP: changing the ExternalName service to type=NodePort @ 04/20/24 12:43:51.374
  STEP: creating replication controller externalname-service in namespace services-5424 @ 04/20/24 12:43:51.392
  I0420 12:43:51.400156      20 runners.go:197] Created replication controller with name: externalname-service, namespace: services-5424, replica count: 2
  I0420 12:43:54.451434      20 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 20 12:43:54.451: INFO: Creating new exec pod
  Apr 20 12:43:57.474: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-5424 exec execpods6wb4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Apr 20 12:43:57.579: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Apr 20 12:43:57.579: INFO: stdout: "externalname-service-2ppqt"
  Apr 20 12:43:57.579: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-5424 exec execpods6wb4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.188 80'
  Apr 20 12:43:57.668: INFO: stderr: "+ nc -v -t -w 2 10.152.183.188 80\n+ echo hostName\nConnection to 10.152.183.188 80 port [tcp/http] succeeded!\n"
  Apr 20 12:43:57.668: INFO: stdout: ""
  Apr 20 12:43:58.579: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-5424 exec execpods6wb4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.188 80'
  Apr 20 12:43:58.665: INFO: stderr: "+ nc -v -t -w 2 10.152.183.188 80\n+ echo hostName\nConnection to 10.152.183.188 80 port [tcp/http] succeeded!\n"
  Apr 20 12:43:58.665: INFO: stdout: "externalname-service-2ppqt"
  Apr 20 12:43:58.665: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-5424 exec execpods6wb4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.41.198 30225'
  Apr 20 12:43:58.759: INFO: stderr: "+ nc -v -t -w 2 172.31.41.198 30225\nConnection to 172.31.41.198 30225 port [tcp/*] succeeded!\n+ echo hostName\n"
  Apr 20 12:43:58.759: INFO: stdout: ""
  Apr 20 12:43:59.665: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-5424 exec execpods6wb4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.41.198 30225'
  Apr 20 12:43:59.755: INFO: stderr: "+ nc -v -t -w 2 172.31.41.198 30225\nConnection to 172.31.41.198 30225 port [tcp/*] succeeded!\n+ echo hostName\n"
  Apr 20 12:43:59.755: INFO: stdout: ""
  Apr 20 12:44:00.665: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-5424 exec execpods6wb4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.41.198 30225'
  Apr 20 12:44:00.751: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.41.198 30225\nConnection to 172.31.41.198 30225 port [tcp/*] succeeded!\n"
  Apr 20 12:44:00.751: INFO: stdout: ""
  Apr 20 12:44:01.665: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-5424 exec execpods6wb4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.41.198 30225'
  Apr 20 12:44:01.759: INFO: stderr: "+ nc -v -t -w 2 172.31.41.198 30225\nConnection to 172.31.41.198 30225 port [tcp/*] succeeded!\n+ echo hostName\n"
  Apr 20 12:44:01.759: INFO: stdout: ""
  Apr 20 12:44:02.665: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-5424 exec execpods6wb4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.41.198 30225'
  Apr 20 12:44:02.752: INFO: stderr: "+ nc -v -t -w 2 172.31.41.198 30225\n+ echo hostName\nConnection to 172.31.41.198 30225 port [tcp/*] succeeded!\n"
  Apr 20 12:44:02.753: INFO: stdout: "externalname-service-2ppqt"
  Apr 20 12:44:02.753: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-5424 exec execpods6wb4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.81.0 30225'
  Apr 20 12:44:02.842: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.81.0 30225\nConnection to 172.31.81.0 30225 port [tcp/*] succeeded!\n"
  Apr 20 12:44:02.842: INFO: stdout: ""
  Apr 20 12:44:03.753: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-5424 exec execpods6wb4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.81.0 30225'
  Apr 20 12:44:03.842: INFO: stderr: "+ nc -v -t -w 2 172.31.81.0 30225\n+ echo hostName\nConnection to 172.31.81.0 30225 port [tcp/*] succeeded!\n"
  Apr 20 12:44:03.842: INFO: stdout: ""
  Apr 20 12:44:04.753: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-5424 exec execpods6wb4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.81.0 30225'
  Apr 20 12:44:04.848: INFO: stderr: "+ nc -v -t -w 2 172.31.81.0 30225\n+ echo hostName\nConnection to 172.31.81.0 30225 port [tcp/*] succeeded!\n"
  Apr 20 12:44:04.848: INFO: stdout: ""
  Apr 20 12:44:05.753: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-5424 exec execpods6wb4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.81.0 30225'
  Apr 20 12:44:05.847: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.81.0 30225\nConnection to 172.31.81.0 30225 port [tcp/*] succeeded!\n"
  Apr 20 12:44:05.847: INFO: stdout: "externalname-service-5gx4h"
  Apr 20 12:44:05.847: INFO: Cleaning up the ExternalName to NodePort test service
  Apr 20 12:44:05.866: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5424" for this suite. @ 04/20/24 12:44:05.87
• [14.527 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 04/20/24 12:44:05.875
  Apr 20 12:44:05.875: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename sched-preemption @ 04/20/24 12:44:05.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:44:05.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:44:05.895
  Apr 20 12:44:05.911: INFO: Waiting up to 1m0s for all nodes to be ready
  Apr 20 12:45:05.916: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 04/20/24 12:45:05.92
  Apr 20 12:45:05.920: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename sched-preemption-path @ 04/20/24 12:45:05.921
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:45:05.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:45:05.939
  Apr 20 12:45:05.953: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Apr 20 12:45:05.955: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Apr 20 12:45:06.011: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-9088" for this suite. @ 04/20/24 12:45:06.014
  Apr 20 12:45:06.021: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-647" for this suite. @ 04/20/24 12:45:06.023
• [60.154 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 04/20/24 12:45:06.029
  Apr 20 12:45:06.029: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename configmap @ 04/20/24 12:45:06.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:45:06.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:45:06.049
  STEP: Creating configMap with name configmap-test-volume-93ed47b5-00e1-49d9-ac9e-24ae2e47ed8b @ 04/20/24 12:45:06.051
  STEP: Creating a pod to test consume configMaps @ 04/20/24 12:45:06.056
  STEP: Saw pod success @ 04/20/24 12:45:10.076
  Apr 20 12:45:10.079: INFO: Trying to get logs from node ip-172-31-41-198 pod pod-configmaps-2c700eca-cead-461a-ad0d-fadafd20c5e0 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 12:45:10.086
  Apr 20 12:45:10.102: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7650" for this suite. @ 04/20/24 12:45:10.105
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 04/20/24 12:45:10.111
  Apr 20 12:45:10.111: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename projected @ 04/20/24 12:45:10.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:45:10.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:45:10.132
  STEP: Creating projection with secret that has name projected-secret-test-b3b8a823-a087-43d0-aa2f-e3d7d8b0429e @ 04/20/24 12:45:10.135
  STEP: Creating a pod to test consume secrets @ 04/20/24 12:45:10.139
  STEP: Saw pod success @ 04/20/24 12:45:14.163
  Apr 20 12:45:14.166: INFO: Trying to get logs from node ip-172-31-41-198 pod pod-projected-secrets-82c11af8-8a73-4a58-ab9b-5f44f47a69e8 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 12:45:14.172
  Apr 20 12:45:14.188: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-336" for this suite. @ 04/20/24 12:45:14.191
• [4.087 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 04/20/24 12:45:14.198
  Apr 20 12:45:14.198: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename dns @ 04/20/24 12:45:14.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:45:14.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:45:14.219
  STEP: Creating a test headless service @ 04/20/24 12:45:14.221
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2467.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-2467.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 04/20/24 12:45:14.226
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2467.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-2467.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 04/20/24 12:45:14.226
  STEP: creating a pod to probe DNS @ 04/20/24 12:45:14.226
  STEP: submitting the pod to kubernetes @ 04/20/24 12:45:14.226
  STEP: retrieving the pod @ 04/20/24 12:45:16.246
  STEP: looking for the results for each expected name from probers @ 04/20/24 12:45:16.249
  Apr 20 12:45:16.265: INFO: DNS probes using dns-2467/dns-test-8eab1c24-02bb-4056-a89d-0a568d9a40f9 succeeded

  STEP: deleting the pod @ 04/20/24 12:45:16.265
  STEP: deleting the test headless service @ 04/20/24 12:45:16.281
  Apr 20 12:45:16.291: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2467" for this suite. @ 04/20/24 12:45:16.296
• [2.104 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 04/20/24 12:45:16.302
  Apr 20 12:45:16.302: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename taint-single-pod @ 04/20/24 12:45:16.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:45:16.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:45:16.321
  Apr 20 12:45:16.323: INFO: Waiting up to 1m0s for all nodes to be ready
  Apr 20 12:46:16.324: INFO: Waiting for terminating namespaces to be deleted...
  Apr 20 12:46:16.328: INFO: Starting informer...
  STEP: Starting pod... @ 04/20/24 12:46:16.329
  Apr 20 12:46:16.543: INFO: Pod is running on ip-172-31-41-198. Tainting Node
  STEP: Trying to apply a taint on the Node @ 04/20/24 12:46:16.543
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/20/24 12:46:16.552
  STEP: Waiting short time to make sure Pod is queued for deletion @ 04/20/24 12:46:16.556
  Apr 20 12:46:16.556: INFO: Pod wasn't evicted. Proceeding
  Apr 20 12:46:16.556: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/20/24 12:46:16.57
  STEP: Waiting some time to make sure that toleration time passed. @ 04/20/24 12:46:16.572
  Apr 20 12:47:31.573: INFO: Pod wasn't evicted. Test successful
  Apr 20 12:47:31.573: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-3146" for this suite. @ 04/20/24 12:47:31.577
• [135.282 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 04/20/24 12:47:31.584
  Apr 20 12:47:31.584: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename watch @ 04/20/24 12:47:31.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:47:31.601
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:47:31.603
  STEP: creating a new configmap @ 04/20/24 12:47:31.606
  STEP: modifying the configmap once @ 04/20/24 12:47:31.61
  STEP: modifying the configmap a second time @ 04/20/24 12:47:31.618
  STEP: deleting the configmap @ 04/20/24 12:47:31.625
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 04/20/24 12:47:31.63
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 04/20/24 12:47:31.631
  Apr 20 12:47:31.631: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-4452  f489ed12-fda3-4259-8884-11b61221e563 16799 0 2024-04-20 12:47:31 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-04-20 12:47:31 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 12:47:31.632: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-4452  f489ed12-fda3-4259-8884-11b61221e563 16800 0 2024-04-20 12:47:31 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-04-20 12:47:31 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 12:47:31.632: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4452" for this suite. @ 04/20/24 12:47:31.635
• [0.057 seconds]
------------------------------
SS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 04/20/24 12:47:31.641
  Apr 20 12:47:31.641: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename subpath @ 04/20/24 12:47:31.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:47:31.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:47:31.659
  STEP: Setting up data @ 04/20/24 12:47:31.662
  STEP: Creating pod pod-subpath-test-configmap-wlls @ 04/20/24 12:47:31.669
  STEP: Creating a pod to test atomic-volume-subpath @ 04/20/24 12:47:31.669
  STEP: Saw pod success @ 04/20/24 12:47:55.741
  Apr 20 12:47:55.745: INFO: Trying to get logs from node ip-172-31-81-0 pod pod-subpath-test-configmap-wlls container test-container-subpath-configmap-wlls: <nil>
  STEP: delete the pod @ 04/20/24 12:47:55.758
  STEP: Deleting pod pod-subpath-test-configmap-wlls @ 04/20/24 12:47:55.774
  Apr 20 12:47:55.774: INFO: Deleting pod "pod-subpath-test-configmap-wlls" in namespace "subpath-1266"
  Apr 20 12:47:55.776: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1266" for this suite. @ 04/20/24 12:47:55.779
• [24.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 04/20/24 12:47:55.786
  Apr 20 12:47:55.786: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename configmap @ 04/20/24 12:47:55.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:47:55.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:47:55.807
  STEP: Creating configMap with name configmap-test-upd-3ef15d2c-ab1d-409f-bf17-3fb3c8467aaa @ 04/20/24 12:47:55.813
  STEP: Creating the pod @ 04/20/24 12:47:55.817
  STEP: Waiting for pod with text data @ 04/20/24 12:47:57.834
  STEP: Waiting for pod with binary data @ 04/20/24 12:47:57.853
  Apr 20 12:47:57.860: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2206" for this suite. @ 04/20/24 12:47:57.863
• [2.084 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 04/20/24 12:47:57.87
  Apr 20 12:47:57.870: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename pods @ 04/20/24 12:47:57.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:47:57.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:47:57.891
  STEP: creating the pod @ 04/20/24 12:47:57.893
  STEP: submitting the pod to kubernetes @ 04/20/24 12:47:57.893
  W0420 12:47:57.902540      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 04/20/24 12:47:59.915
  STEP: updating the pod @ 04/20/24 12:47:59.918
  Apr 20 12:48:00.431: INFO: Successfully updated pod "pod-update-activedeadlineseconds-0a428a13-3590-4bba-bac2-067712b484c3"
  Apr 20 12:48:04.444: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6364" for this suite. @ 04/20/24 12:48:04.448
• [6.584 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 04/20/24 12:48:04.454
  Apr 20 12:48:04.454: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename containers @ 04/20/24 12:48:04.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:48:04.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:48:04.474
  Apr 20 12:48:06.502: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7701" for this suite. @ 04/20/24 12:48:06.506
• [2.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 04/20/24 12:48:06.512
  Apr 20 12:48:06.512: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 12:48:06.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:48:06.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:48:06.537
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 04/20/24 12:48:06.54
  STEP: Saw pod success @ 04/20/24 12:48:10.56
  Apr 20 12:48:10.563: INFO: Trying to get logs from node ip-172-31-41-198 pod pod-9959ec5f-116e-4e34-a24a-e8539343c1ad container test-container: <nil>
  STEP: delete the pod @ 04/20/24 12:48:10.57
  Apr 20 12:48:10.588: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2382" for this suite. @ 04/20/24 12:48:10.591
• [4.084 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 04/20/24 12:48:10.597
  Apr 20 12:48:10.597: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 12:48:10.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:48:10.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:48:10.616
  STEP: Creating a ResourceQuota @ 04/20/24 12:48:10.618
  STEP: Getting a ResourceQuota @ 04/20/24 12:48:10.622
  STEP: Listing all ResourceQuotas with LabelSelector @ 04/20/24 12:48:10.625
  STEP: Patching the ResourceQuota @ 04/20/24 12:48:10.628
  STEP: Deleting a Collection of ResourceQuotas @ 04/20/24 12:48:10.633
  STEP: Verifying the deleted ResourceQuota @ 04/20/24 12:48:10.644
  Apr 20 12:48:10.646: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5053" for this suite. @ 04/20/24 12:48:10.649
• [0.060 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 04/20/24 12:48:10.657
  Apr 20 12:48:10.657: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/20/24 12:48:10.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:48:10.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:48:10.674
  Apr 20 12:48:10.676: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/20/24 12:48:11.892
  Apr 20 12:48:11.892: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=crd-publish-openapi-7041 --namespace=crd-publish-openapi-7041 create -f -'
  Apr 20 12:48:13.951: INFO: stderr: ""
  Apr 20 12:48:13.951: INFO: stdout: "e2e-test-crd-publish-openapi-1080-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Apr 20 12:48:13.951: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=crd-publish-openapi-7041 --namespace=crd-publish-openapi-7041 delete e2e-test-crd-publish-openapi-1080-crds test-cr'
  Apr 20 12:48:14.010: INFO: stderr: ""
  Apr 20 12:48:14.010: INFO: stdout: "e2e-test-crd-publish-openapi-1080-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Apr 20 12:48:14.010: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=crd-publish-openapi-7041 --namespace=crd-publish-openapi-7041 apply -f -'
  Apr 20 12:48:14.063: INFO: stderr: ""
  Apr 20 12:48:14.063: INFO: stdout: "e2e-test-crd-publish-openapi-1080-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Apr 20 12:48:14.063: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=crd-publish-openapi-7041 --namespace=crd-publish-openapi-7041 delete e2e-test-crd-publish-openapi-1080-crds test-cr'
  Apr 20 12:48:14.112: INFO: stderr: ""
  Apr 20 12:48:14.112: INFO: stdout: "e2e-test-crd-publish-openapi-1080-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 04/20/24 12:48:14.112
  Apr 20 12:48:14.112: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=crd-publish-openapi-7041 explain e2e-test-crd-publish-openapi-1080-crds'
  Apr 20 12:48:14.150: INFO: stderr: ""
  Apr 20 12:48:14.150: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-1080-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  Apr 20 12:48:15.404: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7041" for this suite. @ 04/20/24 12:48:15.412
• [4.765 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 04/20/24 12:48:15.422
  Apr 20 12:48:15.422: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 12:48:15.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:48:15.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:48:15.452
  STEP: Counting existing ResourceQuota @ 04/20/24 12:48:15.455
  STEP: Creating a ResourceQuota @ 04/20/24 12:48:20.46
  STEP: Ensuring resource quota status is calculated @ 04/20/24 12:48:20.467
  Apr 20 12:48:22.473: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4434" for this suite. @ 04/20/24 12:48:22.477
• [7.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 04/20/24 12:48:22.485
  Apr 20 12:48:22.485: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename endpointslice @ 04/20/24 12:48:22.485
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:48:22.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:48:22.503
  STEP: referencing a single matching pod @ 04/20/24 12:48:27.576
  STEP: referencing matching pods with named port @ 04/20/24 12:48:32.585
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 04/20/24 12:48:37.594
  STEP: recreating EndpointSlices after they've been deleted @ 04/20/24 12:48:42.604
  Apr 20 12:48:42.629: INFO: EndpointSlice for Service endpointslice-9121/example-named-port not found
  Apr 20 12:48:52.635: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9121" for this suite. @ 04/20/24 12:48:52.64
• [30.163 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 04/20/24 12:48:52.648
  Apr 20 12:48:52.648: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename deployment @ 04/20/24 12:48:52.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:48:52.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:48:52.668
  STEP: creating a Deployment @ 04/20/24 12:48:52.675
  Apr 20 12:48:52.675: INFO: Creating simple deployment test-deployment-5fxkr
  Apr 20 12:48:52.695: INFO: deployment "test-deployment-5fxkr" doesn't have the required revision set
  STEP: Getting /status @ 04/20/24 12:48:54.713
  Apr 20 12:48:54.717: INFO: Deployment test-deployment-5fxkr has Conditions: [{Available True 2024-04-20 12:48:53 +0000 UTC 2024-04-20 12:48:53 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-04-20 12:48:53 +0000 UTC 2024-04-20 12:48:52 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-5fxkr-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 04/20/24 12:48:54.717
  Apr 20 12:48:54.729: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 12, 48, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 12, 48, 53, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 12, 48, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 12, 48, 52, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-5fxkr-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 04/20/24 12:48:54.729
  Apr 20 12:48:54.730: INFO: Observed &Deployment event: ADDED
  Apr 20 12:48:54.730: INFO: Observed Deployment test-deployment-5fxkr in namespace deployment-5925 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-20 12:48:52 +0000 UTC 2024-04-20 12:48:52 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-5fxkr-5d576bd769"}
  Apr 20 12:48:54.731: INFO: Observed &Deployment event: MODIFIED
  Apr 20 12:48:54.731: INFO: Observed Deployment test-deployment-5fxkr in namespace deployment-5925 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-20 12:48:52 +0000 UTC 2024-04-20 12:48:52 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-5fxkr-5d576bd769"}
  Apr 20 12:48:54.731: INFO: Observed Deployment test-deployment-5fxkr in namespace deployment-5925 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-04-20 12:48:52 +0000 UTC 2024-04-20 12:48:52 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Apr 20 12:48:54.731: INFO: Observed &Deployment event: MODIFIED
  Apr 20 12:48:54.731: INFO: Observed Deployment test-deployment-5fxkr in namespace deployment-5925 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-04-20 12:48:52 +0000 UTC 2024-04-20 12:48:52 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Apr 20 12:48:54.731: INFO: Observed Deployment test-deployment-5fxkr in namespace deployment-5925 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-20 12:48:52 +0000 UTC 2024-04-20 12:48:52 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-5fxkr-5d576bd769" is progressing.}
  Apr 20 12:48:54.731: INFO: Observed &Deployment event: MODIFIED
  Apr 20 12:48:54.731: INFO: Observed Deployment test-deployment-5fxkr in namespace deployment-5925 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-04-20 12:48:53 +0000 UTC 2024-04-20 12:48:53 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Apr 20 12:48:54.731: INFO: Observed Deployment test-deployment-5fxkr in namespace deployment-5925 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-20 12:48:53 +0000 UTC 2024-04-20 12:48:52 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-5fxkr-5d576bd769" has successfully progressed.}
  Apr 20 12:48:54.731: INFO: Observed &Deployment event: MODIFIED
  Apr 20 12:48:54.731: INFO: Observed Deployment test-deployment-5fxkr in namespace deployment-5925 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-04-20 12:48:53 +0000 UTC 2024-04-20 12:48:53 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Apr 20 12:48:54.731: INFO: Observed Deployment test-deployment-5fxkr in namespace deployment-5925 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-20 12:48:53 +0000 UTC 2024-04-20 12:48:52 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-5fxkr-5d576bd769" has successfully progressed.}
  Apr 20 12:48:54.731: INFO: Found Deployment test-deployment-5fxkr in namespace deployment-5925 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 20 12:48:54.731: INFO: Deployment test-deployment-5fxkr has an updated status
  STEP: patching the Statefulset Status @ 04/20/24 12:48:54.731
  Apr 20 12:48:54.731: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Apr 20 12:48:54.737: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 04/20/24 12:48:54.737
  Apr 20 12:48:54.739: INFO: Observed &Deployment event: ADDED
  Apr 20 12:48:54.739: INFO: Observed deployment test-deployment-5fxkr in namespace deployment-5925 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-20 12:48:52 +0000 UTC 2024-04-20 12:48:52 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-5fxkr-5d576bd769"}
  Apr 20 12:48:54.739: INFO: Observed &Deployment event: MODIFIED
  Apr 20 12:48:54.739: INFO: Observed deployment test-deployment-5fxkr in namespace deployment-5925 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-20 12:48:52 +0000 UTC 2024-04-20 12:48:52 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-5fxkr-5d576bd769"}
  Apr 20 12:48:54.739: INFO: Observed deployment test-deployment-5fxkr in namespace deployment-5925 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-04-20 12:48:52 +0000 UTC 2024-04-20 12:48:52 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Apr 20 12:48:54.739: INFO: Observed &Deployment event: MODIFIED
  Apr 20 12:48:54.739: INFO: Observed deployment test-deployment-5fxkr in namespace deployment-5925 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-04-20 12:48:52 +0000 UTC 2024-04-20 12:48:52 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Apr 20 12:48:54.739: INFO: Observed deployment test-deployment-5fxkr in namespace deployment-5925 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-20 12:48:52 +0000 UTC 2024-04-20 12:48:52 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-5fxkr-5d576bd769" is progressing.}
  Apr 20 12:48:54.739: INFO: Observed &Deployment event: MODIFIED
  Apr 20 12:48:54.739: INFO: Observed deployment test-deployment-5fxkr in namespace deployment-5925 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-04-20 12:48:53 +0000 UTC 2024-04-20 12:48:53 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Apr 20 12:48:54.739: INFO: Observed deployment test-deployment-5fxkr in namespace deployment-5925 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-20 12:48:53 +0000 UTC 2024-04-20 12:48:52 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-5fxkr-5d576bd769" has successfully progressed.}
  Apr 20 12:48:54.739: INFO: Observed &Deployment event: MODIFIED
  Apr 20 12:48:54.739: INFO: Observed deployment test-deployment-5fxkr in namespace deployment-5925 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-04-20 12:48:53 +0000 UTC 2024-04-20 12:48:53 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Apr 20 12:48:54.739: INFO: Observed deployment test-deployment-5fxkr in namespace deployment-5925 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-20 12:48:53 +0000 UTC 2024-04-20 12:48:52 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-5fxkr-5d576bd769" has successfully progressed.}
  Apr 20 12:48:54.739: INFO: Observed deployment test-deployment-5fxkr in namespace deployment-5925 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 20 12:48:54.739: INFO: Observed &Deployment event: MODIFIED
  Apr 20 12:48:54.739: INFO: Found deployment test-deployment-5fxkr in namespace deployment-5925 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Apr 20 12:48:54.739: INFO: Deployment test-deployment-5fxkr has a patched status
  Apr 20 12:48:54.745: INFO: Deployment "test-deployment-5fxkr":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-5fxkr",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5925",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0a9b3869-5f32-4d1e-84df-643787295a8b",
      ResourceVersion: (string) (len=5) "17312",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214132,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214134,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214134,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214134,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214134,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-5fxkr-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 20 12:48:54.749: INFO: New ReplicaSet "test-deployment-5fxkr-5d576bd769" of Deployment "test-deployment-5fxkr":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-5fxkr-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5925",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ea0a808f-69e3-4ba5-8ab1-ecacaa4456c6",
      ResourceVersion: (string) (len=5) "17308",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214132,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-5fxkr",
          UID: (types.UID) (len=36) "0a9b3869-5f32-4d1e-84df-643787295a8b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 30 61 39  |k:{\"uid\":\"0a9|
              00000120  62 33 38 36 39 2d 35 66  33 32 2d 34 64 31 65 2d  |b3869-5f32-4d1e-|
              00000130  38 34 64 66 2d 36 34 33  37 38 37 32 39 35 61 38  |84df-643787295a8|
              00000140  62 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |b\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214133,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 20 12:48:54.758: INFO: Pod "test-deployment-5fxkr-5d576bd769-9z4wt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-5fxkr-5d576bd769-9z4wt",
      GenerateName: (string) (len=33) "test-deployment-5fxkr-5d576bd769-",
      Namespace: (string) (len=15) "deployment-5925",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2e610652-a0c9-476b-b96d-2c2022885f9e",
      ResourceVersion: (string) (len=5) "17307",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214132,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-5fxkr-5d576bd769",
          UID: (types.UID) (len=36) "ea0a808f-69e3-4ba5-8ab1-ecacaa4456c6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 65 61 30 61 38 30 38  66 2d 36 39 65 33 2d 34  |"ea0a808f-69e3-4|
              000000a0  62 61 35 2d 38 61 62 31  2d 65 63 61 63 61 61 34  |ba5-8ab1-ecacaa4|
              000000b0  34 35 36 63 36 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |456c6\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214133,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 31  33 2e 32 35 32 5c 22 7d  |2.168.213.252\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tzssd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tzssd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-41-198",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214133,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214133,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214133,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.41.198",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.41.198"
        }
      },
      PodIP: (string) (len=15) "192.168.213.252",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.213.252"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214132,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849214133,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5a331ecf329d16da7ab22f4cfb12a8d95746814810e1199c0167cbd043aa3579",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 12:48:54.759: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5925" for this suite. @ 04/20/24 12:48:54.763
• [2.122 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 04/20/24 12:48:54.77
  Apr 20 12:48:54.770: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 12:48:54.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:48:54.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:48:54.789
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 12:48:54.792
  STEP: Saw pod success @ 04/20/24 12:48:56.81
  Apr 20 12:48:56.814: INFO: Trying to get logs from node ip-172-31-41-198 pod downwardapi-volume-6aea3d93-7b86-4fec-887f-f73d6890f621 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 12:48:56.823
  Apr 20 12:48:56.841: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9768" for this suite. @ 04/20/24 12:48:56.845
• [2.082 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 04/20/24 12:48:56.851
  Apr 20 12:48:56.851: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename services @ 04/20/24 12:48:56.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:48:56.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:48:56.869
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-7436 @ 04/20/24 12:48:56.873
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 04/20/24 12:48:56.886
  STEP: creating service externalsvc in namespace services-7436 @ 04/20/24 12:48:56.886
  STEP: creating replication controller externalsvc in namespace services-7436 @ 04/20/24 12:48:56.898
  I0420 12:48:56.906605      20 runners.go:197] Created replication controller with name: externalsvc, namespace: services-7436, replica count: 2
  I0420 12:48:59.957420      20 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 04/20/24 12:48:59.961
  Apr 20 12:48:59.975: INFO: Creating new exec pod
  Apr 20 12:49:01.994: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-7436 exec execpodw4hz9 -- /bin/sh -x -c nslookup clusterip-service.services-7436.svc.cluster.local'
  Apr 20 12:49:02.102: INFO: stderr: "+ nslookup clusterip-service.services-7436.svc.cluster.local\n"
  Apr 20 12:49:02.102: INFO: stdout: "Server:\t\t10.152.183.96\nAddress:\t10.152.183.96#53\n\nclusterip-service.services-7436.svc.cluster.local\tcanonical name = externalsvc.services-7436.svc.cluster.local.\nName:\texternalsvc.services-7436.svc.cluster.local\nAddress: 10.152.183.105\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-7436, will wait for the garbage collector to delete the pods @ 04/20/24 12:49:02.102
  Apr 20 12:49:02.165: INFO: Deleting ReplicationController externalsvc took: 8.668966ms
  Apr 20 12:49:02.266: INFO: Terminating ReplicationController externalsvc pods took: 100.913364ms
  Apr 20 12:49:05.489: INFO: Cleaning up the ClusterIP to ExternalName test service
  Apr 20 12:49:05.501: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7436" for this suite. @ 04/20/24 12:49:05.51
• [8.671 seconds]
------------------------------
SS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 04/20/24 12:49:05.523
  Apr 20 12:49:05.523: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename csiinlinevolumes @ 04/20/24 12:49:05.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:49:05.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:49:05.547
  STEP: Creating two CSIDrivers @ 04/20/24 12:49:05.55
  STEP: Getting "inline-driver-abd8c4d4-f257-4e6b-bb6a-d92bef9c7964" & "inline-driver-64b0dead-2754-4407-b684-be979514cd0d" @ 04/20/24 12:49:05.572
  STEP: Patching the CSIDriver "inline-driver-64b0dead-2754-4407-b684-be979514cd0d" @ 04/20/24 12:49:05.584
  STEP: Updating the CSIDriver "inline-driver-64b0dead-2754-4407-b684-be979514cd0d" @ 04/20/24 12:49:05.589
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-4821" @ 04/20/24 12:49:05.598
  STEP: Deleting CSIDriver "inline-driver-abd8c4d4-f257-4e6b-bb6a-d92bef9c7964" @ 04/20/24 12:49:05.602
  STEP: Confirm deletion of CSIDriver "inline-driver-abd8c4d4-f257-4e6b-bb6a-d92bef9c7964" @ 04/20/24 12:49:05.609
  STEP: Deleting CSIDriver "inline-driver-64b0dead-2754-4407-b684-be979514cd0d" via DeleteCollection @ 04/20/24 12:49:05.613
  STEP: Confirm deletion of CSIDriver "inline-driver-64b0dead-2754-4407-b684-be979514cd0d" @ 04/20/24 12:49:05.622
  Apr 20 12:49:05.625: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-4821" for this suite. @ 04/20/24 12:49:05.63
• [0.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:136
  STEP: Creating a kubernetes client @ 04/20/24 12:49:05.638
  Apr 20 12:49:05.638: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/20/24 12:49:05.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:49:05.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:49:05.66
  STEP: create the container to handle the HTTPGet hook request. @ 04/20/24 12:49:05.667
  STEP: create the pod with lifecycle hook @ 04/20/24 12:49:07.694
  STEP: check poststart hook @ 04/20/24 12:49:09.716
  STEP: delete the pod with lifecycle hook @ 04/20/24 12:49:09.729
  Apr 20 12:49:11.748: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5099" for this suite. @ 04/20/24 12:49:11.753
• [6.123 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 04/20/24 12:49:11.761
  Apr 20 12:49:11.761: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 12:49:11.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:49:11.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:49:11.781
  STEP: Creating a ResourceQuota @ 04/20/24 12:49:11.784
  STEP: Getting a ResourceQuota @ 04/20/24 12:49:11.788
  STEP: Updating a ResourceQuota @ 04/20/24 12:49:11.792
  STEP: Verifying a ResourceQuota was modified @ 04/20/24 12:49:11.799
  STEP: Deleting a ResourceQuota @ 04/20/24 12:49:11.802
  STEP: Verifying the deleted ResourceQuota @ 04/20/24 12:49:11.81
  Apr 20 12:49:11.813: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4056" for this suite. @ 04/20/24 12:49:11.817
• [0.062 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 04/20/24 12:49:11.824
  Apr 20 12:49:11.824: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename var-expansion @ 04/20/24 12:49:11.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:49:11.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:49:11.845
  STEP: Creating a pod to test substitution in container's args @ 04/20/24 12:49:11.848
  STEP: Saw pod success @ 04/20/24 12:49:13.867
  Apr 20 12:49:13.871: INFO: Trying to get logs from node ip-172-31-41-198 pod var-expansion-7f7a1799-68cc-4628-bc99-6861aee33570 container dapi-container: <nil>
  STEP: delete the pod @ 04/20/24 12:49:13.878
  Apr 20 12:49:13.896: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9175" for this suite. @ 04/20/24 12:49:13.901
• [2.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 04/20/24 12:49:13.91
  Apr 20 12:49:13.910: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename secrets @ 04/20/24 12:49:13.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:49:13.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:49:13.926
  STEP: Creating secret with name secret-test-f1f68a3a-28dc-488d-babc-7eb4337e1e00 @ 04/20/24 12:49:13.93
  STEP: Creating a pod to test consume secrets @ 04/20/24 12:49:13.934
  STEP: Saw pod success @ 04/20/24 12:49:15.955
  Apr 20 12:49:15.959: INFO: Trying to get logs from node ip-172-31-41-198 pod pod-secrets-61286383-dbdf-46c9-b1b5-4f86d6e8c06d container secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 12:49:15.965
  Apr 20 12:49:15.983: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1278" for this suite. @ 04/20/24 12:49:15.988
• [2.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 04/20/24 12:49:15.995
  Apr 20 12:49:15.995: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename projected @ 04/20/24 12:49:15.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:49:16.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:49:16.012
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 12:49:16.016
  STEP: Saw pod success @ 04/20/24 12:49:18.032
  Apr 20 12:49:18.036: INFO: Trying to get logs from node ip-172-31-41-198 pod downwardapi-volume-d30cd8c3-b4a8-408c-87c6-5c129eee47f2 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 12:49:18.043
  Apr 20 12:49:18.061: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1772" for this suite. @ 04/20/24 12:49:18.065
• [2.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 04/20/24 12:49:18.072
  Apr 20 12:49:18.072: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename runtimeclass @ 04/20/24 12:49:18.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:49:18.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:49:18.095
  Apr 20 12:49:20.137: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2342" for this suite. @ 04/20/24 12:49:20.141
• [2.076 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1399
  STEP: Creating a kubernetes client @ 04/20/24 12:49:20.148
  Apr 20 12:49:20.148: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 12:49:20.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:49:20.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:49:20.17
  Apr 20 12:49:20.173: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-6084 create -f -'
  Apr 20 12:49:20.252: INFO: stderr: ""
  Apr 20 12:49:20.252: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Apr 20 12:49:20.252: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-6084 create -f -'
  Apr 20 12:49:20.332: INFO: stderr: ""
  Apr 20 12:49:20.332: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/20/24 12:49:20.332
  Apr 20 12:49:21.336: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 20 12:49:21.336: INFO: Found 0 / 1
  Apr 20 12:49:22.339: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 20 12:49:22.339: INFO: Found 1 / 1
  Apr 20 12:49:22.339: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Apr 20 12:49:22.343: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 20 12:49:22.343: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Apr 20 12:49:22.343: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-6084 describe pod agnhost-primary-jch8r'
  Apr 20 12:49:22.395: INFO: stderr: ""
  Apr 20 12:49:22.395: INFO: stdout: "Name:             agnhost-primary-jch8r\nNamespace:        kubectl-6084\nPriority:         0\nService Account:  default\nNode:             ip-172-31-41-198/172.31.41.198\nStart Time:       Sat, 20 Apr 2024 12:49:20 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.213.230\nIPs:\n  IP:           192.168.213.230\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://5b6747e8c0a92744ea9ba64db78bf24c11b5ec75e79bc7251e6bca2f73201524\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 20 Apr 2024 12:49:20 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-cgmf8 (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-cgmf8:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-6084/agnhost-primary-jch8r to ip-172-31-41-198\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    2s    kubelet            Created container agnhost-primary\n  Normal  Started    2s    kubelet            Started container agnhost-primary\n"
  Apr 20 12:49:22.395: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-6084 describe rc agnhost-primary'
  Apr 20 12:49:22.446: INFO: stderr: ""
  Apr 20 12:49:22.446: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-6084\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.47\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-jch8r\n"
  Apr 20 12:49:22.446: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-6084 describe service agnhost-primary'
  Apr 20 12:49:22.497: INFO: stderr: ""
  Apr 20 12:49:22.497: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-6084\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.152.183.165\nIPs:               10.152.183.165\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         192.168.213.230:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Apr 20 12:49:22.501: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-6084 describe node ip-172-31-27-26'
  Apr 20 12:49:22.582: INFO: stderr: ""
  Apr 20 12:49:22.582: INFO: stdout: "Name:               ip-172-31-27-26\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-worker\n                    juju-charm=kubernetes-worker\n                    juju.io/cloud=ec2\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-27-26\n                    kubernetes.io/os=linux\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 20 Apr 2024 11:50:27 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-27-26\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 20 Apr 2024 12:49:13 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 20 Apr 2024 12:12:09 +0000   Sat, 20 Apr 2024 12:12:09 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sat, 20 Apr 2024 12:45:25 +0000   Sat, 20 Apr 2024 11:50:27 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 20 Apr 2024 12:45:25 +0000   Sat, 20 Apr 2024 11:50:27 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 20 Apr 2024 12:45:25 +0000   Sat, 20 Apr 2024 11:50:27 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 20 Apr 2024 12:45:25 +0000   Sat, 20 Apr 2024 11:51:22 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  172.31.27.26\n  Hostname:    ip-172-31-27-26\nCapacity:\n  cpu:                2\n  ephemeral-storage:  16069568Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7958124Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  14809713845\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7855724Ki\n  pods:               110\nSystem Info:\n  Machine ID:                      ec2a3d4fd7463505671315134741fa91\n  System UUID:                     ec2a3d4f-d746-3505-6713-15134741fa91\n  Boot ID:                         4615f6f0-2c8a-471f-bbd8-6ed1953be714\n  Kernel Version:                  6.5.0-1017-aws\n  OS Image:                        Ubuntu 22.04.4 LTS\n  Operating System:                linux\n  Architecture:                    amd64\n  Container Runtime Version:       containerd://1.6.8\n  Kubelet Version:                 v1.29.4\n  Kube-Proxy Version:              v1.29.4\nNon-terminated Pods:               (8 in total)\n  Namespace                        Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                        ----                                                       ------------  ----------  ---------------  -------------  ---\n  ingress-nginx-kubernetes-worker  nginx-ingress-controller-kubernetes-worker-q29js           0 (0%)        0 (0%)      0 (0%)           0 (0%)         52m\n  kube-system                      calico-node-sm5jg                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         37m\n  kube-system                      coredns-bddfd76d7-cmhz4                                    100m (5%)     0 (0%)      70Mi (0%)        170Mi (2%)     59m\n  kube-system                      kube-state-metrics-6f48cdd76-xv4p5                         0 (0%)        0 (0%)      0 (0%)           0 (0%)         59m\n  kube-system                      metrics-server-v0.6.3-69d7fbfdf8-rs74s                     5m (0%)       100m (5%)   50Mi (0%)        300Mi (3%)     59m\n  kubernetes-dashboard             dashboard-metrics-scraper-5dd7cb5fc-fxbxd                  0 (0%)        0 (0%)      0 (0%)           0 (0%)         59m\n  kubernetes-dashboard             kubernetes-dashboard-7b899cb9d9-szd7n                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         59m\n  sonobuoy                         sonobuoy-systemd-logs-daemon-set-6cab97477919492d-zm76r    0 (0%)        0 (0%)      0 (0%)           0 (0%)         34m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                355m (17%)  100m (5%)\n  memory             120Mi (1%)  470Mi (6%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:\n  Type     Reason                   Age                From             Message\n  ----     ------                   ----               ----             -------\n  Normal   Starting                 58m                kube-proxy       \n  Normal   Starting                 38m                kube-proxy       \n  Normal   Starting                 42m                kube-proxy       \n  Normal   Starting                 56m                kube-proxy       \n  Normal   Starting                 57m                kube-proxy       \n  Normal   Starting                 58m                kube-proxy       \n  Normal   NodeAllocatableEnforced  58m                kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientPID     58m (x2 over 58m)  kubelet          Node ip-172-31-27-26 status is now: NodeHasSufficientPID\n  Normal   NodeHasNoDiskPressure    58m (x2 over 58m)  kubelet          Node ip-172-31-27-26 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientMemory  58m (x2 over 58m)  kubelet          Node ip-172-31-27-26 status is now: NodeHasSufficientMemory\n  Normal   Starting                 58m                kubelet          Starting kubelet.\n  Normal   RegisteredNode           58m                node-controller  Node ip-172-31-27-26 event: Registered Node ip-172-31-27-26 in Controller\n  Normal   Starting                 58m                kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      58m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  58m                kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasNoDiskPressure    58m (x7 over 58m)  kubelet          Node ip-172-31-27-26 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     58m (x7 over 58m)  kubelet          Node ip-172-31-27-26 status is now: NodeHasSufficientPID\n  Normal   NodeHasSufficientMemory  58m (x8 over 58m)  kubelet          Node ip-172-31-27-26 status is now: NodeHasSufficientMemory\n  Normal   NodeHasSufficientPID     57m (x4 over 57m)  kubelet          Node ip-172-31-27-26 status is now: NodeHasSufficientPID\n  Normal   NodeHasNoDiskPressure    57m (x5 over 57m)  kubelet          Node ip-172-31-27-26 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientMemory  56m (x7 over 56m)  kubelet          Node ip-172-31-27-26 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    56m (x7 over 56m)  kubelet          Node ip-172-31-27-26 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     56m (x7 over 56m)  kubelet          Node ip-172-31-27-26 status is now: NodeHasSufficientPID\n  Normal   RegisteredNode           52m                node-controller  Node ip-172-31-27-26 event: Registered Node ip-172-31-27-26 in Controller\n  Normal   RegisteredNode           49m                node-controller  Node ip-172-31-27-26 event: Registered Node ip-172-31-27-26 in Controller\n  Normal   RegisteredNode           47m                node-controller  Node ip-172-31-27-26 event: Registered Node ip-172-31-27-26 in Controller\n  Normal   Starting                 42m                kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      42m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasNoDiskPressure    42m                kubelet          Node ip-172-31-27-26 status is now: NodeHasNoDiskPressure\n  Normal   NodeAllocatableEnforced  42m                kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientPID     42m                kubelet          Node ip-172-31-27-26 status is now: NodeHasSufficientPID\n  Normal   NodeHasSufficientMemory  42m                kubelet          Node ip-172-31-27-26 status is now: NodeHasSufficientMemory\n  Normal   Starting                 38m                kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      38m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientMemory  38m                kubelet          Node ip-172-31-27-26 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    38m                kubelet          Node ip-172-31-27-26 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     38m                kubelet          Node ip-172-31-27-26 status is now: NodeHasSufficientPID\n  Normal   NodeAllocatableEnforced  38m                kubelet          Updated Node Allocatable limit across pods\n"
  Apr 20 12:49:22.582: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-6084 describe namespace kubectl-6084'
  Apr 20 12:49:22.632: INFO: stderr: ""
  Apr 20 12:49:22.632: INFO: stdout: "Name:         kubectl-6084\nLabels:       e2e-framework=kubectl\n              e2e-run=4c21cad3-750d-4728-bc3f-c782b0a026e0\n              kubernetes.io/metadata.name=kubectl-6084\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Apr 20 12:49:22.632: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6084" for this suite. @ 04/20/24 12:49:22.636
• [2.495 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 04/20/24 12:49:22.643
  Apr 20 12:49:22.643: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename discovery @ 04/20/24 12:49:22.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:49:22.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:49:22.664
  STEP: Setting up server cert @ 04/20/24 12:49:22.668
  Apr 20 12:49:22.945: INFO: Checking APIGroup: apiregistration.k8s.io
  Apr 20 12:49:22.946: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Apr 20 12:49:22.946: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Apr 20 12:49:22.946: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Apr 20 12:49:22.946: INFO: Checking APIGroup: apps
  Apr 20 12:49:22.948: INFO: PreferredVersion.GroupVersion: apps/v1
  Apr 20 12:49:22.948: INFO: Versions found [{apps/v1 v1}]
  Apr 20 12:49:22.948: INFO: apps/v1 matches apps/v1
  Apr 20 12:49:22.948: INFO: Checking APIGroup: events.k8s.io
  Apr 20 12:49:22.949: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Apr 20 12:49:22.949: INFO: Versions found [{events.k8s.io/v1 v1}]
  Apr 20 12:49:22.949: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Apr 20 12:49:22.949: INFO: Checking APIGroup: authentication.k8s.io
  Apr 20 12:49:22.950: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Apr 20 12:49:22.950: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Apr 20 12:49:22.950: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Apr 20 12:49:22.950: INFO: Checking APIGroup: authorization.k8s.io
  Apr 20 12:49:22.951: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Apr 20 12:49:22.951: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Apr 20 12:49:22.951: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Apr 20 12:49:22.951: INFO: Checking APIGroup: autoscaling
  Apr 20 12:49:22.952: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Apr 20 12:49:22.952: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Apr 20 12:49:22.952: INFO: autoscaling/v2 matches autoscaling/v2
  Apr 20 12:49:22.952: INFO: Checking APIGroup: batch
  Apr 20 12:49:22.953: INFO: PreferredVersion.GroupVersion: batch/v1
  Apr 20 12:49:22.953: INFO: Versions found [{batch/v1 v1}]
  Apr 20 12:49:22.953: INFO: batch/v1 matches batch/v1
  Apr 20 12:49:22.953: INFO: Checking APIGroup: certificates.k8s.io
  Apr 20 12:49:22.954: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Apr 20 12:49:22.954: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Apr 20 12:49:22.954: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Apr 20 12:49:22.954: INFO: Checking APIGroup: networking.k8s.io
  Apr 20 12:49:22.955: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Apr 20 12:49:22.955: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Apr 20 12:49:22.955: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Apr 20 12:49:22.955: INFO: Checking APIGroup: policy
  Apr 20 12:49:22.957: INFO: PreferredVersion.GroupVersion: policy/v1
  Apr 20 12:49:22.957: INFO: Versions found [{policy/v1 v1}]
  Apr 20 12:49:22.957: INFO: policy/v1 matches policy/v1
  Apr 20 12:49:22.957: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Apr 20 12:49:22.958: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Apr 20 12:49:22.958: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Apr 20 12:49:22.958: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Apr 20 12:49:22.958: INFO: Checking APIGroup: storage.k8s.io
  Apr 20 12:49:22.959: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Apr 20 12:49:22.959: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Apr 20 12:49:22.959: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Apr 20 12:49:22.959: INFO: Checking APIGroup: admissionregistration.k8s.io
  Apr 20 12:49:22.960: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Apr 20 12:49:22.960: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Apr 20 12:49:22.960: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Apr 20 12:49:22.960: INFO: Checking APIGroup: apiextensions.k8s.io
  Apr 20 12:49:22.961: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Apr 20 12:49:22.961: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Apr 20 12:49:22.961: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Apr 20 12:49:22.961: INFO: Checking APIGroup: scheduling.k8s.io
  Apr 20 12:49:22.963: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Apr 20 12:49:22.963: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Apr 20 12:49:22.963: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Apr 20 12:49:22.963: INFO: Checking APIGroup: coordination.k8s.io
  Apr 20 12:49:22.964: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Apr 20 12:49:22.964: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Apr 20 12:49:22.964: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Apr 20 12:49:22.964: INFO: Checking APIGroup: node.k8s.io
  Apr 20 12:49:22.965: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Apr 20 12:49:22.965: INFO: Versions found [{node.k8s.io/v1 v1}]
  Apr 20 12:49:22.965: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Apr 20 12:49:22.965: INFO: Checking APIGroup: discovery.k8s.io
  Apr 20 12:49:22.966: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Apr 20 12:49:22.966: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Apr 20 12:49:22.966: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Apr 20 12:49:22.966: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Apr 20 12:49:22.968: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  Apr 20 12:49:22.968: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  Apr 20 12:49:22.968: INFO: flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  Apr 20 12:49:22.968: INFO: Checking APIGroup: metrics.k8s.io
  Apr 20 12:49:22.969: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  Apr 20 12:49:22.969: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  Apr 20 12:49:22.969: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  Apr 20 12:49:22.969: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-1764" for this suite. @ 04/20/24 12:49:22.974
• [0.340 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:321
  STEP: Creating a kubernetes client @ 04/20/24 12:49:22.983
  Apr 20 12:49:22.983: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename statefulset @ 04/20/24 12:49:22.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:49:22.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:49:23.001
  STEP: Creating service test in namespace statefulset-7752 @ 04/20/24 12:49:23.004
  STEP: Creating a new StatefulSet @ 04/20/24 12:49:23.011
  Apr 20 12:49:23.022: INFO: Found 0 stateful pods, waiting for 3
  Apr 20 12:49:33.024: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 12:49:33.024: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 12:49:33.024: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 12:49:33.035: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=statefulset-7752 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 20 12:49:33.125: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 20 12:49:33.125: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 20 12:49:33.125: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 04/20/24 12:49:43.135
  Apr 20 12:49:43.156: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 04/20/24 12:49:43.156
  STEP: Updating Pods in reverse ordinal order @ 04/20/24 12:49:53.166
  Apr 20 12:49:53.170: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=statefulset-7752 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 20 12:49:53.263: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 20 12:49:53.263: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 20 12:49:53.263: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 20 12:50:03.281: INFO: Waiting for StatefulSet statefulset-7752/ss2 to complete update
  STEP: Rolling back to a previous revision @ 04/20/24 12:50:13.284
  Apr 20 12:50:13.284: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=statefulset-7752 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 20 12:50:13.373: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 20 12:50:13.373: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 20 12:50:13.373: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 20 12:50:23.404: INFO: Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 04/20/24 12:50:33.414
  Apr 20 12:50:33.418: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=statefulset-7752 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 20 12:50:33.511: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 20 12:50:33.511: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 20 12:50:33.511: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 20 12:50:43.530: INFO: Deleting all statefulset in ns statefulset-7752
  Apr 20 12:50:43.533: INFO: Scaling statefulset ss2 to 0
  Apr 20 12:50:53.549: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 20 12:50:53.554: INFO: Deleting statefulset ss2
  Apr 20 12:50:53.569: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7752" for this suite. @ 04/20/24 12:50:53.574
• [90.598 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 04/20/24 12:50:53.582
  Apr 20 12:50:53.582: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 12:50:53.582
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:50:53.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:50:53.602
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 04/20/24 12:50:53.605
  STEP: Saw pod success @ 04/20/24 12:50:57.632
  Apr 20 12:50:57.635: INFO: Trying to get logs from node ip-172-31-41-198 pod pod-7eaaf1cf-ff2e-4bdd-92fc-8313b4e1cebf container test-container: <nil>
  STEP: delete the pod @ 04/20/24 12:50:57.647
  Apr 20 12:50:57.666: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9698" for this suite. @ 04/20/24 12:50:57.669
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 04/20/24 12:50:57.677
  Apr 20 12:50:57.677: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename var-expansion @ 04/20/24 12:50:57.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:50:57.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:50:57.696
  Apr 20 12:50:59.724: INFO: Deleting pod "var-expansion-3f0192fa-416b-4eac-a796-cdee69795dde" in namespace "var-expansion-7011"
  Apr 20 12:50:59.733: INFO: Wait up to 5m0s for pod "var-expansion-3f0192fa-416b-4eac-a796-cdee69795dde" to be fully deleted
  Apr 20 12:51:01.742: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7011" for this suite. @ 04/20/24 12:51:01.747
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 04/20/24 12:51:01.755
  Apr 20 12:51:01.755: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename init-container @ 04/20/24 12:51:01.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:51:01.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:51:01.779
  STEP: creating the pod @ 04/20/24 12:51:01.781
  Apr 20 12:51:01.781: INFO: PodSpec: initContainers in spec.initContainers
  Apr 20 12:51:04.918: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6048" for this suite. @ 04/20/24 12:51:04.923
• [3.175 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 04/20/24 12:51:04.93
  Apr 20 12:51:04.931: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 04/20/24 12:51:04.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:51:04.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:51:04.951
  STEP: Setting up the test @ 04/20/24 12:51:04.957
  STEP: Creating hostNetwork=false pod @ 04/20/24 12:51:04.957
  STEP: Creating hostNetwork=true pod @ 04/20/24 12:51:06.986
  STEP: Running the test @ 04/20/24 12:51:09.014
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 04/20/24 12:51:09.014
  Apr 20 12:51:09.014: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3913 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 12:51:09.014: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  Apr 20 12:51:09.014: INFO: ExecWithOptions: Clientset creation
  Apr 20 12:51:09.014: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3913/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Apr 20 12:51:09.067: INFO: Exec stderr: ""
  Apr 20 12:51:09.067: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3913 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 12:51:09.067: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  Apr 20 12:51:09.068: INFO: ExecWithOptions: Clientset creation
  Apr 20 12:51:09.068: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3913/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Apr 20 12:51:09.111: INFO: Exec stderr: ""
  Apr 20 12:51:09.111: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3913 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 12:51:09.111: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  Apr 20 12:51:09.111: INFO: ExecWithOptions: Clientset creation
  Apr 20 12:51:09.111: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3913/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Apr 20 12:51:09.155: INFO: Exec stderr: ""
  Apr 20 12:51:09.155: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3913 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 12:51:09.155: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  Apr 20 12:51:09.155: INFO: ExecWithOptions: Clientset creation
  Apr 20 12:51:09.155: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3913/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Apr 20 12:51:09.203: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 04/20/24 12:51:09.203
  Apr 20 12:51:09.203: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3913 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 12:51:09.203: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  Apr 20 12:51:09.203: INFO: ExecWithOptions: Clientset creation
  Apr 20 12:51:09.203: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3913/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Apr 20 12:51:09.251: INFO: Exec stderr: ""
  Apr 20 12:51:09.251: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3913 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 12:51:09.251: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  Apr 20 12:51:09.251: INFO: ExecWithOptions: Clientset creation
  Apr 20 12:51:09.251: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3913/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Apr 20 12:51:09.303: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 04/20/24 12:51:09.303
  Apr 20 12:51:09.303: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3913 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 12:51:09.303: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  Apr 20 12:51:09.303: INFO: ExecWithOptions: Clientset creation
  Apr 20 12:51:09.304: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3913/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Apr 20 12:51:09.353: INFO: Exec stderr: ""
  Apr 20 12:51:09.353: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3913 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 12:51:09.354: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  Apr 20 12:51:09.354: INFO: ExecWithOptions: Clientset creation
  Apr 20 12:51:09.354: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3913/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Apr 20 12:51:09.410: INFO: Exec stderr: ""
  Apr 20 12:51:09.410: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3913 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 12:51:09.410: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  Apr 20 12:51:09.410: INFO: ExecWithOptions: Clientset creation
  Apr 20 12:51:09.410: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3913/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Apr 20 12:51:09.457: INFO: Exec stderr: ""
  Apr 20 12:51:09.457: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3913 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 12:51:09.457: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  Apr 20 12:51:09.458: INFO: ExecWithOptions: Clientset creation
  Apr 20 12:51:09.458: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3913/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Apr 20 12:51:09.505: INFO: Exec stderr: ""
  Apr 20 12:51:09.505: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-3913" for this suite. @ 04/20/24 12:51:09.509
• [4.587 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 04/20/24 12:51:09.517
  Apr 20 12:51:09.517: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename deployment @ 04/20/24 12:51:09.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:51:09.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:51:09.538
  Apr 20 12:51:09.541: INFO: Creating deployment "webserver-deployment"
  Apr 20 12:51:09.548: INFO: Waiting for observed generation 1
  Apr 20 12:51:11.557: INFO: Waiting for all required pods to come up
  Apr 20 12:51:11.561: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 04/20/24 12:51:11.561
  Apr 20 12:51:11.561: INFO: Waiting for deployment "webserver-deployment" to complete
  Apr 20 12:51:11.569: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Apr 20 12:51:11.578: INFO: Updating deployment webserver-deployment
  Apr 20 12:51:11.578: INFO: Waiting for observed generation 2
  Apr 20 12:51:13.589: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Apr 20 12:51:13.592: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Apr 20 12:51:13.596: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Apr 20 12:51:13.609: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Apr 20 12:51:13.609: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Apr 20 12:51:13.612: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Apr 20 12:51:13.619: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Apr 20 12:51:13.619: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Apr 20 12:51:13.631: INFO: Updating deployment webserver-deployment
  Apr 20 12:51:13.631: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Apr 20 12:51:13.647: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Apr 20 12:51:13.652: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Apr 20 12:51:15.662: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3528",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0d0ca45d-94a2-4cac-a76b-c1d9f3c5a452",
      ResourceVersion: (string) (len=5) "19272",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214269,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 14,
      AvailableReplicas: (int32) 14,
      UnavailableReplicas: (int32) 19,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214269,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 20 12:51:15.667: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3528",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e57e0988-2f5e-4cec-9f1c-1a86a0e261ec",
      ResourceVersion: (string) (len=5) "19041",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214271,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "0d0ca45d-94a2-4cac-a76b-c1d9f3c5a452",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 64 30 63 61 34  35 64 2d 39 34 61 32 2d  |\"0d0ca45d-94a2-|
              00000120  34 63 61 63 2d 61 37 36  62 2d 63 31 64 39 66 33  |4cac-a76b-c1d9f3|
              00000130  63 35 61 34 35 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |c5a452\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 20 12:51:15.667: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Apr 20 12:51:15.668: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3528",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f6eee73b-56f3-4e13-afe7-bfe0533918ba",
      ResourceVersion: (string) (len=5) "19275",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214269,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "0d0ca45d-94a2-4cac-a76b-c1d9f3c5a452",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 64 30 63 61 34  35 64 2d 39 34 61 32 2d  |\"0d0ca45d-94a2-|
              00000120  34 63 61 63 2d 61 37 36  62 2d 63 31 64 39 66 33  |4cac-a76b-c1d9f3|
              00000130  63 35 61 34 35 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |c5a452\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 15,
      AvailableReplicas: (int32) 15,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 20 12:51:15.675: INFO: Pod "webserver-deployment-557759b7c7-67dpf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-67dpf",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3528",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0e5aab6c-b60d-49f4-a41c-90429060f9af",
      ResourceVersion: (string) (len=5) "18831",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214269,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f6eee73b-56f3-4e13-afe7-bfe0533918ba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214269,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 36  65 65 65 37 33 62 2d 35  |d\":\"f6eee73b-5|
              00000090  36 66 33 2d 34 65 31 33  2d 61 66 65 37 2d 62 66  |6f3-4e13-afe7-bf|
              000000a0  65 30 35 33 33 39 31 38  62 61 5c 22 7d 22 3a 7b  |e0533918ba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 34  34 2e 37 37 5c 22 7d 22  |2.168.144.77\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b79dh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b79dh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-81-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214269,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214269,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.81.0",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.81.0"
        }
      },
      PodIP: (string) (len=14) "192.168.144.77",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.144.77"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214269,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849214270,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d1aa3c8963609b3036335acf7d332451f66ca93b39449fbf03ed4985e04be307",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 12:51:15.677: INFO: Pod "webserver-deployment-557759b7c7-68h4v" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-68h4v",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3528",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5d9a2354-92ac-4dca-80b0-c868022bd9e7",
      ResourceVersion: (string) (len=5) "19158",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f6eee73b-56f3-4e13-afe7-bfe0533918ba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 36  65 65 65 37 33 62 2d 35  |d\":\"f6eee73b-5|
              00000090  36 66 33 2d 34 65 31 33  2d 61 66 65 37 2d 62 66  |6f3-4e13-afe7-bf|
              000000a0  65 30 35 33 33 39 31 38  62 61 5c 22 7d 22 3a 7b  |e0533918ba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 34  34 2e 38 30 5c 22 7d 22  |2.168.144.80\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cwb6f",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cwb6f",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-81-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.81.0",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.81.0"
        }
      },
      PodIP: (string) (len=14) "192.168.144.80",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.144.80"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849214274,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e16749e5d63d9c2c67f8260a1524354b6e8e1a933d8808394d9b23a86f0fa3a7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 12:51:15.679: INFO: Pod "webserver-deployment-557759b7c7-6tzb8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-6tzb8",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3528",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "048b0d1c-db93-46ad-bbac-622a66b3f813",
      ResourceVersion: (string) (len=5) "18864",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214269,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f6eee73b-56f3-4e13-afe7-bfe0533918ba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214269,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 36  65 65 65 37 33 62 2d 35  |d\":\"f6eee73b-5|
              00000090  36 66 33 2d 34 65 31 33  2d 61 66 65 37 2d 62 66  |6f3-4e13-afe7-bf|
              000000a0  65 30 35 33 33 39 31 38  62 61 5c 22 7d 22 3a 7b  |e0533918ba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 36  31 2e 35 31 5c 22 7d 22  |2.168.161.51\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b49kz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b49kz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-27-26",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214269,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214269,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.27.26",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.27.26"
        }
      },
      PodIP: (string) (len=14) "192.168.161.51",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.161.51"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214269,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849214270,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://bf7796b7d8bec4b681c62de3644e02fae9e5955b7596638a37825b113ae7a79a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 12:51:15.680: INFO: Pod "webserver-deployment-557759b7c7-7bfvz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-7bfvz",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3528",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a77b616e-cdba-48f4-92f9-7cb06fc5fbfd",
      ResourceVersion: (string) (len=5) "18834",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214269,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f6eee73b-56f3-4e13-afe7-bfe0533918ba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214269,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 36  65 65 65 37 33 62 2d 35  |d\":\"f6eee73b-5|
              00000090  36 66 33 2d 34 65 31 33  2d 61 66 65 37 2d 62 66  |6f3-4e13-afe7-bf|
              000000a0  65 30 35 33 33 39 31 38  62 61 5c 22 7d 22 3a 7b  |e0533918ba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 34  34 2e 37 35 5c 22 7d 22  |2.168.144.75\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vdjs4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vdjs4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-81-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214269,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214269,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.81.0",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.81.0"
        }
      },
      PodIP: (string) (len=14) "192.168.144.75",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.144.75"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214269,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849214270,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6d603456bffef313629b7d6b5af4a5c8e059869dfc341d62f12121a85bfd1fd7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 12:51:15.681: INFO: Pod "webserver-deployment-557759b7c7-9flv8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-9flv8",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3528",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dd345143-0db4-4ff9-b296-d1a9fe304c5b",
      ResourceVersion: (string) (len=5) "18861",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214269,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f6eee73b-56f3-4e13-afe7-bfe0533918ba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214269,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 36  65 65 65 37 33 62 2d 35  |d\":\"f6eee73b-5|
              00000090  36 66 33 2d 34 65 31 33  2d 61 66 65 37 2d 62 66  |6f3-4e13-afe7-bf|
              000000a0  65 30 35 33 33 39 31 38  62 61 5c 22 7d 22 3a 7b  |e0533918ba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 36  31 2e 35 32 5c 22 7d 22  |2.168.161.52\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-64tv4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-64tv4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-27-26",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214269,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214269,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.27.26",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.27.26"
        }
      },
      PodIP: (string) (len=14) "192.168.161.52",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.161.52"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214269,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849214270,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://395d2c267c15e4a0a60ddc41defb7312b3d5355b7e98fa066204ace1314c726a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 12:51:15.683: INFO: Pod "webserver-deployment-557759b7c7-b5sfl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-b5sfl",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3528",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7bc2acf5-ee9b-425d-92f8-06c2b9668d47",
      ResourceVersion: (string) (len=5) "18849",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214269,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f6eee73b-56f3-4e13-afe7-bfe0533918ba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214269,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 36  65 65 65 37 33 62 2d 35  |d\":\"f6eee73b-5|
              00000090  36 66 33 2d 34 65 31 33  2d 61 66 65 37 2d 62 66  |6f3-4e13-afe7-bf|
              000000a0  65 30 35 33 33 39 31 38  62 61 5c 22 7d 22 3a 7b  |e0533918ba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 31  33 2e 32 35 35 5c 22 7d  |2.168.213.255\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mpfzt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mpfzt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-41-198",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214269,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214269,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.41.198",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.41.198"
        }
      },
      PodIP: (string) (len=15) "192.168.213.255",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.213.255"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214269,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849214270,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://dc17696d53d8baeda0bace394f6e1f0decf998a01b898a89f0a6ef1900df870b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 12:51:15.684: INFO: Pod "webserver-deployment-557759b7c7-dj68f" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-dj68f",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3528",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5c3b88e5-42ba-4338-a963-b6254267680f",
      ResourceVersion: (string) (len=5) "19274",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f6eee73b-56f3-4e13-afe7-bfe0533918ba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 36  65 65 65 37 33 62 2d 35  |d\":\"f6eee73b-5|
              00000090  36 66 33 2d 34 65 31 33  2d 61 66 65 37 2d 62 66  |6f3-4e13-afe7-bf|
              000000a0  65 30 35 33 33 39 31 38  62 61 5c 22 7d 22 3a 7b  |e0533918ba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 34  34 2e 31 31 35 5c 22 7d  |2.168.144.115\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5vhfp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5vhfp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-81-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.81.0",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.81.0"
        }
      },
      PodIP: (string) (len=15) "192.168.144.115",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.144.115"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849214274,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6f28c43c4dfe84de43f983b6da0c937ea155ac4e4754c97290f5b3e8f8825d3c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 12:51:15.685: INFO: Pod "webserver-deployment-557759b7c7-gdz7s" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-gdz7s",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3528",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3dfe2e6c-cb06-4b60-b6b7-f6f7156f77d9",
      ResourceVersion: (string) (len=5) "19252",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f6eee73b-56f3-4e13-afe7-bfe0533918ba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 36  65 65 65 37 33 62 2d 35  |d\":\"f6eee73b-5|
              00000090  36 66 33 2d 34 65 31 33  2d 61 66 65 37 2d 62 66  |6f3-4e13-afe7-bf|
              000000a0  65 30 35 33 33 39 31 38  62 61 5c 22 7d 22 3a 7b  |e0533918ba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 36  31 2e 35 38 5c 22 7d 22  |2.168.161.58\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6868h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6868h",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-27-26",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.27.26",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.27.26"
        }
      },
      PodIP: (string) (len=14) "192.168.161.58",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.161.58"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849214274,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://fbe58812bff7f89f5ea1d6385d8bacd6b027490a7c6f13dd7ec6e3c2886e5d95",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 12:51:15.694: INFO: Pod "webserver-deployment-557759b7c7-h5m8l" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-h5m8l",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3528",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b2993e97-b79d-4a7f-ab3d-4f0b20a4d154",
      ResourceVersion: (string) (len=5) "19257",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f6eee73b-56f3-4e13-afe7-bfe0533918ba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 36  65 65 65 37 33 62 2d 35  |d\":\"f6eee73b-5|
              00000090  36 66 33 2d 34 65 31 33  2d 61 66 65 37 2d 62 66  |6f3-4e13-afe7-bf|
              000000a0  65 30 35 33 33 39 31 38  62 61 5c 22 7d 22 3a 7b  |e0533918ba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 36  31 2e 35 37 5c 22 7d 22  |2.168.161.57\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b6pz5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b6pz5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-27-26",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.27.26",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.27.26"
        }
      },
      PodIP: (string) (len=14) "192.168.161.57",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.161.57"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849214274,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3db5f56d2548a94ee38011b6958b6fd31cf580dfc9861026d21785f6faea7be0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 12:51:15.696: INFO: Pod "webserver-deployment-557759b7c7-j5n4w" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-j5n4w",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3528",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "08abe23c-2fa0-41a7-b048-4528cb682dc3",
      ResourceVersion: (string) (len=5) "19055",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f6eee73b-56f3-4e13-afe7-bfe0533918ba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 36  65 65 65 37 33 62 2d 35  |d\":\"f6eee73b-5|
              00000090  36 66 33 2d 34 65 31 33  2d 61 66 65 37 2d 62 66  |6f3-4e13-afe7-bf|
              000000a0  65 30 35 33 33 39 31 38  62 61 5c 22 7d 22 3a 7b  |e0533918ba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7ss6r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7ss6r",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-41-198",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.41.198",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.41.198"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 12:51:15.697: INFO: Pod "webserver-deployment-557759b7c7-jpkq6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-jpkq6",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3528",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fec34dc2-837e-449a-aac9-4c7bb8395deb",
      ResourceVersion: (string) (len=5) "19074",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f6eee73b-56f3-4e13-afe7-bfe0533918ba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 36  65 65 65 37 33 62 2d 35  |d\":\"f6eee73b-5|
              00000090  36 66 33 2d 34 65 31 33  2d 61 66 65 37 2d 62 66  |6f3-4e13-afe7-bf|
              000000a0  65 30 35 33 33 39 31 38  62 61 5c 22 7d 22 3a 7b  |e0533918ba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gprcs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gprcs",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-41-198",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.41.198",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.41.198"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 12:51:15.698: INFO: Pod "webserver-deployment-557759b7c7-mt4pz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-mt4pz",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3528",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ddc440e9-88db-41ad-91f0-6d37c6e04933",
      ResourceVersion: (string) (len=5) "19024",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f6eee73b-56f3-4e13-afe7-bfe0533918ba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 36  65 65 65 37 33 62 2d 35  |d\":\"f6eee73b-5|
              00000090  36 66 33 2d 34 65 31 33  2d 61 66 65 37 2d 62 66  |6f3-4e13-afe7-bf|
              000000a0  65 30 35 33 33 39 31 38  62 61 5c 22 7d 22 3a 7b  |e0533918ba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gl9fn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gl9fn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-41-198",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.41.198",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.41.198"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 12:51:15.699: INFO: Pod "webserver-deployment-557759b7c7-n2sgd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-n2sgd",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3528",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "338470bf-c9a2-4374-a678-242be676c12a",
      ResourceVersion: (string) (len=5) "19265",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f6eee73b-56f3-4e13-afe7-bfe0533918ba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 36  65 65 65 37 33 62 2d 35  |d\":\"f6eee73b-5|
              00000090  36 66 33 2d 34 65 31 33  2d 61 66 65 37 2d 62 66  |6f3-4e13-afe7-bf|
              000000a0  65 30 35 33 33 39 31 38  62 61 5c 22 7d 22 3a 7b  |e0533918ba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 36  31 2e 35 35 5c 22 7d 22  |2.168.161.55\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j55bn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j55bn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-27-26",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.27.26",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.27.26"
        }
      },
      PodIP: (string) (len=14) "192.168.161.55",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.161.55"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849214274,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2b05990c8bf4640071deb78f410414bf4224cddb2d337f8a309fae27c018ca2a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 12:51:15.700: INFO: Pod "webserver-deployment-557759b7c7-pmhqm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-pmhqm",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3528",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "02cb1f7e-4809-4712-a630-1b0250b5155d",
      ResourceVersion: (string) (len=5) "18846",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214269,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f6eee73b-56f3-4e13-afe7-bfe0533918ba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214269,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 36  65 65 65 37 33 62 2d 35  |d\":\"f6eee73b-5|
              00000090  36 66 33 2d 34 65 31 33  2d 61 66 65 37 2d 62 66  |6f3-4e13-afe7-bf|
              000000a0  65 30 35 33 33 39 31 38  62 61 5c 22 7d 22 3a 7b  |e0533918ba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 31  33 2e 32 35 31 5c 22 7d  |2.168.213.251\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jmz8n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jmz8n",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-41-198",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214269,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214269,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.41.198",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.41.198"
        }
      },
      PodIP: (string) (len=15) "192.168.213.251",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.213.251"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214269,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849214270,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://65d18764c4f15ca4f8d73a1e0bf8f85a0e274cbdb80227c6df51e04e641aa3e3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 12:51:15.705: INFO: Pod "webserver-deployment-557759b7c7-ppcs6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-ppcs6",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3528",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8d5e48e7-9cf1-439a-8452-de4e50bd4094",
      ResourceVersion: (string) (len=5) "19270",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f6eee73b-56f3-4e13-afe7-bfe0533918ba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 36  65 65 65 37 33 62 2d 35  |d\":\"f6eee73b-5|
              00000090  36 66 33 2d 34 65 31 33  2d 61 66 65 37 2d 62 66  |6f3-4e13-afe7-bf|
              000000a0  65 30 35 33 33 39 31 38  62 61 5c 22 7d 22 3a 7b  |e0533918ba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 34  34 2e 31 31 32 5c 22 7d  |2.168.144.112\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wxlqt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wxlqt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-81-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.81.0",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.81.0"
        }
      },
      PodIP: (string) (len=15) "192.168.144.112",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.144.112"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849214274,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://22d82062910e830daad730c3fcd7823b315eb36f8a7e03e92246561c7fc39714",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 12:51:15.706: INFO: Pod "webserver-deployment-557759b7c7-qskql" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-qskql",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3528",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d9420424-dfe9-413e-90c7-2c4bd9acae2e",
      ResourceVersion: (string) (len=5) "19069",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f6eee73b-56f3-4e13-afe7-bfe0533918ba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 36  65 65 65 37 33 62 2d 35  |d\":\"f6eee73b-5|
              00000090  36 66 33 2d 34 65 31 33  2d 61 66 65 37 2d 62 66  |6f3-4e13-afe7-bf|
              000000a0  65 30 35 33 33 39 31 38  62 61 5c 22 7d 22 3a 7b  |e0533918ba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xqrsd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xqrsd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-41-198",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.41.198",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.41.198"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 12:51:15.708: INFO: Pod "webserver-deployment-557759b7c7-rj76p" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-rj76p",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3528",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0ed622ca-3275-49fa-bde7-03164138da8f",
      ResourceVersion: (string) (len=5) "18815",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214269,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f6eee73b-56f3-4e13-afe7-bfe0533918ba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214269,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 36  65 65 65 37 33 62 2d 35  |d\":\"f6eee73b-5|
              00000090  36 66 33 2d 34 65 31 33  2d 61 66 65 37 2d 62 66  |6f3-4e13-afe7-bf|
              000000a0  65 30 35 33 33 39 31 38  62 61 5c 22 7d 22 3a 7b  |e0533918ba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 36  31 2e 35 30 5c 22 7d 22  |2.168.161.50\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c5xtx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c5xtx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-27-26",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214269,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214269,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.27.26",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.27.26"
        }
      },
      PodIP: (string) (len=14) "192.168.161.50",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.161.50"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214269,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849214270,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://380aeb91c68059318eafc0948539226f2aa4073113c07db7e96e600bba101f7a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 12:51:15.712: INFO: Pod "webserver-deployment-557759b7c7-rn8xc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-rn8xc",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3528",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8a569536-4860-42aa-8db7-03829c2ae1b9",
      ResourceVersion: (string) (len=5) "19076",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f6eee73b-56f3-4e13-afe7-bfe0533918ba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 36  65 65 65 37 33 62 2d 35  |d\":\"f6eee73b-5|
              00000090  36 66 33 2d 34 65 31 33  2d 61 66 65 37 2d 62 66  |6f3-4e13-afe7-bf|
              000000a0  65 30 35 33 33 39 31 38  62 61 5c 22 7d 22 3a 7b  |e0533918ba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l5bz9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l5bz9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-41-198",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.41.198",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.41.198"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 12:51:15.714: INFO: Pod "webserver-deployment-557759b7c7-sr9mf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-sr9mf",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3528",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fe24b3bf-51ce-4264-bcaa-cb3dece79d82",
      ResourceVersion: (string) (len=5) "18826",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214269,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f6eee73b-56f3-4e13-afe7-bfe0533918ba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214269,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 36  65 65 65 37 33 62 2d 35  |d\":\"f6eee73b-5|
              00000090  36 66 33 2d 34 65 31 33  2d 61 66 65 37 2d 62 66  |6f3-4e13-afe7-bf|
              000000a0  65 30 35 33 33 39 31 38  62 61 5c 22 7d 22 3a 7b  |e0533918ba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 34  34 2e 37 36 5c 22 7d 22  |2.168.144.76\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5mpb4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5mpb4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-81-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214269,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214270,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214269,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.81.0",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.81.0"
        }
      },
      PodIP: (string) (len=14) "192.168.144.76",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.144.76"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214269,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849214270,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e0a68266ccbc60adfbc9420a3ecb0cf8e4fcff38583d201d3e6451f866612abe",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 12:51:15.715: INFO: Pod "webserver-deployment-557759b7c7-x8hr5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-x8hr5",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3528",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "28e6c333-2608-455c-bc1a-4a84e9274694",
      ResourceVersion: (string) (len=5) "19151",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f6eee73b-56f3-4e13-afe7-bfe0533918ba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 36  65 65 65 37 33 62 2d 35  |d\":\"f6eee73b-5|
              00000090  36 66 33 2d 34 65 31 33  2d 61 66 65 37 2d 62 66  |6f3-4e13-afe7-bf|
              000000a0  65 30 35 33 33 39 31 38  62 61 5c 22 7d 22 3a 7b  |e0533918ba\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 34  34 2e 38 31 5c 22 7d 22  |2.168.144.81\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rbkk4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rbkk4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-81-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.81.0",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.81.0"
        }
      },
      PodIP: (string) (len=14) "192.168.144.81",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.144.81"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849214274,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://76cbfa1819d6465b67e1363f1c027749a82cfdacd4806f573b43d6ad8cfec1fb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 12:51:15.716: INFO: Pod "webserver-deployment-9b4f5bf69-2mppp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-2mppp",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3528",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9762a74f-7412-452d-af49-0f09fb7dbf24",
      ResourceVersion: (string) (len=5) "19264",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e57e0988-2f5e-4cec-9f1c-1a86a0e261ec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 35  37 65 30 39 38 38 2d 32  |d\":\"e57e0988-2|
              00000090  66 35 65 2d 34 63 65 63  2d 39 66 31 63 2d 31 61  |f5e-4cec-9f1c-1a|
              000000a0  38 36 61 30 65 32 36 31  65 63 5c 22 7d 22 3a 7b  |86a0e261ec\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 36 31 2e 35  36 5c 22 7d 22 3a 7b 22  |68.161.56\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lqg96",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lqg96",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-27-26",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.27.26",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.27.26"
        }
      },
      PodIP: (string) (len=14) "192.168.161.56",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.161.56"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 12:51:15.717: INFO: Pod "webserver-deployment-9b4f5bf69-2s6sf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-2s6sf",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3528",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "20185a0e-24c6-4547-83e9-e16750cf4c12",
      ResourceVersion: (string) (len=5) "18965",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214271,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e57e0988-2f5e-4cec-9f1c-1a86a0e261ec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 35  37 65 30 39 38 38 2d 32  |d\":\"e57e0988-2|
              00000090  66 35 65 2d 34 63 65 63  2d 39 66 31 63 2d 31 61  |f5e-4cec-9f1c-1a|
              000000a0  38 36 61 30 65 32 36 31  65 63 5c 22 7d 22 3a 7b  |86a0e261ec\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 34 34 2e 37  38 5c 22 7d 22 3a 7b 22  |68.144.78\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gt7g8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gt7g8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-81-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.81.0",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.81.0"
        }
      },
      PodIP: (string) (len=14) "192.168.144.78",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.144.78"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214271,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 12:51:15.718: INFO: Pod "webserver-deployment-9b4f5bf69-2xqtk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-2xqtk",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3528",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a784ffb8-9639-4447-b678-84e18961cd96",
      ResourceVersion: (string) (len=5) "18959",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214271,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e57e0988-2f5e-4cec-9f1c-1a86a0e261ec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 35  37 65 30 39 38 38 2d 32  |d\":\"e57e0988-2|
              00000090  66 35 65 2d 34 63 65 63  2d 39 66 31 63 2d 31 61  |f5e-4cec-9f1c-1a|
              000000a0  38 36 61 30 65 32 36 31  65 63 5c 22 7d 22 3a 7b  |86a0e261ec\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 36 31 2e 35  33 5c 22 7d 22 3a 7b 22  |68.161.53\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fmfsn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fmfsn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-27-26",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.27.26",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.27.26"
        }
      },
      PodIP: (string) (len=14) "192.168.161.53",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.161.53"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214271,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 12:51:15.719: INFO: Pod "webserver-deployment-9b4f5bf69-4d6mh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-4d6mh",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3528",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "546bd08e-7dd0-463a-82ef-6d1619b5a003",
      ResourceVersion: (string) (len=5) "19263",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e57e0988-2f5e-4cec-9f1c-1a86a0e261ec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 35  37 65 30 39 38 38 2d 32  |d\":\"e57e0988-2|
              00000090  66 35 65 2d 34 63 65 63  2d 39 66 31 63 2d 31 61  |f5e-4cec-9f1c-1a|
              000000a0  38 36 61 30 65 32 36 31  65 63 5c 22 7d 22 3a 7b  |86a0e261ec\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 36 31 2e 35  39 5c 22 7d 22 3a 7b 22  |68.161.59\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6r8pn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6r8pn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-27-26",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.27.26",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.27.26"
        }
      },
      PodIP: (string) (len=14) "192.168.161.59",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.161.59"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 12:51:15.721: INFO: Pod "webserver-deployment-9b4f5bf69-565kb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-565kb",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3528",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e7226fea-cae9-4fa3-92ac-6c06a020ffef",
      ResourceVersion: (string) (len=5) "19273",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e57e0988-2f5e-4cec-9f1c-1a86a0e261ec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 35  37 65 30 39 38 38 2d 32  |d\":\"e57e0988-2|
              00000090  66 35 65 2d 34 63 65 63  2d 39 66 31 63 2d 31 61  |f5e-4cec-9f1c-1a|
              000000a0  38 36 61 30 65 32 36 31  65 63 5c 22 7d 22 3a 7b  |86a0e261ec\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 34 34 2e 39  30 5c 22 7d 22 3a 7b 22  |68.144.90\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6jxwv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6jxwv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-81-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.81.0",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.81.0"
        }
      },
      PodIP: (string) (len=14) "192.168.144.90",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.144.90"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 12:51:15.722: INFO: Pod "webserver-deployment-9b4f5bf69-6qrjc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-6qrjc",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3528",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "63e27ecb-d04f-4d6e-9c64-6a4aeac47c19",
      ResourceVersion: (string) (len=5) "18962",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214271,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e57e0988-2f5e-4cec-9f1c-1a86a0e261ec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 35  37 65 30 39 38 38 2d 32  |d\":\"e57e0988-2|
              00000090  66 35 65 2d 34 63 65 63  2d 39 66 31 63 2d 31 61  |f5e-4cec-9f1c-1a|
              000000a0  38 36 61 30 65 32 36 31  65 63 5c 22 7d 22 3a 7b  |86a0e261ec\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 34 34 2e 37  39 5c 22 7d 22 3a 7b 22  |68.144.79\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sq856",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sq856",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-81-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.81.0",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.81.0"
        }
      },
      PodIP: (string) (len=14) "192.168.144.79",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.144.79"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214271,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 12:51:15.723: INFO: Pod "webserver-deployment-9b4f5bf69-gqctt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-gqctt",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3528",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "23617b3c-b3ea-4eb1-bd9e-c7c61c04c4e3",
      ResourceVersion: (string) (len=5) "18971",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214271,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e57e0988-2f5e-4cec-9f1c-1a86a0e261ec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 35  37 65 30 39 38 38 2d 32  |d\":\"e57e0988-2|
              00000090  66 35 65 2d 34 63 65 63  2d 39 66 31 63 2d 31 61  |f5e-4cec-9f1c-1a|
              000000a0  38 36 61 30 65 32 36 31  65 63 5c 22 7d 22 3a 7b  |86a0e261ec\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 31 33 2e 32  35 33 5c 22 7d 22 3a 7b  |68.213.253\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7gxww",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7gxww",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-41-198",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.41.198",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.41.198"
        }
      },
      PodIP: (string) (len=15) "192.168.213.253",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.213.253"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214271,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 12:51:15.729: INFO: Pod "webserver-deployment-9b4f5bf69-h942f" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-h942f",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3528",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1258404f-6fd1-4e07-bb8c-90449798f557",
      ResourceVersion: (string) (len=5) "19262",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e57e0988-2f5e-4cec-9f1c-1a86a0e261ec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 35  37 65 30 39 38 38 2d 32  |d\":\"e57e0988-2|
              00000090  66 35 65 2d 34 63 65 63  2d 39 66 31 63 2d 31 61  |f5e-4cec-9f1c-1a|
              000000a0  38 36 61 30 65 32 36 31  65 63 5c 22 7d 22 3a 7b  |86a0e261ec\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 36 31 2e 35  34 5c 22 7d 22 3a 7b 22  |68.161.54\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c8zl4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c8zl4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-27-26",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.27.26",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.27.26"
        }
      },
      PodIP: (string) (len=14) "192.168.161.54",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.161.54"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 12:51:15.730: INFO: Pod "webserver-deployment-9b4f5bf69-q5f5g" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-q5f5g",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3528",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b1877f11-da74-42db-8be5-a9d059d7e981",
      ResourceVersion: (string) (len=5) "18967",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214271,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e57e0988-2f5e-4cec-9f1c-1a86a0e261ec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 35  37 65 30 39 38 38 2d 32  |d\":\"e57e0988-2|
              00000090  66 35 65 2d 34 63 65 63  2d 39 66 31 63 2d 31 61  |f5e-4cec-9f1c-1a|
              000000a0  38 36 61 30 65 32 36 31  65 63 5c 22 7d 22 3a 7b  |86a0e261ec\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 31 33 2e 32  33 38 5c 22 7d 22 3a 7b  |68.213.238\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f57cj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f57cj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-41-198",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214271,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.41.198",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.41.198"
        }
      },
      PodIP: (string) (len=15) "192.168.213.238",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.213.238"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214271,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 12:51:15.731: INFO: Pod "webserver-deployment-9b4f5bf69-qp64m" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-qp64m",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3528",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "24caa17d-606f-4213-b2ea-8008c0f96a6f",
      ResourceVersion: (string) (len=5) "19148",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e57e0988-2f5e-4cec-9f1c-1a86a0e261ec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 35  37 65 30 39 38 38 2d 32  |d\":\"e57e0988-2|
              00000090  66 35 65 2d 34 63 65 63  2d 39 66 31 63 2d 31 61  |f5e-4cec-9f1c-1a|
              000000a0  38 36 61 30 65 32 36 31  65 63 5c 22 7d 22 3a 7b  |86a0e261ec\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 34 34 2e 38  32 5c 22 7d 22 3a 7b 22  |68.144.82\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4f2w2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4f2w2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-81-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.81.0",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.81.0"
        }
      },
      PodIP: (string) (len=14) "192.168.144.82",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.144.82"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 12:51:15.732: INFO: Pod "webserver-deployment-9b4f5bf69-qwpfs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-qwpfs",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3528",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f3eef160-8a57-48e2-862f-e42e934fdd0f",
      ResourceVersion: (string) (len=5) "19063",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e57e0988-2f5e-4cec-9f1c-1a86a0e261ec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 35  37 65 30 39 38 38 2d 32  |d\":\"e57e0988-2|
              00000090  66 35 65 2d 34 63 65 63  2d 39 66 31 63 2d 31 61  |f5e-4cec-9f1c-1a|
              000000a0  38 36 61 30 65 32 36 31  65 63 5c 22 7d 22 3a 7b  |86a0e261ec\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cc27z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cc27z",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-41-198",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.41.198",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.41.198"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 12:51:15.733: INFO: Pod "webserver-deployment-9b4f5bf69-s4c2h" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-s4c2h",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3528",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1b5e27f3-a07b-4a4e-ab67-dd567f576493",
      ResourceVersion: (string) (len=5) "19073",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e57e0988-2f5e-4cec-9f1c-1a86a0e261ec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 35  37 65 30 39 38 38 2d 32  |d\":\"e57e0988-2|
              00000090  66 35 65 2d 34 63 65 63  2d 39 66 31 63 2d 31 61  |f5e-4cec-9f1c-1a|
              000000a0  38 36 61 30 65 32 36 31  65 63 5c 22 7d 22 3a 7b  |86a0e261ec\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fgk77",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fgk77",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-41-198",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.41.198",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.41.198"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 12:51:15.735: INFO: Pod "webserver-deployment-9b4f5bf69-v6z4t" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-v6z4t",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3528",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "65d7d01c-8ce2-4d2e-b282-9739ad78680a",
      ResourceVersion: (string) (len=5) "19077",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "e57e0988-2f5e-4cec-9f1c-1a86a0e261ec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 35  37 65 30 39 38 38 2d 32  |d\":\"e57e0988-2|
              00000090  66 35 65 2d 34 63 65 63  2d 39 66 31 63 2d 31 61  |f5e-4cec-9f1c-1a|
              000000a0  38 36 61 30 65 32 36 31  65 63 5c 22 7d 22 3a 7b  |86a0e261ec\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-696lr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-696lr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-41-198",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.41.198",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.41.198"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 12:51:15.736: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3528" for this suite. @ 04/20/24 12:51:15.741
• [6.231 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 04/20/24 12:51:15.749
  Apr 20 12:51:15.749: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename containers @ 04/20/24 12:51:15.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:51:15.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:51:15.768
  STEP: Creating a pod to test override command @ 04/20/24 12:51:15.771
  STEP: Saw pod success @ 04/20/24 12:51:19.797
  Apr 20 12:51:19.801: INFO: Trying to get logs from node ip-172-31-41-198 pod client-containers-5ee56526-c064-435c-8f62-2fa803e10b64 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 12:51:19.808
  Apr 20 12:51:19.824: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1100" for this suite. @ 04/20/24 12:51:19.828
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 04/20/24 12:51:19.836
  Apr 20 12:51:19.836: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename replicaset @ 04/20/24 12:51:19.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:51:19.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:51:19.855
  STEP: Create a Replicaset @ 04/20/24 12:51:19.862
  STEP: Verify that the required pods have come up. @ 04/20/24 12:51:19.868
  Apr 20 12:51:19.872: INFO: Pod name sample-pod: Found 0 pods out of 1
  Apr 20 12:51:24.879: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/20/24 12:51:24.879
  STEP: Getting /status @ 04/20/24 12:51:24.879
  Apr 20 12:51:24.883: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 04/20/24 12:51:24.883
  Apr 20 12:51:24.894: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 04/20/24 12:51:24.894
  Apr 20 12:51:24.896: INFO: Observed &ReplicaSet event: ADDED
  Apr 20 12:51:24.896: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 20 12:51:24.896: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 20 12:51:24.897: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 20 12:51:24.897: INFO: Found replicaset test-rs in namespace replicaset-7540 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Apr 20 12:51:24.897: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 04/20/24 12:51:24.897
  Apr 20 12:51:24.897: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Apr 20 12:51:24.905: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 04/20/24 12:51:24.905
  Apr 20 12:51:24.907: INFO: Observed &ReplicaSet event: ADDED
  Apr 20 12:51:24.907: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 20 12:51:24.907: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 20 12:51:24.907: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 20 12:51:24.907: INFO: Observed replicaset test-rs in namespace replicaset-7540 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 20 12:51:24.907: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 20 12:51:24.907: INFO: Found replicaset test-rs in namespace replicaset-7540 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Apr 20 12:51:24.907: INFO: Replicaset test-rs has a patched status
  Apr 20 12:51:24.907: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7540" for this suite. @ 04/20/24 12:51:24.911
• [5.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 04/20/24 12:51:24.919
  Apr 20 12:51:24.919: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename projected @ 04/20/24 12:51:24.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:51:24.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:51:24.94
  STEP: Creating projection with secret that has name projected-secret-test-map-f4a17d90-abc3-42be-ae65-12bd5c45275c @ 04/20/24 12:51:24.947
  STEP: Creating a pod to test consume secrets @ 04/20/24 12:51:24.956
  STEP: Saw pod success @ 04/20/24 12:51:28.981
  Apr 20 12:51:28.985: INFO: Trying to get logs from node ip-172-31-41-198 pod pod-projected-secrets-e705896d-3967-4d68-8a3e-315205afdad4 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 12:51:28.993
  Apr 20 12:51:29.009: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6942" for this suite. @ 04/20/24 12:51:29.013
• [4.101 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 04/20/24 12:51:29.02
  Apr 20 12:51:29.020: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename endpointslicemirroring @ 04/20/24 12:51:29.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:51:29.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:51:29.044
  STEP: mirroring a new custom Endpoint @ 04/20/24 12:51:29.058
  Apr 20 12:51:29.067: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 04/20/24 12:51:31.072
  STEP: mirroring deletion of a custom Endpoint @ 04/20/24 12:51:31.082
  Apr 20 12:51:31.093: INFO: Waiting for 0 EndpointSlices to exist, got 1
  Apr 20 12:51:33.098: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-8815" for this suite. @ 04/20/24 12:51:33.102
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 04/20/24 12:51:33.112
  Apr 20 12:51:33.112: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/20/24 12:51:33.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:51:33.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:51:33.131
  Apr 20 12:51:33.134: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/20/24 12:51:34.393
  Apr 20 12:51:34.393: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=crd-publish-openapi-6944 --namespace=crd-publish-openapi-6944 create -f -'
  Apr 20 12:51:36.454: INFO: stderr: ""
  Apr 20 12:51:36.454: INFO: stdout: "e2e-test-crd-publish-openapi-6747-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Apr 20 12:51:36.454: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=crd-publish-openapi-6944 --namespace=crd-publish-openapi-6944 delete e2e-test-crd-publish-openapi-6747-crds test-cr'
  Apr 20 12:51:36.503: INFO: stderr: ""
  Apr 20 12:51:36.503: INFO: stdout: "e2e-test-crd-publish-openapi-6747-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Apr 20 12:51:36.503: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=crd-publish-openapi-6944 --namespace=crd-publish-openapi-6944 apply -f -'
  Apr 20 12:51:36.562: INFO: stderr: ""
  Apr 20 12:51:36.562: INFO: stdout: "e2e-test-crd-publish-openapi-6747-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Apr 20 12:51:36.562: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=crd-publish-openapi-6944 --namespace=crd-publish-openapi-6944 delete e2e-test-crd-publish-openapi-6747-crds test-cr'
  Apr 20 12:51:36.612: INFO: stderr: ""
  Apr 20 12:51:36.612: INFO: stdout: "e2e-test-crd-publish-openapi-6747-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 04/20/24 12:51:36.612
  Apr 20 12:51:36.612: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=crd-publish-openapi-6944 explain e2e-test-crd-publish-openapi-6747-crds'
  Apr 20 12:51:36.651: INFO: stderr: ""
  Apr 20 12:51:36.651: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-6747-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Apr 20 12:51:37.864: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6944" for this suite. @ 04/20/24 12:51:37.871
• [4.765 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:962
  STEP: Creating a kubernetes client @ 04/20/24 12:51:37.878
  Apr 20 12:51:37.878: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename statefulset @ 04/20/24 12:51:37.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:51:37.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:51:37.899
  STEP: Creating service test in namespace statefulset-2463 @ 04/20/24 12:51:37.903
  Apr 20 12:51:37.917: INFO: Found 0 stateful pods, waiting for 1
  Apr 20 12:51:47.920: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 04/20/24 12:51:47.927
  W0420 12:51:47.935159      20 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Apr 20 12:51:47.942: INFO: Found 1 stateful pods, waiting for 2
  Apr 20 12:51:57.943: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 12:51:57.943: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 04/20/24 12:51:57.95
  STEP: Delete all of the StatefulSets @ 04/20/24 12:51:57.953
  STEP: Verify that StatefulSets have been deleted @ 04/20/24 12:51:57.96
  Apr 20 12:51:57.963: INFO: Deleting all statefulset in ns statefulset-2463
  Apr 20 12:51:57.976: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2463" for this suite. @ 04/20/24 12:51:57.981
• [20.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 04/20/24 12:51:57.988
  Apr 20 12:51:57.988: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename kubelet-test @ 04/20/24 12:51:57.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:51:58.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:51:58.007
  Apr 20 12:51:58.032: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6955" for this suite. @ 04/20/24 12:51:58.037
• [0.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 04/20/24 12:51:58.043
  Apr 20 12:51:58.043: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename subpath @ 04/20/24 12:51:58.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:51:58.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:51:58.06
  STEP: Setting up data @ 04/20/24 12:51:58.064
  STEP: Creating pod pod-subpath-test-secret-4z9q @ 04/20/24 12:51:58.072
  STEP: Creating a pod to test atomic-volume-subpath @ 04/20/24 12:51:58.072
  STEP: Saw pod success @ 04/20/24 12:52:22.144
  Apr 20 12:52:22.148: INFO: Trying to get logs from node ip-172-31-41-198 pod pod-subpath-test-secret-4z9q container test-container-subpath-secret-4z9q: <nil>
  STEP: delete the pod @ 04/20/24 12:52:22.158
  STEP: Deleting pod pod-subpath-test-secret-4z9q @ 04/20/24 12:52:22.175
  Apr 20 12:52:22.175: INFO: Deleting pod "pod-subpath-test-secret-4z9q" in namespace "subpath-9050"
  Apr 20 12:52:22.178: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9050" for this suite. @ 04/20/24 12:52:22.182
• [24.146 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 04/20/24 12:52:22.19
  Apr 20 12:52:22.190: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename kubelet-test @ 04/20/24 12:52:22.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:52:22.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:52:22.212
  Apr 20 12:52:24.245: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1752" for this suite. @ 04/20/24 12:52:24.249
• [2.065 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 04/20/24 12:52:24.255
  Apr 20 12:52:24.255: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename cronjob @ 04/20/24 12:52:24.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:52:24.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:52:24.274
  STEP: Creating a cronjob @ 04/20/24 12:52:24.277
  STEP: creating @ 04/20/24 12:52:24.277
  STEP: getting @ 04/20/24 12:52:24.285
  STEP: listing @ 04/20/24 12:52:24.288
  STEP: watching @ 04/20/24 12:52:24.29
  Apr 20 12:52:24.290: INFO: starting watch
  STEP: cluster-wide listing @ 04/20/24 12:52:24.291
  STEP: cluster-wide watching @ 04/20/24 12:52:24.294
  Apr 20 12:52:24.294: INFO: starting watch
  STEP: patching @ 04/20/24 12:52:24.295
  STEP: updating @ 04/20/24 12:52:24.301
  Apr 20 12:52:24.309: INFO: waiting for watch events with expected annotations
  Apr 20 12:52:24.309: INFO: saw patched and updated annotations
  STEP: patching /status @ 04/20/24 12:52:24.309
  STEP: updating /status @ 04/20/24 12:52:24.314
  STEP: get /status @ 04/20/24 12:52:24.32
  STEP: deleting @ 04/20/24 12:52:24.323
  STEP: deleting a collection @ 04/20/24 12:52:24.336
  Apr 20 12:52:24.346: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1476" for this suite. @ 04/20/24 12:52:24.349
• [0.099 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 04/20/24 12:52:24.355
  Apr 20 12:52:24.355: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename container-probe @ 04/20/24 12:52:24.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:52:24.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:52:24.377
  Apr 20 12:53:24.395: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2422" for this suite. @ 04/20/24 12:53:24.399
• [60.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2199
  STEP: Creating a kubernetes client @ 04/20/24 12:53:24.406
  Apr 20 12:53:24.406: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename services @ 04/20/24 12:53:24.407
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:53:24.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:53:24.427
  STEP: creating service in namespace services-4951 @ 04/20/24 12:53:24.429
  STEP: creating service affinity-clusterip-transition in namespace services-4951 @ 04/20/24 12:53:24.429
  STEP: creating replication controller affinity-clusterip-transition in namespace services-4951 @ 04/20/24 12:53:24.439
  I0420 12:53:24.447035      20 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-4951, replica count: 3
  I0420 12:53:27.497736      20 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 20 12:53:27.505: INFO: Creating new exec pod
  Apr 20 12:53:30.525: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-4951 exec execpod-affinity4jf87 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Apr 20 12:53:30.619: INFO: stderr: "+ nc -v -t -w 2 affinity-clusterip-transition 80\n+ echo hostName\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Apr 20 12:53:30.619: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 12:53:30.619: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-4951 exec execpod-affinity4jf87 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.126 80'
  Apr 20 12:53:30.705: INFO: stderr: "+ + ncecho -v hostName -t\n -w 2 10.152.183.126 80\nConnection to 10.152.183.126 80 port [tcp/http] succeeded!\n"
  Apr 20 12:53:30.705: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 12:53:30.714: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-4951 exec execpod-affinity4jf87 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.126:80/ ; done'
  Apr 20 12:53:30.863: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n"
  Apr 20 12:53:30.863: INFO: stdout: "\naffinity-clusterip-transition-mj8kb\naffinity-clusterip-transition-mj8kb\naffinity-clusterip-transition-mj8kb\naffinity-clusterip-transition-dqhjr\naffinity-clusterip-transition-mj8kb\naffinity-clusterip-transition-jgmd4\naffinity-clusterip-transition-dqhjr\naffinity-clusterip-transition-mj8kb\naffinity-clusterip-transition-jgmd4\naffinity-clusterip-transition-jgmd4\naffinity-clusterip-transition-mj8kb\naffinity-clusterip-transition-jgmd4\naffinity-clusterip-transition-mj8kb\naffinity-clusterip-transition-jgmd4\naffinity-clusterip-transition-mj8kb\naffinity-clusterip-transition-jgmd4"
  Apr 20 12:53:30.863: INFO: Received response from host: affinity-clusterip-transition-mj8kb
  Apr 20 12:53:30.863: INFO: Received response from host: affinity-clusterip-transition-mj8kb
  Apr 20 12:53:30.863: INFO: Received response from host: affinity-clusterip-transition-mj8kb
  Apr 20 12:53:30.863: INFO: Received response from host: affinity-clusterip-transition-dqhjr
  Apr 20 12:53:30.863: INFO: Received response from host: affinity-clusterip-transition-mj8kb
  Apr 20 12:53:30.863: INFO: Received response from host: affinity-clusterip-transition-jgmd4
  Apr 20 12:53:30.863: INFO: Received response from host: affinity-clusterip-transition-dqhjr
  Apr 20 12:53:30.863: INFO: Received response from host: affinity-clusterip-transition-mj8kb
  Apr 20 12:53:30.863: INFO: Received response from host: affinity-clusterip-transition-jgmd4
  Apr 20 12:53:30.863: INFO: Received response from host: affinity-clusterip-transition-jgmd4
  Apr 20 12:53:30.863: INFO: Received response from host: affinity-clusterip-transition-mj8kb
  Apr 20 12:53:30.863: INFO: Received response from host: affinity-clusterip-transition-jgmd4
  Apr 20 12:53:30.863: INFO: Received response from host: affinity-clusterip-transition-mj8kb
  Apr 20 12:53:30.863: INFO: Received response from host: affinity-clusterip-transition-jgmd4
  Apr 20 12:53:30.863: INFO: Received response from host: affinity-clusterip-transition-mj8kb
  Apr 20 12:53:30.863: INFO: Received response from host: affinity-clusterip-transition-jgmd4
  Apr 20 12:53:30.874: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-4951 exec execpod-affinity4jf87 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.126:80/ ; done'
  Apr 20 12:53:31.017: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n"
  Apr 20 12:53:31.017: INFO: stdout: "\naffinity-clusterip-transition-mj8kb\naffinity-clusterip-transition-mj8kb\naffinity-clusterip-transition-mj8kb\naffinity-clusterip-transition-mj8kb\naffinity-clusterip-transition-mj8kb\naffinity-clusterip-transition-mj8kb\naffinity-clusterip-transition-mj8kb\naffinity-clusterip-transition-mj8kb\naffinity-clusterip-transition-mj8kb\naffinity-clusterip-transition-mj8kb\naffinity-clusterip-transition-mj8kb\naffinity-clusterip-transition-mj8kb\naffinity-clusterip-transition-mj8kb\naffinity-clusterip-transition-mj8kb\naffinity-clusterip-transition-mj8kb\naffinity-clusterip-transition-mj8kb"
  Apr 20 12:53:31.017: INFO: Received response from host: affinity-clusterip-transition-mj8kb
  Apr 20 12:53:31.017: INFO: Received response from host: affinity-clusterip-transition-mj8kb
  Apr 20 12:53:31.017: INFO: Received response from host: affinity-clusterip-transition-mj8kb
  Apr 20 12:53:31.017: INFO: Received response from host: affinity-clusterip-transition-mj8kb
  Apr 20 12:53:31.017: INFO: Received response from host: affinity-clusterip-transition-mj8kb
  Apr 20 12:53:31.017: INFO: Received response from host: affinity-clusterip-transition-mj8kb
  Apr 20 12:53:31.017: INFO: Received response from host: affinity-clusterip-transition-mj8kb
  Apr 20 12:53:31.017: INFO: Received response from host: affinity-clusterip-transition-mj8kb
  Apr 20 12:53:31.017: INFO: Received response from host: affinity-clusterip-transition-mj8kb
  Apr 20 12:53:31.017: INFO: Received response from host: affinity-clusterip-transition-mj8kb
  Apr 20 12:53:31.017: INFO: Received response from host: affinity-clusterip-transition-mj8kb
  Apr 20 12:53:31.017: INFO: Received response from host: affinity-clusterip-transition-mj8kb
  Apr 20 12:53:31.017: INFO: Received response from host: affinity-clusterip-transition-mj8kb
  Apr 20 12:53:31.017: INFO: Received response from host: affinity-clusterip-transition-mj8kb
  Apr 20 12:53:31.017: INFO: Received response from host: affinity-clusterip-transition-mj8kb
  Apr 20 12:53:31.017: INFO: Received response from host: affinity-clusterip-transition-mj8kb
  Apr 20 12:53:31.017: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-4951, will wait for the garbage collector to delete the pods @ 04/20/24 12:53:31.031
  Apr 20 12:53:31.092: INFO: Deleting ReplicationController affinity-clusterip-transition took: 6.401913ms
  Apr 20 12:53:31.193: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 101.037231ms
  Apr 20 12:53:34.409: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4951" for this suite. @ 04/20/24 12:53:34.413
• [10.015 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 04/20/24 12:53:34.422
  Apr 20 12:53:34.422: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename container-runtime @ 04/20/24 12:53:34.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:53:34.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:53:34.441
  STEP: create the container @ 04/20/24 12:53:34.443
  W0420 12:53:34.451829      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/20/24 12:53:34.452
  STEP: get the container status @ 04/20/24 12:53:36.463
  STEP: the container should be terminated @ 04/20/24 12:53:36.466
  STEP: the termination message should be set @ 04/20/24 12:53:36.466
  Apr 20 12:53:36.466: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 04/20/24 12:53:36.466
  Apr 20 12:53:36.482: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-317" for this suite. @ 04/20/24 12:53:36.485
• [2.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 04/20/24 12:53:36.491
  Apr 20 12:53:36.491: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 12:53:36.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:53:36.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:53:36.511
  STEP: Discovering how many secrets are in namespace by default @ 04/20/24 12:53:36.513
  STEP: Counting existing ResourceQuota @ 04/20/24 12:53:41.517
  STEP: Creating a ResourceQuota @ 04/20/24 12:53:46.522
  STEP: Ensuring resource quota status is calculated @ 04/20/24 12:53:46.528
  STEP: Creating a Secret @ 04/20/24 12:53:48.533
  STEP: Ensuring resource quota status captures secret creation @ 04/20/24 12:53:48.544
  STEP: Deleting a secret @ 04/20/24 12:53:50.55
  STEP: Ensuring resource quota status released usage @ 04/20/24 12:53:50.557
  Apr 20 12:53:52.560: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1533" for this suite. @ 04/20/24 12:53:52.564
• [16.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 04/20/24 12:53:52.573
  Apr 20 12:53:52.573: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename configmap @ 04/20/24 12:53:52.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:53:52.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:53:52.593
  STEP: Creating configMap with name configmap-test-volume-map-1ed0e37d-4b1b-41f6-8795-273941321ad2 @ 04/20/24 12:53:52.596
  STEP: Creating a pod to test consume configMaps @ 04/20/24 12:53:52.6
  STEP: Saw pod success @ 04/20/24 12:53:54.615
  Apr 20 12:53:54.618: INFO: Trying to get logs from node ip-172-31-41-198 pod pod-configmaps-d37acdf9-7b39-441b-bf13-74000b29eda2 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 12:53:54.638
  Apr 20 12:53:54.655: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8111" for this suite. @ 04/20/24 12:53:54.658
• [2.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 04/20/24 12:53:54.666
  Apr 20 12:53:54.666: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename configmap @ 04/20/24 12:53:54.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:53:54.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:53:54.685
  STEP: Creating configMap with name configmap-test-volume-9180e097-9505-493e-8cfb-d59212aef945 @ 04/20/24 12:53:54.689
  STEP: Creating a pod to test consume configMaps @ 04/20/24 12:53:54.693
  STEP: Saw pod success @ 04/20/24 12:53:58.714
  Apr 20 12:53:58.717: INFO: Trying to get logs from node ip-172-31-41-198 pod pod-configmaps-31cf8bfb-fd70-42c4-83d0-10ed137aba75 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 12:53:58.723
  Apr 20 12:53:58.842: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3864" for this suite. @ 04/20/24 12:53:58.846
• [4.185 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 04/20/24 12:53:58.852
  Apr 20 12:53:58.852: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename pv @ 04/20/24 12:53:58.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:53:58.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:53:58.874
  STEP: Creating initial PV and PVC @ 04/20/24 12:53:58.876
  Apr 20 12:53:58.876: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-7529" @ 04/20/24 12:53:58.888
  STEP: Listing PVCs in namespace "pv-7529" @ 04/20/24 12:53:58.891
  STEP: Patching the PV "pv-7529-jdfgt" @ 04/20/24 12:53:58.893
  STEP: Patching the PVC "pvc-5dn4h" @ 04/20/24 12:53:58.905
  STEP: Getting PV "pv-7529-jdfgt" @ 04/20/24 12:53:58.912
  STEP: Getting PVC "pvc-5dn4h" @ 04/20/24 12:53:58.915
  STEP: Deleting PVC "pvc-5dn4h" @ 04/20/24 12:53:58.918
  STEP: Confirm deletion of PVC "pvc-5dn4h" @ 04/20/24 12:53:58.924
  STEP: Deleting PV "pv-7529-jdfgt" @ 04/20/24 12:54:00.931
  STEP: Confirm deletion of PV "pv-7529-jdfgt" @ 04/20/24 12:54:00.937
  STEP: Recreating another PV & PVC @ 04/20/24 12:54:02.948
  Apr 20 12:54:02.948: INFO: Creating a PV followed by a PVC
  STEP: Updating the PV "pv-7529-8mp5w" @ 04/20/24 12:54:02.958
  STEP: Updating the PVC "pvc-tpp2t" @ 04/20/24 12:54:02.987
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-tpp2t=updated" @ 04/20/24 12:54:02.996
  STEP: Deleting PVC "pvc-tpp2t" via DeleteCollection @ 04/20/24 12:54:02.999
  STEP: Confirm deletion of PVC "pvc-tpp2t" @ 04/20/24 12:54:03.006
  STEP: Deleting PV "pv-7529-8mp5w" via DeleteCollection @ 04/20/24 12:54:05.012
  STEP: Confirm deletion of PV "pv-7529-8mp5w" @ 04/20/24 12:54:05.021
  Apr 20 12:54:07.028: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Apr 20 12:54:07.028: INFO: Deleting PersistentVolumeClaim "pvc-tpp2t"
  Apr 20 12:54:07.031: INFO: Deleting PersistentVolume "pv-7529-8mp5w"
  Apr 20 12:54:07.034: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-7529" for this suite. @ 04/20/24 12:54:07.037
• [8.191 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:46
  STEP: Creating a kubernetes client @ 04/20/24 12:54:07.043
  Apr 20 12:54:07.043: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename configmap @ 04/20/24 12:54:07.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:54:07.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:54:07.062
  STEP: Creating configMap configmap-8956/configmap-test-4fa5313e-924f-451f-95de-71f65077e7be @ 04/20/24 12:54:07.066
  STEP: Creating a pod to test consume configMaps @ 04/20/24 12:54:07.07
  STEP: Saw pod success @ 04/20/24 12:54:11.093
  Apr 20 12:54:11.097: INFO: Trying to get logs from node ip-172-31-41-198 pod pod-configmaps-c7d3831a-7eb3-4cdb-91b0-af6745fee359 container env-test: <nil>
  STEP: delete the pod @ 04/20/24 12:54:11.103
  Apr 20 12:54:11.124: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8956" for this suite. @ 04/20/24 12:54:11.127
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 04/20/24 12:54:11.133
  Apr 20 12:54:11.133: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename secrets @ 04/20/24 12:54:11.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:54:11.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:54:11.16
  STEP: Creating secret with name secret-test-28f71e55-a643-45bc-b4a0-dc9115a1b3a6 @ 04/20/24 12:54:11.166
  STEP: Creating a pod to test consume secrets @ 04/20/24 12:54:11.176
  STEP: Saw pod success @ 04/20/24 12:54:15.202
  Apr 20 12:54:15.206: INFO: Trying to get logs from node ip-172-31-41-198 pod pod-secrets-2acbcd45-53c9-4dd1-9503-14cfeb37cc13 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 12:54:15.213
  Apr 20 12:54:15.229: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3945" for this suite. @ 04/20/24 12:54:15.232
• [4.104 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 04/20/24 12:54:15.237
  Apr 20 12:54:15.237: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 12:54:15.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:54:15.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:54:15.258
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 12:54:15.261
  STEP: Saw pod success @ 04/20/24 12:54:19.284
  Apr 20 12:54:19.287: INFO: Trying to get logs from node ip-172-31-41-198 pod downwardapi-volume-1e79dfeb-b4d6-4a2f-9b76-dc6ce2613ae7 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 12:54:19.293
  Apr 20 12:54:19.308: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7566" for this suite. @ 04/20/24 12:54:19.311
• [4.080 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 04/20/24 12:54:19.317
  Apr 20 12:54:19.317: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename init-container @ 04/20/24 12:54:19.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:54:19.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:54:19.337
  STEP: creating the pod @ 04/20/24 12:54:19.343
  Apr 20 12:54:19.343: INFO: PodSpec: initContainers in spec.initContainers
  Apr 20 12:54:59.454: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-8fb6a528-fc51-4bb5-b87f-0316021a1fef", GenerateName:"", Namespace:"init-container-1749", SelfLink:"", UID:"0bd69810-2a88-4cd5-838f-11da74bc5af3", ResourceVersion:"21025", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 12, 54, 19, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"343032586"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 54, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f2ff0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 12, 54, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f3080), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-v7wnk", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0043f26e0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-v7wnk", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-v7wnk", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-v7wnk", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc00241dca0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-41-198", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc00059d8f0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00241dd30)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00241dd50)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc00241dd58), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00241dd5c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0012b4da0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 20, 12, 54, 20, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 20, 12, 54, 19, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 20, 12, 54, 19, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 20, 12, 54, 19, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 20, 12, 54, 19, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.41.198", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.41.198"}}, PodIP:"192.168.213.213", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.213.213"}}, StartTime:time.Date(2024, time.April, 20, 12, 54, 19, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00059db90)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00059dc70)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://aec25ef6609067c902b2363c822b0d27d4c503adb99d8427998aa2e623bb3b75", Started:(*bool)(0xc00241ddff), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0043f2740), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc00241de05), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0043f2720), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc00241ddd4), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Apr 20 12:54:59.454: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1749" for this suite. @ 04/20/24 12:54:59.458
• [40.149 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 04/20/24 12:54:59.466
  Apr 20 12:54:59.466: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename var-expansion @ 04/20/24 12:54:59.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:54:59.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:54:59.486
  STEP: Creating a pod to test env composition @ 04/20/24 12:54:59.488
  STEP: Saw pod success @ 04/20/24 12:55:03.512
  Apr 20 12:55:03.515: INFO: Trying to get logs from node ip-172-31-81-0 pod var-expansion-0e801f59-87e6-495a-9a1c-afd979083b84 container dapi-container: <nil>
  STEP: delete the pod @ 04/20/24 12:55:03.534
  Apr 20 12:55:03.550: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3622" for this suite. @ 04/20/24 12:55:03.553
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 04/20/24 12:55:03.561
  Apr 20 12:55:03.561: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename disruption @ 04/20/24 12:55:03.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:55:03.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:55:03.581
  STEP: Creating a kubernetes client @ 04/20/24 12:55:03.584
  Apr 20 12:55:03.584: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename disruption-2 @ 04/20/24 12:55:03.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:55:03.601
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:55:03.604
  STEP: Waiting for the pdb to be processed @ 04/20/24 12:55:03.61
  STEP: Waiting for the pdb to be processed @ 04/20/24 12:55:05.619
  STEP: Waiting for the pdb to be processed @ 04/20/24 12:55:07.629
  STEP: listing a collection of PDBs across all namespaces @ 04/20/24 12:55:09.634
  STEP: listing a collection of PDBs in namespace disruption-9004 @ 04/20/24 12:55:09.637
  STEP: deleting a collection of PDBs @ 04/20/24 12:55:09.641
  STEP: Waiting for the PDB collection to be deleted @ 04/20/24 12:55:09.653
  Apr 20 12:55:09.656: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-557" for this suite. @ 04/20/24 12:55:09.659
  Apr 20 12:55:09.665: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9004" for this suite. @ 04/20/24 12:55:09.668
• [6.113 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 04/20/24 12:55:09.674
  Apr 20 12:55:09.674: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename services @ 04/20/24 12:55:09.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:55:09.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:55:09.695
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-8814 @ 04/20/24 12:55:09.697
  STEP: changing the ExternalName service to type=ClusterIP @ 04/20/24 12:55:09.701
  STEP: creating replication controller externalname-service in namespace services-8814 @ 04/20/24 12:55:09.715
  I0420 12:55:09.722390      20 runners.go:197] Created replication controller with name: externalname-service, namespace: services-8814, replica count: 2
  I0420 12:55:12.774706      20 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 20 12:55:12.774: INFO: Creating new exec pod
  Apr 20 12:55:15.794: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-8814 exec execpoddtq4j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Apr 20 12:55:15.903: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Apr 20 12:55:15.903: INFO: stdout: "externalname-service-fxs6t"
  Apr 20 12:55:15.903: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-8814 exec execpoddtq4j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.197 80'
  Apr 20 12:55:15.995: INFO: stderr: "+ nc -v -t -w 2 10.152.183.197 80\nConnection to 10.152.183.197 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Apr 20 12:55:15.995: INFO: stdout: ""
  Apr 20 12:55:16.904: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-8814 exec execpoddtq4j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.197 80'
  Apr 20 12:55:17.007: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.197 80\nConnection to 10.152.183.197 80 port [tcp/http] succeeded!\n"
  Apr 20 12:55:17.007: INFO: stdout: ""
  Apr 20 12:55:17.904: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-8814 exec execpoddtq4j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.197 80'
  Apr 20 12:55:17.995: INFO: stderr: "+ nc -v -t -w 2 10.152.183.197 80\n+ echo hostName\nConnection to 10.152.183.197 80 port [tcp/http] succeeded!\n"
  Apr 20 12:55:17.995: INFO: stdout: "externalname-service-w7j49"
  Apr 20 12:55:17.995: INFO: Cleaning up the ExternalName to ClusterIP test service
  Apr 20 12:55:18.015: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8814" for this suite. @ 04/20/24 12:55:18.019
• [8.353 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 04/20/24 12:55:18.026
  Apr 20 12:55:18.026: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename configmap @ 04/20/24 12:55:18.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:55:18.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:55:18.045
  STEP: Creating configMap with name configmap-test-volume-map-4deeb136-0dcc-4de1-a0ab-a931bc561470 @ 04/20/24 12:55:18.049
  STEP: Creating a pod to test consume configMaps @ 04/20/24 12:55:18.052
  STEP: Saw pod success @ 04/20/24 12:55:22.076
  Apr 20 12:55:22.080: INFO: Trying to get logs from node ip-172-31-41-198 pod pod-configmaps-e24ccaf2-404d-4534-8633-50a86b0d4726 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 12:55:22.086
  Apr 20 12:55:22.102: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5129" for this suite. @ 04/20/24 12:55:22.106
• [4.085 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 04/20/24 12:55:22.112
  Apr 20 12:55:22.112: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename projected @ 04/20/24 12:55:22.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:55:22.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:55:22.135
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-c2ae5f65-d926-4832-8afe-5f8384f5a435 @ 04/20/24 12:55:22.141
  STEP: Creating the pod @ 04/20/24 12:55:22.147
  STEP: Updating configmap projected-configmap-test-upd-c2ae5f65-d926-4832-8afe-5f8384f5a435 @ 04/20/24 12:55:24.172
  STEP: waiting to observe update in volume @ 04/20/24 12:55:24.176
  Apr 20 12:56:26.439: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9450" for this suite. @ 04/20/24 12:56:26.443
• [64.337 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 04/20/24 12:56:26.449
  Apr 20 12:56:26.449: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename daemonsets @ 04/20/24 12:56:26.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:56:26.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:56:26.471
  Apr 20 12:56:26.494: INFO: Create a RollingUpdate DaemonSet
  Apr 20 12:56:26.498: INFO: Check that daemon pods launch on every node of the cluster
  Apr 20 12:56:26.502: INFO: DaemonSet pods can't tolerate node ip-172-31-45-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 12:56:26.502: INFO: DaemonSet pods can't tolerate node ip-172-31-9-171 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 12:56:26.504: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 12:56:26.504: INFO: Node ip-172-31-27-26 is running 0 daemon pod, expected 1
  Apr 20 12:56:27.503: INFO: DaemonSet pods can't tolerate node ip-172-31-45-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 12:56:27.503: INFO: DaemonSet pods can't tolerate node ip-172-31-9-171 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 12:56:27.507: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 20 12:56:27.507: INFO: Node ip-172-31-41-198 is running 0 daemon pod, expected 1
  Apr 20 12:56:28.503: INFO: DaemonSet pods can't tolerate node ip-172-31-45-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 12:56:28.503: INFO: DaemonSet pods can't tolerate node ip-172-31-9-171 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 12:56:28.507: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 20 12:56:28.507: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  Apr 20 12:56:28.507: INFO: Update the DaemonSet to trigger a rollout
  Apr 20 12:56:28.515: INFO: Updating DaemonSet daemon-set
  Apr 20 12:56:29.527: INFO: Roll back the DaemonSet before rollout is complete
  Apr 20 12:56:29.534: INFO: Updating DaemonSet daemon-set
  Apr 20 12:56:29.534: INFO: Make sure DaemonSet rollback is complete
  Apr 20 12:56:29.539: INFO: Wrong image for pod: daemon-set-lbwrd. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Apr 20 12:56:29.539: INFO: Pod daemon-set-lbwrd is not available
  Apr 20 12:56:29.542: INFO: DaemonSet pods can't tolerate node ip-172-31-45-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 12:56:29.542: INFO: DaemonSet pods can't tolerate node ip-172-31-9-171 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 12:56:30.542: INFO: DaemonSet pods can't tolerate node ip-172-31-45-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 12:56:30.542: INFO: DaemonSet pods can't tolerate node ip-172-31-9-171 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 12:56:31.542: INFO: Pod daemon-set-cm8rh is not available
  Apr 20 12:56:31.549: INFO: DaemonSet pods can't tolerate node ip-172-31-45-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 12:56:31.549: INFO: DaemonSet pods can't tolerate node ip-172-31-9-171 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 04/20/24 12:56:31.555
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1425, will wait for the garbage collector to delete the pods @ 04/20/24 12:56:31.555
  Apr 20 12:56:31.614: INFO: Deleting DaemonSet.extensions daemon-set took: 5.418635ms
  Apr 20 12:56:31.717: INFO: Terminating DaemonSet.extensions daemon-set pods took: 102.239616ms
  Apr 20 12:56:33.322: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 12:56:33.322: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 20 12:56:33.325: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"21611"},"items":null}

  Apr 20 12:56:33.328: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"21611"},"items":null}

  Apr 20 12:56:33.340: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1425" for this suite. @ 04/20/24 12:56:33.342
• [6.900 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 04/20/24 12:56:33.35
  Apr 20 12:56:33.350: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/20/24 12:56:33.35
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:56:33.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:56:33.377
  STEP: set up a multi version CRD @ 04/20/24 12:56:33.38
  Apr 20 12:56:33.380: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: rename a version @ 04/20/24 12:56:36.471
  STEP: check the new version name is served @ 04/20/24 12:56:36.483
  STEP: check the old version name is removed @ 04/20/24 12:56:37.316
  STEP: check the other version is not changed @ 04/20/24 12:56:37.914
  Apr 20 12:56:40.343: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1668" for this suite. @ 04/20/24 12:56:40.35
• [7.006 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 04/20/24 12:56:40.356
  Apr 20 12:56:40.356: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename container-probe @ 04/20/24 12:56:40.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 12:56:40.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 12:56:40.377
  STEP: Creating pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848 @ 04/20/24 12:56:40.379
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/20/24 12:56:42.394
  Apr 20 12:56:42.398: INFO: Initial restart count of pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 is 0
  Apr 20 12:56:42.401: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:56:44.406: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:56:46.411: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:56:48.416: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:56:50.420: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:56:52.425: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:56:54.430: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:56:56.435: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:56:58.440: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:57:00.445: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:57:02.450: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:57:04.456: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:57:06.460: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:57:08.466: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:57:10.470: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:57:12.475: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:57:14.479: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:57:16.484: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:57:18.488: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:57:20.493: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:57:22.499: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:57:24.504: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:57:26.509: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:57:28.514: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:57:30.518: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:57:32.523: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:57:34.529: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:57:36.533: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:57:38.538: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:57:40.543: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:57:42.549: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:57:44.554: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:57:46.558: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:57:48.564: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:57:50.569: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:57:52.573: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:57:54.578: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:57:56.582: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:57:58.588: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:58:00.593: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:58:02.597: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:58:04.602: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:58:06.607: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:58:08.611: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:58:10.615: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:58:12.619: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:58:14.623: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:58:16.629: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:58:18.634: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:58:20.639: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:58:22.644: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:58:24.649: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:58:26.654: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:58:28.658: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:58:30.663: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:58:32.667: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:58:34.671: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:58:36.677: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:58:38.683: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:58:40.690: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:58:42.694: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:58:44.699: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:58:46.704: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:58:48.709: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:58:50.715: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:58:52.720: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:58:54.725: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:58:56.729: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:58:58.735: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:59:00.739: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:59:02.743: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:59:04.747: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:59:06.753: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:59:08.758: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:59:10.763: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:59:12.768: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:59:14.774: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:59:16.778: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:59:18.783: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:59:20.788: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:59:22.794: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:59:24.797: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:59:26.803: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:59:28.808: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:59:30.812: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:59:32.818: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:59:34.823: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:59:36.827: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:59:38.832: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:59:40.836: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:59:42.841: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:59:44.845: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:59:46.850: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:59:48.855: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:59:50.860: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:59:52.864: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:59:54.869: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:59:56.875: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 12:59:58.880: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 13:00:00.885: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 13:00:02.890: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 13:00:04.896: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 13:00:06.901: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 13:00:08.906: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 13:00:10.911: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 13:00:12.917: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 13:00:14.921: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 13:00:16.926: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 13:00:18.932: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 13:00:20.936: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 13:00:22.940: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 13:00:24.944: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 13:00:26.950: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 13:00:28.955: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 13:00:30.959: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 13:00:32.964: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 13:00:34.968: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 13:00:36.972: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 13:00:38.977: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  Apr 20 13:00:40.983: INFO: Get pod liveness-5af70082-defd-4e0d-a8fb-3858421066c1 in namespace container-probe-1848
  STEP: deleting the pod @ 04/20/24 13:00:42.984
  Apr 20 13:00:42.999: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1848" for this suite. @ 04/20/24 13:00:43.002
• [242.651 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 04/20/24 13:00:43.008
  Apr 20 13:00:43.008: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename configmap @ 04/20/24 13:00:43.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:00:43.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:00:43.027
  STEP: Creating configMap with name configmap-test-volume-map-077e806b-b052-4505-88e3-8999d1359666 @ 04/20/24 13:00:43.029
  STEP: Creating a pod to test consume configMaps @ 04/20/24 13:00:43.033
  STEP: Saw pod success @ 04/20/24 13:00:47.057
  Apr 20 13:00:47.060: INFO: Trying to get logs from node ip-172-31-41-198 pod pod-configmaps-0212b341-b080-4331-9e95-5572484a179b container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 13:00:47.076
  Apr 20 13:00:47.094: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2668" for this suite. @ 04/20/24 13:00:47.097
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 04/20/24 13:00:47.103
  Apr 20 13:00:47.103: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 13:00:47.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:00:47.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:00:47.122
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 13:00:47.125
  STEP: Saw pod success @ 04/20/24 13:00:51.148
  Apr 20 13:00:51.151: INFO: Trying to get logs from node ip-172-31-41-198 pod downwardapi-volume-c3e27605-a088-4dbb-8149-2a6686b32d3b container client-container: <nil>
  STEP: delete the pod @ 04/20/24 13:00:51.157
  Apr 20 13:00:51.174: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2390" for this suite. @ 04/20/24 13:00:51.177
• [4.081 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 04/20/24 13:00:51.185
  Apr 20 13:00:51.185: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename services @ 04/20/24 13:00:51.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:00:51.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:00:51.205
  STEP: creating service nodeport-test with type=NodePort in namespace services-3787 @ 04/20/24 13:00:51.208
  STEP: creating replication controller nodeport-test in namespace services-3787 @ 04/20/24 13:00:51.223
  I0420 13:00:51.228918      20 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-3787, replica count: 2
  I0420 13:00:54.279622      20 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 20 13:00:54.279: INFO: Creating new exec pod
  Apr 20 13:00:57.303: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-3787 exec execpodpr5nt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Apr 20 13:00:57.403: INFO: stderr: "+ nc -v -t -w 2 nodeport-test 80\n+ echo hostName\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Apr 20 13:00:57.403: INFO: stdout: "nodeport-test-b5jwx"
  Apr 20 13:00:57.403: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-3787 exec execpodpr5nt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.190 80'
  Apr 20 13:00:57.495: INFO: stderr: "+ nc -v -t -w 2 10.152.183.190 80\nConnection to 10.152.183.190 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Apr 20 13:00:57.495: INFO: stdout: ""
  Apr 20 13:00:58.404: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-3787 exec execpodpr5nt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.190 80'
  Apr 20 13:00:58.497: INFO: stderr: "+ nc -v -t -w 2 10.152.183.190 80\n+ echo hostName\nConnection to 10.152.183.190 80 port [tcp/http] succeeded!\n"
  Apr 20 13:00:58.497: INFO: stdout: ""
  Apr 20 13:00:59.404: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-3787 exec execpodpr5nt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.190 80'
  Apr 20 13:00:59.500: INFO: stderr: "+ nc -v -t -w 2 10.152.183.190 80\n+ echo hostName\nConnection to 10.152.183.190 80 port [tcp/http] succeeded!\n"
  Apr 20 13:00:59.500: INFO: stdout: "nodeport-test-b5jwx"
  Apr 20 13:00:59.500: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-3787 exec execpodpr5nt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.81.0 32504'
  Apr 20 13:00:59.594: INFO: stderr: "+ nc -v -t -w 2 172.31.81.0 32504\n+ echo hostName\nConnection to 172.31.81.0 32504 port [tcp/*] succeeded!\n"
  Apr 20 13:00:59.594: INFO: stdout: "nodeport-test-kk2tv"
  Apr 20 13:00:59.594: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-3787 exec execpodpr5nt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.27.26 32504'
  Apr 20 13:00:59.691: INFO: stderr: "+ nc -v -t -w 2 172.31.27.26 32504\n+ echo hostName\nConnection to 172.31.27.26 32504 port [tcp/*] succeeded!\n"
  Apr 20 13:00:59.691: INFO: stdout: ""
  Apr 20 13:01:00.595: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-3787 exec execpodpr5nt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.27.26 32504'
  Apr 20 13:01:00.690: INFO: stderr: "+ nc -v -t -w 2 172.31.27.26 32504\n+ echo hostName\nConnection to 172.31.27.26 32504 port [tcp/*] succeeded!\n"
  Apr 20 13:01:00.690: INFO: stdout: "nodeport-test-b5jwx"
  Apr 20 13:01:00.690: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3787" for this suite. @ 04/20/24 13:01:00.695
• [9.516 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 04/20/24 13:01:00.701
  Apr 20 13:01:00.701: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename svcaccounts @ 04/20/24 13:01:00.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:01:00.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:01:00.719
  STEP: Creating a pod to test service account token:  @ 04/20/24 13:01:00.722
  STEP: Saw pod success @ 04/20/24 13:01:04.743
  Apr 20 13:01:04.746: INFO: Trying to get logs from node ip-172-31-81-0 pod test-pod-e721622f-dce2-461c-a1de-fdf7e7eaaec8 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 13:01:04.762
  Apr 20 13:01:04.780: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3795" for this suite. @ 04/20/24 13:01:04.784
• [4.089 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 04/20/24 13:01:04.791
  Apr 20 13:01:04.791: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename limitrange @ 04/20/24 13:01:04.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:01:04.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:01:04.811
  STEP: Creating LimitRange "e2e-limitrange-dp6rr" in namespace "limitrange-6675" @ 04/20/24 13:01:04.814
  STEP: Creating another limitRange in another namespace @ 04/20/24 13:01:04.818
  Apr 20 13:01:04.834: INFO: Namespace "e2e-limitrange-dp6rr-5528" created
  Apr 20 13:01:04.834: INFO: Creating LimitRange "e2e-limitrange-dp6rr" in namespace "e2e-limitrange-dp6rr-5528"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-dp6rr" @ 04/20/24 13:01:04.84
  Apr 20 13:01:04.843: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-dp6rr" in "limitrange-6675" namespace @ 04/20/24 13:01:04.843
  Apr 20 13:01:04.850: INFO: LimitRange "e2e-limitrange-dp6rr" has been patched
  STEP: Delete LimitRange "e2e-limitrange-dp6rr" by Collection with labelSelector: "e2e-limitrange-dp6rr=patched" @ 04/20/24 13:01:04.85
  STEP: Confirm that the limitRange "e2e-limitrange-dp6rr" has been deleted @ 04/20/24 13:01:04.856
  Apr 20 13:01:04.856: INFO: Requesting list of LimitRange to confirm quantity
  Apr 20 13:01:04.859: INFO: Found 0 LimitRange with label "e2e-limitrange-dp6rr=patched"
  Apr 20 13:01:04.859: INFO: LimitRange "e2e-limitrange-dp6rr" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-dp6rr" @ 04/20/24 13:01:04.859
  Apr 20 13:01:04.862: INFO: Found 1 limitRange
  Apr 20 13:01:04.862: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-6675" for this suite. @ 04/20/24 13:01:04.865
  STEP: Destroying namespace "e2e-limitrange-dp6rr-5528" for this suite. @ 04/20/24 13:01:04.87
• [0.085 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 04/20/24 13:01:04.876
  Apr 20 13:01:04.876: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename containers @ 04/20/24 13:01:04.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:01:04.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:01:04.894
  STEP: Creating a pod to test override all @ 04/20/24 13:01:04.897
  STEP: Saw pod success @ 04/20/24 13:01:08.917
  Apr 20 13:01:08.920: INFO: Trying to get logs from node ip-172-31-41-198 pod client-containers-f6039c6e-4a2a-4e96-9daf-17c45144361d container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 13:01:08.931
  Apr 20 13:01:08.946: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4596" for this suite. @ 04/20/24 13:01:08.949
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 04/20/24 13:01:08.957
  Apr 20 13:01:08.957: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename dns @ 04/20/24 13:01:08.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:01:08.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:01:08.978
  STEP: Creating a test headless service @ 04/20/24 13:01:08.98
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5601 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-5601;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5601 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-5601;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5601.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-5601.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5601.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-5601.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5601.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-5601.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5601.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-5601.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5601.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-5601.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5601.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-5601.svc;check="$$(dig +notcp +noall +answer +search 57.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.57_udp@PTR;check="$$(dig +tcp +noall +answer +search 57.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.57_tcp@PTR;sleep 1; done
   @ 04/20/24 13:01:08.996
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5601 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5601;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5601 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5601;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5601.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5601.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5601.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5601.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5601.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-5601.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5601.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-5601.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5601.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-5601.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5601.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-5601.svc;check="$$(dig +notcp +noall +answer +search 57.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.57_udp@PTR;check="$$(dig +tcp +noall +answer +search 57.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.57_tcp@PTR;sleep 1; done
   @ 04/20/24 13:01:08.996
  STEP: creating a pod to probe DNS @ 04/20/24 13:01:08.996
  STEP: submitting the pod to kubernetes @ 04/20/24 13:01:08.997
  STEP: retrieving the pod @ 04/20/24 13:01:11.02
  STEP: looking for the results for each expected name from probers @ 04/20/24 13:01:11.024
  Apr 20 13:01:11.029: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-5601/dns-test-f66c68a2-62fc-42a6-bb6a-83076c42b337: the server could not find the requested resource (get pods dns-test-f66c68a2-62fc-42a6-bb6a-83076c42b337)
  Apr 20 13:01:11.033: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-5601/dns-test-f66c68a2-62fc-42a6-bb6a-83076c42b337: the server could not find the requested resource (get pods dns-test-f66c68a2-62fc-42a6-bb6a-83076c42b337)
  Apr 20 13:01:11.036: INFO: Unable to read wheezy_udp@dns-test-service.dns-5601 from pod dns-5601/dns-test-f66c68a2-62fc-42a6-bb6a-83076c42b337: the server could not find the requested resource (get pods dns-test-f66c68a2-62fc-42a6-bb6a-83076c42b337)
  Apr 20 13:01:11.040: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5601 from pod dns-5601/dns-test-f66c68a2-62fc-42a6-bb6a-83076c42b337: the server could not find the requested resource (get pods dns-test-f66c68a2-62fc-42a6-bb6a-83076c42b337)
  Apr 20 13:01:11.043: INFO: Unable to read wheezy_udp@dns-test-service.dns-5601.svc from pod dns-5601/dns-test-f66c68a2-62fc-42a6-bb6a-83076c42b337: the server could not find the requested resource (get pods dns-test-f66c68a2-62fc-42a6-bb6a-83076c42b337)
  Apr 20 13:01:11.048: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5601.svc from pod dns-5601/dns-test-f66c68a2-62fc-42a6-bb6a-83076c42b337: the server could not find the requested resource (get pods dns-test-f66c68a2-62fc-42a6-bb6a-83076c42b337)
  Apr 20 13:01:11.052: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-5601.svc from pod dns-5601/dns-test-f66c68a2-62fc-42a6-bb6a-83076c42b337: the server could not find the requested resource (get pods dns-test-f66c68a2-62fc-42a6-bb6a-83076c42b337)
  Apr 20 13:01:11.055: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5601.svc from pod dns-5601/dns-test-f66c68a2-62fc-42a6-bb6a-83076c42b337: the server could not find the requested resource (get pods dns-test-f66c68a2-62fc-42a6-bb6a-83076c42b337)
  Apr 20 13:01:11.074: INFO: Unable to read jessie_udp@dns-test-service from pod dns-5601/dns-test-f66c68a2-62fc-42a6-bb6a-83076c42b337: the server could not find the requested resource (get pods dns-test-f66c68a2-62fc-42a6-bb6a-83076c42b337)
  Apr 20 13:01:11.077: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-5601/dns-test-f66c68a2-62fc-42a6-bb6a-83076c42b337: the server could not find the requested resource (get pods dns-test-f66c68a2-62fc-42a6-bb6a-83076c42b337)
  Apr 20 13:01:11.081: INFO: Unable to read jessie_udp@dns-test-service.dns-5601 from pod dns-5601/dns-test-f66c68a2-62fc-42a6-bb6a-83076c42b337: the server could not find the requested resource (get pods dns-test-f66c68a2-62fc-42a6-bb6a-83076c42b337)
  Apr 20 13:01:11.085: INFO: Unable to read jessie_tcp@dns-test-service.dns-5601 from pod dns-5601/dns-test-f66c68a2-62fc-42a6-bb6a-83076c42b337: the server could not find the requested resource (get pods dns-test-f66c68a2-62fc-42a6-bb6a-83076c42b337)
  Apr 20 13:01:11.089: INFO: Unable to read jessie_udp@dns-test-service.dns-5601.svc from pod dns-5601/dns-test-f66c68a2-62fc-42a6-bb6a-83076c42b337: the server could not find the requested resource (get pods dns-test-f66c68a2-62fc-42a6-bb6a-83076c42b337)
  Apr 20 13:01:11.093: INFO: Unable to read jessie_tcp@dns-test-service.dns-5601.svc from pod dns-5601/dns-test-f66c68a2-62fc-42a6-bb6a-83076c42b337: the server could not find the requested resource (get pods dns-test-f66c68a2-62fc-42a6-bb6a-83076c42b337)
  Apr 20 13:01:11.096: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5601.svc from pod dns-5601/dns-test-f66c68a2-62fc-42a6-bb6a-83076c42b337: the server could not find the requested resource (get pods dns-test-f66c68a2-62fc-42a6-bb6a-83076c42b337)
  Apr 20 13:01:11.100: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5601.svc from pod dns-5601/dns-test-f66c68a2-62fc-42a6-bb6a-83076c42b337: the server could not find the requested resource (get pods dns-test-f66c68a2-62fc-42a6-bb6a-83076c42b337)
  Apr 20 13:01:11.114: INFO: Lookups using dns-5601/dns-test-f66c68a2-62fc-42a6-bb6a-83076c42b337 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-5601 wheezy_tcp@dns-test-service.dns-5601 wheezy_udp@dns-test-service.dns-5601.svc wheezy_tcp@dns-test-service.dns-5601.svc wheezy_udp@_http._tcp.dns-test-service.dns-5601.svc wheezy_tcp@_http._tcp.dns-test-service.dns-5601.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5601 jessie_tcp@dns-test-service.dns-5601 jessie_udp@dns-test-service.dns-5601.svc jessie_tcp@dns-test-service.dns-5601.svc jessie_udp@_http._tcp.dns-test-service.dns-5601.svc jessie_tcp@_http._tcp.dns-test-service.dns-5601.svc]

  Apr 20 13:01:11.120: INFO: Pod client logs for webserver: 
  Apr 20 13:01:11.126: INFO: Pod client logs for querier: 
  Apr 20 13:01:11.132: INFO: Pod client logs for jessie-querier: 
  Apr 20 13:01:16.117: INFO: DNS probes using dns-5601/dns-test-f66c68a2-62fc-42a6-bb6a-83076c42b337 succeeded

  STEP: deleting the pod @ 04/20/24 13:01:16.118
  STEP: deleting the test service @ 04/20/24 13:01:16.13
  STEP: deleting the test headless service @ 04/20/24 13:01:16.149
  Apr 20 13:01:16.163: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5601" for this suite. @ 04/20/24 13:01:16.167
• [7.216 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 04/20/24 13:01:16.173
  Apr 20 13:01:16.173: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename container-runtime @ 04/20/24 13:01:16.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:01:16.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:01:16.192
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 04/20/24 13:01:16.203
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 04/20/24 13:01:30.273
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 04/20/24 13:01:30.276
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 04/20/24 13:01:30.282
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 04/20/24 13:01:30.282
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 04/20/24 13:01:30.307
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 04/20/24 13:01:32.32
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 04/20/24 13:01:33.328
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 04/20/24 13:01:33.334
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 04/20/24 13:01:33.334
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 04/20/24 13:01:33.365
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 04/20/24 13:01:34.373
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 04/20/24 13:01:35.38
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 04/20/24 13:01:35.387
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 04/20/24 13:01:35.387
  Apr 20 13:01:35.419: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3558" for this suite. @ 04/20/24 13:01:35.423
• [19.257 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 04/20/24 13:01:35.43
  Apr 20 13:01:35.430: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename namespaces @ 04/20/24 13:01:35.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:01:35.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:01:35.451
  STEP: Updating Namespace "namespaces-1707" @ 04/20/24 13:01:35.453
  Apr 20 13:01:35.460: INFO: Namespace "namespaces-1707" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"4c21cad3-750d-4728-bc3f-c782b0a026e0", "kubernetes.io/metadata.name":"namespaces-1707", "namespaces-1707":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Apr 20 13:01:35.460: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1707" for this suite. @ 04/20/24 13:01:35.463
• [0.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 04/20/24 13:01:35.469
  Apr 20 13:01:35.469: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename var-expansion @ 04/20/24 13:01:35.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:01:35.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:01:35.489
  Apr 20 13:01:37.509: INFO: Deleting pod "var-expansion-d69554c1-4596-4350-9014-87d3377797d1" in namespace "var-expansion-6738"
  Apr 20 13:01:37.517: INFO: Wait up to 5m0s for pod "var-expansion-d69554c1-4596-4350-9014-87d3377797d1" to be fully deleted
  Apr 20 13:01:39.526: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6738" for this suite. @ 04/20/24 13:01:39.529
• [4.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3565
  STEP: Creating a kubernetes client @ 04/20/24 13:01:39.537
  Apr 20 13:01:39.537: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename services @ 04/20/24 13:01:39.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:01:39.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:01:39.555
  STEP: creating a collection of services @ 04/20/24 13:01:39.558
  Apr 20 13:01:39.558: INFO: Creating e2e-svc-a-fmntm
  Apr 20 13:01:39.568: INFO: Creating e2e-svc-b-7wlpm
  Apr 20 13:01:39.578: INFO: Creating e2e-svc-c-l5s9z
  STEP: deleting service collection @ 04/20/24 13:01:39.592
  Apr 20 13:01:39.617: INFO: Collection of services has been deleted
  Apr 20 13:01:39.617: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9475" for this suite. @ 04/20/24 13:01:39.62
• [0.090 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 04/20/24 13:01:39.627
  Apr 20 13:01:39.627: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename deployment @ 04/20/24 13:01:39.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:01:39.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:01:39.646
  Apr 20 13:01:39.649: INFO: Creating simple deployment test-new-deployment
  Apr 20 13:01:39.658: INFO: new replicaset for deployment "test-new-deployment" is yet to be created
  STEP: getting scale subresource @ 04/20/24 13:01:41.672
  STEP: updating a scale subresource @ 04/20/24 13:01:41.675
  STEP: verifying the deployment Spec.Replicas was modified @ 04/20/24 13:01:41.679
  STEP: Patch a scale subresource @ 04/20/24 13:01:41.682
  Apr 20 13:01:41.700: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-476",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "25b13c76-45a2-4a2e-9880-035f91d028cc",
      ResourceVersion: (string) (len=5) "22836",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214899,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214899,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214899,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 20 13:01:41.710: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-476",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7d41d3d0-0fce-424d-9c23-163810fdb27c",
      ResourceVersion: (string) (len=5) "22839",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214899,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "25b13c76-45a2-4a2e-9880-035f91d028cc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 35 62 31 33 63  37 36 2d 34 35 61 32 2d  |\"25b13c76-45a2-|
              00000120  34 61 32 65 2d 39 38 38  30 2d 30 33 35 66 39 31  |4a2e-9880-035f91|
              00000130  64 30 32 38 63 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |d028cc\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 20 13:01:41.717: INFO: Pod "test-new-deployment-557759b7c7-4sl5v" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-4sl5v",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-476",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dc9c557b-8bfc-46d2-bea7-c662d5d64f66",
      ResourceVersion: (string) (len=5) "22829",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214899,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "7d41d3d0-0fce-424d-9c23-163810fdb27c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214899,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 64  34 31 64 33 64 30 2d 30  |d\":\"7d41d3d0-0|
              00000090  66 63 65 2d 34 32 34 64  2d 39 63 32 33 2d 31 36  |fce-424d-9c23-16|
              000000a0  33 38 31 30 66 64 62 32  37 63 5c 22 7d 22 3a 7b  |3810fdb27c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 31  33 2e 32 34 38 5c 22 7d  |2.168.213.248\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xgfsg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xgfsg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-41-198",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214899,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214899,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.41.198",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.41.198"
        }
      },
      PodIP: (string) (len=15) "192.168.213.248",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.213.248"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214899,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849214900,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d5a9fa5a249e6446929d1e3b56f197800d04d04998bb574319aab6ab8dabd4e5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 13:01:41.719: INFO: Pod "test-new-deployment-557759b7c7-fl5jx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-fl5jx",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-476",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8978f857-bf62-4d69-a538-686351c55b17",
      ResourceVersion: (string) (len=5) "22840",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849214901,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "7d41d3d0-0fce-424d-9c23-163810fdb27c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 64  34 31 64 33 64 30 2d 30  |d\":\"7d41d3d0-0|
              00000090  66 63 65 2d 34 32 34 64  2d 39 63 32 33 2d 31 36  |fce-424d-9c23-16|
              000000a0  33 38 31 30 66 64 62 32  37 63 5c 22 7d 22 3a 7b  |3810fdb27c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7vlkw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7vlkw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-81-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849214901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 13:01:41.719: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-476" for this suite. @ 04/20/24 13:01:41.723
• [2.105 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 04/20/24 13:01:41.733
  Apr 20 13:01:41.733: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename projected @ 04/20/24 13:01:41.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:01:41.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:01:41.768
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 13:01:41.77
  STEP: Saw pod success @ 04/20/24 13:01:45.792
  Apr 20 13:01:45.795: INFO: Trying to get logs from node ip-172-31-41-198 pod downwardapi-volume-47048999-9ac4-41e0-ae59-33a097fd95b3 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 13:01:45.802
  Apr 20 13:01:45.820: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6509" for this suite. @ 04/20/24 13:01:45.824
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2214
  STEP: Creating a kubernetes client @ 04/20/24 13:01:45.829
  Apr 20 13:01:45.829: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename services @ 04/20/24 13:01:45.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:01:45.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:01:45.851
  STEP: creating service in namespace services-9157 @ 04/20/24 13:01:45.853
  STEP: creating service affinity-nodeport in namespace services-9157 @ 04/20/24 13:01:45.853
  STEP: creating replication controller affinity-nodeport in namespace services-9157 @ 04/20/24 13:01:45.868
  I0420 13:01:45.875826      20 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-9157, replica count: 3
  I0420 13:01:48.927428      20 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 20 13:01:48.938: INFO: Creating new exec pod
  Apr 20 13:01:51.957: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-9157 exec execpod-affinityszkn8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Apr 20 13:01:52.055: INFO: stderr: "+ nc -v -t -w 2 affinity-nodeport 80\n+ echo hostName\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Apr 20 13:01:52.055: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 13:01:52.055: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-9157 exec execpod-affinityszkn8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.134 80'
  Apr 20 13:01:52.152: INFO: stderr: "+ nc -v -t -w 2 10.152.183.134 80\n+ echo hostName\nConnection to 10.152.183.134 80 port [tcp/http] succeeded!\n"
  Apr 20 13:01:52.152: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 13:01:52.152: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-9157 exec execpod-affinityszkn8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.41.198 31437'
  Apr 20 13:01:52.244: INFO: stderr: "+ nc -v -t -w 2 172.31.41.198 31437\n+ echo hostName\nConnection to 172.31.41.198 31437 port [tcp/*] succeeded!\n"
  Apr 20 13:01:52.244: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 13:01:52.245: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-9157 exec execpod-affinityszkn8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.27.26 31437'
  Apr 20 13:01:52.338: INFO: stderr: "+ nc -v -t -w 2 172.31.27.26 31437\n+ echo hostName\nConnection to 172.31.27.26 31437 port [tcp/*] succeeded!\n"
  Apr 20 13:01:52.338: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 13:01:52.338: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-9157 exec execpod-affinityszkn8 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.27.26:31437/ ; done'
  Apr 20 13:01:52.502: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:31437/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:31437/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:31437/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:31437/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:31437/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:31437/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:31437/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:31437/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:31437/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:31437/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:31437/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:31437/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:31437/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:31437/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:31437/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.27.26:31437/\n"
  Apr 20 13:01:52.502: INFO: stdout: "\naffinity-nodeport-ffts5\naffinity-nodeport-ffts5\naffinity-nodeport-ffts5\naffinity-nodeport-ffts5\naffinity-nodeport-ffts5\naffinity-nodeport-ffts5\naffinity-nodeport-ffts5\naffinity-nodeport-ffts5\naffinity-nodeport-ffts5\naffinity-nodeport-ffts5\naffinity-nodeport-ffts5\naffinity-nodeport-ffts5\naffinity-nodeport-ffts5\naffinity-nodeport-ffts5\naffinity-nodeport-ffts5\naffinity-nodeport-ffts5"
  Apr 20 13:01:52.502: INFO: Received response from host: affinity-nodeport-ffts5
  Apr 20 13:01:52.502: INFO: Received response from host: affinity-nodeport-ffts5
  Apr 20 13:01:52.502: INFO: Received response from host: affinity-nodeport-ffts5
  Apr 20 13:01:52.502: INFO: Received response from host: affinity-nodeport-ffts5
  Apr 20 13:01:52.502: INFO: Received response from host: affinity-nodeport-ffts5
  Apr 20 13:01:52.502: INFO: Received response from host: affinity-nodeport-ffts5
  Apr 20 13:01:52.502: INFO: Received response from host: affinity-nodeport-ffts5
  Apr 20 13:01:52.502: INFO: Received response from host: affinity-nodeport-ffts5
  Apr 20 13:01:52.502: INFO: Received response from host: affinity-nodeport-ffts5
  Apr 20 13:01:52.502: INFO: Received response from host: affinity-nodeport-ffts5
  Apr 20 13:01:52.502: INFO: Received response from host: affinity-nodeport-ffts5
  Apr 20 13:01:52.502: INFO: Received response from host: affinity-nodeport-ffts5
  Apr 20 13:01:52.502: INFO: Received response from host: affinity-nodeport-ffts5
  Apr 20 13:01:52.502: INFO: Received response from host: affinity-nodeport-ffts5
  Apr 20 13:01:52.502: INFO: Received response from host: affinity-nodeport-ffts5
  Apr 20 13:01:52.502: INFO: Received response from host: affinity-nodeport-ffts5
  Apr 20 13:01:52.502: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-9157, will wait for the garbage collector to delete the pods @ 04/20/24 13:01:52.516
  Apr 20 13:01:52.578: INFO: Deleting ReplicationController affinity-nodeport took: 6.683946ms
  Apr 20 13:01:52.679: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.24867ms
  Apr 20 13:01:55.799: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9157" for this suite. @ 04/20/24 13:01:55.802
• [9.980 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:855
  STEP: Creating a kubernetes client @ 04/20/24 13:01:55.811
  Apr 20 13:01:55.811: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename job @ 04/20/24 13:01:55.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:01:55.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:01:55.832
  STEP: Creating a suspended job @ 04/20/24 13:01:55.837
  STEP: Patching the Job @ 04/20/24 13:01:55.843
  STEP: Watching for Job to be patched @ 04/20/24 13:01:55.859
  Apr 20 13:01:55.860: INFO: Event ADDED observed for Job e2e-w26mx in namespace job-5843 with labels: map[e2e-job-label:e2e-w26mx] and annotations: map[]
  Apr 20 13:01:55.860: INFO: Event MODIFIED observed for Job e2e-w26mx in namespace job-5843 with labels: map[e2e-job-label:e2e-w26mx] and annotations: map[]
  Apr 20 13:01:55.860: INFO: Event MODIFIED found for Job e2e-w26mx in namespace job-5843 with labels: map[e2e-job-label:e2e-w26mx e2e-w26mx:patched] and annotations: map[]
  STEP: Updating the job @ 04/20/24 13:01:55.86
  STEP: Watching for Job to be updated @ 04/20/24 13:01:55.87
  Apr 20 13:01:55.871: INFO: Event MODIFIED found for Job e2e-w26mx in namespace job-5843 with labels: map[e2e-job-label:e2e-w26mx e2e-w26mx:patched] and annotations: map[updated:true]
  Apr 20 13:01:55.871: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 04/20/24 13:01:55.871
  Apr 20 13:01:55.874: INFO: Job: e2e-w26mx as labels: map[e2e-job-label:e2e-w26mx e2e-w26mx:patched]
  STEP: Waiting for job to complete @ 04/20/24 13:01:55.874
  STEP: Delete a job collection with a labelselector @ 04/20/24 13:02:03.879
  STEP: Watching for Job to be deleted @ 04/20/24 13:02:03.887
  Apr 20 13:02:03.889: INFO: Event MODIFIED observed for Job e2e-w26mx in namespace job-5843 with labels: map[e2e-job-label:e2e-w26mx e2e-w26mx:patched] and annotations: map[updated:true]
  Apr 20 13:02:03.889: INFO: Event MODIFIED observed for Job e2e-w26mx in namespace job-5843 with labels: map[e2e-job-label:e2e-w26mx e2e-w26mx:patched] and annotations: map[updated:true]
  Apr 20 13:02:03.889: INFO: Event MODIFIED observed for Job e2e-w26mx in namespace job-5843 with labels: map[e2e-job-label:e2e-w26mx e2e-w26mx:patched] and annotations: map[updated:true]
  Apr 20 13:02:03.889: INFO: Event MODIFIED observed for Job e2e-w26mx in namespace job-5843 with labels: map[e2e-job-label:e2e-w26mx e2e-w26mx:patched] and annotations: map[updated:true]
  Apr 20 13:02:03.889: INFO: Event MODIFIED observed for Job e2e-w26mx in namespace job-5843 with labels: map[e2e-job-label:e2e-w26mx e2e-w26mx:patched] and annotations: map[updated:true]
  Apr 20 13:02:03.889: INFO: Event MODIFIED observed for Job e2e-w26mx in namespace job-5843 with labels: map[e2e-job-label:e2e-w26mx e2e-w26mx:patched] and annotations: map[updated:true]
  Apr 20 13:02:03.889: INFO: Event MODIFIED observed for Job e2e-w26mx in namespace job-5843 with labels: map[e2e-job-label:e2e-w26mx e2e-w26mx:patched] and annotations: map[updated:true]
  Apr 20 13:02:03.889: INFO: Event DELETED found for Job e2e-w26mx in namespace job-5843 with labels: map[e2e-job-label:e2e-w26mx e2e-w26mx:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 04/20/24 13:02:03.889
  Apr 20 13:02:03.892: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5843" for this suite. @ 04/20/24 13:02:03.895
• [8.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:707
  STEP: Creating a kubernetes client @ 04/20/24 13:02:03.907
  Apr 20 13:02:03.907: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename sched-pred @ 04/20/24 13:02:03.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:02:03.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:02:03.932
  Apr 20 13:02:03.934: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Apr 20 13:02:03.940: INFO: Waiting for terminating namespaces to be deleted...
  Apr 20 13:02:03.943: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-27-26 before test
  Apr 20 13:02:03.948: INFO: nginx-ingress-controller-kubernetes-worker-q29js from ingress-nginx-kubernetes-worker started at 2024-04-20 11:58:09 +0000 UTC (1 container statuses recorded)
  Apr 20 13:02:03.948: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 1
  Apr 20 13:02:03.948: INFO: calico-node-sm5jg from kube-system started at 2024-04-20 12:12:05 +0000 UTC (1 container statuses recorded)
  Apr 20 13:02:03.948: INFO: 	Container calico-node ready: true, restart count 0
  Apr 20 13:02:03.948: INFO: coredns-bddfd76d7-cmhz4 from kube-system started at 2024-04-20 11:58:09 +0000 UTC (1 container statuses recorded)
  Apr 20 13:02:03.948: INFO: 	Container coredns ready: true, restart count 0
  Apr 20 13:02:03.948: INFO: kube-state-metrics-6f48cdd76-xv4p5 from kube-system started at 2024-04-20 11:58:09 +0000 UTC (1 container statuses recorded)
  Apr 20 13:02:03.948: INFO: 	Container kube-state-metrics ready: true, restart count 2
  Apr 20 13:02:03.948: INFO: metrics-server-v0.6.3-69d7fbfdf8-rs74s from kube-system started at 2024-04-20 11:58:09 +0000 UTC (2 container statuses recorded)
  Apr 20 13:02:03.948: INFO: 	Container metrics-server ready: true, restart count 2
  Apr 20 13:02:03.948: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Apr 20 13:02:03.948: INFO: dashboard-metrics-scraper-5dd7cb5fc-fxbxd from kubernetes-dashboard started at 2024-04-20 11:58:09 +0000 UTC (1 container statuses recorded)
  Apr 20 13:02:03.948: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Apr 20 13:02:03.948: INFO: kubernetes-dashboard-7b899cb9d9-szd7n from kubernetes-dashboard started at 2024-04-20 11:58:09 +0000 UTC (1 container statuses recorded)
  Apr 20 13:02:03.948: INFO: 	Container kubernetes-dashboard ready: true, restart count 3
  Apr 20 13:02:03.948: INFO: sonobuoy-systemd-logs-daemon-set-6cab97477919492d-zm76r from sonobuoy started at 2024-04-20 12:15:05 +0000 UTC (2 container statuses recorded)
  Apr 20 13:02:03.948: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 13:02:03.948: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 20 13:02:03.948: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-41-198 before test
  Apr 20 13:02:03.953: INFO: nginx-ingress-controller-kubernetes-worker-hbhrc from ingress-nginx-kubernetes-worker started at 2024-04-20 12:46:27 +0000 UTC (1 container statuses recorded)
  Apr 20 13:02:03.953: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Apr 20 13:02:03.953: INFO: calico-node-w7qjq from kube-system started at 2024-04-20 12:11:55 +0000 UTC (1 container statuses recorded)
  Apr 20 13:02:03.953: INFO: 	Container calico-node ready: true, restart count 0
  Apr 20 13:02:03.953: INFO: sonobuoy from sonobuoy started at 2024-04-20 12:15:03 +0000 UTC (1 container statuses recorded)
  Apr 20 13:02:03.953: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Apr 20 13:02:03.953: INFO: sonobuoy-systemd-logs-daemon-set-6cab97477919492d-6r9kd from sonobuoy started at 2024-04-20 12:15:05 +0000 UTC (2 container statuses recorded)
  Apr 20 13:02:03.953: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 13:02:03.953: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 20 13:02:03.953: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-81-0 before test
  Apr 20 13:02:03.958: INFO: nginx-ingress-controller-kubernetes-worker-7l4n2 from ingress-nginx-kubernetes-worker started at 2024-04-20 12:11:39 +0000 UTC (1 container statuses recorded)
  Apr 20 13:02:03.958: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Apr 20 13:02:03.958: INFO: calico-node-r8pwr from kube-system started at 2024-04-20 12:11:13 +0000 UTC (1 container statuses recorded)
  Apr 20 13:02:03.958: INFO: 	Container calico-node ready: true, restart count 0
  Apr 20 13:02:03.958: INFO: sonobuoy-e2e-job-b1821af8da4b44dc from sonobuoy started at 2024-04-20 12:15:05 +0000 UTC (2 container statuses recorded)
  Apr 20 13:02:03.958: INFO: 	Container e2e ready: true, restart count 0
  Apr 20 13:02:03.958: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 13:02:03.958: INFO: sonobuoy-systemd-logs-daemon-set-6cab97477919492d-qpl6s from sonobuoy started at 2024-04-20 12:15:05 +0000 UTC (2 container statuses recorded)
  Apr 20 13:02:03.958: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 13:02:03.958: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/20/24 13:02:03.958
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/20/24 13:02:05.976
  STEP: Trying to apply a random label on the found node. @ 04/20/24 13:02:05.994
  STEP: verifying the node has the label kubernetes.io/e2e-8f484b73-0087-45ee-8dad-776d63abd3bd 95 @ 04/20/24 13:02:06.002
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 04/20/24 13:02:06.005
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.41.198 on the node which pod4 resides and expect not scheduled @ 04/20/24 13:02:08.019
  STEP: removing the label kubernetes.io/e2e-8f484b73-0087-45ee-8dad-776d63abd3bd off the node ip-172-31-41-198 @ 04/20/24 13:07:08.027
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-8f484b73-0087-45ee-8dad-776d63abd3bd @ 04/20/24 13:07:08.039
  Apr 20 13:07:08.042: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4929" for this suite. @ 04/20/24 13:07:08.046
• [304.145 seconds]
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 04/20/24 13:07:08.052
  Apr 20 13:07:08.052: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename disruption @ 04/20/24 13:07:08.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:07:08.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:07:08.081
  STEP: Waiting for the pdb to be processed @ 04/20/24 13:07:08.087
  STEP: Updating PodDisruptionBudget status @ 04/20/24 13:07:10.093
  STEP: Waiting for all pods to be running @ 04/20/24 13:07:10.102
  Apr 20 13:07:10.104: INFO: running pods: 0 < 1
  STEP: locating a running pod @ 04/20/24 13:07:12.107
  STEP: Waiting for the pdb to be processed @ 04/20/24 13:07:12.117
  STEP: Patching PodDisruptionBudget status @ 04/20/24 13:07:12.124
  STEP: Waiting for the pdb to be processed @ 04/20/24 13:07:12.133
  Apr 20 13:07:12.135: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8739" for this suite. @ 04/20/24 13:07:12.139
• [4.092 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 04/20/24 13:07:12.144
  Apr 20 13:07:12.144: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename container-probe @ 04/20/24 13:07:12.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:07:12.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:07:12.163
  Apr 20 13:07:34.232: INFO: Container started at 2024-04-20 13:07:13 +0000 UTC, pod became ready at 2024-04-20 13:07:32 +0000 UTC
  Apr 20 13:07:34.232: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6915" for this suite. @ 04/20/24 13:07:34.235
• [22.096 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 04/20/24 13:07:34.241
  Apr 20 13:07:34.241: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename replicaset @ 04/20/24 13:07:34.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:07:34.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:07:34.261
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 04/20/24 13:07:34.263
  Apr 20 13:07:34.271: INFO: Pod name sample-pod: Found 0 pods out of 1
  Apr 20 13:07:39.275: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/20/24 13:07:39.275
  STEP: getting scale subresource @ 04/20/24 13:07:39.275
  STEP: updating a scale subresource @ 04/20/24 13:07:39.278
  STEP: verifying the replicaset Spec.Replicas was modified @ 04/20/24 13:07:39.283
  STEP: Patch a scale subresource @ 04/20/24 13:07:39.286
  Apr 20 13:07:39.297: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1511" for this suite. @ 04/20/24 13:07:39.3
• [5.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 04/20/24 13:07:39.307
  Apr 20 13:07:39.307: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename replication-controller @ 04/20/24 13:07:39.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:07:39.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:07:39.329
  STEP: Given a ReplicationController is created @ 04/20/24 13:07:39.332
  STEP: When the matched label of one of its pods change @ 04/20/24 13:07:39.337
  Apr 20 13:07:39.340: INFO: Pod name pod-release: Found 0 pods out of 1
  Apr 20 13:07:44.347: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 04/20/24 13:07:44.359
  Apr 20 13:07:45.368: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2196" for this suite. @ 04/20/24 13:07:45.372
• [6.073 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:611
  STEP: Creating a kubernetes client @ 04/20/24 13:07:45.38
  Apr 20 13:07:45.380: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename security-context-test @ 04/20/24 13:07:45.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:07:45.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:07:45.404
  Apr 20 13:07:49.442: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4327" for this suite. @ 04/20/24 13:07:49.446
• [4.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 04/20/24 13:07:49.456
  Apr 20 13:07:49.456: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename ingressclass @ 04/20/24 13:07:49.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:07:49.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:07:49.476
  STEP: getting /apis @ 04/20/24 13:07:49.478
  STEP: getting /apis/networking.k8s.io @ 04/20/24 13:07:49.481
  STEP: getting /apis/networking.k8s.iov1 @ 04/20/24 13:07:49.482
  STEP: creating @ 04/20/24 13:07:49.483
  STEP: getting @ 04/20/24 13:07:49.495
  STEP: listing @ 04/20/24 13:07:49.497
  STEP: watching @ 04/20/24 13:07:49.5
  Apr 20 13:07:49.500: INFO: starting watch
  STEP: patching @ 04/20/24 13:07:49.501
  STEP: updating @ 04/20/24 13:07:49.505
  Apr 20 13:07:49.510: INFO: waiting for watch events with expected annotations
  Apr 20 13:07:49.510: INFO: saw patched and updated annotations
  STEP: deleting @ 04/20/24 13:07:49.51
  STEP: deleting a collection @ 04/20/24 13:07:49.522
  Apr 20 13:07:49.535: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-3661" for this suite. @ 04/20/24 13:07:49.538
• [0.088 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 04/20/24 13:07:49.544
  Apr 20 13:07:49.544: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename aggregator @ 04/20/24 13:07:49.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:07:49.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:07:49.565
  Apr 20 13:07:49.569: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Registering the sample API server. @ 04/20/24 13:07:49.57
  Apr 20 13:07:49.743: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Apr 20 13:07:49.770: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
  Apr 20 13:07:51.809: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 20 13:07:53.814: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 20 13:07:55.815: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 20 13:07:57.813: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 20 13:07:59.816: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 20 13:08:01.813: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 20 13:08:03.814: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 20 13:08:05.815: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 20 13:08:07.814: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 20 13:08:09.814: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 20 13:08:11.814: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 20 13:08:13.815: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 13, 7, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 20 13:08:15.934: INFO: Waited 113.004551ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 04/20/24 13:08:15.964
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 04/20/24 13:08:15.968
  STEP: List APIServices @ 04/20/24 13:08:15.978
  Apr 20 13:08:15.982: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 04/20/24 13:08:15.982
  Apr 20 13:08:15.994: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 04/20/24 13:08:15.994
  Apr 20 13:08:16.004: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.April, 20, 13, 8, 15, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 04/20/24 13:08:16.005
  Apr 20 13:08:16.008: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-04-20 13:08:15 +0000 UTC Passed all checks passed}
  Apr 20 13:08:16.008: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 20 13:08:16.008: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 04/20/24 13:08:16.008
  Apr 20 13:08:16.018: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1393710015" @ 04/20/24 13:08:16.018
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 04/20/24 13:08:16.027
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 04/20/24 13:08:16.033
  STEP: Patch APIService Status @ 04/20/24 13:08:16.036
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 04/20/24 13:08:16.043
  Apr 20 13:08:16.045: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-04-20 13:08:15 +0000 UTC Passed all checks passed}
  Apr 20 13:08:16.045: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 20 13:08:16.046: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Apr 20 13:08:16.046: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 04/20/24 13:08:16.046
  STEP: Confirm that the generated APIService has been deleted @ 04/20/24 13:08:16.055
  Apr 20 13:08:16.055: INFO: Requesting list of APIServices to confirm quantity
  Apr 20 13:08:16.058: INFO: Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  Apr 20 13:08:16.058: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Apr 20 13:08:16.151: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-7354" for this suite. @ 04/20/24 13:08:16.154
• [26.616 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 04/20/24 13:08:16.16
  Apr 20 13:08:16.160: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename projected @ 04/20/24 13:08:16.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:08:16.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:08:16.18
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 13:08:16.183
  STEP: Saw pod success @ 04/20/24 13:08:20.204
  Apr 20 13:08:20.207: INFO: Trying to get logs from node ip-172-31-41-198 pod downwardapi-volume-f70de657-d2b3-435d-83a6-f70c6d77574a container client-container: <nil>
  STEP: delete the pod @ 04/20/24 13:08:20.225
  Apr 20 13:08:20.243: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4466" for this suite. @ 04/20/24 13:08:20.246
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:155
  STEP: Creating a kubernetes client @ 04/20/24 13:08:20.254
  Apr 20 13:08:20.254: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename secrets @ 04/20/24 13:08:20.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:08:20.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:08:20.274
  STEP: creating a secret @ 04/20/24 13:08:20.276
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 04/20/24 13:08:20.281
  STEP: patching the secret @ 04/20/24 13:08:20.286
  STEP: deleting the secret using a LabelSelector @ 04/20/24 13:08:20.293
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 04/20/24 13:08:20.3
  Apr 20 13:08:20.303: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4194" for this suite. @ 04/20/24 13:08:20.306
• [0.058 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 04/20/24 13:08:20.312
  Apr 20 13:08:20.312: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename var-expansion @ 04/20/24 13:08:20.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:08:20.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:08:20.332
  STEP: Creating a pod to test substitution in container's command @ 04/20/24 13:08:20.334
  STEP: Saw pod success @ 04/20/24 13:08:24.355
  Apr 20 13:08:24.358: INFO: Trying to get logs from node ip-172-31-41-198 pod var-expansion-d0984dbd-6221-43a2-8cf8-886ff74b120c container dapi-container: <nil>
  STEP: delete the pod @ 04/20/24 13:08:24.365
  Apr 20 13:08:24.383: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7139" for this suite. @ 04/20/24 13:08:24.386
• [4.079 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 04/20/24 13:08:24.392
  Apr 20 13:08:24.392: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename replication-controller @ 04/20/24 13:08:24.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:08:24.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:08:24.413
  STEP: creating a ReplicationController @ 04/20/24 13:08:24.418
  STEP: waiting for RC to be added @ 04/20/24 13:08:24.422
  STEP: waiting for available Replicas @ 04/20/24 13:08:24.422
  STEP: patching ReplicationController @ 04/20/24 13:08:25.854
  STEP: waiting for RC to be modified @ 04/20/24 13:08:25.861
  STEP: patching ReplicationController status @ 04/20/24 13:08:25.861
  STEP: waiting for RC to be modified @ 04/20/24 13:08:25.866
  STEP: waiting for available Replicas @ 04/20/24 13:08:25.866
  STEP: fetching ReplicationController status @ 04/20/24 13:08:25.872
  STEP: patching ReplicationController scale @ 04/20/24 13:08:25.874
  STEP: waiting for RC to be modified @ 04/20/24 13:08:25.88
  STEP: waiting for ReplicationController's scale to be the max amount @ 04/20/24 13:08:25.88
  STEP: fetching ReplicationController; ensuring that it's patched @ 04/20/24 13:08:27.329
  STEP: updating ReplicationController status @ 04/20/24 13:08:27.332
  STEP: waiting for RC to be modified @ 04/20/24 13:08:27.338
  STEP: listing all ReplicationControllers @ 04/20/24 13:08:27.338
  STEP: checking that ReplicationController has expected values @ 04/20/24 13:08:27.344
  STEP: deleting ReplicationControllers by collection @ 04/20/24 13:08:27.344
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 04/20/24 13:08:27.353
  Apr 20 13:08:27.404: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0420 13:08:27.404316      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-7544" for this suite. @ 04/20/24 13:08:27.407
• [3.022 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 04/20/24 13:08:27.414
  Apr 20 13:08:27.414: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename field-validation @ 04/20/24 13:08:27.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:08:27.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:08:27.436
  STEP: apply creating a deployment @ 04/20/24 13:08:27.438
  Apr 20 13:08:27.450: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1908" for this suite. @ 04/20/24 13:08:27.453
• [0.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3129
  STEP: Creating a kubernetes client @ 04/20/24 13:08:27.461
  Apr 20 13:08:27.461: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename services @ 04/20/24 13:08:27.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:08:27.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:08:27.485
  STEP: fetching services @ 04/20/24 13:08:27.487
  Apr 20 13:08:27.490: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9252" for this suite. @ 04/20/24 13:08:27.493
• [0.038 seconds]
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 04/20/24 13:08:27.498
  Apr 20 13:08:27.498: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename replicaset @ 04/20/24 13:08:27.499
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:08:27.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:08:27.52
  Apr 20 13:08:27.523: INFO: Creating ReplicaSet my-hostname-basic-5cef4370-0c8e-43d1-9d33-7e314fde584b
  Apr 20 13:08:27.531: INFO: Pod name my-hostname-basic-5cef4370-0c8e-43d1-9d33-7e314fde584b: Found 0 pods out of 1
  E0420 13:08:28.404846      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:08:29.405065      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:08:30.405122      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:08:31.406240      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:08:32.406293      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:08:32.536: INFO: Pod name my-hostname-basic-5cef4370-0c8e-43d1-9d33-7e314fde584b: Found 1 pods out of 1
  Apr 20 13:08:32.536: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-5cef4370-0c8e-43d1-9d33-7e314fde584b" is running
  Apr 20 13:08:32.539: INFO: Pod "my-hostname-basic-5cef4370-0c8e-43d1-9d33-7e314fde584b-tfgsk" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-20 13:08:28 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-20 13:08:27 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-20 13:08:28 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-20 13:08:28 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-20 13:08:27 +0000 UTC Reason: Message:}])
  Apr 20 13:08:32.539: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 04/20/24 13:08:32.539
  Apr 20 13:08:32.552: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7480" for this suite. @ 04/20/24 13:08:32.556
• [5.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1731
  STEP: Creating a kubernetes client @ 04/20/24 13:08:32.562
  Apr 20 13:08:32.562: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 13:08:32.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:08:32.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:08:32.586
  Apr 20 13:08:32.590: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-7597 version'
  Apr 20 13:08:32.627: INFO: stderr: ""
  Apr 20 13:08:32.627: INFO: stdout: "Client Version: v1.29.4\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.29.4\n"
  Apr 20 13:08:32.627: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7597" for this suite. @ 04/20/24 13:08:32.63
• [0.076 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 04/20/24 13:08:32.638
  Apr 20 13:08:32.638: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename containers @ 04/20/24 13:08:32.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:08:32.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:08:32.66
  STEP: Creating a pod to test override arguments @ 04/20/24 13:08:32.663
  E0420 13:08:33.406422      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:08:34.406868      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 13:08:34.679
  Apr 20 13:08:34.682: INFO: Trying to get logs from node ip-172-31-81-0 pod client-containers-142b941f-5332-47fd-8ffb-cbc968f19b7a container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 13:08:34.687
  Apr 20 13:08:34.700: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7066" for this suite. @ 04/20/24 13:08:34.71
• [2.081 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 04/20/24 13:08:34.72
  Apr 20 13:08:34.720: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename projected @ 04/20/24 13:08:34.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:08:34.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:08:34.744
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 13:08:34.752
  E0420 13:08:35.407027      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:08:36.407100      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:08:37.407678      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:08:38.408593      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 13:08:38.787
  Apr 20 13:08:38.790: INFO: Trying to get logs from node ip-172-31-41-198 pod downwardapi-volume-6053710b-8a17-4dd8-80dd-a3381a9fa56b container client-container: <nil>
  STEP: delete the pod @ 04/20/24 13:08:38.796
  Apr 20 13:08:38.811: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8436" for this suite. @ 04/20/24 13:08:38.814
• [4.100 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:446
  STEP: Creating a kubernetes client @ 04/20/24 13:08:38.82
  Apr 20 13:08:38.820: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename sched-pred @ 04/20/24 13:08:38.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:08:38.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:08:38.841
  Apr 20 13:08:38.843: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Apr 20 13:08:38.849: INFO: Waiting for terminating namespaces to be deleted...
  Apr 20 13:08:38.852: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-27-26 before test
  Apr 20 13:08:38.856: INFO: nginx-ingress-controller-kubernetes-worker-q29js from ingress-nginx-kubernetes-worker started at 2024-04-20 11:58:09 +0000 UTC (1 container statuses recorded)
  Apr 20 13:08:38.856: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 1
  Apr 20 13:08:38.856: INFO: calico-node-sm5jg from kube-system started at 2024-04-20 12:12:05 +0000 UTC (1 container statuses recorded)
  Apr 20 13:08:38.856: INFO: 	Container calico-node ready: true, restart count 0
  Apr 20 13:08:38.856: INFO: coredns-bddfd76d7-cmhz4 from kube-system started at 2024-04-20 11:58:09 +0000 UTC (1 container statuses recorded)
  Apr 20 13:08:38.856: INFO: 	Container coredns ready: true, restart count 0
  Apr 20 13:08:38.856: INFO: kube-state-metrics-6f48cdd76-xv4p5 from kube-system started at 2024-04-20 11:58:09 +0000 UTC (1 container statuses recorded)
  Apr 20 13:08:38.856: INFO: 	Container kube-state-metrics ready: true, restart count 2
  Apr 20 13:08:38.856: INFO: metrics-server-v0.6.3-69d7fbfdf8-rs74s from kube-system started at 2024-04-20 11:58:09 +0000 UTC (2 container statuses recorded)
  Apr 20 13:08:38.856: INFO: 	Container metrics-server ready: true, restart count 2
  Apr 20 13:08:38.856: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Apr 20 13:08:38.856: INFO: dashboard-metrics-scraper-5dd7cb5fc-fxbxd from kubernetes-dashboard started at 2024-04-20 11:58:09 +0000 UTC (1 container statuses recorded)
  Apr 20 13:08:38.856: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Apr 20 13:08:38.856: INFO: kubernetes-dashboard-7b899cb9d9-szd7n from kubernetes-dashboard started at 2024-04-20 11:58:09 +0000 UTC (1 container statuses recorded)
  Apr 20 13:08:38.856: INFO: 	Container kubernetes-dashboard ready: true, restart count 3
  Apr 20 13:08:38.856: INFO: sonobuoy-systemd-logs-daemon-set-6cab97477919492d-zm76r from sonobuoy started at 2024-04-20 12:15:05 +0000 UTC (2 container statuses recorded)
  Apr 20 13:08:38.856: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 13:08:38.856: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 20 13:08:38.856: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-41-198 before test
  Apr 20 13:08:38.861: INFO: nginx-ingress-controller-kubernetes-worker-hbhrc from ingress-nginx-kubernetes-worker started at 2024-04-20 12:46:27 +0000 UTC (1 container statuses recorded)
  Apr 20 13:08:38.861: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Apr 20 13:08:38.861: INFO: calico-node-w7qjq from kube-system started at 2024-04-20 12:11:55 +0000 UTC (1 container statuses recorded)
  Apr 20 13:08:38.861: INFO: 	Container calico-node ready: true, restart count 0
  Apr 20 13:08:38.861: INFO: sonobuoy from sonobuoy started at 2024-04-20 12:15:03 +0000 UTC (1 container statuses recorded)
  Apr 20 13:08:38.861: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Apr 20 13:08:38.861: INFO: sonobuoy-systemd-logs-daemon-set-6cab97477919492d-6r9kd from sonobuoy started at 2024-04-20 12:15:05 +0000 UTC (2 container statuses recorded)
  Apr 20 13:08:38.861: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 13:08:38.862: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 20 13:08:38.862: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-81-0 before test
  Apr 20 13:08:38.876: INFO: nginx-ingress-controller-kubernetes-worker-7l4n2 from ingress-nginx-kubernetes-worker started at 2024-04-20 12:11:39 +0000 UTC (1 container statuses recorded)
  Apr 20 13:08:38.876: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Apr 20 13:08:38.876: INFO: calico-node-r8pwr from kube-system started at 2024-04-20 12:11:13 +0000 UTC (1 container statuses recorded)
  Apr 20 13:08:38.876: INFO: 	Container calico-node ready: true, restart count 0
  Apr 20 13:08:38.876: INFO: sonobuoy-e2e-job-b1821af8da4b44dc from sonobuoy started at 2024-04-20 12:15:05 +0000 UTC (2 container statuses recorded)
  Apr 20 13:08:38.876: INFO: 	Container e2e ready: true, restart count 0
  Apr 20 13:08:38.876: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 13:08:38.876: INFO: sonobuoy-systemd-logs-daemon-set-6cab97477919492d-qpl6s from sonobuoy started at 2024-04-20 12:15:05 +0000 UTC (2 container statuses recorded)
  Apr 20 13:08:38.876: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 13:08:38.876: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 04/20/24 13:08:38.876
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17c7fef6bb4ceb21], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.] @ 04/20/24 13:08:38.9
  E0420 13:08:39.408941      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:08:39.900: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7014" for this suite. @ 04/20/24 13:08:39.903
• [1.088 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 04/20/24 13:08:39.909
  Apr 20 13:08:39.909: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename gc @ 04/20/24 13:08:39.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:08:39.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:08:39.929
  STEP: create the deployment @ 04/20/24 13:08:39.931
  W0420 13:08:39.935969      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 04/20/24 13:08:39.936
  E0420 13:08:40.415590      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 04/20/24 13:08:40.44
  STEP: wait for all rs to be garbage collected @ 04/20/24 13:08:40.445
  STEP: expected 0 rs, got 1 rs @ 04/20/24 13:08:40.452
  STEP: expected 0 pods, got 2 pods @ 04/20/24 13:08:40.455
  STEP: Gathering metrics @ 04/20/24 13:08:40.955
  W0420 13:08:40.959923      20 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Apr 20 13:08:40.959: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 20 13:08:40.960: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7139" for this suite. @ 04/20/24 13:08:40.963
• [1.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 04/20/24 13:08:40.971
  Apr 20 13:08:40.971: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/20/24 13:08:40.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:08:40.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:08:40.994
  Apr 20 13:08:40.997: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  E0420 13:08:41.416133      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:08:42.416298      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:08:43.416974      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:08:44.417081      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:08:45.417599      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:08:46.417751      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:08:47.182: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-449" for this suite. @ 04/20/24 13:08:47.186
• [6.223 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 04/20/24 13:08:47.194
  Apr 20 13:08:47.194: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename crd-webhook @ 04/20/24 13:08:47.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:08:47.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:08:47.215
  STEP: Setting up server cert @ 04/20/24 13:08:47.218
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 04/20/24 13:08:47.38
  STEP: Deploying the custom resource conversion webhook pod @ 04/20/24 13:08:47.389
  STEP: Wait for the deployment to be ready @ 04/20/24 13:08:47.401
  Apr 20 13:08:47.409: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0420 13:08:47.418268      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:08:48.418428      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:08:49.419452      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 13:08:49.42
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 13:08:49.431
  E0420 13:08:50.419592      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:08:50.431: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Apr 20 13:08:50.438: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  E0420 13:08:51.419991      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:08:52.420319      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 04/20/24 13:08:52.993
  STEP: v2 custom resource should be converted @ 04/20/24 13:08:52.998
  E0420 13:08:53.421273      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:08:53.552: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-4548" for this suite. @ 04/20/24 13:08:53.555
• [6.371 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 04/20/24 13:08:53.566
  Apr 20 13:08:53.566: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename container-runtime @ 04/20/24 13:08:53.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:08:53.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:08:53.585
  STEP: create the container @ 04/20/24 13:08:53.587
  W0420 13:08:53.594295      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/20/24 13:08:53.594
  E0420 13:08:54.421347      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:08:55.422247      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:08:56.422285      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 04/20/24 13:08:56.613
  STEP: the container should be terminated @ 04/20/24 13:08:56.617
  STEP: the termination message should be set @ 04/20/24 13:08:56.617
  Apr 20 13:08:56.617: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 04/20/24 13:08:56.617
  Apr 20 13:08:56.634: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3669" for this suite. @ 04/20/24 13:08:56.638
• [3.077 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 04/20/24 13:08:56.643
  Apr 20 13:08:56.643: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename projected @ 04/20/24 13:08:56.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:08:56.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:08:56.662
  STEP: Creating configMap with name projected-configmap-test-volume-792bc4dc-81e4-401c-8614-92f017ed188d @ 04/20/24 13:08:56.664
  STEP: Creating a pod to test consume configMaps @ 04/20/24 13:08:56.67
  E0420 13:08:57.422397      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:08:58.422626      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:08:59.422785      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:09:00.422881      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 13:09:00.69
  Apr 20 13:09:00.693: INFO: Trying to get logs from node ip-172-31-41-198 pod pod-projected-configmaps-069cf660-a99b-482a-bcfb-dbdee7961a86 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 13:09:00.699
  Apr 20 13:09:00.715: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7469" for this suite. @ 04/20/24 13:09:00.718
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 04/20/24 13:09:00.726
  Apr 20 13:09:00.726: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename container-probe @ 04/20/24 13:09:00.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:09:00.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:09:00.747
  STEP: Creating pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819 @ 04/20/24 13:09:00.749
  E0420 13:09:01.423676      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:09:02.423776      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/20/24 13:09:02.761
  Apr 20 13:09:02.765: INFO: Initial restart count of pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be is 0
  Apr 20 13:09:02.769: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:09:03.424558      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:09:04.424736      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:09:04.774: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:09:05.424852      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:09:06.425285      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:09:06.779: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:09:07.426094      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:09:08.427066      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:09:08.783: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:09:09.427385      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:09:10.427521      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:09:10.787: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:09:11.427686      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:09:12.427783      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:09:12.792: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:09:13.428585      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:09:14.428672      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:09:14.797: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:09:15.429723      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:09:16.430199      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:09:16.801: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:09:17.430336      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:09:18.430656      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:09:18.806: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:09:19.431089      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:09:20.431258      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:09:20.810: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:09:21.431308      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:09:22.431514      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:09:22.815: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:09:23.432575      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:09:24.432762      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:09:24.820: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:09:25.433205      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:09:26.433257      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:09:26.825: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:09:27.433676      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:09:28.434262      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:09:28.829: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:09:29.434683      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:09:30.434828      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:09:30.834: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:09:31.435688      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:09:32.436559      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:09:32.839: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:09:33.437234      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:09:34.437337      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:09:34.843: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:09:35.438113      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:09:36.438579      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:09:36.847: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:09:37.438697      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:09:38.438775      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:09:38.852: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:09:39.438983      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:09:40.439798      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:09:40.856: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:09:41.440216      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:09:42.440954      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:09:42.860: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:09:43.442048      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:09:44.442234      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:09:44.865: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:09:45.442341      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:09:46.442647      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:09:46.869: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:09:47.443043      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:09:48.443124      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:09:48.873: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:09:49.443216      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:09:50.443404      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:09:50.878: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:09:51.443944      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:09:52.444030      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:09:52.883: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:09:53.444575      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:09:54.444687      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:09:54.889: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:09:55.444791      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:09:56.445396      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:09:56.894: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:09:57.445788      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:09:58.445884      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:09:58.899: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:09:59.446215      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:10:00.446313      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:10:00.903: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:10:01.446559      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:10:02.446748      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:10:02.909: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:10:03.447163      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:10:04.448212      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:10:04.914: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:10:05.449248      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:10:06.449643      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:10:06.919: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:10:07.450076      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:10:08.450162      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:10:08.923: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:10:09.450456      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:10:10.450616      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:10:10.928: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:10:11.451696      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:10:12.451811      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:10:12.932: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:10:13.452591      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:10:14.452691      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:10:14.937: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:10:15.453736      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:10:16.454673      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:10:16.943: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:10:17.454695      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:10:18.454915      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:10:18.950: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:10:19.455071      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:10:20.455171      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:10:20.955: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:10:21.455840      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:10:22.455859      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:10:22.959: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:10:23.456564      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:10:24.456650      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:10:24.964: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:10:25.457159      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:10:26.458135      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:10:26.968: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:10:27.458325      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:10:28.458427      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:10:28.973: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:10:29.458728      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:10:30.458862      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:10:30.977: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:10:31.459376      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:10:32.459544      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:10:32.982: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:10:33.460571      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:10:34.460787      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:10:34.987: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:10:35.461504      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:10:36.461673      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:10:36.991: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:10:37.462167      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:10:38.462275      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:10:38.997: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:10:39.462574      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:10:40.463435      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:10:41.003: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:10:41.463651      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:10:42.463743      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:10:43.008: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:10:43.463847      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:10:44.464544      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:10:45.013: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:10:45.465081      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:10:46.465579      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:10:47.018: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:10:47.466565      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:10:48.466751      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:10:49.023: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:10:49.467279      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:10:50.467481      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:10:51.028: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:10:51.468321      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:10:52.468606      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:10:53.033: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:10:53.469530      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:10:54.469723      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:10:55.038: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:10:55.470220      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:10:56.470783      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:10:57.043: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:10:57.470882      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:10:58.471091      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:10:59.048: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:10:59.471426      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:11:00.471678      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:11:01.052: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:11:01.472462      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:11:02.472643      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:11:03.057: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:11:03.473396      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:11:04.473451      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:11:05.063: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:11:05.474228      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:11:06.474685      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:11:07.069: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:11:07.475316      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:11:08.475484      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:11:09.073: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:11:09.476120      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:11:10.477132      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:11:11.078: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:11:11.477395      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:11:12.477484      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:11:13.082: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:11:13.478327      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:11:14.478583      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:11:15.087: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:11:15.478678      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:11:16.479646      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:11:17.091: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:11:17.480618      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:11:18.480719      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:11:19.095: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:11:19.481160      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:11:20.481422      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:11:21.100: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:11:21.482292      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:11:22.482394      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:11:23.105: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:11:23.482778      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:11:24.483040      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:11:25.109: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:11:25.483100      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:11:26.483248      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:11:27.114: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:11:27.483489      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:11:28.483693      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:11:29.118: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:11:29.484190      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:11:30.484290      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:11:31.123: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:11:31.484952      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:11:32.485050      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:11:33.128: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:11:33.485374      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:11:34.485465      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:11:35.133: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:11:35.486337      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:11:36.486640      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:11:37.138: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:11:37.487619      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:11:38.487713      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:11:39.142: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:11:39.488057      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:11:40.488567      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:11:41.147: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:11:41.488610      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:11:42.488788      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:11:43.151: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:11:43.489131      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:11:44.489302      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:11:45.155: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:11:45.489326      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:11:46.489678      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:11:47.160: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:11:47.490583      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:11:48.490705      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:11:49.163: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:11:49.491196      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:11:50.491293      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:11:51.168: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:11:51.491504      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:11:52.492540      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:11:53.173: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:11:53.492641      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:11:54.492904      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:11:55.178: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:11:55.493931      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:11:56.494426      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:11:57.183: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:11:57.494513      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:11:58.495468      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:11:59.189: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:11:59.495507      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:12:00.496649      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:12:01.193: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:12:01.497282      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:12:02.497463      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:12:03.198: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:12:03.498387      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:12:04.499439      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:12:05.203: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:12:05.500378      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:12:06.500628      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:12:07.208: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:12:07.501018      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:12:08.502024      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:12:09.212: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:12:09.502220      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:12:10.502428      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:12:11.216: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:12:11.503437      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:12:12.503500      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:12:13.221: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:12:13.504561      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:12:14.504789      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:12:15.226: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:12:15.505400      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:12:16.505679      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:12:17.230: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:12:17.505774      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:12:18.505823      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:12:19.235: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:12:19.506410      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:12:20.506499      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:12:21.238: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:12:21.507502      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:12:22.507586      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:12:23.243: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:12:23.508187      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:12:24.508615      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:12:25.247: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:12:25.509302      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:12:26.509730      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:12:27.252: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:12:27.509843      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:12:28.510024      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:12:29.257: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:12:29.510458      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:12:30.510552      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:12:31.261: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:12:31.511597      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:12:32.511715      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:12:33.266: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:12:33.511805      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:12:34.512545      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:12:35.271: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:12:35.512878      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:12:36.513664      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:12:37.276: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:12:37.513870      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:12:38.513983      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:12:39.283: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:12:39.514180      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:12:40.514215      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:12:41.289: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:12:41.514501      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:12:42.514582      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:12:43.293: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:12:43.515312      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:12:44.515484      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:12:45.298: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:12:45.516543      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:12:46.517468      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:12:47.302: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:12:47.517632      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:12:48.517732      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:12:49.306: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:12:49.518187      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:12:50.518284      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:12:51.311: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:12:51.518956      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:12:52.519065      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:12:53.316: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:12:53.519162      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:12:54.519393      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:12:55.322: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:12:55.519495      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:12:56.519582      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:12:57.326: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:12:57.520502      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:12:58.520675      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:12:59.331: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:12:59.521679      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:13:00.521804      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:13:01.335: INFO: Get pod test-grpc-9320bc36-f7de-4280-90d8-6d66a10b35be in namespace container-probe-4819
  E0420 13:13:01.521850      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:13:02.522038      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 04/20/24 13:13:03.336
  Apr 20 13:13:03.351: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4819" for this suite. @ 04/20/24 13:13:03.355
• [242.638 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 04/20/24 13:13:03.364
  Apr 20 13:13:03.364: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename apf @ 04/20/24 13:13:03.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:13:03.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:13:03.385
  STEP: getting /apis @ 04/20/24 13:13:03.387
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 04/20/24 13:13:03.39
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 04/20/24 13:13:03.391
  STEP: creating @ 04/20/24 13:13:03.392
  STEP: getting @ 04/20/24 13:13:03.407
  STEP: listing @ 04/20/24 13:13:03.411
  STEP: watching @ 04/20/24 13:13:03.415
  Apr 20 13:13:03.415: INFO: starting watch
  STEP: patching @ 04/20/24 13:13:03.416
  STEP: updating @ 04/20/24 13:13:03.426
  Apr 20 13:13:03.433: INFO: waiting for watch events with expected annotations
  Apr 20 13:13:03.433: INFO: missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 04/20/24 13:13:03.434
  STEP: patching /status @ 04/20/24 13:13:03.437
  STEP: updating /status @ 04/20/24 13:13:03.441
  STEP: deleting @ 04/20/24 13:13:03.472
  STEP: deleting a collection @ 04/20/24 13:13:03.484
  Apr 20 13:13:03.500: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-3876" for this suite. @ 04/20/24 13:13:03.503
• [0.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 04/20/24 13:13:03.509
  Apr 20 13:13:03.509: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename projected @ 04/20/24 13:13:03.51
  E0420 13:13:03.522580      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:13:03.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:13:03.529
  STEP: Creating configMap with name projected-configmap-test-volume-map-da8606b5-c3ba-489f-9953-8d8ea60d3ed0 @ 04/20/24 13:13:03.531
  STEP: Creating a pod to test consume configMaps @ 04/20/24 13:13:03.537
  E0420 13:13:04.522865      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:13:05.523767      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 13:13:05.553
  Apr 20 13:13:05.556: INFO: Trying to get logs from node ip-172-31-41-198 pod pod-projected-configmaps-a26df7b4-0f33-4eca-966d-3122bc33da89 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 13:13:05.568
  Apr 20 13:13:05.584: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7338" for this suite. @ 04/20/24 13:13:05.587
• [2.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 04/20/24 13:13:05.593
  Apr 20 13:13:05.593: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename daemonsets @ 04/20/24 13:13:05.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:13:05.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:13:05.615
  STEP: Creating a simple DaemonSet "daemon-set" @ 04/20/24 13:13:05.634
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/20/24 13:13:05.64
  Apr 20 13:13:05.643: INFO: DaemonSet pods can't tolerate node ip-172-31-45-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:13:05.643: INFO: DaemonSet pods can't tolerate node ip-172-31-9-171 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:13:05.646: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 13:13:05.646: INFO: Node ip-172-31-27-26 is running 0 daemon pod, expected 1
  E0420 13:13:06.524434      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:13:06.644: INFO: DaemonSet pods can't tolerate node ip-172-31-45-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:13:06.644: INFO: DaemonSet pods can't tolerate node ip-172-31-9-171 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:13:06.648: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 20 13:13:06.648: INFO: Node ip-172-31-27-26 is running 0 daemon pod, expected 1
  E0420 13:13:07.524617      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:13:07.645: INFO: DaemonSet pods can't tolerate node ip-172-31-45-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:13:07.645: INFO: DaemonSet pods can't tolerate node ip-172-31-9-171 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:13:07.648: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 20 13:13:07.648: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 04/20/24 13:13:07.651
  Apr 20 13:13:07.666: INFO: DaemonSet pods can't tolerate node ip-172-31-45-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:13:07.666: INFO: DaemonSet pods can't tolerate node ip-172-31-9-171 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:13:07.671: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 20 13:13:07.671: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 04/20/24 13:13:07.671
  E0420 13:13:08.524716      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting DaemonSet "daemon-set" @ 04/20/24 13:13:08.678
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2791, will wait for the garbage collector to delete the pods @ 04/20/24 13:13:08.678
  Apr 20 13:13:08.737: INFO: Deleting DaemonSet.extensions daemon-set took: 5.961636ms
  Apr 20 13:13:08.838: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.487243ms
  E0420 13:13:09.525350      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:13:09.842: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 13:13:09.842: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 20 13:13:09.845: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"25764"},"items":null}

  Apr 20 13:13:09.848: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"25764"},"items":null}

  Apr 20 13:13:09.860: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2791" for this suite. @ 04/20/24 13:13:09.863
• [4.277 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 04/20/24 13:13:09.87
  Apr 20 13:13:09.870: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename runtimeclass @ 04/20/24 13:13:09.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:13:09.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:13:09.891
  Apr 20 13:13:09.899: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3336" for this suite. @ 04/20/24 13:13:09.902
• [0.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 04/20/24 13:13:09.909
  Apr 20 13:13:09.909: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/20/24 13:13:09.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:13:09.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:13:09.93
  Apr 20 13:13:09.932: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  E0420 13:13:10.525774      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:13:10.959: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6951" for this suite. @ 04/20/24 13:13:10.963
• [1.061 seconds]
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:141
  STEP: Creating a kubernetes client @ 04/20/24 13:13:10.971
  Apr 20 13:13:10.971: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename secrets @ 04/20/24 13:13:10.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:13:10.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:13:10.991
  STEP: Creating projection with secret that has name secret-emptykey-test-9f19bfa3-941a-4fdc-b864-9246bac431c2 @ 04/20/24 13:13:10.996
  Apr 20 13:13:10.997: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4033" for this suite. @ 04/20/24 13:13:11.001
• [0.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 04/20/24 13:13:11.008
  Apr 20 13:13:11.008: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename limitrange @ 04/20/24 13:13:11.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:13:11.023
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:13:11.025
  STEP: Creating a LimitRange @ 04/20/24 13:13:11.028
  STEP: Setting up watch @ 04/20/24 13:13:11.028
  STEP: Submitting a LimitRange @ 04/20/24 13:13:11.131
  STEP: Verifying LimitRange creation was observed @ 04/20/24 13:13:11.137
  STEP: Fetching the LimitRange to ensure it has proper values @ 04/20/24 13:13:11.137
  Apr 20 13:13:11.140: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Apr 20 13:13:11.140: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 04/20/24 13:13:11.14
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 04/20/24 13:13:11.146
  Apr 20 13:13:11.149: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Apr 20 13:13:11.149: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 04/20/24 13:13:11.149
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 04/20/24 13:13:11.158
  Apr 20 13:13:11.162: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Apr 20 13:13:11.162: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 04/20/24 13:13:11.162
  STEP: Failing to create a Pod with more than max resources @ 04/20/24 13:13:11.163
  STEP: Updating a LimitRange @ 04/20/24 13:13:11.165
  STEP: Verifying LimitRange updating is effective @ 04/20/24 13:13:11.17
  E0420 13:13:11.525899      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:13:12.526279      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 04/20/24 13:13:13.175
  STEP: Failing to create a Pod with more than max resources @ 04/20/24 13:13:13.182
  STEP: Deleting a LimitRange @ 04/20/24 13:13:13.184
  STEP: Verifying the LimitRange was deleted @ 04/20/24 13:13:13.193
  E0420 13:13:13.526630      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:13:14.526853      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:13:15.526956      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:13:16.527175      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:13:17.527249      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:13:18.198: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 04/20/24 13:13:18.198
  Apr 20 13:13:18.206: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-1143" for this suite. @ 04/20/24 13:13:18.21
• [7.209 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 04/20/24 13:13:18.217
  Apr 20 13:13:18.217: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 13:13:18.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:13:18.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:13:18.237
  STEP: Creating a pod to test emptydir volume type on node default medium @ 04/20/24 13:13:18.24
  E0420 13:13:18.527966      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:13:19.528070      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:13:20.528784      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:13:21.529770      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 13:13:22.262
  Apr 20 13:13:22.266: INFO: Trying to get logs from node ip-172-31-41-198 pod pod-3c54b7ef-5a48-4fdd-8c2f-fd3f818d9998 container test-container: <nil>
  STEP: delete the pod @ 04/20/24 13:13:22.277
  Apr 20 13:13:22.295: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5553" for this suite. @ 04/20/24 13:13:22.298
• [4.087 seconds]
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 04/20/24 13:13:22.305
  Apr 20 13:13:22.305: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename chunking @ 04/20/24 13:13:22.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:13:22.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:13:22.323
  STEP: creating a large number of resources @ 04/20/24 13:13:22.328
  E0420 13:13:22.530706      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:13:23.531539      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:13:24.532435      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:13:25.532667      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:13:26.533499      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:13:27.534338      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:13:28.534832      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:13:29.535145      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:13:30.535802      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:13:31.536791      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:13:32.536901      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:13:33.537277      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:13:34.538183      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:13:35.539146      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:13:36.539827      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:13:37.540240      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:13:38.540821      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:13:39.541508      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 04/20/24 13:13:40.012
  Apr 20 13:13:40.060: INFO: Retrieved 17/17 results with rv 26388 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzODgsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Apr 20 13:13:40.109: INFO: Retrieved 17/17 results with rv 26388 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzODgsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Apr 20 13:13:40.159: INFO: Retrieved 17/17 results with rv 26388 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzODgsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Apr 20 13:13:40.210: INFO: Retrieved 17/17 results with rv 26388 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzODgsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Apr 20 13:13:40.260: INFO: Retrieved 17/17 results with rv 26388 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzODgsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Apr 20 13:13:40.309: INFO: Retrieved 17/17 results with rv 26388 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzODgsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Apr 20 13:13:40.360: INFO: Retrieved 17/17 results with rv 26388 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzODgsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Apr 20 13:13:40.410: INFO: Retrieved 17/17 results with rv 26388 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzODgsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Apr 20 13:13:40.460: INFO: Retrieved 17/17 results with rv 26388 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzODgsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Apr 20 13:13:40.510: INFO: Retrieved 17/17 results with rv 26388 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzODgsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  E0420 13:13:40.541879      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:13:40.560: INFO: Retrieved 17/17 results with rv 26388 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzODgsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Apr 20 13:13:40.610: INFO: Retrieved 17/17 results with rv 26388 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzODgsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Apr 20 13:13:40.660: INFO: Retrieved 17/17 results with rv 26388 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzODgsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Apr 20 13:13:40.710: INFO: Retrieved 17/17 results with rv 26388 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzODgsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Apr 20 13:13:40.759: INFO: Retrieved 17/17 results with rv 26388 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzODgsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Apr 20 13:13:40.810: INFO: Retrieved 17/17 results with rv 26388 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzODgsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Apr 20 13:13:40.860: INFO: Retrieved 17/17 results with rv 26388 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzODgsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Apr 20 13:13:40.910: INFO: Retrieved 17/17 results with rv 26388 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzODgsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Apr 20 13:13:40.960: INFO: Retrieved 17/17 results with rv 26388 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzODgsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Apr 20 13:13:41.010: INFO: Retrieved 17/17 results with rv 26388 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzODgsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Apr 20 13:13:41.060: INFO: Retrieved 17/17 results with rv 26388 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzODgsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Apr 20 13:13:41.110: INFO: Retrieved 17/17 results with rv 26388 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzODgsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Apr 20 13:13:41.159: INFO: Retrieved 17/17 results with rv 26388 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzODgsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Apr 20 13:13:41.209: INFO: Retrieved 9/17 results with rv 26388 and continue 
  Apr 20 13:13:41.260: INFO: Retrieved 17/17 results with rv 26390 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTAsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Apr 20 13:13:41.310: INFO: Retrieved 17/17 results with rv 26390 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Apr 20 13:13:41.360: INFO: Retrieved 17/17 results with rv 26390 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTAsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Apr 20 13:13:41.410: INFO: Retrieved 17/17 results with rv 26390 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTAsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Apr 20 13:13:41.460: INFO: Retrieved 17/17 results with rv 26390 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTAsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Apr 20 13:13:41.509: INFO: Retrieved 17/17 results with rv 26390 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTAsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  E0420 13:13:41.541898      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:13:41.560: INFO: Retrieved 17/17 results with rv 26390 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTAsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Apr 20 13:13:41.610: INFO: Retrieved 17/17 results with rv 26390 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTAsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Apr 20 13:13:41.659: INFO: Retrieved 17/17 results with rv 26390 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTAsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Apr 20 13:13:41.710: INFO: Retrieved 17/17 results with rv 26390 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTAsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Apr 20 13:13:41.760: INFO: Retrieved 17/17 results with rv 26390 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTAsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Apr 20 13:13:41.810: INFO: Retrieved 17/17 results with rv 26390 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTAsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Apr 20 13:13:41.860: INFO: Retrieved 17/17 results with rv 26390 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTAsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Apr 20 13:13:41.910: INFO: Retrieved 17/17 results with rv 26390 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTAsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Apr 20 13:13:41.960: INFO: Retrieved 17/17 results with rv 26390 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTAsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Apr 20 13:13:42.010: INFO: Retrieved 17/17 results with rv 26390 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTAsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Apr 20 13:13:42.060: INFO: Retrieved 17/17 results with rv 26390 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTAsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Apr 20 13:13:42.111: INFO: Retrieved 17/17 results with rv 26390 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTAsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Apr 20 13:13:42.160: INFO: Retrieved 17/17 results with rv 26390 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTAsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Apr 20 13:13:42.210: INFO: Retrieved 17/17 results with rv 26390 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTAsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Apr 20 13:13:42.260: INFO: Retrieved 17/17 results with rv 26390 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTAsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Apr 20 13:13:42.310: INFO: Retrieved 17/17 results with rv 26390 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTAsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Apr 20 13:13:42.360: INFO: Retrieved 17/17 results with rv 26390 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTAsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Apr 20 13:13:42.410: INFO: Retrieved 9/17 results with rv 26390 and continue 
  Apr 20 13:13:42.460: INFO: Retrieved 17/17 results with rv 26393 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTMsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Apr 20 13:13:42.511: INFO: Retrieved 17/17 results with rv 26393 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTMsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  E0420 13:13:42.542482      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:13:42.560: INFO: Retrieved 17/17 results with rv 26393 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTMsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Apr 20 13:13:42.610: INFO: Retrieved 17/17 results with rv 26393 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTMsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Apr 20 13:13:42.660: INFO: Retrieved 17/17 results with rv 26393 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTMsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Apr 20 13:13:42.710: INFO: Retrieved 17/17 results with rv 26393 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTMsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Apr 20 13:13:42.760: INFO: Retrieved 17/17 results with rv 26393 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTMsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Apr 20 13:13:42.810: INFO: Retrieved 17/17 results with rv 26393 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTMsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Apr 20 13:13:42.860: INFO: Retrieved 17/17 results with rv 26393 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTMsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Apr 20 13:13:42.911: INFO: Retrieved 17/17 results with rv 26393 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTMsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Apr 20 13:13:42.960: INFO: Retrieved 17/17 results with rv 26393 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTMsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Apr 20 13:13:43.009: INFO: Retrieved 17/17 results with rv 26393 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTMsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Apr 20 13:13:43.060: INFO: Retrieved 17/17 results with rv 26393 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTMsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Apr 20 13:13:43.111: INFO: Retrieved 17/17 results with rv 26393 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTMsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Apr 20 13:13:43.159: INFO: Retrieved 17/17 results with rv 26393 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTMsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Apr 20 13:13:43.210: INFO: Retrieved 17/17 results with rv 26393 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTMsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Apr 20 13:13:43.260: INFO: Retrieved 17/17 results with rv 26393 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTMsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Apr 20 13:13:43.310: INFO: Retrieved 17/17 results with rv 26393 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTMsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Apr 20 13:13:43.361: INFO: Retrieved 17/17 results with rv 26393 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTMsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Apr 20 13:13:43.410: INFO: Retrieved 17/17 results with rv 26393 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTMsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Apr 20 13:13:43.460: INFO: Retrieved 17/17 results with rv 26393 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTMsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Apr 20 13:13:43.510: INFO: Retrieved 17/17 results with rv 26393 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTMsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  E0420 13:13:43.543437      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:13:43.560: INFO: Retrieved 17/17 results with rv 26393 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjYzOTMsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Apr 20 13:13:43.609: INFO: Retrieved 9/17 results with rv 26393 and continue 
  STEP: retrieving those results all at once @ 04/20/24 13:13:43.609
  Apr 20 13:13:43.666: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-5666" for this suite. @ 04/20/24 13:13:43.71
• [21.459 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 04/20/24 13:13:43.764
  Apr 20 13:13:43.764: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 13:13:43.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:13:43.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:13:43.785
  STEP: Creating a pod to test downward api env vars @ 04/20/24 13:13:43.788
  E0420 13:13:44.543569      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:13:45.543694      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:13:46.544436      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:13:47.544527      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 13:13:47.807
  Apr 20 13:13:47.810: INFO: Trying to get logs from node ip-172-31-41-198 pod downward-api-1db97a56-144d-4c32-b388-ca627e8d1a39 container dapi-container: <nil>
  STEP: delete the pod @ 04/20/24 13:13:47.817
  Apr 20 13:13:47.837: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7635" for this suite. @ 04/20/24 13:13:47.84
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 04/20/24 13:13:47.848
  Apr 20 13:13:47.848: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename init-container @ 04/20/24 13:13:47.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:13:47.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:13:47.867
  STEP: creating the pod @ 04/20/24 13:13:47.869
  Apr 20 13:13:47.870: INFO: PodSpec: initContainers in spec.initContainers
  E0420 13:13:48.544721      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:13:49.544831      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:13:50.544885      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:13:51.545740      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:13:51.585: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5890" for this suite. @ 04/20/24 13:13:51.589
• [3.747 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3154
  STEP: Creating a kubernetes client @ 04/20/24 13:13:51.595
  Apr 20 13:13:51.595: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename services @ 04/20/24 13:13:51.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:13:51.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:13:51.614
  STEP: creating an Endpoint @ 04/20/24 13:13:51.62
  STEP: waiting for available Endpoint @ 04/20/24 13:13:51.624
  STEP: listing all Endpoints @ 04/20/24 13:13:51.625
  STEP: updating the Endpoint @ 04/20/24 13:13:51.628
  STEP: fetching the Endpoint @ 04/20/24 13:13:51.635
  STEP: patching the Endpoint @ 04/20/24 13:13:51.638
  STEP: fetching the Endpoint @ 04/20/24 13:13:51.645
  STEP: deleting the Endpoint by Collection @ 04/20/24 13:13:51.648
  STEP: waiting for Endpoint deletion @ 04/20/24 13:13:51.655
  STEP: fetching the Endpoint @ 04/20/24 13:13:51.656
  Apr 20 13:13:51.659: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3092" for this suite. @ 04/20/24 13:13:51.663
• [0.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 04/20/24 13:13:51.671
  Apr 20 13:13:51.671: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename field-validation @ 04/20/24 13:13:51.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:13:51.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:13:51.689
  Apr 20 13:13:51.692: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  W0420 13:13:51.693100      20 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc004585a10 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0420 13:13:52.546495      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:13:53.546622      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0420 13:13:54.231312      20 warnings.go:70] unknown field "alpha"
  W0420 13:13:54.231332      20 warnings.go:70] unknown field "beta"
  W0420 13:13:54.231335      20 warnings.go:70] unknown field "delta"
  W0420 13:13:54.231338      20 warnings.go:70] unknown field "epsilon"
  W0420 13:13:54.231340      20 warnings.go:70] unknown field "gamma"
  E0420 13:13:54.546695      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:13:54.770: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3318" for this suite. @ 04/20/24 13:13:54.773
• [3.110 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:214
  STEP: Creating a kubernetes client @ 04/20/24 13:13:54.781
  Apr 20 13:13:54.781: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/20/24 13:13:54.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:13:54.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:13:54.805
  STEP: create the container to handle the HTTPGet hook request. @ 04/20/24 13:13:54.811
  E0420 13:13:55.547284      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:13:56.547584      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 04/20/24 13:13:56.833
  E0420 13:13:57.548574      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:13:58.548678      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 04/20/24 13:13:58.848
  E0420 13:13:59.549185      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:14:00.549422      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 04/20/24 13:14:00.863
  Apr 20 13:14:00.870: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7736" for this suite. @ 04/20/24 13:14:00.873
• [6.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 04/20/24 13:14:00.879
  Apr 20 13:14:00.879: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 13:14:00.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:14:00.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:14:00.898
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 13:14:00.901
  E0420 13:14:01.550242      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:14:02.550443      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:14:03.550617      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:14:04.550745      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 13:14:04.92
  Apr 20 13:14:04.924: INFO: Trying to get logs from node ip-172-31-81-0 pod downwardapi-volume-b0168b36-3309-442f-8960-a34e9b04cf02 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 13:14:04.944
  Apr 20 13:14:04.960: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3037" for this suite. @ 04/20/24 13:14:04.963
• [4.090 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:793
  STEP: Creating a kubernetes client @ 04/20/24 13:14:04.969
  Apr 20 13:14:04.969: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename statefulset @ 04/20/24 13:14:04.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:14:04.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:14:04.989
  STEP: Creating service test in namespace statefulset-4659 @ 04/20/24 13:14:04.992
  STEP: Looking for a node to schedule stateful set and pod @ 04/20/24 13:14:04.997
  STEP: Creating pod with conflicting port in namespace statefulset-4659 @ 04/20/24 13:14:05
  STEP: Waiting until pod test-pod will start running in namespace statefulset-4659 @ 04/20/24 13:14:05.008
  E0420 13:14:05.551016      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:14:06.551626      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-4659 @ 04/20/24 13:14:07.015
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-4659 @ 04/20/24 13:14:07.022
  Apr 20 13:14:07.044: INFO: Observed stateful pod in namespace: statefulset-4659, name: ss-0, uid: 6bbd6df6-f679-4deb-be89-dc35a339fa18, status phase: Pending. Waiting for statefulset controller to delete.
  Apr 20 13:14:07.060: INFO: Observed stateful pod in namespace: statefulset-4659, name: ss-0, uid: 6bbd6df6-f679-4deb-be89-dc35a339fa18, status phase: Failed. Waiting for statefulset controller to delete.
  Apr 20 13:14:07.070: INFO: Observed stateful pod in namespace: statefulset-4659, name: ss-0, uid: 6bbd6df6-f679-4deb-be89-dc35a339fa18, status phase: Failed. Waiting for statefulset controller to delete.
  Apr 20 13:14:07.076: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-4659
  STEP: Removing pod with conflicting port in namespace statefulset-4659 @ 04/20/24 13:14:07.076
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-4659 and will be in running state @ 04/20/24 13:14:07.091
  E0420 13:14:07.551715      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:14:08.551828      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:14:09.101: INFO: Deleting all statefulset in ns statefulset-4659
  Apr 20 13:14:09.104: INFO: Scaling statefulset ss to 0
  E0420 13:14:09.552651      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:14:10.552768      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:14:11.553006      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:14:12.553714      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:14:13.554049      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:14:14.554280      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:14:15.555046      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:14:16.555421      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:14:17.555493      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:14:18.555602      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:14:19.119: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 20 13:14:19.122: INFO: Deleting statefulset ss
  Apr 20 13:14:19.134: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4659" for this suite. @ 04/20/24 13:14:19.137
• [14.177 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 04/20/24 13:14:19.146
  Apr 20 13:14:19.146: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename csiinlinevolumes @ 04/20/24 13:14:19.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:14:19.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:14:19.166
  STEP: creating @ 04/20/24 13:14:19.168
  STEP: getting @ 04/20/24 13:14:19.184
  STEP: listing in namespace @ 04/20/24 13:14:19.188
  STEP: patching @ 04/20/24 13:14:19.192
  STEP: deleting @ 04/20/24 13:14:19.199
  Apr 20 13:14:19.216: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-2551" for this suite. @ 04/20/24 13:14:19.22
• [0.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 04/20/24 13:14:19.227
  Apr 20 13:14:19.227: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename projected @ 04/20/24 13:14:19.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:14:19.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:14:19.245
  STEP: Creating projection with secret that has name projected-secret-test-e9dff1f5-7f23-460c-b698-8ab6077561b1 @ 04/20/24 13:14:19.248
  STEP: Creating a pod to test consume secrets @ 04/20/24 13:14:19.253
  E0420 13:14:19.556594      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:14:20.556784      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:14:21.557519      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:14:22.558582      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 13:14:23.277
  Apr 20 13:14:23.280: INFO: Trying to get logs from node ip-172-31-41-198 pod pod-projected-secrets-6ccef6e2-7718-4d21-94ab-9c74b30a87c3 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 13:14:23.287
  Apr 20 13:14:23.305: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9982" for this suite. @ 04/20/24 13:14:23.308
• [4.087 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 04/20/24 13:14:23.314
  Apr 20 13:14:23.314: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/20/24 13:14:23.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:14:23.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:14:23.336
  STEP: fetching the /apis discovery document @ 04/20/24 13:14:23.339
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 04/20/24 13:14:23.342
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 04/20/24 13:14:23.342
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 04/20/24 13:14:23.342
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 04/20/24 13:14:23.343
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 04/20/24 13:14:23.343
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 04/20/24 13:14:23.344
  Apr 20 13:14:23.344: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9799" for this suite. @ 04/20/24 13:14:23.348
• [0.041 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 04/20/24 13:14:23.355
  Apr 20 13:14:23.355: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename pods @ 04/20/24 13:14:23.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:14:23.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:14:23.373
  STEP: creating the pod @ 04/20/24 13:14:23.375
  STEP: setting up watch @ 04/20/24 13:14:23.375
  STEP: submitting the pod to kubernetes @ 04/20/24 13:14:23.478
  STEP: verifying the pod is in kubernetes @ 04/20/24 13:14:23.487
  STEP: verifying pod creation was observed @ 04/20/24 13:14:23.493
  E0420 13:14:23.558759      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:14:24.559634      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 04/20/24 13:14:25.504
  STEP: verifying pod deletion was observed @ 04/20/24 13:14:25.512
  E0420 13:14:25.560683      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:14:26.498: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9056" for this suite. @ 04/20/24 13:14:26.502
• [3.154 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 04/20/24 13:14:26.51
  Apr 20 13:14:26.510: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename daemonsets @ 04/20/24 13:14:26.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:14:26.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:14:26.528
  Apr 20 13:14:26.546: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 04/20/24 13:14:26.557
  E0420 13:14:26.560947      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:14:26.563: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 13:14:26.563: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 04/20/24 13:14:26.563
  Apr 20 13:14:26.594: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 13:14:26.594: INFO: Node ip-172-31-41-198 is running 0 daemon pod, expected 1
  E0420 13:14:27.561329      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:14:27.590: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 13:14:27.590: INFO: Node ip-172-31-41-198 is running 0 daemon pod, expected 1
  E0420 13:14:28.561429      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:14:28.590: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 20 13:14:28.590: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 04/20/24 13:14:28.593
  Apr 20 13:14:28.607: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 20 13:14:28.607: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E0420 13:14:29.561970      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:14:29.608: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 13:14:29.608: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 04/20/24 13:14:29.608
  Apr 20 13:14:29.622: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 13:14:29.622: INFO: Node ip-172-31-41-198 is running 0 daemon pod, expected 1
  E0420 13:14:30.562378      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:14:30.623: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 13:14:30.623: INFO: Node ip-172-31-41-198 is running 0 daemon pod, expected 1
  E0420 13:14:31.562656      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:14:31.623: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 20 13:14:31.623: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/20/24 13:14:31.629
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1405, will wait for the garbage collector to delete the pods @ 04/20/24 13:14:31.629
  Apr 20 13:14:31.688: INFO: Deleting DaemonSet.extensions daemon-set took: 5.633031ms
  Apr 20 13:14:31.788: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.390749ms
  E0420 13:14:32.563050      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:14:33.563122      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:14:33.593: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 13:14:33.593: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 20 13:14:33.597: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"27388"},"items":null}

  Apr 20 13:14:33.599: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"27388"},"items":null}

  Apr 20 13:14:33.618: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1405" for this suite. @ 04/20/24 13:14:33.623
• [7.119 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 04/20/24 13:14:33.629
  Apr 20 13:14:33.629: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename svcaccounts @ 04/20/24 13:14:33.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:14:33.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:14:33.648
  Apr 20 13:14:33.653: INFO: Got root ca configmap in namespace "svcaccounts-741"
  Apr 20 13:14:33.659: INFO: Deleted root ca configmap in namespace "svcaccounts-741"
  STEP: waiting for a new root ca configmap created @ 04/20/24 13:14:34.159
  Apr 20 13:14:34.164: INFO: Recreated root ca configmap in namespace "svcaccounts-741"
  Apr 20 13:14:34.168: INFO: Updated root ca configmap in namespace "svcaccounts-741"
  E0420 13:14:34.563209      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for the root ca configmap reconciled @ 04/20/24 13:14:34.669
  Apr 20 13:14:34.673: INFO: Reconciled root ca configmap in namespace "svcaccounts-741"
  Apr 20 13:14:34.673: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-741" for this suite. @ 04/20/24 13:14:34.677
• [1.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 04/20/24 13:14:34.684
  Apr 20 13:14:34.684: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename secrets @ 04/20/24 13:14:34.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:14:34.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:14:34.704
  Apr 20 13:14:34.742: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5896" for this suite. @ 04/20/24 13:14:34.745
• [0.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 04/20/24 13:14:34.752
  Apr 20 13:14:34.752: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename projected @ 04/20/24 13:14:34.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:14:34.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:14:34.769
  STEP: Creating configMap with name projected-configmap-test-volume-map-8c26bf3e-fa2a-41bd-a3ea-cd0df764f553 @ 04/20/24 13:14:34.772
  STEP: Creating a pod to test consume configMaps @ 04/20/24 13:14:34.776
  E0420 13:14:35.563299      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:14:36.563662      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 13:14:36.793
  Apr 20 13:14:36.796: INFO: Trying to get logs from node ip-172-31-41-198 pod pod-projected-configmaps-6f32fe47-0190-4c6b-b75a-99fd010cb91d container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 13:14:36.803
  Apr 20 13:14:36.819: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1845" for this suite. @ 04/20/24 13:14:36.823
• [2.077 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 04/20/24 13:14:36.829
  Apr 20 13:14:36.829: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 13:14:36.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:14:36.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:14:36.847
  STEP: Creating a pod to test downward api env vars @ 04/20/24 13:14:36.85
  E0420 13:14:37.564688      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:14:38.564789      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 13:14:38.866
  Apr 20 13:14:38.869: INFO: Trying to get logs from node ip-172-31-41-198 pod downward-api-4f9a5d32-95bf-4b5c-9aba-bae6e7d9565e container dapi-container: <nil>
  STEP: delete the pod @ 04/20/24 13:14:38.877
  Apr 20 13:14:38.894: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2533" for this suite. @ 04/20/24 13:14:38.898
• [2.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 04/20/24 13:14:38.904
  Apr 20 13:14:38.904: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename projected @ 04/20/24 13:14:38.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:14:38.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:14:38.923
  STEP: Creating secret with name projected-secret-test-d8966cfb-f8f9-4e0f-ba94-59a516b5ef6d @ 04/20/24 13:14:38.925
  STEP: Creating a pod to test consume secrets @ 04/20/24 13:14:38.929
  E0420 13:14:39.564885      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:14:40.565092      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:14:41.565727      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:14:42.566484      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 13:14:42.951
  Apr 20 13:14:42.953: INFO: Trying to get logs from node ip-172-31-41-198 pod pod-projected-secrets-d0d24711-c98f-461a-8119-a384551029c3 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 13:14:42.96
  Apr 20 13:14:42.976: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9884" for this suite. @ 04/20/24 13:14:42.979
• [4.081 seconds]
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 04/20/24 13:14:42.985
  Apr 20 13:14:42.985: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename secrets @ 04/20/24 13:14:42.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:14:43.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:14:43.003
  STEP: Creating secret with name secret-test-map-c215effa-703f-4fb9-874d-e933270c5905 @ 04/20/24 13:14:43.006
  STEP: Creating a pod to test consume secrets @ 04/20/24 13:14:43.011
  E0420 13:14:43.567177      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:14:44.567276      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:14:45.567566      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:14:46.567688      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 13:14:47.034
  Apr 20 13:14:47.037: INFO: Trying to get logs from node ip-172-31-41-198 pod pod-secrets-6894f483-2397-40c3-897b-38450e40e446 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 13:14:47.044
  Apr 20 13:14:47.059: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8335" for this suite. @ 04/20/24 13:14:47.062
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 04/20/24 13:14:47.068
  Apr 20 13:14:47.068: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename sysctl @ 04/20/24 13:14:47.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:14:47.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:14:47.088
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 04/20/24 13:14:47.09
  STEP: Watching for error events or started pod @ 04/20/24 13:14:47.098
  E0420 13:14:47.567799      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:14:48.567886      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 04/20/24 13:14:49.103
  E0420 13:14:49.568658      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:14:50.568758      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 04/20/24 13:14:51.114
  STEP: Getting logs from the pod @ 04/20/24 13:14:51.114
  STEP: Checking that the sysctl is actually updated @ 04/20/24 13:14:51.121
  Apr 20 13:14:51.121: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-6987" for this suite. @ 04/20/24 13:14:51.124
• [4.063 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 04/20/24 13:14:51.131
  Apr 20 13:14:51.131: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename replicaset @ 04/20/24 13:14:51.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:14:51.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:14:51.15
  Apr 20 13:14:51.164: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0420 13:14:51.569174      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:14:52.569254      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:14:53.569350      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:14:54.569547      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:14:55.569761      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:14:56.168: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/20/24 13:14:56.168
  STEP: Scaling up "test-rs" replicaset @ 04/20/24 13:14:56.168
  Apr 20 13:14:56.178: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 04/20/24 13:14:56.178
  Apr 20 13:14:56.187: INFO: observed ReplicaSet test-rs in namespace replicaset-8987 with ReadyReplicas 1, AvailableReplicas 1
  Apr 20 13:14:56.208: INFO: observed ReplicaSet test-rs in namespace replicaset-8987 with ReadyReplicas 1, AvailableReplicas 1
  Apr 20 13:14:56.231: INFO: observed ReplicaSet test-rs in namespace replicaset-8987 with ReadyReplicas 1, AvailableReplicas 1
  Apr 20 13:14:56.238: INFO: observed ReplicaSet test-rs in namespace replicaset-8987 with ReadyReplicas 1, AvailableReplicas 1
  E0420 13:14:56.570835      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:14:56.945: INFO: observed ReplicaSet test-rs in namespace replicaset-8987 with ReadyReplicas 2, AvailableReplicas 2
  Apr 20 13:14:57.015: INFO: observed Replicaset test-rs in namespace replicaset-8987 with ReadyReplicas 3 found true
  Apr 20 13:14:57.015: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8987" for this suite. @ 04/20/24 13:14:57.018
• [5.893 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 04/20/24 13:14:57.025
  Apr 20 13:14:57.025: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename container-probe @ 04/20/24 13:14:57.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:14:57.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:14:57.042
  STEP: Creating pod busybox-5eb705ed-bc8f-47b6-bdbe-e4c7fe535f0b in namespace container-probe-7257 @ 04/20/24 13:14:57.045
  E0420 13:14:57.571037      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:14:58.571219      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/20/24 13:14:59.062
  Apr 20 13:14:59.065: INFO: Initial restart count of pod busybox-5eb705ed-bc8f-47b6-bdbe-e4c7fe535f0b is 0
  Apr 20 13:14:59.068: INFO: Get pod busybox-5eb705ed-bc8f-47b6-bdbe-e4c7fe535f0b in namespace container-probe-7257
  E0420 13:14:59.571271      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:15:00.571535      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:15:01.073: INFO: Get pod busybox-5eb705ed-bc8f-47b6-bdbe-e4c7fe535f0b in namespace container-probe-7257
  E0420 13:15:01.572512      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:15:02.572596      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:15:03.077: INFO: Get pod busybox-5eb705ed-bc8f-47b6-bdbe-e4c7fe535f0b in namespace container-probe-7257
  E0420 13:15:03.572862      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:15:04.572960      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:15:05.084: INFO: Get pod busybox-5eb705ed-bc8f-47b6-bdbe-e4c7fe535f0b in namespace container-probe-7257
  E0420 13:15:05.573726      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:15:06.574207      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:15:07.089: INFO: Get pod busybox-5eb705ed-bc8f-47b6-bdbe-e4c7fe535f0b in namespace container-probe-7257
  E0420 13:15:07.574681      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:15:08.574898      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:15:09.093: INFO: Get pod busybox-5eb705ed-bc8f-47b6-bdbe-e4c7fe535f0b in namespace container-probe-7257
  E0420 13:15:09.575725      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:15:10.575775      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:15:11.097: INFO: Get pod busybox-5eb705ed-bc8f-47b6-bdbe-e4c7fe535f0b in namespace container-probe-7257
  E0420 13:15:11.576748      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:15:12.576954      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:15:13.101: INFO: Get pod busybox-5eb705ed-bc8f-47b6-bdbe-e4c7fe535f0b in namespace container-probe-7257
  E0420 13:15:13.577151      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:15:14.577836      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:15:15.106: INFO: Get pod busybox-5eb705ed-bc8f-47b6-bdbe-e4c7fe535f0b in namespace container-probe-7257
  E0420 13:15:15.577972      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:15:16.578102      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:15:17.111: INFO: Get pod busybox-5eb705ed-bc8f-47b6-bdbe-e4c7fe535f0b in namespace container-probe-7257
  E0420 13:15:17.578171      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:15:18.578363      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:15:19.115: INFO: Get pod busybox-5eb705ed-bc8f-47b6-bdbe-e4c7fe535f0b in namespace container-probe-7257
  E0420 13:15:19.578461      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:15:20.578536      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:15:21.120: INFO: Get pod busybox-5eb705ed-bc8f-47b6-bdbe-e4c7fe535f0b in namespace container-probe-7257
  E0420 13:15:21.579125      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:15:22.579474      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:15:23.125: INFO: Get pod busybox-5eb705ed-bc8f-47b6-bdbe-e4c7fe535f0b in namespace container-probe-7257
  E0420 13:15:23.580307      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:15:24.580683      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:15:25.130: INFO: Get pod busybox-5eb705ed-bc8f-47b6-bdbe-e4c7fe535f0b in namespace container-probe-7257
  E0420 13:15:25.581548      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:15:26.581650      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:15:27.135: INFO: Get pod busybox-5eb705ed-bc8f-47b6-bdbe-e4c7fe535f0b in namespace container-probe-7257
  E0420 13:15:27.581807      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:15:28.581921      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:15:29.140: INFO: Get pod busybox-5eb705ed-bc8f-47b6-bdbe-e4c7fe535f0b in namespace container-probe-7257
  E0420 13:15:29.582972      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:15:30.583121      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:15:31.144: INFO: Get pod busybox-5eb705ed-bc8f-47b6-bdbe-e4c7fe535f0b in namespace container-probe-7257
  E0420 13:15:31.583808      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:15:32.583901      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:15:33.148: INFO: Get pod busybox-5eb705ed-bc8f-47b6-bdbe-e4c7fe535f0b in namespace container-probe-7257
  E0420 13:15:33.584041      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:15:34.584624      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:15:35.153: INFO: Get pod busybox-5eb705ed-bc8f-47b6-bdbe-e4c7fe535f0b in namespace container-probe-7257
  E0420 13:15:35.584828      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:15:36.585414      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:15:37.157: INFO: Get pod busybox-5eb705ed-bc8f-47b6-bdbe-e4c7fe535f0b in namespace container-probe-7257
  E0420 13:15:37.586276      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:15:38.586376      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:15:39.162: INFO: Get pod busybox-5eb705ed-bc8f-47b6-bdbe-e4c7fe535f0b in namespace container-probe-7257
  E0420 13:15:39.587007      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:15:40.587136      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:15:41.167: INFO: Get pod busybox-5eb705ed-bc8f-47b6-bdbe-e4c7fe535f0b in namespace container-probe-7257
  E0420 13:15:41.587799      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:15:42.588071      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:15:43.171: INFO: Get pod busybox-5eb705ed-bc8f-47b6-bdbe-e4c7fe535f0b in namespace container-probe-7257
  E0420 13:15:43.588553      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:15:44.588652      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:15:45.176: INFO: Get pod busybox-5eb705ed-bc8f-47b6-bdbe-e4c7fe535f0b in namespace container-probe-7257
  E0420 13:15:45.589493      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:15:46.589872      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:15:47.181: INFO: Get pod busybox-5eb705ed-bc8f-47b6-bdbe-e4c7fe535f0b in namespace container-probe-7257
  E0420 13:15:47.590252      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:15:48.590369      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:15:49.186: INFO: Get pod busybox-5eb705ed-bc8f-47b6-bdbe-e4c7fe535f0b in namespace container-probe-7257
  Apr 20 13:15:49.186: INFO: Restart count of pod container-probe-7257/busybox-5eb705ed-bc8f-47b6-bdbe-e4c7fe535f0b is now 1 (50.12043219s elapsed)
  STEP: deleting the pod @ 04/20/24 13:15:49.186
  Apr 20 13:15:49.202: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7257" for this suite. @ 04/20/24 13:15:49.207
• [52.188 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 04/20/24 13:15:49.213
  Apr 20 13:15:49.213: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename proxy @ 04/20/24 13:15:49.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:15:49.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:15:49.233
  Apr 20 13:15:49.235: INFO: Creating pod...
  E0420 13:15:49.590903      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:15:50.590990      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:15:51.250: INFO: Creating service...
  Apr 20 13:15:51.260: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7482/pods/agnhost/proxy/some/path/with/DELETE
  Apr 20 13:15:51.265: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Apr 20 13:15:51.266: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7482/pods/agnhost/proxy/some/path/with/GET
  Apr 20 13:15:51.273: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Apr 20 13:15:51.273: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7482/pods/agnhost/proxy/some/path/with/HEAD
  Apr 20 13:15:51.277: INFO: http.Client request:HEAD | StatusCode:200
  Apr 20 13:15:51.277: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7482/pods/agnhost/proxy/some/path/with/OPTIONS
  Apr 20 13:15:51.280: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Apr 20 13:15:51.280: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7482/pods/agnhost/proxy/some/path/with/PATCH
  Apr 20 13:15:51.284: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Apr 20 13:15:51.284: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7482/pods/agnhost/proxy/some/path/with/POST
  Apr 20 13:15:51.288: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Apr 20 13:15:51.288: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7482/pods/agnhost/proxy/some/path/with/PUT
  Apr 20 13:15:51.292: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Apr 20 13:15:51.292: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7482/services/test-service/proxy/some/path/with/DELETE
  Apr 20 13:15:51.297: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Apr 20 13:15:51.297: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7482/services/test-service/proxy/some/path/with/GET
  Apr 20 13:15:51.303: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Apr 20 13:15:51.303: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7482/services/test-service/proxy/some/path/with/HEAD
  Apr 20 13:15:51.308: INFO: http.Client request:HEAD | StatusCode:200
  Apr 20 13:15:51.308: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7482/services/test-service/proxy/some/path/with/OPTIONS
  Apr 20 13:15:51.313: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Apr 20 13:15:51.313: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7482/services/test-service/proxy/some/path/with/PATCH
  Apr 20 13:15:51.318: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Apr 20 13:15:51.318: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7482/services/test-service/proxy/some/path/with/POST
  Apr 20 13:15:51.322: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Apr 20 13:15:51.322: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7482/services/test-service/proxy/some/path/with/PUT
  Apr 20 13:15:51.327: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Apr 20 13:15:51.327: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-7482" for this suite. @ 04/20/24 13:15:51.33
• [2.123 seconds]
------------------------------
SS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 04/20/24 13:15:51.336
  Apr 20 13:15:51.336: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename controllerrevisions @ 04/20/24 13:15:51.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:15:51.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:15:51.36
  STEP: Creating DaemonSet "e2e-5x26r-daemon-set" @ 04/20/24 13:15:51.383
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/20/24 13:15:51.387
  Apr 20 13:15:51.390: INFO: DaemonSet pods can't tolerate node ip-172-31-45-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:15:51.390: INFO: DaemonSet pods can't tolerate node ip-172-31-9-171 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:15:51.395: INFO: Number of nodes with available pods controlled by daemonset e2e-5x26r-daemon-set: 0
  Apr 20 13:15:51.395: INFO: Node ip-172-31-27-26 is running 0 daemon pod, expected 1
  E0420 13:15:51.591294      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:15:52.392: INFO: DaemonSet pods can't tolerate node ip-172-31-45-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:15:52.393: INFO: DaemonSet pods can't tolerate node ip-172-31-9-171 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:15:52.396: INFO: Number of nodes with available pods controlled by daemonset e2e-5x26r-daemon-set: 2
  Apr 20 13:15:52.396: INFO: Node ip-172-31-41-198 is running 0 daemon pod, expected 1
  E0420 13:15:52.591954      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:15:53.392: INFO: DaemonSet pods can't tolerate node ip-172-31-45-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:15:53.392: INFO: DaemonSet pods can't tolerate node ip-172-31-9-171 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:15:53.395: INFO: Number of nodes with available pods controlled by daemonset e2e-5x26r-daemon-set: 3
  Apr 20 13:15:53.395: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-5x26r-daemon-set
  STEP: Confirm DaemonSet "e2e-5x26r-daemon-set" successfully created with "daemonset-name=e2e-5x26r-daemon-set" label @ 04/20/24 13:15:53.398
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-5x26r-daemon-set" @ 04/20/24 13:15:53.404
  Apr 20 13:15:53.412: INFO: Located ControllerRevision: "e2e-5x26r-daemon-set-755cf7dcfd"
  STEP: Patching ControllerRevision "e2e-5x26r-daemon-set-755cf7dcfd" @ 04/20/24 13:15:53.418
  Apr 20 13:15:53.429: INFO: e2e-5x26r-daemon-set-755cf7dcfd has been patched
  STEP: Create a new ControllerRevision @ 04/20/24 13:15:53.429
  Apr 20 13:15:53.437: INFO: Created ControllerRevision: e2e-5x26r-daemon-set-68bfb769d4
  STEP: Confirm that there are two ControllerRevisions @ 04/20/24 13:15:53.437
  Apr 20 13:15:53.437: INFO: Requesting list of ControllerRevisions to confirm quantity
  Apr 20 13:15:53.444: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-5x26r-daemon-set-755cf7dcfd" @ 04/20/24 13:15:53.444
  STEP: Confirm that there is only one ControllerRevision @ 04/20/24 13:15:53.454
  Apr 20 13:15:53.454: INFO: Requesting list of ControllerRevisions to confirm quantity
  Apr 20 13:15:53.458: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-5x26r-daemon-set-68bfb769d4" @ 04/20/24 13:15:53.464
  Apr 20 13:15:53.476: INFO: e2e-5x26r-daemon-set-68bfb769d4 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 04/20/24 13:15:53.476
  W0420 13:15:53.483742      20 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 04/20/24 13:15:53.483
  Apr 20 13:15:53.483: INFO: Requesting list of ControllerRevisions to confirm quantity
  E0420 13:15:53.592931      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:15:54.484: INFO: Requesting list of ControllerRevisions to confirm quantity
  Apr 20 13:15:54.488: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-5x26r-daemon-set-68bfb769d4=updated" @ 04/20/24 13:15:54.488
  STEP: Confirm that there is only one ControllerRevision @ 04/20/24 13:15:54.495
  Apr 20 13:15:54.495: INFO: Requesting list of ControllerRevisions to confirm quantity
  Apr 20 13:15:54.498: INFO: Found 1 ControllerRevisions
  Apr 20 13:15:54.500: INFO: ControllerRevision "e2e-5x26r-daemon-set-6cbdff7cb9" has revision 3
  STEP: Deleting DaemonSet "e2e-5x26r-daemon-set" @ 04/20/24 13:15:54.503
  STEP: deleting DaemonSet.extensions e2e-5x26r-daemon-set in namespace controllerrevisions-8431, will wait for the garbage collector to delete the pods @ 04/20/24 13:15:54.503
  Apr 20 13:15:54.563: INFO: Deleting DaemonSet.extensions e2e-5x26r-daemon-set took: 6.252465ms
  E0420 13:15:54.593823      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:15:54.663: INFO: Terminating DaemonSet.extensions e2e-5x26r-daemon-set pods took: 100.163169ms
  E0420 13:15:55.594830      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:15:55.768: INFO: Number of nodes with available pods controlled by daemonset e2e-5x26r-daemon-set: 0
  Apr 20 13:15:55.768: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-5x26r-daemon-set
  Apr 20 13:15:55.771: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"28044"},"items":null}

  Apr 20 13:15:55.774: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"28044"},"items":null}

  Apr 20 13:15:55.786: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-8431" for this suite. @ 04/20/24 13:15:55.789
• [4.459 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 04/20/24 13:15:55.796
  Apr 20 13:15:55.796: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename pods @ 04/20/24 13:15:55.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:15:55.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:15:55.815
  STEP: creating a Pod with a static label @ 04/20/24 13:15:55.821
  STEP: watching for Pod to be ready @ 04/20/24 13:15:55.832
  Apr 20 13:15:55.833: INFO: observed Pod pod-test in namespace pods-8366 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Apr 20 13:15:55.836: INFO: observed Pod pod-test in namespace pods-8366 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 13:15:55 +0000 UTC  }]
  Apr 20 13:15:55.853: INFO: observed Pod pod-test in namespace pods-8366 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 13:15:55 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 13:15:55 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 13:15:55 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 13:15:55 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 13:15:55 +0000 UTC  }]
  E0420 13:15:56.595801      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:15:56.669: INFO: Found Pod pod-test in namespace pods-8366 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 13:15:56 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 13:15:55 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 13:15:56 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 13:15:56 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 13:15:55 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 04/20/24 13:15:56.672
  STEP: getting the Pod and ensuring that it's patched @ 04/20/24 13:15:56.687
  STEP: replacing the Pod's status Ready condition to False @ 04/20/24 13:15:56.69
  STEP: check the Pod again to ensure its Ready conditions are False @ 04/20/24 13:15:56.7
  STEP: deleting the Pod via a Collection with a LabelSelector @ 04/20/24 13:15:56.7
  STEP: watching for the Pod to be deleted @ 04/20/24 13:15:56.714
  Apr 20 13:15:56.715: INFO: observed event type MODIFIED
  E0420 13:15:57.596731      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:15:58.597232      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:15:58.681: INFO: observed event type MODIFIED
  Apr 20 13:15:58.838: INFO: observed event type MODIFIED
  E0420 13:15:59.597797      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:15:59.682: INFO: observed event type MODIFIED
  Apr 20 13:15:59.700: INFO: observed event type MODIFIED
  Apr 20 13:15:59.709: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8366" for this suite. @ 04/20/24 13:15:59.712
• [3.922 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 04/20/24 13:15:59.721
  Apr 20 13:15:59.721: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename projected @ 04/20/24 13:15:59.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:15:59.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:15:59.744
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 13:15:59.746
  E0420 13:16:00.597898      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:01.598805      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:02.598902      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:03.599001      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 13:16:03.77
  Apr 20 13:16:03.773: INFO: Trying to get logs from node ip-172-31-41-198 pod downwardapi-volume-bed03066-3bac-453e-9fef-88926219ca4a container client-container: <nil>
  STEP: delete the pod @ 04/20/24 13:16:03.78
  Apr 20 13:16:03.795: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4325" for this suite. @ 04/20/24 13:16:03.799
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 04/20/24 13:16:03.805
  Apr 20 13:16:03.805: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename secrets @ 04/20/24 13:16:03.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:16:03.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:16:03.826
  STEP: Creating secret with name s-test-opt-del-775513c9-c5d8-4ecd-ae91-29607aac736c @ 04/20/24 13:16:03.832
  STEP: Creating secret with name s-test-opt-upd-b5626747-ce91-4b02-b9df-fd0dcb9599a1 @ 04/20/24 13:16:03.838
  STEP: Creating the pod @ 04/20/24 13:16:03.842
  E0420 13:16:04.599095      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:05.599408      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-775513c9-c5d8-4ecd-ae91-29607aac736c @ 04/20/24 13:16:05.884
  STEP: Updating secret s-test-opt-upd-b5626747-ce91-4b02-b9df-fd0dcb9599a1 @ 04/20/24 13:16:05.89
  STEP: Creating secret with name s-test-opt-create-01da2c55-2876-475d-b2ba-28691aae9ddc @ 04/20/24 13:16:05.895
  STEP: waiting to observe update in volume @ 04/20/24 13:16:05.899
  E0420 13:16:06.600257      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:07.601262      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:08.601494      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:09.601579      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:10.601672      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:11.601762      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:12.601913      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:13.602016      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:14.602082      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:15.602303      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:16.602841      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:17.602945      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:18.603051      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:19.603166      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:20.603606      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:21.603736      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:22.604602      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:23.604936      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:24.604787      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:25.605229      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:26.607528      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:27.607604      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:28.608547      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:29.608650      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:30.608925      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:31.609964      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:32.611017      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:33.611195      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:34.611477      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:35.611564      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:36.611664      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:37.612597      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:38.613636      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:39.613888      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:40.614729      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:41.614777      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:42.615623      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:43.616538      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:44.616627      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:45.617214      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:46.618276      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:47.618471      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:48.618573      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:49.618661      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:50.619561      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:51.619895      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:52.620577      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:53.620790      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:54.620878      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:55.620979      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:56.621668      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:57.621819      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:58.622585      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:16:59.622868      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:00.623107      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:01.623489      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:02.624420      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:03.624509      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:04.624598      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:05.624614      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:06.624745      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:07.625207      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:08.625481      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:09.625575      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:10.625668      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:11.625766      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:12.625893      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:13.625958      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:14.626883      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:15.627010      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:16.627753      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:17.627893      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:18.627997      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:19.628086      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:20.628183      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:21.628564      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:22.629146      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:23.630136      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:24.630281      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:25.630341      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:26.630482      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:27.630653      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:28.631668      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:29.631772      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:17:30.284: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2874" for this suite. @ 04/20/24 13:17:30.288
• [86.489 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 04/20/24 13:17:30.294
  Apr 20 13:17:30.294: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename services @ 04/20/24 13:17:30.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:17:30.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:17:30.315
  STEP: creating service multi-endpoint-test in namespace services-57 @ 04/20/24 13:17:30.318
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-57 to expose endpoints map[] @ 04/20/24 13:17:30.328
  Apr 20 13:17:30.331: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0420 13:17:30.632519      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:17:31.340: INFO: successfully validated that service multi-endpoint-test in namespace services-57 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-57 @ 04/20/24 13:17:31.34
  E0420 13:17:31.633266      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:32.633475      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-57 to expose endpoints map[pod1:[100]] @ 04/20/24 13:17:33.363
  Apr 20 13:17:33.373: INFO: successfully validated that service multi-endpoint-test in namespace services-57 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-57 @ 04/20/24 13:17:33.374
  E0420 13:17:33.633668      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:34.633858      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-57 to expose endpoints map[pod1:[100] pod2:[101]] @ 04/20/24 13:17:35.391
  Apr 20 13:17:35.402: INFO: successfully validated that service multi-endpoint-test in namespace services-57 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 04/20/24 13:17:35.402
  Apr 20 13:17:35.402: INFO: Creating new exec pod
  E0420 13:17:35.634121      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:36.634408      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:37.634893      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:17:38.415: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-57 exec execpodkdw6p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Apr 20 13:17:38.514: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Apr 20 13:17:38.514: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 13:17:38.514: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-57 exec execpodkdw6p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.25 80'
  Apr 20 13:17:38.601: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.25 80\nConnection to 10.152.183.25 80 port [tcp/http] succeeded!\n"
  Apr 20 13:17:38.601: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 13:17:38.601: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-57 exec execpodkdw6p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  E0420 13:17:38.635906      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:17:38.691: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Apr 20 13:17:38.691: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 13:17:38.691: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-57 exec execpodkdw6p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.25 81'
  Apr 20 13:17:38.778: INFO: stderr: "+ nc -v -t -w 2 10.152.183.25 81\n+ echo hostName\nConnection to 10.152.183.25 81 port [tcp/*] succeeded!\n"
  Apr 20 13:17:38.779: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-57 @ 04/20/24 13:17:38.779
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-57 to expose endpoints map[pod2:[101]] @ 04/20/24 13:17:38.794
  Apr 20 13:17:38.808: INFO: successfully validated that service multi-endpoint-test in namespace services-57 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-57 @ 04/20/24 13:17:38.808
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-57 to expose endpoints map[] @ 04/20/24 13:17:38.823
  E0420 13:17:39.636278      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:17:39.839: INFO: successfully validated that service multi-endpoint-test in namespace services-57 exposes endpoints map[]
  Apr 20 13:17:39.852: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-57" for this suite. @ 04/20/24 13:17:39.855
• [9.569 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 04/20/24 13:17:39.864
  Apr 20 13:17:39.864: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename events @ 04/20/24 13:17:39.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:17:39.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:17:39.881
  STEP: Create set of events @ 04/20/24 13:17:39.884
  Apr 20 13:17:39.888: INFO: created test-event-1
  Apr 20 13:17:39.892: INFO: created test-event-2
  Apr 20 13:17:39.896: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 04/20/24 13:17:39.896
  STEP: delete collection of events @ 04/20/24 13:17:39.898
  Apr 20 13:17:39.898: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 04/20/24 13:17:39.918
  Apr 20 13:17:39.918: INFO: requesting list of events to confirm quantity
  Apr 20 13:17:39.921: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9556" for this suite. @ 04/20/24 13:17:39.924
• [0.068 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:751
  STEP: Creating a kubernetes client @ 04/20/24 13:17:39.931
  Apr 20 13:17:39.931: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename statefulset @ 04/20/24 13:17:39.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:17:39.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:17:39.951
  STEP: Creating service test in namespace statefulset-7921 @ 04/20/24 13:17:39.953
  STEP: Creating stateful set ss in namespace statefulset-7921 @ 04/20/24 13:17:39.958
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-7921 @ 04/20/24 13:17:39.965
  Apr 20 13:17:39.967: INFO: Found 0 stateful pods, waiting for 1
  E0420 13:17:40.636352      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:41.637398      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:42.638328      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:43.638416      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:44.638518      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:45.638748      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:46.639411      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:47.640093      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:48.640195      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:49.641239      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:17:49.970: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 04/20/24 13:17:49.97
  Apr 20 13:17:49.974: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=statefulset-7921 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 20 13:17:50.069: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 20 13:17:50.069: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 20 13:17:50.069: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 20 13:17:50.073: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0420 13:17:50.642039      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:51.642883      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:52.643019      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:53.643159      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:54.643277      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:55.643511      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:56.643959      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:57.644145      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:58.644646      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:17:59.645616      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:18:00.074: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Apr 20 13:18:00.074: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Apr 20 13:18:00.090: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
  Apr 20 13:18:00.090: INFO: ss-0  ip-172-31-41-198  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 13:17:40 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 13:17:39 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 13:17:50 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 13:17:50 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 13:17:39 +0000 UTC  }]
  Apr 20 13:18:00.090: INFO: 
  Apr 20 13:18:00.090: INFO: StatefulSet ss has not reached scale 3, at 1
  E0420 13:18:00.645869      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:18:01.095: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.996180287s
  E0420 13:18:01.646281      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:18:02.100: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.991158719s
  E0420 13:18:02.646986      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:18:03.106: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.986019467s
  E0420 13:18:03.647560      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:18:04.109: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.981503403s
  E0420 13:18:04.648513      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:18:05.114: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.977601548s
  E0420 13:18:05.648615      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:18:06.119: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.972430883s
  E0420 13:18:06.649523      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:18:07.123: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.967500144s
  E0420 13:18:07.650345      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:18:08.127: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.963726444s
  E0420 13:18:08.650387      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:18:09.132: INFO: Verifying statefulset ss doesn't scale past 3 for another 959.669019ms
  E0420 13:18:09.650926      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-7921 @ 04/20/24 13:18:10.132
  Apr 20 13:18:10.137: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=statefulset-7921 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 20 13:18:10.232: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 20 13:18:10.232: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 20 13:18:10.232: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 20 13:18:10.232: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=statefulset-7921 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 20 13:18:10.328: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Apr 20 13:18:10.328: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 20 13:18:10.328: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 20 13:18:10.328: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=statefulset-7921 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 20 13:18:10.417: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Apr 20 13:18:10.417: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 20 13:18:10.417: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 20 13:18:10.421: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 13:18:10.421: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 13:18:10.421: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 04/20/24 13:18:10.421
  Apr 20 13:18:10.425: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=statefulset-7921 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 20 13:18:10.515: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 20 13:18:10.515: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 20 13:18:10.515: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 20 13:18:10.515: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=statefulset-7921 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 20 13:18:10.615: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 20 13:18:10.615: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 20 13:18:10.615: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 20 13:18:10.615: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=statefulset-7921 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0420 13:18:10.651138      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:18:10.707: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 20 13:18:10.707: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 20 13:18:10.707: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 20 13:18:10.707: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Apr 20 13:18:10.712: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0420 13:18:11.651613      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:18:12.651715      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:18:13.651815      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:18:14.651891      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:18:15.651996      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:18:16.652638      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:18:17.652734      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:18:18.652935      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:18:19.653127      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:18:20.653309      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:18:20.716: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Apr 20 13:18:20.716: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Apr 20 13:18:20.716: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Apr 20 13:18:20.730: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
  Apr 20 13:18:20.730: INFO: ss-0  ip-172-31-41-198  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 13:17:40 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 13:17:39 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 13:18:11 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 13:18:11 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 13:17:39 +0000 UTC  }]
  Apr 20 13:18:20.730: INFO: ss-1  ip-172-31-27-26   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 13:18:01 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 13:18:00 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 13:18:11 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 13:18:11 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 13:18:00 +0000 UTC  }]
  Apr 20 13:18:20.730: INFO: ss-2  ip-172-31-81-0    Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 13:18:01 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 13:18:00 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 13:18:11 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 13:18:11 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 13:18:00 +0000 UTC  }]
  Apr 20 13:18:20.730: INFO: 
  Apr 20 13:18:20.730: INFO: StatefulSet ss has not reached scale 0, at 3
  E0420 13:18:21.653669      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:18:21.734: INFO: POD   NODE              PHASE      GRACE  CONDITIONS
  Apr 20 13:18:21.734: INFO: ss-0  ip-172-31-41-198  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 13:18:20 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 13:17:39 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 13:18:11 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 13:18:11 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 13:17:39 +0000 UTC  }]
  Apr 20 13:18:21.734: INFO: 
  Apr 20 13:18:21.734: INFO: StatefulSet ss has not reached scale 0, at 1
  E0420 13:18:22.653962      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:18:22.738: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.991772559s
  E0420 13:18:23.654214      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:18:23.743: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.988173225s
  E0420 13:18:24.654604      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:18:24.747: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.983000247s
  E0420 13:18:25.654895      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:18:25.752: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.978818676s
  E0420 13:18:26.655700      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:18:26.756: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.974059774s
  E0420 13:18:27.656737      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:18:27.762: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.968928163s
  E0420 13:18:28.657197      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:18:28.766: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.964539017s
  E0420 13:18:29.658267      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:18:29.770: INFO: Verifying statefulset ss doesn't scale past 0 for another 960.455894ms
  E0420 13:18:30.658368      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-7921 @ 04/20/24 13:18:30.771
  Apr 20 13:18:30.776: INFO: Scaling statefulset ss to 0
  Apr 20 13:18:30.787: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 20 13:18:30.790: INFO: Deleting all statefulset in ns statefulset-7921
  Apr 20 13:18:30.793: INFO: Scaling statefulset ss to 0
  Apr 20 13:18:30.801: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 20 13:18:30.804: INFO: Deleting statefulset ss
  Apr 20 13:18:30.814: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7921" for this suite. @ 04/20/24 13:18:30.817
• [50.892 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 04/20/24 13:18:30.823
  Apr 20 13:18:30.823: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 13:18:30.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:18:30.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:18:30.839
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 04/20/24 13:18:30.841
  E0420 13:18:31.659001      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:18:32.659141      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:18:33.659510      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:18:34.659589      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 13:18:34.863
  Apr 20 13:18:34.866: INFO: Trying to get logs from node ip-172-31-41-198 pod pod-f7f04ffc-54ee-488e-9310-13ee277ad348 container test-container: <nil>
  STEP: delete the pod @ 04/20/24 13:18:34.878
  Apr 20 13:18:34.894: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3157" for this suite. @ 04/20/24 13:18:34.898
• [4.082 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 04/20/24 13:18:34.905
  Apr 20 13:18:34.905: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename disruption @ 04/20/24 13:18:34.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:18:34.923
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:18:34.926
  STEP: Creating a pdb that targets all three pods in a test replica set @ 04/20/24 13:18:34.928
  STEP: Waiting for the pdb to be processed @ 04/20/24 13:18:34.934
  E0420 13:18:35.659690      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:18:36.660615      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 04/20/24 13:18:36.946
  STEP: Waiting for all pods to be running @ 04/20/24 13:18:36.946
  Apr 20 13:18:36.949: INFO: pods: 0 < 3
  E0420 13:18:37.661219      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:18:38.661399      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 04/20/24 13:18:38.951
  STEP: Updating the pdb to allow a pod to be evicted @ 04/20/24 13:18:38.96
  STEP: Waiting for the pdb to be processed @ 04/20/24 13:18:38.968
  E0420 13:18:39.661584      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:18:40.661822      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 04/20/24 13:18:40.971
  STEP: Waiting for all pods to be running @ 04/20/24 13:18:40.971
  STEP: Waiting for the pdb to observed all healthy pods @ 04/20/24 13:18:40.974
  STEP: Patching the pdb to disallow a pod to be evicted @ 04/20/24 13:18:40.999
  STEP: Waiting for the pdb to be processed @ 04/20/24 13:18:41.013
  E0420 13:18:41.661864      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:18:42.661948      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 04/20/24 13:18:43.018
  STEP: locating a running pod @ 04/20/24 13:18:43.022
  STEP: Deleting the pdb to allow a pod to be evicted @ 04/20/24 13:18:43.03
  STEP: Waiting for the pdb to be deleted @ 04/20/24 13:18:43.036
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 04/20/24 13:18:43.038
  STEP: Waiting for all pods to be running @ 04/20/24 13:18:43.038
  Apr 20 13:18:43.056: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4148" for this suite. @ 04/20/24 13:18:43.06
• [8.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 04/20/24 13:18:43.066
  Apr 20 13:18:43.066: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 13:18:43.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:18:43.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:18:43.093
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 13:18:43.096
  E0420 13:18:43.662049      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:18:44.662173      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:18:45.662283      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:18:46.662830      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 13:18:47.12
  Apr 20 13:18:47.123: INFO: Trying to get logs from node ip-172-31-41-198 pod downwardapi-volume-8c65306e-558c-4d34-b92c-f36a65f5bfb2 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 13:18:47.129
  Apr 20 13:18:47.145: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5272" for this suite. @ 04/20/24 13:18:47.148
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 04/20/24 13:18:47.154
  Apr 20 13:18:47.154: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename webhook @ 04/20/24 13:18:47.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:18:47.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:18:47.172
  STEP: Setting up server cert @ 04/20/24 13:18:47.202
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 13:18:47.596
  STEP: Deploying the webhook pod @ 04/20/24 13:18:47.604
  STEP: Wait for the deployment to be ready @ 04/20/24 13:18:47.617
  Apr 20 13:18:47.624: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0420 13:18:47.663331      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:18:48.663512      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 13:18:49.634
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 13:18:49.643
  E0420 13:18:49.663701      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:18:50.643: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Apr 20 13:18:50.650: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  E0420 13:18:50.663703      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 04/20/24 13:18:51.16
  STEP: Creating a custom resource that should be denied by the webhook @ 04/20/24 13:18:51.174
  E0420 13:18:51.664387      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:18:52.664491      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 04/20/24 13:18:53.191
  STEP: Updating the custom resource with disallowed data should be denied @ 04/20/24 13:18:53.198
  STEP: Deleting the custom resource should be denied @ 04/20/24 13:18:53.206
  STEP: Remove the offending key and value from the custom resource data @ 04/20/24 13:18:53.212
  STEP: Deleting the updated custom resource should be successful @ 04/20/24 13:18:53.221
  E0420 13:18:53.664538      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:18:53.778: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9545" for this suite. @ 04/20/24 13:18:53.781
  STEP: Destroying namespace "webhook-markers-1351" for this suite. @ 04/20/24 13:18:53.787
• [6.637 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 04/20/24 13:18:53.792
  Apr 20 13:18:53.792: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 13:18:53.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:18:53.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:18:53.813
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 04/20/24 13:18:53.816
  E0420 13:18:54.665591      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:18:55.666618      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:18:56.667424      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:18:57.667515      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 13:18:57.836
  Apr 20 13:18:57.840: INFO: Trying to get logs from node ip-172-31-41-198 pod pod-89a4aa1c-10ca-4d34-8255-4439a3a9d88c container test-container: <nil>
  STEP: delete the pod @ 04/20/24 13:18:57.846
  Apr 20 13:18:57.865: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4942" for this suite. @ 04/20/24 13:18:57.869
• [4.083 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 04/20/24 13:18:57.875
  Apr 20 13:18:57.875: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 13:18:57.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:18:57.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:18:57.905
  STEP: Creating the pod @ 04/20/24 13:18:57.909
  E0420 13:18:58.668428      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:18:59.668681      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:19:00.454: INFO: Successfully updated pod "annotationupdatead28c256-a3ea-4225-b5b5-47970d52c773"
  E0420 13:19:00.668914      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:01.669524      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:02.669713      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:03.669981      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:19:04.478: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1058" for this suite. @ 04/20/24 13:19:04.482
• [6.614 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 04/20/24 13:19:04.49
  Apr 20 13:19:04.490: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename webhook @ 04/20/24 13:19:04.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:19:04.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:19:04.509
  STEP: Setting up server cert @ 04/20/24 13:19:04.529
  E0420 13:19:04.670511      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 13:19:04.761
  STEP: Deploying the webhook pod @ 04/20/24 13:19:04.768
  STEP: Wait for the deployment to be ready @ 04/20/24 13:19:04.779
  Apr 20 13:19:04.787: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0420 13:19:05.670630      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:06.670709      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 13:19:06.798
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 13:19:06.807
  E0420 13:19:07.670776      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:19:07.808: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 04/20/24 13:19:07.815
  STEP: create a pod that should be updated by the webhook @ 04/20/24 13:19:07.828
  Apr 20 13:19:07.883: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2054" for this suite. @ 04/20/24 13:19:07.887
  STEP: Destroying namespace "webhook-markers-5813" for this suite. @ 04/20/24 13:19:07.894
• [3.409 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 04/20/24 13:19:07.899
  Apr 20 13:19:07.899: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename projected @ 04/20/24 13:19:07.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:19:07.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:19:07.923
  STEP: Creating projection with secret that has name projected-secret-test-2de327b8-c6a4-4661-97c0-f393d465c4f1 @ 04/20/24 13:19:07.927
  STEP: Creating a pod to test consume secrets @ 04/20/24 13:19:07.931
  E0420 13:19:08.671016      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:09.671152      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:10.671516      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:11.672079      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 13:19:11.954
  Apr 20 13:19:11.958: INFO: Trying to get logs from node ip-172-31-81-0 pod pod-projected-secrets-d62f5f35-54c7-4a85-bb83-5b2e8f561bba container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 13:19:11.973
  Apr 20 13:19:11.991: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6822" for this suite. @ 04/20/24 13:19:11.994
• [4.100 seconds]
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 04/20/24 13:19:12
  Apr 20 13:19:12.000: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename sched-preemption @ 04/20/24 13:19:12
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:19:12.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:19:12.019
  Apr 20 13:19:12.034: INFO: Waiting up to 1m0s for all nodes to be ready
  E0420 13:19:12.672194      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:13.672275      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:14.672581      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:15.672683      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:16.672921      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:17.673107      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:18.673164      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:19.673447      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:20.673610      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:21.673722      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:22.673858      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:23.674272      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:24.674372      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:25.674599      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:26.674665      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:27.674786      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:28.675842      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:29.675925      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:30.676022      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:31.676886      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:32.677043      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:33.677271      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:34.677369      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:35.677693      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:36.678497      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:37.678599      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:38.678692      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:39.679373      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:40.679510      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:41.679602      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:42.680515      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:43.681555      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:44.682439      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:45.682631      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:46.683133      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:47.683845      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:48.684615      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:49.684759      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:50.685471      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:51.685643      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:52.686554      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:53.687309      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:54.687473      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:55.687617      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:56.688492      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:57.688581      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:58.688712      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:19:59.688894      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:00.689500      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:01.689603      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:02.689704      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:03.689907      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:04.690801      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:05.691010      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:06.691895      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:07.692617      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:08.693561      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:09.693752      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:10.693839      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:11.693875      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:20:12.039: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 04/20/24 13:20:12.043
  Apr 20 13:20:12.043: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename sched-preemption-path @ 04/20/24 13:20:12.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:20:12.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:20:12.064
  STEP: Finding an available node @ 04/20/24 13:20:12.066
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/20/24 13:20:12.066
  E0420 13:20:12.694187      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:13.694422      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/20/24 13:20:14.085
  Apr 20 13:20:14.098: INFO: found a healthy node: ip-172-31-41-198
  E0420 13:20:14.694602      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:15.694695      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:16.695173      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:17.695511      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:18.696556      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:19.696754      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:20:20.151: INFO: pods created so far: [1 1 1]
  Apr 20 13:20:20.151: INFO: length of pods created so far: 3
  E0420 13:20:20.697336      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:21.697900      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:20:22.161: INFO: pods created so far: [2 2 1]
  E0420 13:20:22.697984      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:23.698972      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:24.699093      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:25.699201      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:26.699813      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:27.699896      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:28.700547      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:20:29.222: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-5049" for this suite. @ 04/20/24 13:20:29.225
  Apr 20 13:20:29.230: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3262" for this suite. @ 04/20/24 13:20:29.233
• [77.240 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 04/20/24 13:20:29.24
  Apr 20 13:20:29.240: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename replication-controller @ 04/20/24 13:20:29.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:20:29.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:20:29.259
  STEP: Creating replication controller my-hostname-basic-c6b12684-4fb3-4bed-bcae-bbf7dfbef040 @ 04/20/24 13:20:29.261
  Apr 20 13:20:29.269: INFO: Pod name my-hostname-basic-c6b12684-4fb3-4bed-bcae-bbf7dfbef040: Found 0 pods out of 1
  E0420 13:20:29.700740      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:30.700796      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:31.700839      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:32.701016      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:33.701210      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:20:34.272: INFO: Pod name my-hostname-basic-c6b12684-4fb3-4bed-bcae-bbf7dfbef040: Found 1 pods out of 1
  Apr 20 13:20:34.272: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-c6b12684-4fb3-4bed-bcae-bbf7dfbef040" are running
  Apr 20 13:20:34.275: INFO: Pod "my-hostname-basic-c6b12684-4fb3-4bed-bcae-bbf7dfbef040-zpfkw" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-20 13:20:30 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-20 13:20:29 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-20 13:20:30 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-20 13:20:30 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-20 13:20:29 +0000 UTC Reason: Message:}])
  Apr 20 13:20:34.275: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 04/20/24 13:20:34.275
  Apr 20 13:20:34.287: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1654" for this suite. @ 04/20/24 13:20:34.292
• [5.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 04/20/24 13:20:34.3
  Apr 20 13:20:34.300: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename container-probe @ 04/20/24 13:20:34.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:20:34.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:20:34.32
  STEP: Creating pod test-grpc-4f91a4f2-11fb-42b3-8f24-33727af2fb9b in namespace container-probe-8878 @ 04/20/24 13:20:34.323
  E0420 13:20:34.702125      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:35.702234      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/20/24 13:20:36.342
  Apr 20 13:20:36.346: INFO: Initial restart count of pod test-grpc-4f91a4f2-11fb-42b3-8f24-33727af2fb9b is 0
  Apr 20 13:20:36.349: INFO: Get pod test-grpc-4f91a4f2-11fb-42b3-8f24-33727af2fb9b in namespace container-probe-8878
  E0420 13:20:36.703071      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:37.703334      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:20:38.354: INFO: Get pod test-grpc-4f91a4f2-11fb-42b3-8f24-33727af2fb9b in namespace container-probe-8878
  E0420 13:20:38.703815      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:39.704584      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:20:40.359: INFO: Get pod test-grpc-4f91a4f2-11fb-42b3-8f24-33727af2fb9b in namespace container-probe-8878
  E0420 13:20:40.705186      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:41.705409      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:20:42.363: INFO: Get pod test-grpc-4f91a4f2-11fb-42b3-8f24-33727af2fb9b in namespace container-probe-8878
  E0420 13:20:42.706211      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:43.706317      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:20:44.368: INFO: Get pod test-grpc-4f91a4f2-11fb-42b3-8f24-33727af2fb9b in namespace container-probe-8878
  E0420 13:20:44.706680      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:45.706963      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:20:46.373: INFO: Get pod test-grpc-4f91a4f2-11fb-42b3-8f24-33727af2fb9b in namespace container-probe-8878
  E0420 13:20:46.707115      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:47.707575      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:20:48.378: INFO: Get pod test-grpc-4f91a4f2-11fb-42b3-8f24-33727af2fb9b in namespace container-probe-8878
  E0420 13:20:48.708110      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:49.708677      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:20:50.383: INFO: Get pod test-grpc-4f91a4f2-11fb-42b3-8f24-33727af2fb9b in namespace container-probe-8878
  E0420 13:20:50.709161      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:51.709622      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:20:52.387: INFO: Get pod test-grpc-4f91a4f2-11fb-42b3-8f24-33727af2fb9b in namespace container-probe-8878
  E0420 13:20:52.709887      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:53.709982      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:20:54.392: INFO: Get pod test-grpc-4f91a4f2-11fb-42b3-8f24-33727af2fb9b in namespace container-probe-8878
  E0420 13:20:54.710029      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:55.710247      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:20:56.397: INFO: Get pod test-grpc-4f91a4f2-11fb-42b3-8f24-33727af2fb9b in namespace container-probe-8878
  E0420 13:20:56.710890      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:57.710997      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:20:58.402: INFO: Get pod test-grpc-4f91a4f2-11fb-42b3-8f24-33727af2fb9b in namespace container-probe-8878
  E0420 13:20:58.711370      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:20:59.711520      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:21:00.406: INFO: Get pod test-grpc-4f91a4f2-11fb-42b3-8f24-33727af2fb9b in namespace container-probe-8878
  E0420 13:21:00.711579      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:21:01.711684      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:21:02.411: INFO: Get pod test-grpc-4f91a4f2-11fb-42b3-8f24-33727af2fb9b in namespace container-probe-8878
  E0420 13:21:02.712578      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:21:03.712682      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:21:04.415: INFO: Get pod test-grpc-4f91a4f2-11fb-42b3-8f24-33727af2fb9b in namespace container-probe-8878
  E0420 13:21:04.713757      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:21:05.713857      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:21:06.419: INFO: Get pod test-grpc-4f91a4f2-11fb-42b3-8f24-33727af2fb9b in namespace container-probe-8878
  E0420 13:21:06.714909      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:21:07.715008      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:21:08.424: INFO: Get pod test-grpc-4f91a4f2-11fb-42b3-8f24-33727af2fb9b in namespace container-probe-8878
  E0420 13:21:08.715116      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:21:09.715209      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:21:10.429: INFO: Get pod test-grpc-4f91a4f2-11fb-42b3-8f24-33727af2fb9b in namespace container-probe-8878
  E0420 13:21:10.715620      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:21:11.715769      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:21:12.433: INFO: Get pod test-grpc-4f91a4f2-11fb-42b3-8f24-33727af2fb9b in namespace container-probe-8878
  E0420 13:21:12.716579      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:21:13.716691      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:21:14.438: INFO: Get pod test-grpc-4f91a4f2-11fb-42b3-8f24-33727af2fb9b in namespace container-probe-8878
  E0420 13:21:14.717524      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:21:15.717735      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:21:16.442: INFO: Get pod test-grpc-4f91a4f2-11fb-42b3-8f24-33727af2fb9b in namespace container-probe-8878
  E0420 13:21:16.718729      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:21:17.718891      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:21:18.446: INFO: Get pod test-grpc-4f91a4f2-11fb-42b3-8f24-33727af2fb9b in namespace container-probe-8878
  E0420 13:21:18.719069      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:21:19.719180      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:21:20.450: INFO: Get pod test-grpc-4f91a4f2-11fb-42b3-8f24-33727af2fb9b in namespace container-probe-8878
  E0420 13:21:20.719788      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:21:21.720643      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:21:22.455: INFO: Get pod test-grpc-4f91a4f2-11fb-42b3-8f24-33727af2fb9b in namespace container-probe-8878
  E0420 13:21:22.721596      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:21:23.721795      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:21:24.460: INFO: Get pod test-grpc-4f91a4f2-11fb-42b3-8f24-33727af2fb9b in namespace container-probe-8878
  E0420 13:21:24.722448      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:21:25.722654      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:21:26.464: INFO: Get pod test-grpc-4f91a4f2-11fb-42b3-8f24-33727af2fb9b in namespace container-probe-8878
  E0420 13:21:26.722804      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:21:27.722908      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:21:28.469: INFO: Get pod test-grpc-4f91a4f2-11fb-42b3-8f24-33727af2fb9b in namespace container-probe-8878
  E0420 13:21:28.723680      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:21:29.724593      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:21:30.474: INFO: Get pod test-grpc-4f91a4f2-11fb-42b3-8f24-33727af2fb9b in namespace container-probe-8878
  E0420 13:21:30.725375      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:21:31.725760      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:21:32.478: INFO: Get pod test-grpc-4f91a4f2-11fb-42b3-8f24-33727af2fb9b in namespace container-probe-8878
  E0420 13:21:32.726786      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:21:33.727003      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:21:34.485: INFO: Get pod test-grpc-4f91a4f2-11fb-42b3-8f24-33727af2fb9b in namespace container-probe-8878
  E0420 13:21:34.727178      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:21:35.728176      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:21:36.490: INFO: Get pod test-grpc-4f91a4f2-11fb-42b3-8f24-33727af2fb9b in namespace container-probe-8878
  E0420 13:21:36.728258      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:21:37.728543      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:21:38.494: INFO: Get pod test-grpc-4f91a4f2-11fb-42b3-8f24-33727af2fb9b in namespace container-probe-8878
  E0420 13:21:38.729534      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:21:39.730318      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:21:40.498: INFO: Get pod test-grpc-4f91a4f2-11fb-42b3-8f24-33727af2fb9b in namespace container-probe-8878
  E0420 13:21:40.730571      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:21:41.730671      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:21:42.502: INFO: Get pod test-grpc-4f91a4f2-11fb-42b3-8f24-33727af2fb9b in namespace container-probe-8878
  Apr 20 13:21:42.502: INFO: Restart count of pod container-probe-8878/test-grpc-4f91a4f2-11fb-42b3-8f24-33727af2fb9b is now 1 (1m6.15649063s elapsed)
  STEP: deleting the pod @ 04/20/24 13:21:42.502
  Apr 20 13:21:42.516: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8878" for this suite. @ 04/20/24 13:21:42.52
• [68.225 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 04/20/24 13:21:42.526
  Apr 20 13:21:42.526: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename projected @ 04/20/24 13:21:42.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:21:42.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:21:42.545
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 13:21:42.547
  E0420 13:21:42.731482      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:21:43.731515      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 13:21:44.564
  Apr 20 13:21:44.567: INFO: Trying to get logs from node ip-172-31-41-198 pod downwardapi-volume-dec8698e-61f9-429f-9a65-b1ff4a58d0e3 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 13:21:44.578
  Apr 20 13:21:44.594: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1175" for this suite. @ 04/20/24 13:21:44.597
• [2.080 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:332
  STEP: Creating a kubernetes client @ 04/20/24 13:21:44.605
  Apr 20 13:21:44.605: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename statefulset @ 04/20/24 13:21:44.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:21:44.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:21:44.624
  STEP: Creating service test in namespace statefulset-748 @ 04/20/24 13:21:44.627
  STEP: Creating a new StatefulSet @ 04/20/24 13:21:44.632
  Apr 20 13:21:44.642: INFO: Found 0 stateful pods, waiting for 3
  E0420 13:21:44.732485      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:21:45.732684      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:21:46.732772      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:21:47.733047      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:21:48.733137      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:21:49.733344      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:21:50.733450      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:21:51.733540      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:21:52.733819      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:21:53.734007      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:21:54.643: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 13:21:54.643: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 13:21:54.643: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 04/20/24 13:21:54.653
  Apr 20 13:21:54.671: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 04/20/24 13:21:54.671
  E0420 13:21:54.734454      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:21:55.734616      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:21:56.734844      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:21:57.734945      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:21:58.735660      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:21:59.735731      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:00.736166      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:01.736249      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:02.736354      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:03.736465      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 04/20/24 13:22:04.68
  STEP: Performing a canary update @ 04/20/24 13:22:04.68
  Apr 20 13:22:04.699: INFO: Updating stateful set ss2
  Apr 20 13:22:04.709: INFO: Waiting for Pod statefulset-748/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0420 13:22:04.736657      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:05.736851      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:06.737438      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:07.738127      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:08.738222      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:09.738313      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:10.738491      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:11.739565      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:12.739659      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:13.740546      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 04/20/24 13:22:14.707
  E0420 13:22:14.741255      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:22:14.742: INFO: Found 1 stateful pods, waiting for 3
  E0420 13:22:15.741432      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:16.741749      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:17.741991      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:18.742225      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:19.742443      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:20.742685      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:21.742883      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:22.742963      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:23.743058      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:24.743823      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:22:24.744: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 13:22:24.744: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 13:22:24.744: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 04/20/24 13:22:24.75
  Apr 20 13:22:24.770: INFO: Updating stateful set ss2
  Apr 20 13:22:24.775: INFO: Waiting for Pod statefulset-748/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0420 13:22:25.744687      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:26.744786      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:27.744957      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:28.745007      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:29.745052      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:30.745259      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:31.746182      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:32.746280      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:33.747000      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:34.747054      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:22:34.797: INFO: Updating stateful set ss2
  Apr 20 13:22:34.806: INFO: Waiting for StatefulSet statefulset-748/ss2 to complete update
  Apr 20 13:22:34.806: INFO: Waiting for Pod statefulset-748/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0420 13:22:35.747762      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:36.747893      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:37.747997      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:38.748108      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:39.748553      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:40.748719      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:41.748814      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:42.748925      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:43.749134      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:44.749283      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:22:44.806: INFO: Deleting all statefulset in ns statefulset-748
  Apr 20 13:22:44.809: INFO: Scaling statefulset ss2 to 0
  E0420 13:22:45.749575      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:46.749700      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:47.749801      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:48.749890      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:49.750241      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:50.751116      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:51.752045      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:52.752555      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:53.752676      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:54.753322      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:22:54.821: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 20 13:22:54.824: INFO: Deleting statefulset ss2
  Apr 20 13:22:54.835: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-748" for this suite. @ 04/20/24 13:22:54.838
• [70.239 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 04/20/24 13:22:54.845
  Apr 20 13:22:54.845: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 13:22:54.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:22:54.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:22:54.863
  STEP: Creating a ResourceQuota with terminating scope @ 04/20/24 13:22:54.866
  STEP: Ensuring ResourceQuota status is calculated @ 04/20/24 13:22:54.872
  E0420 13:22:55.753441      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:56.753595      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 04/20/24 13:22:56.876
  STEP: Ensuring ResourceQuota status is calculated @ 04/20/24 13:22:56.881
  E0420 13:22:57.753777      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:22:58.753996      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 04/20/24 13:22:58.886
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 04/20/24 13:22:58.9
  E0420 13:22:59.754182      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:23:00.754425      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 04/20/24 13:23:00.905
  E0420 13:23:01.754994      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:23:02.755243      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/20/24 13:23:02.909
  STEP: Ensuring resource quota status released the pod usage @ 04/20/24 13:23:02.919
  E0420 13:23:03.755589      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:23:04.756551      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 04/20/24 13:23:04.924
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 04/20/24 13:23:04.94
  E0420 13:23:05.756646      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:23:06.756908      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 04/20/24 13:23:06.945
  E0420 13:23:07.756981      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:23:08.757117      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/20/24 13:23:08.949
  STEP: Ensuring resource quota status released the pod usage @ 04/20/24 13:23:08.966
  E0420 13:23:09.757623      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:23:10.757737      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:23:10.971: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4575" for this suite. @ 04/20/24 13:23:10.974
• [16.135 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:408
  STEP: Creating a kubernetes client @ 04/20/24 13:23:10.98
  Apr 20 13:23:10.980: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename job @ 04/20/24 13:23:10.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:23:10.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:23:10.999
  STEP: Creating Indexed job @ 04/20/24 13:23:11.002
  STEP: Ensuring job reaches completions @ 04/20/24 13:23:11.009
  E0420 13:23:11.757966      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:23:12.758095      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:23:13.758171      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:23:14.758321      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:23:15.758336      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:23:16.758434      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:23:17.758551      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:23:18.758652      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 04/20/24 13:23:19.014
  Apr 20 13:23:19.017: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-363" for this suite. @ 04/20/24 13:23:19.021
• [8.047 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 04/20/24 13:23:19.028
  Apr 20 13:23:19.028: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 13:23:19.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:23:19.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:23:19.047
  STEP: Counting existing ResourceQuota @ 04/20/24 13:23:19.051
  E0420 13:23:19.758749      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:23:20.758867      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:23:21.758908      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:23:22.759468      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:23:23.759742      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/20/24 13:23:24.055
  STEP: Ensuring resource quota status is calculated @ 04/20/24 13:23:24.06
  E0420 13:23:24.760558      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:23:25.760658      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 04/20/24 13:23:26.065
  STEP: Ensuring resource quota status captures replicaset creation @ 04/20/24 13:23:26.077
  E0420 13:23:26.761645      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:23:27.761900      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 04/20/24 13:23:28.081
  STEP: Ensuring resource quota status released usage @ 04/20/24 13:23:28.087
  E0420 13:23:28.762596      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:23:29.762812      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:23:30.093: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1608" for this suite. @ 04/20/24 13:23:30.096
• [11.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 04/20/24 13:23:30.103
  Apr 20 13:23:30.103: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename daemonsets @ 04/20/24 13:23:30.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:23:30.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:23:30.122
  Apr 20 13:23:30.140: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/20/24 13:23:30.145
  Apr 20 13:23:30.149: INFO: DaemonSet pods can't tolerate node ip-172-31-45-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:23:30.149: INFO: DaemonSet pods can't tolerate node ip-172-31-9-171 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:23:30.152: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 13:23:30.152: INFO: Node ip-172-31-27-26 is running 0 daemon pod, expected 1
  E0420 13:23:30.762942      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:23:31.151: INFO: DaemonSet pods can't tolerate node ip-172-31-45-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:23:31.151: INFO: DaemonSet pods can't tolerate node ip-172-31-9-171 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:23:31.154: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 20 13:23:31.154: INFO: Node ip-172-31-41-198 is running 0 daemon pod, expected 1
  E0420 13:23:31.763637      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:23:32.150: INFO: DaemonSet pods can't tolerate node ip-172-31-45-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:23:32.150: INFO: DaemonSet pods can't tolerate node ip-172-31-9-171 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:23:32.153: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 20 13:23:32.153: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 04/20/24 13:23:32.166
  STEP: Check that daemon pods images are updated. @ 04/20/24 13:23:32.174
  Apr 20 13:23:32.178: INFO: Wrong image for pod: daemon-set-8kgwb. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 20 13:23:32.178: INFO: Wrong image for pod: daemon-set-d87ft. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 20 13:23:32.178: INFO: Wrong image for pod: daemon-set-wmwhm. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 20 13:23:32.181: INFO: DaemonSet pods can't tolerate node ip-172-31-45-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:23:32.181: INFO: DaemonSet pods can't tolerate node ip-172-31-9-171 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0420 13:23:32.764575      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:23:33.179: INFO: Pod daemon-set-66g7t is not available
  Apr 20 13:23:33.179: INFO: Wrong image for pod: daemon-set-8kgwb. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 20 13:23:33.179: INFO: Wrong image for pod: daemon-set-wmwhm. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 20 13:23:33.182: INFO: DaemonSet pods can't tolerate node ip-172-31-45-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:23:33.182: INFO: DaemonSet pods can't tolerate node ip-172-31-9-171 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0420 13:23:33.764662      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:23:34.179: INFO: Pod daemon-set-m5xhz is not available
  Apr 20 13:23:34.179: INFO: Wrong image for pod: daemon-set-wmwhm. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 20 13:23:34.182: INFO: DaemonSet pods can't tolerate node ip-172-31-45-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:23:34.182: INFO: DaemonSet pods can't tolerate node ip-172-31-9-171 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0420 13:23:34.765026      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:23:35.182: INFO: DaemonSet pods can't tolerate node ip-172-31-45-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:23:35.182: INFO: DaemonSet pods can't tolerate node ip-172-31-9-171 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0420 13:23:35.765636      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:23:36.182: INFO: DaemonSet pods can't tolerate node ip-172-31-45-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:23:36.182: INFO: DaemonSet pods can't tolerate node ip-172-31-9-171 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 04/20/24 13:23:36.182
  Apr 20 13:23:36.185: INFO: DaemonSet pods can't tolerate node ip-172-31-45-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:23:36.185: INFO: DaemonSet pods can't tolerate node ip-172-31-9-171 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:23:36.188: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 20 13:23:36.188: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/20/24 13:23:36.203
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4117, will wait for the garbage collector to delete the pods @ 04/20/24 13:23:36.203
  Apr 20 13:23:36.263: INFO: Deleting DaemonSet.extensions daemon-set took: 7.32761ms
  Apr 20 13:23:36.363: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.489785ms
  E0420 13:23:36.765870      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:23:37.766121      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:23:37.869: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 13:23:37.870: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 20 13:23:37.873: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"30991"},"items":null}

  Apr 20 13:23:37.876: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"30991"},"items":null}

  Apr 20 13:23:37.888: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4117" for this suite. @ 04/20/24 13:23:37.892
• [7.797 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 04/20/24 13:23:37.9
  Apr 20 13:23:37.900: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename namespaces @ 04/20/24 13:23:37.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:23:37.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:23:37.921
  STEP: creating a Namespace @ 04/20/24 13:23:37.924
  STEP: patching the Namespace @ 04/20/24 13:23:37.939
  STEP: get the Namespace and ensuring it has the label @ 04/20/24 13:23:37.946
  Apr 20 13:23:37.948: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5570" for this suite. @ 04/20/24 13:23:37.951
  STEP: Destroying namespace "nspatchtest-5172acbc-9493-434b-80f4-2c7c9ba33598-5538" for this suite. @ 04/20/24 13:23:37.957
• [0.062 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 04/20/24 13:23:37.963
  Apr 20 13:23:37.963: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename watch @ 04/20/24 13:23:37.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:23:37.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:23:37.981
  STEP: creating a watch on configmaps with label A @ 04/20/24 13:23:37.983
  STEP: creating a watch on configmaps with label B @ 04/20/24 13:23:37.984
  STEP: creating a watch on configmaps with label A or B @ 04/20/24 13:23:37.985
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 04/20/24 13:23:37.986
  Apr 20 13:23:37.990: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2939  4f1120ad-9f74-4e42-b491-293ceee7451a 31012 0 2024-04-20 13:23:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-20 13:23:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 13:23:37.990: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2939  4f1120ad-9f74-4e42-b491-293ceee7451a 31012 0 2024-04-20 13:23:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-20 13:23:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 04/20/24 13:23:37.99
  Apr 20 13:23:37.997: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2939  4f1120ad-9f74-4e42-b491-293ceee7451a 31013 0 2024-04-20 13:23:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-20 13:23:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 13:23:37.997: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2939  4f1120ad-9f74-4e42-b491-293ceee7451a 31013 0 2024-04-20 13:23:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-20 13:23:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 04/20/24 13:23:37.997
  Apr 20 13:23:38.004: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2939  4f1120ad-9f74-4e42-b491-293ceee7451a 31014 0 2024-04-20 13:23:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-20 13:23:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 13:23:38.004: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2939  4f1120ad-9f74-4e42-b491-293ceee7451a 31014 0 2024-04-20 13:23:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-20 13:23:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 04/20/24 13:23:38.004
  Apr 20 13:23:38.009: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2939  4f1120ad-9f74-4e42-b491-293ceee7451a 31015 0 2024-04-20 13:23:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-20 13:23:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 13:23:38.009: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2939  4f1120ad-9f74-4e42-b491-293ceee7451a 31015 0 2024-04-20 13:23:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-20 13:23:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 04/20/24 13:23:38.009
  Apr 20 13:23:38.013: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2939  f8a39214-dfb5-495c-ba57-2cc81c1f5f70 31016 0 2024-04-20 13:23:38 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-04-20 13:23:38 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 13:23:38.013: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2939  f8a39214-dfb5-495c-ba57-2cc81c1f5f70 31016 0 2024-04-20 13:23:38 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-04-20 13:23:38 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0420 13:23:38.766238      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:23:39.766321      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:23:40.766405      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:23:41.766532      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:23:42.766617      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:23:43.766908      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:23:44.767025      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:23:45.767528      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:23:46.767616      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:23:47.768550      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 04/20/24 13:23:48.014
  Apr 20 13:23:48.022: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2939  f8a39214-dfb5-495c-ba57-2cc81c1f5f70 31093 0 2024-04-20 13:23:38 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-04-20 13:23:38 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 13:23:48.022: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2939  f8a39214-dfb5-495c-ba57-2cc81c1f5f70 31093 0 2024-04-20 13:23:38 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-04-20 13:23:38 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0420 13:23:48.768794      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:23:49.768988      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:23:50.769186      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:23:51.769532      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:23:52.769635      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:23:53.769793      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:23:54.770092      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:23:55.770295      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:23:56.770683      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:23:57.770763      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:23:58.023: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2939" for this suite. @ 04/20/24 13:23:58.028
• [20.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1373
  STEP: Creating a kubernetes client @ 04/20/24 13:23:58.035
  Apr 20 13:23:58.035: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 13:23:58.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:23:58.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:23:58.054
  STEP: validating cluster-info @ 04/20/24 13:23:58.057
  Apr 20 13:23:58.057: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-4032 cluster-info'
  Apr 20 13:23:58.099: INFO: stderr: ""
  Apr 20 13:23:58.099: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Apr 20 13:23:58.099: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4032" for this suite. @ 04/20/24 13:23:58.102
• [0.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 04/20/24 13:23:58.11
  Apr 20 13:23:58.110: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename webhook @ 04/20/24 13:23:58.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:23:58.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:23:58.128
  STEP: Setting up server cert @ 04/20/24 13:23:58.25
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 13:23:58.324
  STEP: Deploying the webhook pod @ 04/20/24 13:23:58.334
  STEP: Wait for the deployment to be ready @ 04/20/24 13:23:58.345
  Apr 20 13:23:58.353: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0420 13:23:58.771504      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:23:59.772571      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 13:24:00.363
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 13:24:00.372
  E0420 13:24:00.773374      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:24:01.373: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Apr 20 13:24:01.381: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  E0420 13:24:01.773927      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4937-crds.webhook.example.com via the AdmissionRegistration API @ 04/20/24 13:24:01.891
  STEP: Creating a custom resource that should be mutated by the webhook @ 04/20/24 13:24:01.913
  E0420 13:24:02.774628      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:24:03.774972      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:24:04.492: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4402" for this suite. @ 04/20/24 13:24:04.496
  STEP: Destroying namespace "webhook-markers-1143" for this suite. @ 04/20/24 13:24:04.505
• [6.401 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 04/20/24 13:24:04.511
  Apr 20 13:24:04.511: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 13:24:04.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:24:04.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:24:04.53
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 04/20/24 13:24:04.532
  E0420 13:24:04.775192      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:24:05.775411      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:24:06.776033      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:24:07.776528      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 13:24:08.554
  Apr 20 13:24:08.558: INFO: Trying to get logs from node ip-172-31-41-198 pod pod-9e638246-4c79-4afa-af8d-9d033cc48f1d container test-container: <nil>
  STEP: delete the pod @ 04/20/24 13:24:08.573
  Apr 20 13:24:08.589: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8921" for this suite. @ 04/20/24 13:24:08.592
• [4.089 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 04/20/24 13:24:08.6
  Apr 20 13:24:08.600: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename watch @ 04/20/24 13:24:08.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:24:08.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:24:08.62
  STEP: getting a starting resourceVersion @ 04/20/24 13:24:08.622
  STEP: starting a background goroutine to produce watch events @ 04/20/24 13:24:08.627
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 04/20/24 13:24:08.627
  E0420 13:24:08.777489      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:24:09.778096      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:24:10.778545      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:24:11.406: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5298" for this suite. @ 04/20/24 13:24:11.455
• [2.910 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 04/20/24 13:24:11.51
  Apr 20 13:24:11.510: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename container-probe @ 04/20/24 13:24:11.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:24:11.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:24:11.531
  STEP: Creating pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093 @ 04/20/24 13:24:11.534
  E0420 13:24:11.779645      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:24:12.780492      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/20/24 13:24:13.548
  Apr 20 13:24:13.551: INFO: Initial restart count of pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 is 0
  Apr 20 13:24:13.554: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:24:13.780938      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:24:14.781328      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:24:15.559: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:24:15.781653      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:24:16.781826      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:24:17.562: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:24:17.782295      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:24:18.782633      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:24:19.567: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:24:19.782792      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:24:20.783721      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:24:21.571: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:24:21.784107      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:24:22.784566      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:24:23.576: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:24:23.785017      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:24:24.785613      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:24:25.580: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:24:25.785973      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:24:26.786376      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:24:27.585: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:24:27.787070      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:24:28.787186      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:24:29.590: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:24:29.787661      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:24:30.788686      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:24:31.594: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:24:31.788786      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:24:32.789042      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:24:33.599: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  Apr 20 13:24:33.599: INFO: Restart count of pod container-probe-3093/liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 is now 1 (20.047830293s elapsed)
  E0420 13:24:33.789965      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:24:34.790185      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:24:35.603: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:24:35.790220      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:24:36.790306      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:24:37.608: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:24:37.791378      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:24:38.791488      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:24:39.613: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:24:39.791529      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:24:40.792587      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:24:41.617: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:24:41.793494      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:24:42.793695      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:24:43.621: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:24:43.794243      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:24:44.794634      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:24:45.627: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:24:45.795334      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:24:46.795633      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:24:47.631: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:24:47.796203      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:24:48.796285      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:24:49.636: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:24:49.797126      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:24:50.797219      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:24:51.641: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:24:51.797403      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:24:52.797609      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:24:53.645: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  Apr 20 13:24:53.645: INFO: Restart count of pod container-probe-3093/liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 is now 2 (40.093674383s elapsed)
  E0420 13:24:53.797681      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:24:54.797860      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:24:55.650: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:24:55.798673      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:24:56.798907      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:24:57.654: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:24:57.799065      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:24:58.799521      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:24:59.659: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:24:59.799767      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:25:00.800659      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:25:01.663: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:25:01.801017      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:25:02.801250      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:25:03.668: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:25:03.802006      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:25:04.802109      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:25:05.673: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:25:05.802738      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:25:06.802839      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:25:07.677: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:25:07.803799      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:25:08.804563      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:25:09.683: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:25:09.804698      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:25:10.804942      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:25:11.688: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:25:11.805625      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:25:12.805774      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:25:13.693: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  Apr 20 13:25:13.693: INFO: Restart count of pod container-probe-3093/liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 is now 3 (1m0.141272336s elapsed)
  E0420 13:25:13.806313      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:25:14.806719      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:25:15.697: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:25:15.807779      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:25:16.807899      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:25:17.703: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:25:17.808891      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:25:18.809135      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:25:19.708: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:25:19.809939      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:25:20.810049      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:25:21.713: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:25:21.810503      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:25:22.810635      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:25:23.717: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:25:23.810722      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:25:24.810738      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:25:25.722: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:25:25.811455      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:25:26.812133      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:25:27.727: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:25:27.812895      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:25:28.813132      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:25:29.732: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:25:29.814155      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:25:30.814268      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:25:31.737: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:25:31.814759      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:25:32.814943      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:25:33.741: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  Apr 20 13:25:33.741: INFO: Restart count of pod container-probe-3093/liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 is now 4 (1m20.189987562s elapsed)
  E0420 13:25:33.815949      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:25:34.816284      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:25:35.746: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:25:35.816563      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:25:36.816735      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:25:37.751: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:25:37.817597      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:25:38.817731      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:25:39.755: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:25:39.818714      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:25:40.818832      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:25:41.760: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:25:41.819629      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:25:42.819739      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:25:43.765: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:25:43.820682      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:25:44.820817      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:25:45.769: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:25:45.821645      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:25:46.821928      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:25:47.774: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:25:47.822955      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:25:48.823126      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:25:49.780: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:25:49.823372      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:25:50.823484      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:25:51.784: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:25:51.824127      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:25:52.824246      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:25:53.790: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:25:53.824546      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:25:54.824676      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:25:55.795: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:25:55.825589      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:25:56.826640      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:25:57.802: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:25:57.827085      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:25:58.827261      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:25:59.807: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:25:59.827574      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:26:00.828539      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:26:01.812: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:26:01.829484      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:26:02.829690      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:26:03.816: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:26:03.830487      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:26:04.830606      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:26:05.821: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:26:05.831425      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:26:06.831498      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:26:07.826: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:26:07.831929      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:26:08.832052      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:26:09.831: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:26:09.832695      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:26:10.832815      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:26:11.832971      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:26:11.835: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:26:12.833529      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:26:13.833800      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:26:13.840: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:26:14.833884      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:26:15.834768      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:26:15.845: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:26:16.835402      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:26:17.835567      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:26:17.849: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:26:18.836574      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:26:19.836680      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:26:19.855: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:26:20.836765      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:26:21.836854      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:26:21.859: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:26:22.837667      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:26:23.838390      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:26:23.864: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:26:24.839394      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:26:25.839532      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:26:25.868: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:26:26.840565      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:26:27.840672      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:26:27.873: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:26:28.840755      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:26:29.840947      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:26:29.878: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:26:30.841927      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:26:31.842099      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:26:31.883: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  E0420 13:26:32.842388      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:26:33.842465      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:26:33.888: INFO: Get pod liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 in namespace container-probe-3093
  Apr 20 13:26:33.888: INFO: Restart count of pod container-probe-3093/liveness-b1216590-2298-4f9b-8eb2-d00a2e291703 is now 5 (2m20.336604842s elapsed)
  STEP: deleting the pod @ 04/20/24 13:26:33.888
  Apr 20 13:26:33.902: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3093" for this suite. @ 04/20/24 13:26:33.905
• [142.402 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 04/20/24 13:26:33.912
  Apr 20 13:26:33.912: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename container-runtime @ 04/20/24 13:26:33.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:26:33.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:26:33.935
  STEP: create the container @ 04/20/24 13:26:33.938
  W0420 13:26:33.944496      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 04/20/24 13:26:33.944
  E0420 13:26:34.842678      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:26:35.842842      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:26:36.842928      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 04/20/24 13:26:36.961
  STEP: the container should be terminated @ 04/20/24 13:26:36.965
  STEP: the termination message should be set @ 04/20/24 13:26:36.965
  Apr 20 13:26:36.965: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 04/20/24 13:26:36.965
  Apr 20 13:26:36.984: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9151" for this suite. @ 04/20/24 13:26:36.987
• [3.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:655
  STEP: Creating a kubernetes client @ 04/20/24 13:26:36.994
  Apr 20 13:26:36.994: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename job @ 04/20/24 13:26:36.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:26:37.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:26:37.014
  STEP: Creating a job @ 04/20/24 13:26:37.017
  STEP: Ensuring active pods == parallelism @ 04/20/24 13:26:37.023
  E0420 13:26:37.843513      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:26:38.843658      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 04/20/24 13:26:39.027
  Apr 20 13:26:39.542: INFO: Successfully updated pod "adopt-release-9mjfb"
  STEP: Checking that the Job readopts the Pod @ 04/20/24 13:26:39.542
  E0420 13:26:39.843789      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:26:40.843880      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 04/20/24 13:26:41.55
  E0420 13:26:41.843943      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:26:42.061: INFO: Successfully updated pod "adopt-release-9mjfb"
  STEP: Checking that the Job releases the Pod @ 04/20/24 13:26:42.061
  E0420 13:26:42.844707      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:26:43.845606      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:26:44.069: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6339" for this suite. @ 04/20/24 13:26:44.074
• [7.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 04/20/24 13:26:44.081
  Apr 20 13:26:44.081: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename deployment @ 04/20/24 13:26:44.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:26:44.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:26:44.102
  Apr 20 13:26:44.105: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Apr 20 13:26:44.113: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0420 13:26:44.845714      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:26:45.846394      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:26:46.846575      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:26:47.846614      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:26:48.846717      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:26:49.117: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/20/24 13:26:49.117
  Apr 20 13:26:49.117: INFO: Creating deployment "test-rolling-update-deployment"
  Apr 20 13:26:49.123: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Apr 20 13:26:49.128: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0420 13:26:49.846944      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:26:50.847523      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:26:51.136: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Apr 20 13:26:51.138: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Apr 20 13:26:51.147: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5765",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a7b1beb4-b592-4a0b-8160-b440224aa287",
      ResourceVersion: (string) (len=5) "31949",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849216409,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849216409,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849216410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849216409,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849216409,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849216410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849216409,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-7ddb77f68b\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 20 13:26:51.159: INFO: New ReplicaSet "test-rolling-update-deployment-7ddb77f68b" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5765",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bd5901bc-5a69-437f-b4ea-1721957d6354",
      ResourceVersion: (string) (len=5) "31939",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849216409,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "a7b1beb4-b592-4a0b-8160-b440224aa287",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849216409,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 37 62 31 62 65  62 34 2d 62 35 39 32 2d  |\"a7b1beb4-b592-|
              00000120  34 61 30 62 2d 38 31 36  30 2d 62 34 34 30 32 32  |4a0b-8160-b44022|
              00000130  34 61 61 32 38 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4aa287\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849216410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b",
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 20 13:26:51.160: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Apr 20 13:26:51.160: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5765",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8a6c0d4a-1e15-4db0-9881-750b34adad3a",
      ResourceVersion: (string) (len=5) "31948",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849216404,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "a7b1beb4-b592-4a0b-8160-b440224aa287",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849216404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849216410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 61 37 62 31 62 65 62  |"uid\":\"a7b1beb|
              000000b0  34 2d 62 35 39 32 2d 34  61 30 62 2d 38 31 36 30  |4-b592-4a0b-8160|
              000000c0  2d 62 34 34 30 32 32 34  61 61 32 38 37 5c 22 7d  |-b440224aa287\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849216410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 20 13:26:51.163: INFO: Pod "test-rolling-update-deployment-7ddb77f68b-tjqcs" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-7ddb77f68b-tjqcs",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-7ddb77f68b-",
      Namespace: (string) (len=15) "deployment-5765",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4e9fe6c4-0396-41f9-bb6e-254b6b03086d",
      ResourceVersion: (string) (len=5) "31938",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849216409,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
          UID: (types.UID) (len=36) "bd5901bc-5a69-437f-b4ea-1721957d6354",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849216409,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 64  35 39 30 31 62 63 2d 35  |d\":\"bd5901bc-5|
              00000090  61 36 39 2d 34 33 37 66  2d 62 34 65 61 2d 31 37  |a69-437f-b4ea-17|
              000000a0  32 31 39 35 37 64 36 33  35 34 5c 22 7d 22 3a 7b  |21957d6354\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849216410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 31  33 2e 32 34 32 5c 22 7d  |2.168.213.242\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xg6wh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xg6wh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-41-198",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849216410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849216409,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849216410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849216410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849216409,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.41.198",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.41.198"
        }
      },
      PodIP: (string) (len=15) "192.168.213.242",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.213.242"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849216409,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849216409,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://23e63bcf346e5e45c54e175e292991d351347b2aa913368e4d2e4f247b1eff18",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 13:26:51.167: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5765" for this suite. @ 04/20/24 13:26:51.17
• [7.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 04/20/24 13:26:51.177
  Apr 20 13:26:51.177: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/20/24 13:26:51.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:26:51.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:26:51.196
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 04/20/24 13:26:51.198
  Apr 20 13:26:51.198: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  E0420 13:26:51.848406      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:26:52.849355      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:26:53.850297      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:26:54.850620      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:26:55.851649      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 04/20/24 13:26:56.199
  Apr 20 13:26:56.199: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  E0420 13:26:56.852190      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:26:57.413: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  E0420 13:26:57.852285      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:26:58.852913      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:26:59.853790      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:00.853902      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:01.854987      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:27:02.384: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2073" for this suite. @ 04/20/24 13:27:02.393
• [11.224 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 04/20/24 13:27:02.4
  Apr 20 13:27:02.400: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename pods @ 04/20/24 13:27:02.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:27:02.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:27:02.419
  STEP: creating pod @ 04/20/24 13:27:02.422
  E0420 13:27:02.855535      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:03.855596      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:27:04.448: INFO: Pod pod-hostip-1c479fe4-a171-4091-9334-4d3c672e3bd0 has hostIP: 172.31.41.198
  Apr 20 13:27:04.448: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6814" for this suite. @ 04/20/24 13:27:04.453
• [2.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 04/20/24 13:27:04.46
  Apr 20 13:27:04.460: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/20/24 13:27:04.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:27:04.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:27:04.481
  Apr 20 13:27:04.484: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  E0420 13:27:04.855689      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 04/20/24 13:27:05.746
  Apr 20 13:27:05.746: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=crd-publish-openapi-5870 --namespace=crd-publish-openapi-5870 create -f -'
  E0420 13:27:05.855916      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:06.856046      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:27:07.803: INFO: stderr: ""
  Apr 20 13:27:07.803: INFO: stdout: "e2e-test-crd-publish-openapi-3681-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Apr 20 13:27:07.804: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=crd-publish-openapi-5870 --namespace=crd-publish-openapi-5870 delete e2e-test-crd-publish-openapi-3681-crds test-foo'
  Apr 20 13:27:07.854: INFO: stderr: ""
  Apr 20 13:27:07.854: INFO: stdout: "e2e-test-crd-publish-openapi-3681-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Apr 20 13:27:07.854: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=crd-publish-openapi-5870 --namespace=crd-publish-openapi-5870 apply -f -'
  E0420 13:27:07.856749      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:27:07.927: INFO: stderr: ""
  Apr 20 13:27:07.927: INFO: stdout: "e2e-test-crd-publish-openapi-3681-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Apr 20 13:27:07.927: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=crd-publish-openapi-5870 --namespace=crd-publish-openapi-5870 delete e2e-test-crd-publish-openapi-3681-crds test-foo'
  Apr 20 13:27:07.977: INFO: stderr: ""
  Apr 20 13:27:07.977: INFO: stdout: "e2e-test-crd-publish-openapi-3681-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 04/20/24 13:27:07.977
  Apr 20 13:27:07.977: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=crd-publish-openapi-5870 --namespace=crd-publish-openapi-5870 create -f -'
  Apr 20 13:27:08.017: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 04/20/24 13:27:08.017
  Apr 20 13:27:08.017: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=crd-publish-openapi-5870 --namespace=crd-publish-openapi-5870 create -f -'
  Apr 20 13:27:08.059: INFO: rc: 1
  Apr 20 13:27:08.059: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=crd-publish-openapi-5870 --namespace=crd-publish-openapi-5870 apply -f -'
  Apr 20 13:27:08.105: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 04/20/24 13:27:08.105
  Apr 20 13:27:08.105: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=crd-publish-openapi-5870 --namespace=crd-publish-openapi-5870 create -f -'
  Apr 20 13:27:08.147: INFO: rc: 1
  Apr 20 13:27:08.147: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=crd-publish-openapi-5870 --namespace=crd-publish-openapi-5870 apply -f -'
  Apr 20 13:27:08.193: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 04/20/24 13:27:08.193
  Apr 20 13:27:08.193: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=crd-publish-openapi-5870 explain e2e-test-crd-publish-openapi-3681-crds'
  Apr 20 13:27:08.232: INFO: stderr: ""
  Apr 20 13:27:08.232: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3681-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 04/20/24 13:27:08.232
  Apr 20 13:27:08.232: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=crd-publish-openapi-5870 explain e2e-test-crd-publish-openapi-3681-crds.metadata'
  Apr 20 13:27:08.269: INFO: stderr: ""
  Apr 20 13:27:08.269: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3681-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Apr 20 13:27:08.269: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=crd-publish-openapi-5870 explain e2e-test-crd-publish-openapi-3681-crds.spec'
  Apr 20 13:27:08.305: INFO: stderr: ""
  Apr 20 13:27:08.305: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3681-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Apr 20 13:27:08.305: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=crd-publish-openapi-5870 explain e2e-test-crd-publish-openapi-3681-crds.spec.bars'
  Apr 20 13:27:08.341: INFO: stderr: ""
  Apr 20 13:27:08.341: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3681-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 04/20/24 13:27:08.341
  Apr 20 13:27:08.341: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=crd-publish-openapi-5870 explain e2e-test-crd-publish-openapi-3681-crds.spec.bars2'
  Apr 20 13:27:08.377: INFO: rc: 1
  E0420 13:27:08.856800      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:27:09.617: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5870" for this suite. @ 04/20/24 13:27:09.626
• [5.173 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 04/20/24 13:27:09.634
  Apr 20 13:27:09.634: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename pod-network-test @ 04/20/24 13:27:09.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:27:09.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:27:09.652
  STEP: Performing setup for networking test in namespace pod-network-test-8 @ 04/20/24 13:27:09.655
  STEP: creating a selector @ 04/20/24 13:27:09.655
  STEP: Creating the service pods in kubernetes @ 04/20/24 13:27:09.655
  Apr 20 13:27:09.655: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0420 13:27:09.857483      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:10.857689      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:11.858553      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:12.858660      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:13.859450      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:14.859929      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:15.860479      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:16.860631      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:17.861368      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:18.861586      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:19.861872      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:20.862530      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:21.862749      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:22.862832      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:23.863717      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:24.864254      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:25.864634      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:26.865666      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:27.866504      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:28.867109      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:29.867891      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:30.867988      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 04/20/24 13:27:31.769
  E0420 13:27:31.868844      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:32.869363      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:27:33.790: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Apr 20 13:27:33.790: INFO: Breadth first check of 192.168.161.24 on host 172.31.27.26...
  Apr 20 13:27:33.794: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.213.235:9080/dial?request=hostname&protocol=udp&host=192.168.161.24&port=8081&tries=1'] Namespace:pod-network-test-8 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 13:27:33.794: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  Apr 20 13:27:33.794: INFO: ExecWithOptions: Clientset creation
  Apr 20 13:27:33.794: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.213.235%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.161.24%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 20 13:27:33.854: INFO: Waiting for responses: map[]
  Apr 20 13:27:33.854: INFO: reached 192.168.161.24 after 0/1 tries
  Apr 20 13:27:33.854: INFO: Breadth first check of 192.168.213.237 on host 172.31.41.198...
  Apr 20 13:27:33.858: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.213.235:9080/dial?request=hostname&protocol=udp&host=192.168.213.237&port=8081&tries=1'] Namespace:pod-network-test-8 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 13:27:33.858: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  Apr 20 13:27:33.859: INFO: ExecWithOptions: Clientset creation
  Apr 20 13:27:33.859: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.213.235%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.213.237%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  E0420 13:27:33.869492      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:27:33.908: INFO: Waiting for responses: map[]
  Apr 20 13:27:33.908: INFO: reached 192.168.213.237 after 0/1 tries
  Apr 20 13:27:33.908: INFO: Breadth first check of 192.168.144.124 on host 172.31.81.0...
  Apr 20 13:27:33.912: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.213.235:9080/dial?request=hostname&protocol=udp&host=192.168.144.124&port=8081&tries=1'] Namespace:pod-network-test-8 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 13:27:33.912: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  Apr 20 13:27:33.913: INFO: ExecWithOptions: Clientset creation
  Apr 20 13:27:33.913: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.213.235%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.144.124%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 20 13:27:33.962: INFO: Waiting for responses: map[]
  Apr 20 13:27:33.962: INFO: reached 192.168.144.124 after 0/1 tries
  Apr 20 13:27:33.962: INFO: Going to retry 0 out of 3 pods....
  Apr 20 13:27:33.962: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8" for this suite. @ 04/20/24 13:27:33.967
• [24.341 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 04/20/24 13:27:33.975
  Apr 20 13:27:33.975: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename gc @ 04/20/24 13:27:33.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:27:33.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:27:33.994
  STEP: create the deployment @ 04/20/24 13:27:33.997
  W0420 13:27:34.003288      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 04/20/24 13:27:34.003
  STEP: delete the deployment @ 04/20/24 13:27:34.114
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 04/20/24 13:27:34.121
  STEP: Gathering metrics @ 04/20/24 13:27:34.641
  W0420 13:27:34.648198      20 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Apr 20 13:27:34.648: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 20 13:27:34.649: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8729" for this suite. @ 04/20/24 13:27:34.653
• [0.687 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 04/20/24 13:27:34.662
  Apr 20 13:27:34.662: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename pods @ 04/20/24 13:27:34.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:27:34.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:27:34.681
  STEP: Create set of pods @ 04/20/24 13:27:34.684
  Apr 20 13:27:34.693: INFO: created test-pod-1
  Apr 20 13:27:34.702: INFO: created test-pod-2
  Apr 20 13:27:34.709: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 04/20/24 13:27:34.709
  E0420 13:27:34.869777      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:35.870775      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 04/20/24 13:27:36.759
  Apr 20 13:27:36.763: INFO: Pod quantity 3 is different from expected quantity 0
  E0420 13:27:36.870800      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:27:37.765: INFO: Pod quantity 3 is different from expected quantity 0
  E0420 13:27:37.871210      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:27:38.764: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4910" for this suite. @ 04/20/24 13:27:38.769
• [4.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 04/20/24 13:27:38.778
  Apr 20 13:27:38.778: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename lease-test @ 04/20/24 13:27:38.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:27:38.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:27:38.796
  Apr 20 13:27:38.861: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-1270" for this suite. @ 04/20/24 13:27:38.865
  E0420 13:27:38.872172      20 retrywatcher.go:129] "Watch failed" err="context canceled"
• [0.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 04/20/24 13:27:38.874
  Apr 20 13:27:38.874: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename taint-multiple-pods @ 04/20/24 13:27:38.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:27:38.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:27:38.892
  Apr 20 13:27:38.895: INFO: Waiting up to 1m0s for all nodes to be ready
  E0420 13:27:39.873071      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:40.873151      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:41.873243      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:42.873339      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:43.873390      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:44.873576      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:45.874580      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:46.874695      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:47.874851      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:48.874944      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:49.875479      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:50.875496      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:51.875583      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:52.876574      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:53.876653      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:54.876845      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:55.877241      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:56.877504      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:57.877655      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:58.877833      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:27:59.878289      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:00.878493      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:01.879071      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:02.879175      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:03.879874      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:04.880969      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:05.881028      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:06.881133      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:07.881322      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:08.881410      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:09.881880      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:10.882064      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:11.882238      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:12.882444      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:13.882534      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:14.882921      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:15.883487      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:16.883538      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:17.883600      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:18.883696      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:19.884598      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:20.884784      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:21.884896      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:22.885628      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:23.885902      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:24.886329      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:25.886781      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:26.886890      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:27.887514      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:28.887594      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:29.887704      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:30.887794      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:31.887904      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:32.888785      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:33.888935      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:34.889234      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:35.889526      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:36.889658      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:37.889831      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:38.889909      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:28:38.896: INFO: Waiting for terminating namespaces to be deleted...
  Apr 20 13:28:38.900: INFO: Starting informer...
  STEP: Starting pods... @ 04/20/24 13:28:38.9
  Apr 20 13:28:39.121: INFO: Pod1 is running on ip-172-31-41-198. Tainting Node
  E0420 13:28:39.890044      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:40.890218      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:28:41.343: INFO: Pod2 is running on ip-172-31-41-198. Tainting Node
  STEP: Trying to apply a taint on the Node @ 04/20/24 13:28:41.343
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/20/24 13:28:41.354
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 04/20/24 13:28:41.357
  E0420 13:28:41.890307      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:42.890819      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:43.890921      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:44.891060      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:45.891155      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:46.891263      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:28:47.066: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  E0420 13:28:47.891518      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:48.892586      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:49.892735      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:50.892837      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:51.892941      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:52.893034      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:53.893178      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:54.893973      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:55.894065      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:56.894151      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:57.894251      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:58.894593      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:28:59.894711      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:29:00.894956      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:29:01.895081      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:29:02.896164      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:29:03.896249      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:29:04.896667      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:29:05.897186      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:29:06.898026      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:29:07.097: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/20/24 13:29:07.109
  Apr 20 13:29:07.112: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-4156" for this suite. @ 04/20/24 13:29:07.116
• [88.255 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 04/20/24 13:29:07.129
  Apr 20 13:29:07.129: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename namespaces @ 04/20/24 13:29:07.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:29:07.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:29:07.155
  STEP: Creating a test namespace @ 04/20/24 13:29:07.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:29:07.172
  STEP: Creating a service in the namespace @ 04/20/24 13:29:07.176
  STEP: Deleting the namespace @ 04/20/24 13:29:07.185
  STEP: Waiting for the namespace to be removed. @ 04/20/24 13:29:07.197
  E0420 13:29:07.898365      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:29:08.899388      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:29:09.899652      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:29:10.899732      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:29:11.900580      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:29:12.900659      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 04/20/24 13:29:13.202
  STEP: Verifying there is no service in the namespace @ 04/20/24 13:29:13.218
  Apr 20 13:29:13.223: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5043" for this suite. @ 04/20/24 13:29:13.227
  STEP: Destroying namespace "nsdeletetest-3679" for this suite. @ 04/20/24 13:29:13.234
  Apr 20 13:29:13.237: INFO: Namespace nsdeletetest-3679 was already deleted
  STEP: Destroying namespace "nsdeletetest-7448" for this suite. @ 04/20/24 13:29:13.237
• [6.116 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 04/20/24 13:29:13.245
  Apr 20 13:29:13.245: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename daemonsets @ 04/20/24 13:29:13.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:29:13.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:29:13.262
  STEP: Creating simple DaemonSet "daemon-set" @ 04/20/24 13:29:13.284
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/20/24 13:29:13.288
  Apr 20 13:29:13.295: INFO: DaemonSet pods can't tolerate node ip-172-31-45-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:29:13.295: INFO: DaemonSet pods can't tolerate node ip-172-31-9-171 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:29:13.299: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 13:29:13.299: INFO: Node ip-172-31-27-26 is running 0 daemon pod, expected 1
  E0420 13:29:13.900778      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:29:14.294: INFO: DaemonSet pods can't tolerate node ip-172-31-45-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:29:14.294: INFO: DaemonSet pods can't tolerate node ip-172-31-9-171 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:29:14.298: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 20 13:29:14.298: INFO: Node ip-172-31-27-26 is running 0 daemon pod, expected 1
  E0420 13:29:14.900888      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:29:15.294: INFO: DaemonSet pods can't tolerate node ip-172-31-45-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:29:15.294: INFO: DaemonSet pods can't tolerate node ip-172-31-9-171 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:29:15.298: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 20 13:29:15.298: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 04/20/24 13:29:15.301
  Apr 20 13:29:15.318: INFO: DaemonSet pods can't tolerate node ip-172-31-45-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:29:15.318: INFO: DaemonSet pods can't tolerate node ip-172-31-9-171 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:29:15.322: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 20 13:29:15.322: INFO: Node ip-172-31-81-0 is running 0 daemon pod, expected 1
  E0420 13:29:15.900985      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:29:16.319: INFO: DaemonSet pods can't tolerate node ip-172-31-45-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:29:16.319: INFO: DaemonSet pods can't tolerate node ip-172-31-9-171 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:29:16.323: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 20 13:29:16.323: INFO: Node ip-172-31-81-0 is running 0 daemon pod, expected 1
  E0420 13:29:16.901073      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:29:17.319: INFO: DaemonSet pods can't tolerate node ip-172-31-45-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:29:17.319: INFO: DaemonSet pods can't tolerate node ip-172-31-9-171 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:29:17.323: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 20 13:29:17.323: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/20/24 13:29:17.326
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1559, will wait for the garbage collector to delete the pods @ 04/20/24 13:29:17.326
  Apr 20 13:29:17.389: INFO: Deleting DaemonSet.extensions daemon-set took: 8.632336ms
  Apr 20 13:29:17.489: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.242839ms
  E0420 13:29:17.901531      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:29:18.596: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 13:29:18.596: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 20 13:29:18.599: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"32893"},"items":null}

  Apr 20 13:29:18.602: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"32893"},"items":null}

  Apr 20 13:29:18.617: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1559" for this suite. @ 04/20/24 13:29:18.621
• [5.383 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 04/20/24 13:29:18.628
  Apr 20 13:29:18.628: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename replication-controller @ 04/20/24 13:29:18.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:29:18.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:29:18.649
  Apr 20 13:29:18.652: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  E0420 13:29:18.901626      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 04/20/24 13:29:19.666
  STEP: Checking rc "condition-test" has the desired failure condition set @ 04/20/24 13:29:19.672
  E0420 13:29:19.902397      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 04/20/24 13:29:20.68
  Apr 20 13:29:20.693: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 04/20/24 13:29:20.693
  Apr 20 13:29:20.697: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1965" for this suite. @ 04/20/24 13:29:20.7
• [2.080 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 04/20/24 13:29:20.708
  Apr 20 13:29:20.708: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename webhook @ 04/20/24 13:29:20.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:29:20.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:29:20.726
  STEP: Setting up server cert @ 04/20/24 13:29:20.749
  E0420 13:29:20.903262      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 13:29:20.909
  STEP: Deploying the webhook pod @ 04/20/24 13:29:20.917
  STEP: Wait for the deployment to be ready @ 04/20/24 13:29:20.931
  Apr 20 13:29:20.940: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0420 13:29:21.904003      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:29:22.904656      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 13:29:22.953
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 13:29:22.963
  E0420 13:29:23.904893      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:29:23.964: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 04/20/24 13:29:23.971
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 04/20/24 13:29:23.972
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 04/20/24 13:29:23.972
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 04/20/24 13:29:23.972
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 04/20/24 13:29:23.974
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 04/20/24 13:29:23.974
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 04/20/24 13:29:23.975
  Apr 20 13:29:24.022: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6863" for this suite. @ 04/20/24 13:29:24.026
  STEP: Destroying namespace "webhook-markers-5526" for this suite. @ 04/20/24 13:29:24.034
• [3.332 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 04/20/24 13:29:24.041
  Apr 20 13:29:24.041: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename webhook @ 04/20/24 13:29:24.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:29:24.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:29:24.059
  STEP: Setting up server cert @ 04/20/24 13:29:24.084
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 13:29:24.357
  STEP: Deploying the webhook pod @ 04/20/24 13:29:24.364
  STEP: Wait for the deployment to be ready @ 04/20/24 13:29:24.377
  Apr 20 13:29:24.386: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0420 13:29:24.905511      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:29:25.905724      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 13:29:26.398
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 13:29:26.413
  E0420 13:29:26.906581      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:29:27.414: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 04/20/24 13:29:27.422
  STEP: Creating a custom resource definition that should be denied by the webhook @ 04/20/24 13:29:27.435
  Apr 20 13:29:27.435: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  Apr 20 13:29:27.489: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8539" for this suite. @ 04/20/24 13:29:27.497
  STEP: Destroying namespace "webhook-markers-9415" for this suite. @ 04/20/24 13:29:27.505
• [3.470 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 04/20/24 13:29:27.511
  Apr 20 13:29:27.511: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename projected @ 04/20/24 13:29:27.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:29:27.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:29:27.528
  STEP: Creating configMap with name cm-test-opt-del-2e72a32c-b6dc-4259-bea3-3585ec1c9306 @ 04/20/24 13:29:27.545
  STEP: Creating configMap with name cm-test-opt-upd-299216ab-aa03-439f-acbe-96f05fe971be @ 04/20/24 13:29:27.553
  STEP: Creating the pod @ 04/20/24 13:29:27.558
  E0420 13:29:27.907431      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:29:28.907520      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-2e72a32c-b6dc-4259-bea3-3585ec1c9306 @ 04/20/24 13:29:29.621
  STEP: Updating configmap cm-test-opt-upd-299216ab-aa03-439f-acbe-96f05fe971be @ 04/20/24 13:29:29.636
  STEP: Creating configMap with name cm-test-opt-create-729525c2-46eb-4f97-a763-e19df9329936 @ 04/20/24 13:29:29.642
  STEP: waiting to observe update in volume @ 04/20/24 13:29:29.648
  E0420 13:29:29.908203      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:29:30.908417      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:29:31.909329      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:29:32.909408      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:29:33.686: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8660" for this suite. @ 04/20/24 13:29:33.69
• [6.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 04/20/24 13:29:33.699
  Apr 20 13:29:33.699: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/20/24 13:29:33.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:29:33.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:29:33.72
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 04/20/24 13:29:33.722
  Apr 20 13:29:33.723: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  E0420 13:29:33.909525      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:29:34.910079      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:29:34.998: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  E0420 13:29:35.910943      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:29:36.911565      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:29:37.912112      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:29:38.912438      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:29:39.913189      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:29:39.973: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7162" for this suite. @ 04/20/24 13:29:39.981
• [6.290 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 04/20/24 13:29:39.989
  Apr 20 13:29:39.989: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename subjectreview @ 04/20/24 13:29:39.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:29:40.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:29:40.007
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-7588" @ 04/20/24 13:29:40.01
  Apr 20 13:29:40.014: INFO: saUsername: "system:serviceaccount:subjectreview-7588:e2e"
  Apr 20 13:29:40.014: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-7588"}
  Apr 20 13:29:40.014: INFO: saUID: "18f3189c-5456-426a-8b05-90c7a039e570"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-7588:e2e" @ 04/20/24 13:29:40.014
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-7588:e2e" @ 04/20/24 13:29:40.014
  Apr 20 13:29:40.016: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-7588:e2e" api 'list' configmaps in "subjectreview-7588" namespace @ 04/20/24 13:29:40.016
  Apr 20 13:29:40.018: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-7588:e2e" @ 04/20/24 13:29:40.018
  Apr 20 13:29:40.020: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Apr 20 13:29:40.020: INFO: LocalSubjectAccessReview has been verified
  Apr 20 13:29:40.020: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-7588" for this suite. @ 04/20/24 13:29:40.024
• [0.042 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 04/20/24 13:29:40.031
  Apr 20 13:29:40.031: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename projected @ 04/20/24 13:29:40.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:29:40.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:29:40.047
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 13:29:40.05
  E0420 13:29:40.913325      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:29:41.913849      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:29:42.914085      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:29:43.914209      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:29:44.914319      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:29:45.914585      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 13:29:46.099
  Apr 20 13:29:46.103: INFO: Trying to get logs from node ip-172-31-41-198 pod downwardapi-volume-036b511e-483c-468f-8f72-0a96806b643f container client-container: <nil>
  STEP: delete the pod @ 04/20/24 13:29:46.111
  Apr 20 13:29:46.129: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6831" for this suite. @ 04/20/24 13:29:46.133
• [6.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 04/20/24 13:29:46.142
  Apr 20 13:29:46.142: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename gc @ 04/20/24 13:29:46.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:29:46.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:29:46.159
  Apr 20 13:29:46.197: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"c42119e0-23ed-4769-a54f-c784406b3acc", Controller:(*bool)(0xc003253aa6), BlockOwnerDeletion:(*bool)(0xc003253aa7)}}
  Apr 20 13:29:46.203: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"c11ca8bb-a421-4373-a392-9a093ddd969e", Controller:(*bool)(0xc001c14006), BlockOwnerDeletion:(*bool)(0xc001c14007)}}
  Apr 20 13:29:46.209: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"f1caee14-7f6e-4633-8aab-96adb152092b", Controller:(*bool)(0xc001c1422a), BlockOwnerDeletion:(*bool)(0xc001c1422b)}}
  E0420 13:29:46.914700      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:29:47.914797      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:29:48.914897      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:29:49.915105      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:29:50.916057      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:29:51.225: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5317" for this suite. @ 04/20/24 13:29:51.229
• [5.096 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 04/20/24 13:29:51.238
  Apr 20 13:29:51.238: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename webhook @ 04/20/24 13:29:51.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:29:51.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:29:51.257
  STEP: Setting up server cert @ 04/20/24 13:29:51.28
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 13:29:51.452
  STEP: Deploying the webhook pod @ 04/20/24 13:29:51.462
  STEP: Wait for the deployment to be ready @ 04/20/24 13:29:51.474
  Apr 20 13:29:51.481: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0420 13:29:51.916595      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:29:52.916664      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 13:29:53.494
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 13:29:53.505
  E0420 13:29:53.916726      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:29:54.506: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Apr 20 13:29:54.514: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  E0420 13:29:54.917324      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3735-crds.webhook.example.com via the AdmissionRegistration API @ 04/20/24 13:29:55.027
  STEP: Creating a custom resource while v1 is storage version @ 04/20/24 13:29:55.041
  E0420 13:29:55.918392      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:29:56.918457      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 04/20/24 13:29:57.072
  STEP: Patching the custom resource while v2 is storage version @ 04/20/24 13:29:57.083
  Apr 20 13:29:57.683: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5697" for this suite. @ 04/20/24 13:29:57.687
  STEP: Destroying namespace "webhook-markers-5085" for this suite. @ 04/20/24 13:29:57.695
• [6.464 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:488
  STEP: Creating a kubernetes client @ 04/20/24 13:29:57.702
  Apr 20 13:29:57.702: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename security-context-test @ 04/20/24 13:29:57.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:29:57.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:29:57.722
  E0420 13:29:57.918525      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:29:58.918724      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:29:59.918995      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:00.919209      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:30:01.752: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1656" for this suite. @ 04/20/24 13:30:01.757
• [4.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 04/20/24 13:30:01.765
  Apr 20 13:30:01.765: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename svcaccounts @ 04/20/24 13:30:01.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:30:01.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:30:01.781
  Apr 20 13:30:01.800: INFO: created pod
  E0420 13:30:01.919693      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:02.919785      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:03.919873      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:04.919983      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 13:30:05.815
  E0420 13:30:05.920038      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:06.920296      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:07.920818      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:08.921343      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:09.922134      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:10.923163      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:11.923480      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:12.923553      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:13.924546      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:14.924661      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:15.925278      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:16.925444      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:17.926139      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:18.926351      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:19.926560      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:20.926720      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:21.926809      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:22.927095      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:23.927185      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:24.927844      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:25.928066      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:26.928189      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:27.928546      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:28.929532      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:29.929736      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:30.929913      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:31.930561      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:32.930668      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:33.930789      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:34.930970      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:30:35.816: INFO: polling logs
  Apr 20 13:30:35.826: INFO: Pod logs: 
  I0420 13:30:02.392946       1 log.go:245] OK: Got token
  I0420 13:30:02.392994       1 log.go:245] validating with in-cluster discovery
  I0420 13:30:02.393136       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I0420 13:30:02.393148       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-6125:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0003c24e0), NotBefore:(*jwt.NumericDate)(0xc0003c25c8), IssuedAt:(*jwt.NumericDate)(0xc0003c24f0), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-6125", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"f41ec50e-1169-4429-881d-85c22e2d5298"}}}
  I0420 13:30:02.400338       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0420 13:30:02.403072       1 log.go:245] OK: Validated signature on JWT
  I0420 13:30:02.403130       1 log.go:245] OK: Got valid claims from token!
  I0420 13:30:02.403149       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-6125:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0004a4de0), NotBefore:(*jwt.NumericDate)(0xc0004a4e08), IssuedAt:(*jwt.NumericDate)(0xc0004a4de8), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-6125", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"f41ec50e-1169-4429-881d-85c22e2d5298"}}}

  Apr 20 13:30:35.826: INFO: completed pod
  Apr 20 13:30:35.833: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6125" for this suite. @ 04/20/24 13:30:35.837
• [34.080 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 04/20/24 13:30:35.845
  Apr 20 13:30:35.845: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename webhook @ 04/20/24 13:30:35.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:30:35.86
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:30:35.863
  STEP: Setting up server cert @ 04/20/24 13:30:35.886
  E0420 13:30:35.931928      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 13:30:36.019
  STEP: Deploying the webhook pod @ 04/20/24 13:30:36.028
  STEP: Wait for the deployment to be ready @ 04/20/24 13:30:36.042
  Apr 20 13:30:36.051: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0420 13:30:36.932572      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:37.932672      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 13:30:38.065
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 13:30:38.077
  E0420 13:30:38.933146      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:30:39.078: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 04/20/24 13:30:39.088
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 04/20/24 13:30:39.105
  STEP: Creating a dummy validating-webhook-configuration object @ 04/20/24 13:30:39.117
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 04/20/24 13:30:39.125
  STEP: Creating a dummy mutating-webhook-configuration object @ 04/20/24 13:30:39.132
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 04/20/24 13:30:39.143
  Apr 20 13:30:39.311: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2780" for this suite. @ 04/20/24 13:30:39.317
  STEP: Destroying namespace "webhook-markers-474" for this suite. @ 04/20/24 13:30:39.324
• [3.486 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 04/20/24 13:30:39.33
  Apr 20 13:30:39.330: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename podtemplate @ 04/20/24 13:30:39.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:30:39.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:30:39.347
  STEP: Create set of pod templates @ 04/20/24 13:30:39.351
  Apr 20 13:30:39.356: INFO: created test-podtemplate-1
  Apr 20 13:30:39.362: INFO: created test-podtemplate-2
  Apr 20 13:30:39.367: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 04/20/24 13:30:39.367
  STEP: delete collection of pod templates @ 04/20/24 13:30:39.371
  Apr 20 13:30:39.371: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 04/20/24 13:30:39.389
  Apr 20 13:30:39.389: INFO: requesting list of pod templates to confirm quantity
  Apr 20 13:30:39.393: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6196" for this suite. @ 04/20/24 13:30:39.397
• [0.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 04/20/24 13:30:39.405
  Apr 20 13:30:39.405: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename watch @ 04/20/24 13:30:39.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:30:39.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:30:39.423
  STEP: creating a watch on configmaps @ 04/20/24 13:30:39.426
  STEP: creating a new configmap @ 04/20/24 13:30:39.427
  STEP: modifying the configmap once @ 04/20/24 13:30:39.432
  STEP: closing the watch once it receives two notifications @ 04/20/24 13:30:39.44
  Apr 20 13:30:39.440: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3725  14445221-789a-48bd-84ff-e917ba9361a2 33724 0 2024-04-20 13:30:39 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-04-20 13:30:39 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 13:30:39.440: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3725  14445221-789a-48bd-84ff-e917ba9361a2 33725 0 2024-04-20 13:30:39 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-04-20 13:30:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 04/20/24 13:30:39.44
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 04/20/24 13:30:39.449
  STEP: deleting the configmap @ 04/20/24 13:30:39.451
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 04/20/24 13:30:39.458
  Apr 20 13:30:39.458: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3725  14445221-789a-48bd-84ff-e917ba9361a2 33726 0 2024-04-20 13:30:39 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-04-20 13:30:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 13:30:39.458: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3725  14445221-789a-48bd-84ff-e917ba9361a2 33727 0 2024-04-20 13:30:39 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-04-20 13:30:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 13:30:39.458: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3725" for this suite. @ 04/20/24 13:30:39.462
• [0.065 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 04/20/24 13:30:39.471
  Apr 20 13:30:39.471: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename pods @ 04/20/24 13:30:39.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:30:39.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:30:39.49
  STEP: Create a pod @ 04/20/24 13:30:39.493
  E0420 13:30:39.933999      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:40.934114      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 04/20/24 13:30:41.514
  Apr 20 13:30:41.522: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Apr 20 13:30:41.522: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5221" for this suite. @ 04/20/24 13:30:41.526
• [2.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 04/20/24 13:30:41.534
  Apr 20 13:30:41.534: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename pv @ 04/20/24 13:30:41.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:30:41.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:30:41.551
  STEP: Creating initial PV and PVC @ 04/20/24 13:30:41.554
  Apr 20 13:30:41.554: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-9436" @ 04/20/24 13:30:41.569
  STEP: Listing PVCs in namespace "pv-9436" @ 04/20/24 13:30:41.573
  STEP: Reading "pvc-4qnmz" Status @ 04/20/24 13:30:41.576
  STEP: Reading "pv-9436-n85bd" Status @ 04/20/24 13:30:41.581
  STEP: Patching "pvc-4qnmz" Status @ 04/20/24 13:30:41.588
  STEP: Patching "pv-9436-n85bd" Status @ 04/20/24 13:30:41.596
  STEP: Updating "pvc-4qnmz" Status @ 04/20/24 13:30:41.601
  STEP: Updating "pv-9436-n85bd" Status @ 04/20/24 13:30:41.609
  Apr 20 13:30:41.620: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Apr 20 13:30:41.620: INFO: Deleting PersistentVolumeClaim "pvc-4qnmz"
  Apr 20 13:30:41.627: INFO: Deleting PersistentVolume "pv-9436-n85bd"
  Apr 20 13:30:41.635: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-9436" for this suite. @ 04/20/24 13:30:41.639
• [0.113 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1632
  STEP: Creating a kubernetes client @ 04/20/24 13:30:41.647
  Apr 20 13:30:41.647: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 13:30:41.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:30:41.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:30:41.666
  STEP: creating the pod @ 04/20/24 13:30:41.668
  Apr 20 13:30:41.668: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-2649 create -f -'
  Apr 20 13:30:41.750: INFO: stderr: ""
  Apr 20 13:30:41.750: INFO: stdout: "pod/pause created\n"
  E0420 13:30:41.935163      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:42.935266      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 04/20/24 13:30:43.758
  Apr 20 13:30:43.758: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-2649 label pods pause testing-label=testing-label-value'
  Apr 20 13:30:43.807: INFO: stderr: ""
  Apr 20 13:30:43.807: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 04/20/24 13:30:43.807
  Apr 20 13:30:43.807: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-2649 get pod pause -L testing-label'
  Apr 20 13:30:43.848: INFO: stderr: ""
  Apr 20 13:30:43.848: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 04/20/24 13:30:43.848
  Apr 20 13:30:43.848: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-2649 label pods pause testing-label-'
  Apr 20 13:30:43.896: INFO: stderr: ""
  Apr 20 13:30:43.896: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 04/20/24 13:30:43.896
  Apr 20 13:30:43.896: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-2649 get pod pause -L testing-label'
  E0420 13:30:43.936124      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:30:43.936: INFO: stderr: ""
  Apr 20 13:30:43.936: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 04/20/24 13:30:43.936
  Apr 20 13:30:43.936: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-2649 delete --grace-period=0 --force -f -'
  Apr 20 13:30:43.986: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 20 13:30:43.986: INFO: stdout: "pod \"pause\" force deleted\n"
  Apr 20 13:30:43.986: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-2649 get rc,svc -l name=pause --no-headers'
  Apr 20 13:30:44.031: INFO: stderr: "No resources found in kubectl-2649 namespace.\n"
  Apr 20 13:30:44.031: INFO: stdout: ""
  Apr 20 13:30:44.031: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-2649 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Apr 20 13:30:44.069: INFO: stderr: ""
  Apr 20 13:30:44.069: INFO: stdout: ""
  Apr 20 13:30:44.069: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2649" for this suite. @ 04/20/24 13:30:44.073
• [2.433 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 04/20/24 13:30:44.081
  Apr 20 13:30:44.081: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename configmap @ 04/20/24 13:30:44.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:30:44.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:30:44.101
  Apr 20 13:30:44.144: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2932" for this suite. @ 04/20/24 13:30:44.148
• [0.075 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 04/20/24 13:30:44.156
  Apr 20 13:30:44.156: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename projected @ 04/20/24 13:30:44.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:30:44.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:30:44.173
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 13:30:44.176
  E0420 13:30:44.936584      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:45.937061      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:46.937150      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:47.937245      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 13:30:48.203
  Apr 20 13:30:48.206: INFO: Trying to get logs from node ip-172-31-81-0 pod downwardapi-volume-9463f085-9b33-4f5f-b4dc-c807733cc437 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 13:30:48.224
  Apr 20 13:30:48.243: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8418" for this suite. @ 04/20/24 13:30:48.246
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:94
  STEP: Creating a kubernetes client @ 04/20/24 13:30:48.254
  Apr 20 13:30:48.254: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename configmap @ 04/20/24 13:30:48.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:30:48.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:30:48.271
  STEP: Creating configMap configmap-7048/configmap-test-36ea6165-1f4f-4586-86b0-9d81ef6637af @ 04/20/24 13:30:48.275
  STEP: Creating a pod to test consume configMaps @ 04/20/24 13:30:48.28
  E0420 13:30:48.937372      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:49.937437      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:50.937580      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:51.937667      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 13:30:52.303
  Apr 20 13:30:52.307: INFO: Trying to get logs from node ip-172-31-41-198 pod pod-configmaps-8206bf8f-8144-4023-a2e3-db360c24a48f container env-test: <nil>
  STEP: delete the pod @ 04/20/24 13:30:52.315
  Apr 20 13:30:52.332: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7048" for this suite. @ 04/20/24 13:30:52.335
• [4.090 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1764
  STEP: Creating a kubernetes client @ 04/20/24 13:30:52.344
  Apr 20 13:30:52.344: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 13:30:52.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:30:52.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:30:52.362
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/20/24 13:30:52.365
  Apr 20 13:30:52.365: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-5330 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Apr 20 13:30:52.413: INFO: stderr: ""
  Apr 20 13:30:52.413: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 04/20/24 13:30:52.413
  Apr 20 13:30:52.416: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-5330 delete pods e2e-test-httpd-pod'
  E0420 13:30:52.937785      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:53.937872      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:30:54.311: INFO: stderr: ""
  Apr 20 13:30:54.311: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Apr 20 13:30:54.311: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5330" for this suite. @ 04/20/24 13:30:54.315
• [1.979 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 04/20/24 13:30:54.323
  Apr 20 13:30:54.323: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename apf @ 04/20/24 13:30:54.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:30:54.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:30:54.346
  STEP: getting /apis @ 04/20/24 13:30:54.35
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 04/20/24 13:30:54.354
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 04/20/24 13:30:54.355
  STEP: creating @ 04/20/24 13:30:54.356
  STEP: getting @ 04/20/24 13:30:54.374
  STEP: listing @ 04/20/24 13:30:54.378
  STEP: watching @ 04/20/24 13:30:54.382
  Apr 20 13:30:54.382: INFO: starting watch
  STEP: patching @ 04/20/24 13:30:54.383
  STEP: updating @ 04/20/24 13:30:54.389
  Apr 20 13:30:54.399: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 04/20/24 13:30:54.399
  STEP: patching /status @ 04/20/24 13:30:54.402
  STEP: updating /status @ 04/20/24 13:30:54.409
  STEP: deleting @ 04/20/24 13:30:54.417
  STEP: deleting a collection @ 04/20/24 13:30:54.431
  Apr 20 13:30:54.454: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-7032" for this suite. @ 04/20/24 13:30:54.458
• [0.141 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 04/20/24 13:30:54.464
  Apr 20 13:30:54.464: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename dns @ 04/20/24 13:30:54.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:30:54.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:30:54.481
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 04/20/24 13:30:54.484
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 04/20/24 13:30:54.484
  STEP: creating a pod to probe DNS @ 04/20/24 13:30:54.484
  STEP: submitting the pod to kubernetes @ 04/20/24 13:30:54.484
  E0420 13:30:54.937985      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:55.938072      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/20/24 13:30:56.505
  STEP: looking for the results for each expected name from probers @ 04/20/24 13:30:56.509
  Apr 20 13:30:56.527: INFO: DNS probes using dns-8577/dns-test-3b76340a-874c-4ea1-b299-bbc61273f39e succeeded

  STEP: deleting the pod @ 04/20/24 13:30:56.527
  Apr 20 13:30:56.542: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8577" for this suite. @ 04/20/24 13:30:56.546
• [2.090 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 04/20/24 13:30:56.554
  Apr 20 13:30:56.554: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 13:30:56.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:30:56.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:30:56.573
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 13:30:56.576
  E0420 13:30:56.938173      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:57.938301      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 13:30:58.595
  Apr 20 13:30:58.599: INFO: Trying to get logs from node ip-172-31-41-198 pod downwardapi-volume-08f06ac4-cae1-4fd2-8384-ef9e1a4208b8 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 13:30:58.606
  Apr 20 13:30:58.624: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4754" for this suite. @ 04/20/24 13:30:58.628
• [2.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 04/20/24 13:30:58.64
  Apr 20 13:30:58.640: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename secrets @ 04/20/24 13:30:58.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:30:58.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:30:58.659
  STEP: Creating secret with name secret-test-2d912abb-395c-4cc0-842f-22e3f25aa64c @ 04/20/24 13:30:58.687
  STEP: Creating a pod to test consume secrets @ 04/20/24 13:30:58.692
  E0420 13:30:58.938407      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:30:59.938496      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:31:00.938689      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:31:01.938816      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 13:31:02.724
  Apr 20 13:31:02.728: INFO: Trying to get logs from node ip-172-31-41-198 pod pod-secrets-b1a7b678-eca5-4a0f-915b-ed96a36c24a9 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 13:31:02.735
  Apr 20 13:31:02.753: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2633" for this suite. @ 04/20/24 13:31:02.757
  STEP: Destroying namespace "secret-namespace-9004" for this suite. @ 04/20/24 13:31:02.764
• [4.131 seconds]
------------------------------
SSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 04/20/24 13:31:02.771
  Apr 20 13:31:02.771: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename disruption @ 04/20/24 13:31:02.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:31:02.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:31:02.79
  STEP: Waiting for the pdb to be processed @ 04/20/24 13:31:02.798
  STEP: Waiting for all pods to be running @ 04/20/24 13:31:02.833
  Apr 20 13:31:02.838: INFO: running pods: 0 < 3
  E0420 13:31:02.939102      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:31:03.939206      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:31:04.842: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2568" for this suite. @ 04/20/24 13:31:04.847
• [2.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 04/20/24 13:31:04.857
  Apr 20 13:31:04.857: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename namespaces @ 04/20/24 13:31:04.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:31:04.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:31:04.875
  STEP: Read namespace status @ 04/20/24 13:31:04.878
  Apr 20 13:31:04.882: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 04/20/24 13:31:04.882
  Apr 20 13:31:04.888: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 04/20/24 13:31:04.888
  Apr 20 13:31:04.898: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Apr 20 13:31:04.898: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9358" for this suite. @ 04/20/24 13:31:04.902
• [0.055 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 04/20/24 13:31:04.911
  Apr 20 13:31:04.911: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename kubectl-logs @ 04/20/24 13:31:04.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:31:04.935
  E0420 13:31:04.939650      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:31:04.941
  STEP: creating an pod @ 04/20/24 13:31:04.944
  Apr 20 13:31:04.944: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-logs-942 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.47 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Apr 20 13:31:04.997: INFO: stderr: ""
  Apr 20 13:31:04.997: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 04/20/24 13:31:04.997
  Apr 20 13:31:04.997: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0420 13:31:05.940075      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:31:06.940114      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:31:07.009: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 04/20/24 13:31:07.009
  Apr 20 13:31:07.009: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-logs-942 logs logs-generator logs-generator'
  Apr 20 13:31:07.061: INFO: stderr: ""
  Apr 20 13:31:07.061: INFO: stdout: "I0420 13:31:05.566444       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/kube-system/pods/66r5 209\nI0420 13:31:05.766531       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/ns/pods/785f 427\nI0420 13:31:05.966524       1 logs_generator.go:76] 2 POST /api/v1/namespaces/kube-system/pods/2mb 356\nI0420 13:31:06.166843       1 logs_generator.go:76] 3 POST /api/v1/namespaces/default/pods/mdhg 230\nI0420 13:31:06.367194       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/9bk 457\nI0420 13:31:06.567510       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/kube-system/pods/t76 398\nI0420 13:31:06.766788       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/q5h 282\nI0420 13:31:06.967088       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/tv86 316\n"
  STEP: limiting log lines @ 04/20/24 13:31:07.061
  Apr 20 13:31:07.061: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-logs-942 logs logs-generator logs-generator --tail=1'
  Apr 20 13:31:07.109: INFO: stderr: ""
  Apr 20 13:31:07.109: INFO: stdout: "I0420 13:31:06.967088       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/tv86 316\n"
  Apr 20 13:31:07.109: INFO: got output "I0420 13:31:06.967088       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/tv86 316\n"
  STEP: limiting log bytes @ 04/20/24 13:31:07.109
  Apr 20 13:31:07.109: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-logs-942 logs logs-generator logs-generator --limit-bytes=1'
  Apr 20 13:31:07.158: INFO: stderr: ""
  Apr 20 13:31:07.158: INFO: stdout: "I"
  Apr 20 13:31:07.158: INFO: got output "I"
  STEP: exposing timestamps @ 04/20/24 13:31:07.158
  Apr 20 13:31:07.159: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-logs-942 logs logs-generator logs-generator --tail=1 --timestamps'
  Apr 20 13:31:07.208: INFO: stderr: ""
  Apr 20 13:31:07.208: INFO: stdout: "2024-04-20T13:31:07.167575345Z I0420 13:31:07.167482       1 logs_generator.go:76] 8 POST /api/v1/namespaces/default/pods/cbj 382\n"
  Apr 20 13:31:07.208: INFO: got output "2024-04-20T13:31:07.167575345Z I0420 13:31:07.167482       1 logs_generator.go:76] 8 POST /api/v1/namespaces/default/pods/cbj 382\n"
  STEP: restricting to a time range @ 04/20/24 13:31:07.208
  E0420 13:31:07.940287      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:31:08.940451      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:31:09.708: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-logs-942 logs logs-generator logs-generator --since=1s'
  Apr 20 13:31:09.760: INFO: stderr: ""
  Apr 20 13:31:09.761: INFO: stdout: "I0420 13:31:08.766819       1 logs_generator.go:76] 16 POST /api/v1/namespaces/kube-system/pods/9cj 547\nI0420 13:31:08.967111       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/4zfs 417\nI0420 13:31:09.167259       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/ns/pods/kbq 234\nI0420 13:31:09.366525       1 logs_generator.go:76] 19 GET /api/v1/namespaces/ns/pods/jnbz 593\nI0420 13:31:09.566822       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/dstj 337\n"
  Apr 20 13:31:09.761: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-logs-942 logs logs-generator logs-generator --since=24h'
  Apr 20 13:31:09.808: INFO: stderr: ""
  Apr 20 13:31:09.808: INFO: stdout: "I0420 13:31:05.566444       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/kube-system/pods/66r5 209\nI0420 13:31:05.766531       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/ns/pods/785f 427\nI0420 13:31:05.966524       1 logs_generator.go:76] 2 POST /api/v1/namespaces/kube-system/pods/2mb 356\nI0420 13:31:06.166843       1 logs_generator.go:76] 3 POST /api/v1/namespaces/default/pods/mdhg 230\nI0420 13:31:06.367194       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/9bk 457\nI0420 13:31:06.567510       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/kube-system/pods/t76 398\nI0420 13:31:06.766788       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/q5h 282\nI0420 13:31:06.967088       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/tv86 316\nI0420 13:31:07.167482       1 logs_generator.go:76] 8 POST /api/v1/namespaces/default/pods/cbj 382\nI0420 13:31:07.366941       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/ns/pods/r6gp 251\nI0420 13:31:07.567231       1 logs_generator.go:76] 10 POST /api/v1/namespaces/ns/pods/ljb 503\nI0420 13:31:07.766478       1 logs_generator.go:76] 11 POST /api/v1/namespaces/default/pods/4bgt 347\nI0420 13:31:07.966758       1 logs_generator.go:76] 12 POST /api/v1/namespaces/ns/pods/nsp 558\nI0420 13:31:08.167054       1 logs_generator.go:76] 13 POST /api/v1/namespaces/ns/pods/vnzp 510\nI0420 13:31:08.367389       1 logs_generator.go:76] 14 GET /api/v1/namespaces/kube-system/pods/7p9 368\nI0420 13:31:08.566518       1 logs_generator.go:76] 15 POST /api/v1/namespaces/ns/pods/7kt7 339\nI0420 13:31:08.766819       1 logs_generator.go:76] 16 POST /api/v1/namespaces/kube-system/pods/9cj 547\nI0420 13:31:08.967111       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/4zfs 417\nI0420 13:31:09.167259       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/ns/pods/kbq 234\nI0420 13:31:09.366525       1 logs_generator.go:76] 19 GET /api/v1/namespaces/ns/pods/jnbz 593\nI0420 13:31:09.566822       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/dstj 337\nI0420 13:31:09.767135       1 logs_generator.go:76] 21 GET /api/v1/namespaces/ns/pods/ppd5 495\n"
  Apr 20 13:31:09.808: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-logs-942 delete pod logs-generator'
  E0420 13:31:09.941305      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:31:10.615: INFO: stderr: ""
  Apr 20 13:31:10.615: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Apr 20 13:31:10.616: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-942" for this suite. @ 04/20/24 13:31:10.62
• [5.716 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 04/20/24 13:31:10.628
  Apr 20 13:31:10.628: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename endpointslice @ 04/20/24 13:31:10.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:31:10.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:31:10.646
  E0420 13:31:10.941849      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:31:11.942132      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:31:12.705: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6789" for this suite. @ 04/20/24 13:31:12.709
• [2.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 04/20/24 13:31:12.716
  Apr 20 13:31:12.716: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename configmap @ 04/20/24 13:31:12.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:31:12.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:31:12.734
  STEP: Creating configMap with name configmap-test-volume-ffffe4b6-631e-4c1f-ac8e-169904eb288c @ 04/20/24 13:31:12.738
  STEP: Creating a pod to test consume configMaps @ 04/20/24 13:31:12.742
  E0420 13:31:12.943047      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:31:13.943165      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:31:14.943184      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:31:15.944108      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 13:31:16.768
  Apr 20 13:31:16.772: INFO: Trying to get logs from node ip-172-31-41-198 pod pod-configmaps-b65d0209-b0b4-4e76-b1a1-477c4a8de5df container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 13:31:16.78
  Apr 20 13:31:16.802: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-914" for this suite. @ 04/20/24 13:31:16.81
• [4.101 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 04/20/24 13:31:16.818
  Apr 20 13:31:16.818: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename webhook @ 04/20/24 13:31:16.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:31:16.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:31:16.85
  STEP: Setting up server cert @ 04/20/24 13:31:16.876
  E0420 13:31:16.944827      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 13:31:17.164
  STEP: Deploying the webhook pod @ 04/20/24 13:31:17.174
  STEP: Wait for the deployment to be ready @ 04/20/24 13:31:17.189
  Apr 20 13:31:17.196: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0420 13:31:17.945001      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:31:18.945338      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 13:31:19.209
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 13:31:19.219
  E0420 13:31:19.945822      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:31:20.220: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 04/20/24 13:31:20.3
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/20/24 13:31:20.322
  STEP: Deleting the collection of validation webhooks @ 04/20/24 13:31:20.342
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/20/24 13:31:20.396
  Apr 20 13:31:20.449: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7981" for this suite. @ 04/20/24 13:31:20.453
  STEP: Destroying namespace "webhook-markers-7483" for this suite. @ 04/20/24 13:31:20.463
• [3.653 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 04/20/24 13:31:20.471
  Apr 20 13:31:20.471: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename container-probe @ 04/20/24 13:31:20.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:31:20.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:31:20.49
  STEP: Creating pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059 @ 04/20/24 13:31:20.492
  E0420 13:31:20.945924      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:31:21.946155      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/20/24 13:31:22.511
  Apr 20 13:31:22.515: INFO: Initial restart count of pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 is 0
  Apr 20 13:31:22.519: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:31:22.946917      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:31:23.947025      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:31:24.524: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:31:24.947234      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:31:25.948235      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:31:26.529: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:31:26.949003      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:31:27.949058      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:31:28.534: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:31:28.949146      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:31:29.949265      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:31:30.540: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:31:30.949705      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:31:31.949764      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:31:32.544: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:31:32.950443      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:31:33.950677      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:31:34.550: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:31:34.951384      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:31:35.952117      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:31:36.555: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:31:36.952155      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:31:37.952643      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:31:38.560: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:31:38.952885      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:31:39.952974      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:31:40.565: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:31:40.953878      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:31:41.954100      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:31:42.571: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:31:42.954756      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:31:43.954834      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:31:44.576: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:31:44.955584      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:31:45.955891      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:31:46.581: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:31:46.956023      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:31:47.956219      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:31:48.587: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:31:48.956255      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:31:49.956338      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:31:50.592: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:31:50.956929      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:31:51.957224      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:31:52.597: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:31:52.958133      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:31:53.958324      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:31:54.603: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:31:54.958567      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:31:55.959274      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:31:56.609: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:31:56.959515      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:31:57.959613      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:31:58.613: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:31:58.960309      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:31:59.960465      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:32:00.618: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:32:00.961004      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:32:01.961110      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:32:02.624: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:32:02.961667      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:32:03.961777      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:32:04.629: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:32:04.961869      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:32:05.961935      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:32:06.634: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:32:06.962518      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:32:07.962624      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:32:08.638: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:32:08.963250      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:32:09.963515      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:32:10.643: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:32:10.964393      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:32:11.964502      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:32:12.648: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:32:12.965281      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:32:13.965504      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:32:14.654: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:32:14.965860      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:32:15.966133      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:32:16.660: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:32:16.966748      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:32:17.966846      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:32:18.665: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:32:18.967313      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:32:19.967515      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:32:20.670: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:32:20.968069      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:32:21.968289      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:32:22.675: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:32:22.969063      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:32:23.969222      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:32:24.680: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:32:24.969828      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:32:25.970700      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:32:26.685: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:32:26.971196      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:32:27.971277      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:32:28.691: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:32:28.971482      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:32:29.971615      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:32:30.696: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:32:30.971714      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:32:31.972545      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:32:32.702: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:32:32.972667      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:32:33.972845      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:32:34.708: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:32:34.973548      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:32:35.973840      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:32:36.712: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:32:36.974361      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:32:37.974611      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:32:38.718: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:32:38.975600      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:32:39.975694      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:32:40.723: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:32:40.976111      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:32:41.976151      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:32:42.729: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:32:42.976329      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:32:43.976590      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:32:44.735: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:32:44.977451      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:32:45.977624      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:32:46.739: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:32:46.977717      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:32:47.977821      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:32:48.745: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:32:48.977916      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:32:49.978017      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:32:50.750: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:32:50.978115      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:32:51.978131      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:32:52.756: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:32:52.978482      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:32:53.978570      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:32:54.761: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:32:54.978588      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:32:55.978908      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:32:56.766: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:32:56.979662      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:32:57.980571      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:32:58.771: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:32:58.980618      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:32:59.980840      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:33:00.777: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:33:00.981224      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:33:01.981324      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:33:02.781: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:33:02.982186      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:33:03.982367      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:33:04.787: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:33:04.983465      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:33:05.983519      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:33:06.791: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:33:06.984365      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:33:07.984467      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:33:08.797: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:33:08.985047      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:33:09.985219      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:33:10.803: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:33:10.985690      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:33:11.986237      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:33:12.808: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:33:12.986714      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:33:13.986817      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:33:14.813: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:33:14.987020      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:33:15.987230      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:33:16.818: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:33:16.988021      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:33:17.988376      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:33:18.823: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:33:18.988935      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:33:19.989087      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:33:20.829: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:33:20.989149      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:33:21.989269      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:33:22.834: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:33:22.990266      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:33:23.990363      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:33:24.840: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:33:24.991114      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:33:25.991197      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:33:26.845: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:33:26.991810      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:33:27.992630      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:33:28.851: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:33:28.993265      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:33:29.993990      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:33:30.857: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:33:30.994721      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:33:31.994999      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:33:32.862: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:33:32.995877      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:33:33.996908      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:33:34.868: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:33:34.997487      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:33:35.997735      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:33:36.873: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:33:36.998182      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:33:37.998236      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:33:38.880: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:33:38.998423      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:33:39.998659      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:33:40.885: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:33:40.999710      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:33:42.000250      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:33:42.891: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:33:43.000844      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:33:44.000941      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:33:44.897: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:33:45.001236      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:33:46.002246      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:33:46.903: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:33:47.003065      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:33:48.003248      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:33:48.909: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:33:49.003923      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:33:50.004682      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:33:50.914: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:33:51.005067      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:33:52.005133      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:33:52.919: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:33:53.005853      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:33:54.006039      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:33:54.925: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:33:55.006811      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:33:56.007571      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:33:56.931: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:33:57.008413      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:33:58.008647      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:33:58.936: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:33:59.009648      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:34:00.009830      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:34:00.941: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:34:01.010199      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:34:02.010322      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:34:02.949: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:34:03.010570      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:34:04.010806      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:34:04.954: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:34:05.011039      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:34:06.011124      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:34:06.959: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:34:07.011847      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:34:08.011942      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:34:08.965: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:34:09.012450      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:34:10.012556      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:34:10.970: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:34:11.013328      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:34:12.013447      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:34:12.974: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:34:13.014002      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:34:14.014186      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:34:14.979: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:34:15.014738      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:34:16.015695      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:34:16.984: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:34:17.016630      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:34:18.016794      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:34:18.990: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:34:19.017179      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:34:20.017293      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:34:20.994: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:34:21.017629      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:34:22.018037      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:34:23.000: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:34:23.018243      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:34:24.018423      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:34:25.004: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:34:25.018710      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:34:26.019624      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:34:27.009: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:34:27.020035      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:34:28.020248      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:34:29.014: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:34:29.021199      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:34:30.021370      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:34:31.019: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:34:31.021918      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:34:32.022049      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:34:33.022694      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:34:33.025: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:34:34.023507      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:34:35.023594      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:34:35.030: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:34:36.023676      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:34:37.023777      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:34:37.035: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:34:38.024352      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:34:39.024494      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:34:39.040: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:34:40.024935      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:34:41.025642      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:34:41.046: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:34:42.025734      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:34:43.026645      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:34:43.051: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:34:44.026739      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:34:45.026839      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:34:45.057: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:34:46.027730      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:34:47.027835      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:34:47.062: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:34:48.027898      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:34:49.028002      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:34:49.069: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:34:50.028187      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:34:51.028287      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:34:51.074: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:34:52.028852      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:34:53.028889      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:34:53.078: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:34:54.029728      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:34:55.029979      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:34:55.084: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:34:56.030330      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:34:57.030419      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:34:57.089: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:34:58.031131      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:34:59.031390      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:34:59.094: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:35:00.031506      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:35:01.031598      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:35:01.099: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:35:02.032372      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:35:03.032566      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:35:03.104: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:35:04.033105      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:35:05.033206      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:35:05.109: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:35:06.034173      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:35:07.034565      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:35:07.114: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:35:08.034949      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:35:09.035163      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:35:09.119: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:35:10.035530      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:35:11.036584      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:35:11.124: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:35:12.036674      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:35:13.036866      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:35:13.129: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:35:14.037193      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:35:15.037371      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:35:15.133: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:35:16.037931      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:35:17.038030      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:35:17.138: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:35:18.038404      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:35:19.038327      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:35:19.143: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:35:20.038614      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:35:21.038709      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:35:21.149: INFO: Get pod test-webserver-fb7869d4-27cb-4a05-aa6b-54a7837df4a5 in namespace container-probe-3059
  E0420 13:35:22.039652      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:35:23.039750      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 04/20/24 13:35:23.15
  Apr 20 13:35:23.164: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3059" for this suite. @ 04/20/24 13:35:23.169
• [242.707 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:399
  STEP: Creating a kubernetes client @ 04/20/24 13:35:23.179
  Apr 20 13:35:23.179: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 13:35:23.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:35:23.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:35:23.197
  STEP: creating all guestbook components @ 04/20/24 13:35:23.202
  Apr 20 13:35:23.202: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Apr 20 13:35:23.202: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-5537 create -f -'
  Apr 20 13:35:23.285: INFO: stderr: ""
  Apr 20 13:35:23.285: INFO: stdout: "service/agnhost-replica created\n"
  Apr 20 13:35:23.286: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Apr 20 13:35:23.286: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-5537 create -f -'
  Apr 20 13:35:23.373: INFO: stderr: ""
  Apr 20 13:35:23.373: INFO: stdout: "service/agnhost-primary created\n"
  Apr 20 13:35:23.373: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Apr 20 13:35:23.373: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-5537 create -f -'
  Apr 20 13:35:23.461: INFO: stderr: ""
  Apr 20 13:35:23.461: INFO: stdout: "service/frontend created\n"
  Apr 20 13:35:23.461: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Apr 20 13:35:23.461: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-5537 create -f -'
  Apr 20 13:35:23.525: INFO: stderr: ""
  Apr 20 13:35:23.525: INFO: stdout: "deployment.apps/frontend created\n"
  Apr 20 13:35:23.525: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Apr 20 13:35:23.525: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-5537 create -f -'
  Apr 20 13:35:23.590: INFO: stderr: ""
  Apr 20 13:35:23.590: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Apr 20 13:35:23.591: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Apr 20 13:35:23.591: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-5537 create -f -'
  Apr 20 13:35:23.648: INFO: stderr: ""
  Apr 20 13:35:23.648: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 04/20/24 13:35:23.648
  Apr 20 13:35:23.648: INFO: Waiting for all frontend pods to be Running.
  E0420 13:35:24.040234      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:35:25.040394      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:35:26.041234      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:35:27.041530      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:35:28.041768      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:35:28.699: INFO: Waiting for frontend to serve content.
  Apr 20 13:35:28.710: INFO: Trying to add a new entry to the guestbook.
  Apr 20 13:35:28.723: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 04/20/24 13:35:28.732
  Apr 20 13:35:28.732: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-5537 delete --grace-period=0 --force -f -'
  Apr 20 13:35:28.794: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 20 13:35:28.794: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 04/20/24 13:35:28.794
  Apr 20 13:35:28.794: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-5537 delete --grace-period=0 --force -f -'
  Apr 20 13:35:28.854: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 20 13:35:28.854: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 04/20/24 13:35:28.854
  Apr 20 13:35:28.854: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-5537 delete --grace-period=0 --force -f -'
  Apr 20 13:35:28.906: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 20 13:35:28.906: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 04/20/24 13:35:28.906
  Apr 20 13:35:28.906: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-5537 delete --grace-period=0 --force -f -'
  Apr 20 13:35:28.950: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 20 13:35:28.950: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 04/20/24 13:35:28.95
  Apr 20 13:35:28.950: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-5537 delete --grace-period=0 --force -f -'
  Apr 20 13:35:29.001: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 20 13:35:29.001: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 04/20/24 13:35:29.001
  Apr 20 13:35:29.001: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-5537 delete --grace-period=0 --force -f -'
  E0420 13:35:29.042662      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:35:29.065: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 20 13:35:29.065: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Apr 20 13:35:29.065: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5537" for this suite. @ 04/20/24 13:35:29.069
• [5.897 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 04/20/24 13:35:29.076
  Apr 20 13:35:29.076: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename webhook @ 04/20/24 13:35:29.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:35:29.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:35:29.096
  STEP: Setting up server cert @ 04/20/24 13:35:29.118
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 13:35:29.501
  STEP: Deploying the webhook pod @ 04/20/24 13:35:29.51
  STEP: Wait for the deployment to be ready @ 04/20/24 13:35:29.524
  Apr 20 13:35:29.535: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0420 13:35:30.042771      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:35:31.043006      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 13:35:31.548
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 13:35:31.563
  E0420 13:35:32.043758      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:35:32.563: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 04/20/24 13:35:32.571
  STEP: create a pod @ 04/20/24 13:35:32.584
  E0420 13:35:33.043878      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:35:34.043968      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 04/20/24 13:35:34.603
  Apr 20 13:35:34.603: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=webhook-3513 attach --namespace=webhook-3513 to-be-attached-pod -i -c=container1'
  Apr 20 13:35:34.653: INFO: rc: 1
  Apr 20 13:35:34.711: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3513" for this suite. @ 04/20/24 13:35:34.717
  STEP: Destroying namespace "webhook-markers-8923" for this suite. @ 04/20/24 13:35:34.726
• [5.658 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 04/20/24 13:35:34.734
  Apr 20 13:35:34.734: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename var-expansion @ 04/20/24 13:35:34.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:35:34.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:35:34.752
  STEP: creating the pod @ 04/20/24 13:35:34.755
  STEP: waiting for pod running @ 04/20/24 13:35:34.764
  E0420 13:35:35.044581      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:35:36.045189      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 04/20/24 13:35:36.777
  Apr 20 13:35:36.781: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-4302 PodName:var-expansion-ae428b82-c65e-4053-ac62-b7db895966e0 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 13:35:36.781: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  Apr 20 13:35:36.782: INFO: ExecWithOptions: Clientset creation
  Apr 20 13:35:36.782: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-4302/pods/var-expansion-ae428b82-c65e-4053-ac62-b7db895966e0/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 04/20/24 13:35:36.832
  Apr 20 13:35:36.835: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-4302 PodName:var-expansion-ae428b82-c65e-4053-ac62-b7db895966e0 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 13:35:36.836: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  Apr 20 13:35:36.836: INFO: ExecWithOptions: Clientset creation
  Apr 20 13:35:36.836: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-4302/pods/var-expansion-ae428b82-c65e-4053-ac62-b7db895966e0/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 04/20/24 13:35:36.891
  E0420 13:35:37.046054      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:35:37.406: INFO: Successfully updated pod "var-expansion-ae428b82-c65e-4053-ac62-b7db895966e0"
  STEP: waiting for annotated pod running @ 04/20/24 13:35:37.407
  STEP: deleting the pod gracefully @ 04/20/24 13:35:37.411
  Apr 20 13:35:37.411: INFO: Deleting pod "var-expansion-ae428b82-c65e-4053-ac62-b7db895966e0" in namespace "var-expansion-4302"
  Apr 20 13:35:37.419: INFO: Wait up to 5m0s for pod "var-expansion-ae428b82-c65e-4053-ac62-b7db895966e0" to be fully deleted
  E0420 13:35:38.046850      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:35:39.046935      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:35:40.047700      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:35:41.048574      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:35:42.048628      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:35:43.048694      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:35:44.048773      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:35:45.048868      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:35:46.049838      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:35:47.050069      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:35:48.050386      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:35:49.050738      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:35:50.051787      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:35:51.052616      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:35:52.052732      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:35:53.052831      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:35:54.052930      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:35:55.053069      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:35:56.053091      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:35:57.053279      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:35:58.053356      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:35:59.054190      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:00.054547      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:01.055402      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:02.055562      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:03.056558      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:04.057468      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:05.057970      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:06.058021      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:07.058723      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:08.058815      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:09.058980      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:36:09.511: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4302" for this suite. @ 04/20/24 13:36:09.515
• [34.788 seconds]
------------------------------
SS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 04/20/24 13:36:09.523
  Apr 20 13:36:09.523: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename pod-network-test @ 04/20/24 13:36:09.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:36:09.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:36:09.541
  STEP: Performing setup for networking test in namespace pod-network-test-2085 @ 04/20/24 13:36:09.544
  STEP: creating a selector @ 04/20/24 13:36:09.544
  STEP: Creating the service pods in kubernetes @ 04/20/24 13:36:09.544
  Apr 20 13:36:09.545: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0420 13:36:10.059062      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:11.059155      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:12.060063      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:13.060301      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:14.061258      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:15.061410      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:16.061654      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:17.061734      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:18.061970      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:19.062100      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:20.063003      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:21.063087      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:22.063773      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:23.064614      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:24.064707      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:25.064805      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:26.065196      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:27.065307      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:28.065352      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:29.065495      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:30.066235      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:31.066341      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 04/20/24 13:36:31.655
  E0420 13:36:32.066583      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:33.066822      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:36:33.691: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Apr 20 13:36:33.691: INFO: Going to poll 192.168.161.13 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Apr 20 13:36:33.695: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.161.13:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2085 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 13:36:33.695: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  Apr 20 13:36:33.695: INFO: ExecWithOptions: Clientset creation
  Apr 20 13:36:33.695: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2085/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.161.13%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 20 13:36:33.747: INFO: Found all 1 expected endpoints: [netserver-0]
  Apr 20 13:36:33.747: INFO: Going to poll 192.168.213.215 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Apr 20 13:36:33.750: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.213.215:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2085 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 13:36:33.750: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  Apr 20 13:36:33.751: INFO: ExecWithOptions: Clientset creation
  Apr 20 13:36:33.751: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2085/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.213.215%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 20 13:36:33.803: INFO: Found all 1 expected endpoints: [netserver-1]
  Apr 20 13:36:33.803: INFO: Going to poll 192.168.144.78 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Apr 20 13:36:33.808: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.144.78:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2085 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 13:36:33.808: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  Apr 20 13:36:33.808: INFO: ExecWithOptions: Clientset creation
  Apr 20 13:36:33.808: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2085/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.144.78%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 20 13:36:33.853: INFO: Found all 1 expected endpoints: [netserver-2]
  Apr 20 13:36:33.853: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2085" for this suite. @ 04/20/24 13:36:33.858
• [24.342 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 04/20/24 13:36:33.865
  Apr 20 13:36:33.866: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 13:36:33.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:36:33.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:36:33.889
  STEP: Creating a pod to test downward api env vars @ 04/20/24 13:36:33.892
  E0420 13:36:34.067731      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:35.068616      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:36.068962      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:37.069222      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 13:36:37.917
  Apr 20 13:36:37.921: INFO: Trying to get logs from node ip-172-31-41-198 pod downward-api-ba416b90-cef3-431b-80a5-a6df541a4d73 container dapi-container: <nil>
  STEP: delete the pod @ 04/20/24 13:36:37.937
  Apr 20 13:36:37.987: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2631" for this suite. @ 04/20/24 13:36:37.992
• [4.168 seconds]
------------------------------
SSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 04/20/24 13:36:38.033
  Apr 20 13:36:38.033: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename security-context @ 04/20/24 13:36:38.034
  E0420 13:36:38.069566      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:36:38.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:36:38.103
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 04/20/24 13:36:38.106
  E0420 13:36:39.069818      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:40.070016      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:41.070936      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:42.071635      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 13:36:42.131
  Apr 20 13:36:42.136: INFO: Trying to get logs from node ip-172-31-41-198 pod security-context-355cc213-f558-47d4-af22-1e57cc2f6327 container test-container: <nil>
  STEP: delete the pod @ 04/20/24 13:36:42.144
  Apr 20 13:36:42.249: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-3652" for this suite. @ 04/20/24 13:36:42.253
• [4.229 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 04/20/24 13:36:42.263
  Apr 20 13:36:42.263: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename replicaset @ 04/20/24 13:36:42.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:36:42.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:36:42.324
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 04/20/24 13:36:42.327
  E0420 13:36:43.071741      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:44.071814      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 04/20/24 13:36:44.372
  STEP: Then the orphan pod is adopted @ 04/20/24 13:36:44.5
  STEP: When the matched label of one of its pods change @ 04/20/24 13:36:44.508
  Apr 20 13:36:44.512: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 04/20/24 13:36:44.523
  E0420 13:36:45.071931      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:36:45.532: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5570" for this suite. @ 04/20/24 13:36:45.536
• [3.282 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 04/20/24 13:36:45.545
  Apr 20 13:36:45.545: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename proxy @ 04/20/24 13:36:45.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:36:45.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:36:45.618
  Apr 20 13:36:45.621: INFO: Creating pod...
  E0420 13:36:46.072051      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:47.072136      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:48.072229      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:49.072323      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:36:49.757: INFO: Creating service...
  Apr 20 13:36:49.772: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1409/pods/agnhost/proxy?method=DELETE
  Apr 20 13:36:49.778: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Apr 20 13:36:49.778: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1409/pods/agnhost/proxy?method=OPTIONS
  Apr 20 13:36:49.783: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Apr 20 13:36:49.783: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1409/pods/agnhost/proxy?method=PATCH
  Apr 20 13:36:49.850: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Apr 20 13:36:49.850: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1409/pods/agnhost/proxy?method=POST
  Apr 20 13:36:49.857: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Apr 20 13:36:49.857: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1409/pods/agnhost/proxy?method=PUT
  Apr 20 13:36:49.862: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Apr 20 13:36:49.862: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1409/services/e2e-proxy-test-service/proxy?method=DELETE
  Apr 20 13:36:49.875: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Apr 20 13:36:49.875: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1409/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Apr 20 13:36:49.881: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Apr 20 13:36:49.881: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1409/services/e2e-proxy-test-service/proxy?method=PATCH
  Apr 20 13:36:49.887: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Apr 20 13:36:49.887: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1409/services/e2e-proxy-test-service/proxy?method=POST
  Apr 20 13:36:49.894: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Apr 20 13:36:49.894: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1409/services/e2e-proxy-test-service/proxy?method=PUT
  Apr 20 13:36:49.900: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Apr 20 13:36:49.900: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1409/pods/agnhost/proxy?method=GET
  Apr 20 13:36:49.904: INFO: http.Client request:GET StatusCode:301
  Apr 20 13:36:49.904: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1409/services/e2e-proxy-test-service/proxy?method=GET
  Apr 20 13:36:49.910: INFO: http.Client request:GET StatusCode:301
  Apr 20 13:36:49.910: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1409/pods/agnhost/proxy?method=HEAD
  Apr 20 13:36:49.913: INFO: http.Client request:HEAD StatusCode:301
  Apr 20 13:36:49.913: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1409/services/e2e-proxy-test-service/proxy?method=HEAD
  Apr 20 13:36:49.919: INFO: http.Client request:HEAD StatusCode:301
  Apr 20 13:36:49.919: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1409" for this suite. @ 04/20/24 13:36:49.923
• [4.387 seconds]
------------------------------
SS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 04/20/24 13:36:49.932
  Apr 20 13:36:49.932: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename kubelet-test @ 04/20/24 13:36:49.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:36:50.069
  E0420 13:36:50.072439      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:36:50.072
  E0420 13:36:51.072588      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:52.072621      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:53.072727      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:54.072821      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:36:54.167: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7974" for this suite. @ 04/20/24 13:36:54.171
• [4.284 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 04/20/24 13:36:54.216
  Apr 20 13:36:54.216: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename field-validation @ 04/20/24 13:36:54.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:36:54.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:36:54.299
  STEP: apply creating a deployment @ 04/20/24 13:36:54.303
  Apr 20 13:36:54.353: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9023" for this suite. @ 04/20/24 13:36:54.357
• [0.212 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 04/20/24 13:36:54.429
  Apr 20 13:36:54.429: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename server-version @ 04/20/24 13:36:54.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:36:54.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:36:54.498
  STEP: Request ServerVersion @ 04/20/24 13:36:54.501
  STEP: Confirm major version @ 04/20/24 13:36:54.502
  Apr 20 13:36:54.502: INFO: Major version: 1
  STEP: Confirm minor version @ 04/20/24 13:36:54.502
  Apr 20 13:36:54.502: INFO: cleanMinorVersion: 29
  Apr 20 13:36:54.502: INFO: Minor version: 29
  Apr 20 13:36:54.502: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-7071" for this suite. @ 04/20/24 13:36:54.57
• [0.188 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:784
  STEP: Creating a kubernetes client @ 04/20/24 13:36:54.617
  Apr 20 13:36:54.617: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename job @ 04/20/24 13:36:54.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:36:54.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:36:54.701
  STEP: Creating a job @ 04/20/24 13:36:54.704
  STEP: Ensure pods equal to parallelism count is attached to the job @ 04/20/24 13:36:54.779
  E0420 13:36:55.073737      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:56.074012      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:57.074129      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:36:58.074215      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 04/20/24 13:36:58.784
  STEP: updating /status @ 04/20/24 13:36:58.792
  STEP: get /status @ 04/20/24 13:36:58.801
  Apr 20 13:36:58.805: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1505" for this suite. @ 04/20/24 13:36:58.809
• [4.199 seconds]
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 04/20/24 13:36:58.815
  Apr 20 13:36:58.816: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename tables @ 04/20/24 13:36:58.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:36:58.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:36:58.834
  Apr 20 13:36:58.839: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-9510" for this suite. @ 04/20/24 13:36:58.844
• [0.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 04/20/24 13:36:58.851
  Apr 20 13:36:58.851: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename security-context @ 04/20/24 13:36:58.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:36:58.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:36:58.868
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 04/20/24 13:36:58.871
  E0420 13:36:59.075032      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:00.075298      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:01.075920      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:02.076039      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 13:37:02.892
  Apr 20 13:37:02.896: INFO: Trying to get logs from node ip-172-31-81-0 pod security-context-74e9b686-a563-4cd0-a25b-685fb6cc3844 container test-container: <nil>
  STEP: delete the pod @ 04/20/24 13:37:02.915
  Apr 20 13:37:02.933: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-9395" for this suite. @ 04/20/24 13:37:02.937
• [4.092 seconds]
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 04/20/24 13:37:02.943
  Apr 20 13:37:02.943: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename var-expansion @ 04/20/24 13:37:02.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:37:02.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:37:02.962
  STEP: creating the pod with failed condition @ 04/20/24 13:37:02.965
  E0420 13:37:03.076424      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:04.076504      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:05.076792      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:06.077022      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:07.077848      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:08.077947      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:09.078300      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:10.078569      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:11.079070      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:12.079170      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:13.079900      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:14.080010      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:15.080095      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:16.080258      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:17.081297      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:18.081671      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:19.081911      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:20.081993      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:21.082620      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:22.082712      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:23.083548      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:24.084568      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:25.085359      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:26.086184      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:27.087194      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:28.087392      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:29.088027      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:30.088154      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:31.088900      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:32.089205      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:33.090078      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:34.090188      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:35.090600      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:36.091274      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:37.091529      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:38.091602      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:39.092632      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:40.092745      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:41.093625      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:42.093759      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:43.094279      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:44.094397      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:45.094710      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:46.095224      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:47.095486      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:48.095872      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:49.096010      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:50.096104      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:51.096551      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:52.096668      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:53.096774      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:54.096867      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:55.097077      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:56.097199      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:57.097281      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:58.097445      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:37:59.097719      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:00.097836      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:01.098024      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:02.098076      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:03.098289      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:04.098393      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:05.098592      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:06.099235      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:07.099493      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:08.099555      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:09.099619      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:10.099723      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:11.099832      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:12.100085      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:13.100182      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:14.100296      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:15.100396      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:16.100849      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:17.100968      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:18.101063      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:19.101157      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:20.101278      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:21.101367      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:22.101471      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:23.101566      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:24.101670      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:25.101782      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:26.102252      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:27.102362      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:28.102450      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:29.102680      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:30.102849      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:31.103001      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:32.103509      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:33.103609      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:34.103716      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:35.104562      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:36.105640      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:37.105740      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:38.105837      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:39.105942      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:40.106035      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:41.106160      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:42.106669      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:43.106883      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:44.107506      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:45.108572      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:46.109269      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:47.109372      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:48.110316      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:49.110426      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:50.110842      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:51.111055      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:52.112095      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:53.112279      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:54.112385      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:55.112484      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:56.113255      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:57.113368      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:58.113490      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:38:59.113603      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:00.113655      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:01.113751      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:02.113877      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pod @ 04/20/24 13:39:02.976
  E0420 13:39:03.114236      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:39:03.491: INFO: Successfully updated pod "var-expansion-619c2743-7a44-4525-a3bb-26bac5c672d7"
  STEP: waiting for pod running @ 04/20/24 13:39:03.491
  E0420 13:39:04.114351      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:05.114565      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 04/20/24 13:39:05.504
  Apr 20 13:39:05.504: INFO: Deleting pod "var-expansion-619c2743-7a44-4525-a3bb-26bac5c672d7" in namespace "var-expansion-4273"
  Apr 20 13:39:05.513: INFO: Wait up to 5m0s for pod "var-expansion-619c2743-7a44-4525-a3bb-26bac5c672d7" to be fully deleted
  E0420 13:39:06.115264      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:07.115634      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:08.115741      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:09.115835      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:10.115924      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:11.116015      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:12.116109      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:13.116200      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:14.116785      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:15.117097      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:16.117290      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:17.117647      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:18.117989      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:19.118409      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:20.118530      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:21.118657      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:22.119142      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:23.119323      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:24.119990      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:25.120094      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:26.120933      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:27.121044      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:28.121121      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:29.121870      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:30.121962      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:31.122151      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:32.123105      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:33.123205      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:34.123299      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:35.123492      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:36.124226      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:37.124346      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:39:37.607: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4273" for this suite. @ 04/20/24 13:39:37.611
• [154.677 seconds]
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 04/20/24 13:39:37.62
  Apr 20 13:39:37.620: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename configmap @ 04/20/24 13:39:37.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:39:37.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:39:37.639
  STEP: Creating configMap with name cm-test-opt-del-43d80295-8b7a-4e16-9586-a060918fd186 @ 04/20/24 13:39:37.646
  STEP: Creating configMap with name cm-test-opt-upd-b7f85d12-bb28-4e24-9644-b4ccd9cf106c @ 04/20/24 13:39:37.651
  STEP: Creating the pod @ 04/20/24 13:39:37.656
  E0420 13:39:38.124672      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:39.124772      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-43d80295-8b7a-4e16-9586-a060918fd186 @ 04/20/24 13:39:39.709
  STEP: Updating configmap cm-test-opt-upd-b7f85d12-bb28-4e24-9644-b4ccd9cf106c @ 04/20/24 13:39:39.716
  STEP: Creating configMap with name cm-test-opt-create-997d0870-fa13-47f4-b064-0394574cdb75 @ 04/20/24 13:39:39.721
  STEP: waiting to observe update in volume @ 04/20/24 13:39:39.726
  E0420 13:39:40.124857      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:41.124969      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:42.125152      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:43.125844      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:39:43.764: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7738" for this suite. @ 04/20/24 13:39:43.768
• [6.157 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 04/20/24 13:39:43.778
  Apr 20 13:39:43.778: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename deployment @ 04/20/24 13:39:43.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:39:43.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:39:43.799
  Apr 20 13:39:43.813: INFO: Pod name rollover-pod: Found 0 pods out of 1
  E0420 13:39:44.125941      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:45.126231      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:46.126499      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:47.126600      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:48.126690      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:39:48.818: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/20/24 13:39:48.818
  Apr 20 13:39:48.818: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0420 13:39:49.127262      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:50.127403      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:39:50.823: INFO: Creating deployment "test-rollover-deployment"
  Apr 20 13:39:50.832: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  E0420 13:39:51.127503      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:52.128556      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:39:52.841: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Apr 20 13:39:52.848: INFO: Ensure that both replica sets have 1 created replica
  Apr 20 13:39:52.856: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Apr 20 13:39:52.866: INFO: Updating deployment test-rollover-deployment
  Apr 20 13:39:52.866: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0420 13:39:53.129171      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:54.129289      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:39:54.874: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Apr 20 13:39:54.883: INFO: Make sure deployment "test-rollover-deployment" is complete
  Apr 20 13:39:54.892: INFO: all replica sets need to contain the pod-template-hash label
  Apr 20 13:39:54.892: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 13, 39, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 13, 39, 50, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 13, 39, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 13, 39, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 13:39:55.129427      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:56.130352      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:39:56.901: INFO: all replica sets need to contain the pod-template-hash label
  Apr 20 13:39:56.901: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 13, 39, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 13, 39, 50, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 13, 39, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 13, 39, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 13:39:57.131247      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:39:58.131504      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:39:58.901: INFO: all replica sets need to contain the pod-template-hash label
  Apr 20 13:39:58.901: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 13, 39, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 13, 39, 50, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 13, 39, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 13, 39, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 13:39:59.132194      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:00.132582      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:40:00.901: INFO: all replica sets need to contain the pod-template-hash label
  Apr 20 13:40:00.901: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 13, 39, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 13, 39, 50, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 13, 39, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 13, 39, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 13:40:01.132931      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:02.133181      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:40:02.902: INFO: all replica sets need to contain the pod-template-hash label
  Apr 20 13:40:02.902: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 13, 39, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 13, 39, 50, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 13, 39, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 13, 39, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 13:40:03.133716      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:04.133990      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:40:04.900: INFO: 
  Apr 20 13:40:04.900: INFO: Ensure that both old replica sets have no replicas
  Apr 20 13:40:04.912: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8322",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f88f7707-b8b6-491e-a7b3-ede829529641",
      ResourceVersion: (string) (len=5) "36620",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849217190,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849217192,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849217204,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849217190,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849217190,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849217204,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849217190,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-68774655d5\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 20 13:40:04.918: INFO: New ReplicaSet "test-rollover-deployment-68774655d5" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-68774655d5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8322",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5699048e-492a-400a-864a-7966da1e618c",
      ResourceVersion: (string) (len=5) "36610",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849217192,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "f88f7707-b8b6-491e-a7b3-ede829529641",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849217192,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 38 38 66 37 37  30 37 2d 62 38 62 36 2d  |\"f88f7707-b8b6-|
              00000120  34 39 31 65 2d 61 37 62  33 2d 65 64 65 38 32 39  |491e-a7b3-ede829|
              00000130  35 32 39 36 34 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |529641\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849217204,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 20 13:40:04.938: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Apr 20 13:40:04.938: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8322",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0f5e49a5-41ed-490c-ad21-e1c5e53b5c54",
      ResourceVersion: (string) (len=5) "36619",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849217183,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "f88f7707-b8b6-491e-a7b3-ede829529641",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849217183,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849217204,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  66 38 38 66 37 37 30 37  2d 62 38 62 36 2d 34 39  |f88f7707-b8b6-49|
              000000c0  31 65 2d 61 37 62 33 2d  65 64 65 38 32 39 35 32  |1e-a7b3-ede82952|
              000000d0  39 36 34 31 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |9641\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849217204,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 20 13:40:04.942: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8322",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4fa9e54a-fc9b-437a-90ae-d607a123d47f",
      ResourceVersion: (string) (len=5) "36570",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849217190,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "f88f7707-b8b6-491e-a7b3-ede829529641",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849217192,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 38 38 66 37 37  30 37 2d 62 38 62 36 2d  |\"f88f7707-b8b6-|
              00000120  34 39 31 65 2d 61 37 62  33 2d 65 64 65 38 32 39  |491e-a7b3-ede829|
              00000130  35 32 39 36 34 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |529641\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849217192,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 20 13:40:04.947: INFO: Pod "test-rollover-deployment-68774655d5-8czw5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-68774655d5-8czw5",
      GenerateName: (string) (len=36) "test-rollover-deployment-68774655d5-",
      Namespace: (string) (len=15) "deployment-8322",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7eb9ede2-daf8-4b54-b737-0981420d34ab",
      ResourceVersion: (string) (len=5) "36586",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849217192,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-68774655d5",
          UID: (types.UID) (len=36) "5699048e-492a-400a-864a-7966da1e618c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849217192,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 36  39 39 30 34 38 65 2d 34  |d\":\"5699048e-4|
              00000090  39 32 61 2d 34 30 30 61  2d 38 36 34 61 2d 37 39  |92a-400a-864a-79|
              000000a0  36 36 64 61 31 65 36 31  38 63 5c 22 7d 22 3a 7b  |66da1e618c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849217194,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 31  33 2e 32 32 37 5c 22 7d  |2.168.213.227\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jq7bn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jq7bn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-41-198",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849217194,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849217192,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849217194,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849217194,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849217192,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.41.198",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.41.198"
        }
      },
      PodIP: (string) (len=15) "192.168.213.227",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.213.227"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849217192,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849217193,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://518f0c739e83f30ed83fbc838a13d9c64890957d7d10522222e5a475aa832ad2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 13:40:04.950: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8322" for this suite. @ 04/20/24 13:40:04.956
• [21.185 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 04/20/24 13:40:04.964
  Apr 20 13:40:04.964: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename services @ 04/20/24 13:40:04.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:40:04.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:40:04.981
  Apr 20 13:40:04.988: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7773" for this suite. @ 04/20/24 13:40:04.991
• [0.035 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1053
  STEP: Creating a kubernetes client @ 04/20/24 13:40:04.999
  Apr 20 13:40:04.999: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 13:40:05
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:40:05.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:40:05.018
  STEP: create deployment with httpd image @ 04/20/24 13:40:05.021
  Apr 20 13:40:05.021: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-6902 create -f -'
  Apr 20 13:40:05.082: INFO: stderr: ""
  Apr 20 13:40:05.082: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 04/20/24 13:40:05.082
  Apr 20 13:40:05.083: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-6902 diff -f -'
  E0420 13:40:05.134374      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:06.135315      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:07.135639      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:08.135758      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:09.136587      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:40:09.367: INFO: rc: 1
  Apr 20 13:40:09.367: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-6902 delete -f -'
  Apr 20 13:40:09.419: INFO: stderr: ""
  Apr 20 13:40:09.419: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Apr 20 13:40:09.419: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6902" for this suite. @ 04/20/24 13:40:09.423
• [4.432 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 04/20/24 13:40:09.432
  Apr 20 13:40:09.432: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 13:40:09.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:40:09.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:40:09.454
  STEP: Creating a pod to test downward api env vars @ 04/20/24 13:40:09.458
  E0420 13:40:10.137042      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:11.137153      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:12.137247      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:13.137364      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 13:40:13.484
  Apr 20 13:40:13.488: INFO: Trying to get logs from node ip-172-31-81-0 pod downward-api-05e6ef25-1836-4277-be66-4aa25813022d container dapi-container: <nil>
  STEP: delete the pod @ 04/20/24 13:40:13.502
  Apr 20 13:40:13.522: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3894" for this suite. @ 04/20/24 13:40:13.526
• [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 04/20/24 13:40:13.534
  Apr 20 13:40:13.534: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename sched-preemption @ 04/20/24 13:40:13.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:40:13.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:40:13.551
  Apr 20 13:40:13.568: INFO: Waiting up to 1m0s for all nodes to be ready
  E0420 13:40:14.137449      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:15.137790      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:16.137878      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:17.138062      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:18.138985      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:19.139211      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:20.139278      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:21.139486      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:22.140350      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:23.140423      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:24.140555      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:25.140742      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:26.141309      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:27.141414      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:28.141654      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:29.141743      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:30.142279      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:31.142388      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:32.142491      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:33.142807      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:34.142917      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:35.143844      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:36.143945      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:37.144551      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:38.144682      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:39.144763      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:40.145633      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:41.146409      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:42.146511      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:43.146610      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:44.146706      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:45.146918      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:46.147303      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:47.147509      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:48.147610      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:49.147711      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:50.147825      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:51.147904      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:52.148005      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:53.148087      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:54.148217      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:55.148678      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:56.149380      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:57.149539      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:58.149692      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:40:59.149970      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:00.150861      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:01.150956      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:02.151893      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:03.152544      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:04.152651      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:05.152830      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:06.153267      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:07.153366      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:08.153571      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:09.153774      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:10.153959      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:11.154170      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:12.154891      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:13.154989      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:41:13.573: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 04/20/24 13:41:13.577
  Apr 20 13:41:13.606: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Apr 20 13:41:13.615: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Apr 20 13:41:13.630: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Apr 20 13:41:13.636: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Apr 20 13:41:13.657: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Apr 20 13:41:13.668: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 04/20/24 13:41:13.668
  E0420 13:41:14.155321      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:15.155510      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 04/20/24 13:41:15.701
  E0420 13:41:16.155612      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:17.155714      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:18.156554      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:19.156650      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:41:19.783: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8569" for this suite. @ 04/20/24 13:41:19.787
• [66.260 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 04/20/24 13:41:19.794
  Apr 20 13:41:19.794: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename services @ 04/20/24 13:41:19.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:41:19.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:41:19.812
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-6309 @ 04/20/24 13:41:19.815
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 04/20/24 13:41:19.832
  STEP: creating service externalsvc in namespace services-6309 @ 04/20/24 13:41:19.832
  STEP: creating replication controller externalsvc in namespace services-6309 @ 04/20/24 13:41:19.845
  I0420 13:41:19.857763      20 runners.go:197] Created replication controller with name: externalsvc, namespace: services-6309, replica count: 2
  E0420 13:41:20.157480      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:21.158199      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:22.158312      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 13:41:22.908052      20 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 04/20/24 13:41:22.913
  Apr 20 13:41:22.933: INFO: Creating new exec pod
  E0420 13:41:23.158728      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:24.158825      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:41:24.948: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=services-6309 exec execpodv299c -- /bin/sh -x -c nslookup nodeport-service.services-6309.svc.cluster.local'
  Apr 20 13:41:25.069: INFO: stderr: "+ nslookup nodeport-service.services-6309.svc.cluster.local\n"
  Apr 20 13:41:25.069: INFO: stdout: "Server:\t\t10.152.183.96\nAddress:\t10.152.183.96#53\n\nnodeport-service.services-6309.svc.cluster.local\tcanonical name = externalsvc.services-6309.svc.cluster.local.\nName:\texternalsvc.services-6309.svc.cluster.local\nAddress: 10.152.183.160\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-6309, will wait for the garbage collector to delete the pods @ 04/20/24 13:41:25.069
  Apr 20 13:41:25.130: INFO: Deleting ReplicationController externalsvc took: 6.632899ms
  E0420 13:41:25.159480      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:41:25.230: INFO: Terminating ReplicationController externalsvc pods took: 100.487153ms
  E0420 13:41:26.160028      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:27.160879      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:41:27.950: INFO: Cleaning up the NodePort to ExternalName test service
  Apr 20 13:41:27.962: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6309" for this suite. @ 04/20/24 13:41:27.966
• [8.180 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:169
  STEP: Creating a kubernetes client @ 04/20/24 13:41:27.975
  Apr 20 13:41:27.975: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/20/24 13:41:27.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:41:27.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:41:27.991
  STEP: create the container to handle the HTTPGet hook request. @ 04/20/24 13:41:27.998
  E0420 13:41:28.161218      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:29.161315      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 04/20/24 13:41:30.022
  E0420 13:41:30.161578      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:31.161818      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 04/20/24 13:41:32.047
  STEP: delete the pod with lifecycle hook @ 04/20/24 13:41:32.065
  E0420 13:41:32.161890      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:33.162037      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:41:34.083: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9993" for this suite. @ 04/20/24 13:41:34.088
• [6.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 04/20/24 13:41:34.095
  Apr 20 13:41:34.095: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 13:41:34.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:41:34.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:41:34.116
  STEP: Creating Pod @ 04/20/24 13:41:34.119
  E0420 13:41:34.162944      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:35.163129      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 04/20/24 13:41:36.138
  Apr 20 13:41:36.138: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-8702 PodName:pod-sharedvolume-faac7615-a528-4ec9-8c7b-bf0f3c12a272 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 13:41:36.138: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  Apr 20 13:41:36.139: INFO: ExecWithOptions: Clientset creation
  Apr 20 13:41:36.139: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-8702/pods/pod-sharedvolume-faac7615-a528-4ec9-8c7b-bf0f3c12a272/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  E0420 13:41:36.163873      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:41:36.191: INFO: Exec stderr: ""
  Apr 20 13:41:36.191: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8702" for this suite. @ 04/20/24 13:41:36.196
• [2.108 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 04/20/24 13:41:36.203
  Apr 20 13:41:36.203: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename conformance-tests @ 04/20/24 13:41:36.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:41:36.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:41:36.221
  STEP: Getting node addresses @ 04/20/24 13:41:36.224
  Apr 20 13:41:36.224: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Apr 20 13:41:36.229: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-2438" for this suite. @ 04/20/24 13:41:36.233
• [0.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 04/20/24 13:41:36.24
  Apr 20 13:41:36.240: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename dns @ 04/20/24 13:41:36.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:41:36.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:41:36.258
  STEP: Creating a test headless service @ 04/20/24 13:41:36.261
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5374.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-5374.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5374.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-5374.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5374.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-5374.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5374.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-5374.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5374.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-5374.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5374.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-5374.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 76.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.76_udp@PTR;check="$$(dig +tcp +noall +answer +search 76.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.76_tcp@PTR;sleep 1; done
   @ 04/20/24 13:41:36.277
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5374.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5374.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5374.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5374.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5374.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-5374.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5374.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-5374.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5374.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-5374.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5374.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-5374.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 76.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.76_udp@PTR;check="$$(dig +tcp +noall +answer +search 76.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.76_tcp@PTR;sleep 1; done
   @ 04/20/24 13:41:36.278
  STEP: creating a pod to probe DNS @ 04/20/24 13:41:36.278
  STEP: submitting the pod to kubernetes @ 04/20/24 13:41:36.278
  E0420 13:41:37.164660      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:38.164695      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/20/24 13:41:38.303
  STEP: looking for the results for each expected name from probers @ 04/20/24 13:41:38.308
  Apr 20 13:41:38.313: INFO: Unable to read wheezy_udp@dns-test-service.dns-5374.svc.cluster.local from pod dns-5374/dns-test-18749f0b-feb1-408c-bab8-5ba8490c11e7: the server could not find the requested resource (get pods dns-test-18749f0b-feb1-408c-bab8-5ba8490c11e7)
  Apr 20 13:41:38.318: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5374.svc.cluster.local from pod dns-5374/dns-test-18749f0b-feb1-408c-bab8-5ba8490c11e7: the server could not find the requested resource (get pods dns-test-18749f0b-feb1-408c-bab8-5ba8490c11e7)
  Apr 20 13:41:38.323: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-5374.svc.cluster.local from pod dns-5374/dns-test-18749f0b-feb1-408c-bab8-5ba8490c11e7: the server could not find the requested resource (get pods dns-test-18749f0b-feb1-408c-bab8-5ba8490c11e7)
  Apr 20 13:41:38.327: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5374.svc.cluster.local from pod dns-5374/dns-test-18749f0b-feb1-408c-bab8-5ba8490c11e7: the server could not find the requested resource (get pods dns-test-18749f0b-feb1-408c-bab8-5ba8490c11e7)
  Apr 20 13:41:38.350: INFO: Unable to read jessie_udp@dns-test-service.dns-5374.svc.cluster.local from pod dns-5374/dns-test-18749f0b-feb1-408c-bab8-5ba8490c11e7: the server could not find the requested resource (get pods dns-test-18749f0b-feb1-408c-bab8-5ba8490c11e7)
  Apr 20 13:41:38.354: INFO: Unable to read jessie_tcp@dns-test-service.dns-5374.svc.cluster.local from pod dns-5374/dns-test-18749f0b-feb1-408c-bab8-5ba8490c11e7: the server could not find the requested resource (get pods dns-test-18749f0b-feb1-408c-bab8-5ba8490c11e7)
  Apr 20 13:41:38.359: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5374.svc.cluster.local from pod dns-5374/dns-test-18749f0b-feb1-408c-bab8-5ba8490c11e7: the server could not find the requested resource (get pods dns-test-18749f0b-feb1-408c-bab8-5ba8490c11e7)
  Apr 20 13:41:38.363: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5374.svc.cluster.local from pod dns-5374/dns-test-18749f0b-feb1-408c-bab8-5ba8490c11e7: the server could not find the requested resource (get pods dns-test-18749f0b-feb1-408c-bab8-5ba8490c11e7)
  Apr 20 13:41:38.390: INFO: Lookups using dns-5374/dns-test-18749f0b-feb1-408c-bab8-5ba8490c11e7 failed for: [wheezy_udp@dns-test-service.dns-5374.svc.cluster.local wheezy_tcp@dns-test-service.dns-5374.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-5374.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-5374.svc.cluster.local jessie_udp@dns-test-service.dns-5374.svc.cluster.local jessie_tcp@dns-test-service.dns-5374.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-5374.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-5374.svc.cluster.local]

  Apr 20 13:41:38.404: INFO: Pod client logs for webserver: 
  Apr 20 13:41:38.415: INFO: Pod client logs for querier: 
  Apr 20 13:41:38.430: INFO: Pod client logs for jessie-querier: 
  E0420 13:41:39.165658      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:40.166637      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:41.166735      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:42.167197      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:43.167344      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:41:43.379: INFO: DNS probes using dns-5374/dns-test-18749f0b-feb1-408c-bab8-5ba8490c11e7 succeeded

  STEP: deleting the pod @ 04/20/24 13:41:43.379
  STEP: deleting the test service @ 04/20/24 13:41:43.398
  STEP: deleting the test headless service @ 04/20/24 13:41:43.43
  Apr 20 13:41:43.442: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5374" for this suite. @ 04/20/24 13:41:43.447
• [7.213 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 04/20/24 13:41:43.453
  Apr 20 13:41:43.454: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename webhook @ 04/20/24 13:41:43.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:41:43.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:41:43.471
  STEP: Setting up server cert @ 04/20/24 13:41:43.493
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 13:41:43.68
  STEP: Deploying the webhook pod @ 04/20/24 13:41:43.69
  STEP: Wait for the deployment to be ready @ 04/20/24 13:41:43.702
  Apr 20 13:41:43.711: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0420 13:41:44.168099      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:45.168181      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 13:41:45.725
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 13:41:45.735
  E0420 13:41:46.169022      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:41:46.735: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 04/20/24 13:41:46.743
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 04/20/24 13:41:46.762
  STEP: Creating a configMap that should not be mutated @ 04/20/24 13:41:46.769
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 04/20/24 13:41:46.78
  STEP: Creating a configMap that should be mutated @ 04/20/24 13:41:46.788
  Apr 20 13:41:46.849: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9731" for this suite. @ 04/20/24 13:41:46.852
  STEP: Destroying namespace "webhook-markers-3280" for this suite. @ 04/20/24 13:41:46.861
• [3.414 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 04/20/24 13:41:46.868
  Apr 20 13:41:46.868: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename gc @ 04/20/24 13:41:46.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:41:46.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:41:46.887
  STEP: create the rc @ 04/20/24 13:41:46.896
  W0420 13:41:46.902539      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0420 13:41:47.169815      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:48.169912      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:49.170718      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:50.172254      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:51.172355      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:52.175565      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 04/20/24 13:41:52.907
  STEP: wait for the rc to be deleted @ 04/20/24 13:41:52.919
  E0420 13:41:53.176168      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:54.176292      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:55.176372      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:56.177270      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:57.177459      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 04/20/24 13:41:57.924
  E0420 13:41:58.178038      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:41:59.178097      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:00.178278      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:01.178384      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:02.178510      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:03.179438      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:04.179528      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:05.179650      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:06.180451      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:07.180746      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:08.180820      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:09.181688      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:10.181889      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:11.182001      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:12.182200      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:13.182405      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:14.183383      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:15.183499      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:16.184302      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:17.184567      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:18.184674      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:19.184869      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:20.184947      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:21.185402      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:22.185771      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:23.185893      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:24.186001      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:25.186114      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:26.186244      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:27.186333      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 04/20/24 13:42:27.935
  W0420 13:42:27.940334      20 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Apr 20 13:42:27.940: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 20 13:42:27.940: INFO: Deleting pod "simpletest.rc-2ksr8" in namespace "gc-6270"
  Apr 20 13:42:27.955: INFO: Deleting pod "simpletest.rc-4hlw5" in namespace "gc-6270"
  Apr 20 13:42:27.971: INFO: Deleting pod "simpletest.rc-4wlm4" in namespace "gc-6270"
  Apr 20 13:42:27.986: INFO: Deleting pod "simpletest.rc-5b465" in namespace "gc-6270"
  Apr 20 13:42:27.998: INFO: Deleting pod "simpletest.rc-5c758" in namespace "gc-6270"
  Apr 20 13:42:28.012: INFO: Deleting pod "simpletest.rc-5f6c5" in namespace "gc-6270"
  Apr 20 13:42:28.024: INFO: Deleting pod "simpletest.rc-5fc5n" in namespace "gc-6270"
  Apr 20 13:42:28.037: INFO: Deleting pod "simpletest.rc-5fk94" in namespace "gc-6270"
  Apr 20 13:42:28.049: INFO: Deleting pod "simpletest.rc-62mkm" in namespace "gc-6270"
  Apr 20 13:42:28.062: INFO: Deleting pod "simpletest.rc-6ddcp" in namespace "gc-6270"
  Apr 20 13:42:28.078: INFO: Deleting pod "simpletest.rc-6gqlz" in namespace "gc-6270"
  Apr 20 13:42:28.089: INFO: Deleting pod "simpletest.rc-6hrvk" in namespace "gc-6270"
  Apr 20 13:42:28.103: INFO: Deleting pod "simpletest.rc-6kfht" in namespace "gc-6270"
  Apr 20 13:42:28.118: INFO: Deleting pod "simpletest.rc-6lnbv" in namespace "gc-6270"
  Apr 20 13:42:28.132: INFO: Deleting pod "simpletest.rc-6rch7" in namespace "gc-6270"
  Apr 20 13:42:28.146: INFO: Deleting pod "simpletest.rc-6w7xj" in namespace "gc-6270"
  Apr 20 13:42:28.158: INFO: Deleting pod "simpletest.rc-7bbck" in namespace "gc-6270"
  Apr 20 13:42:28.173: INFO: Deleting pod "simpletest.rc-7crpg" in namespace "gc-6270"
  E0420 13:42:28.187411      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:42:28.190: INFO: Deleting pod "simpletest.rc-7fdsw" in namespace "gc-6270"
  Apr 20 13:42:28.203: INFO: Deleting pod "simpletest.rc-829dn" in namespace "gc-6270"
  Apr 20 13:42:28.217: INFO: Deleting pod "simpletest.rc-8gg5n" in namespace "gc-6270"
  Apr 20 13:42:28.239: INFO: Deleting pod "simpletest.rc-8gm62" in namespace "gc-6270"
  Apr 20 13:42:28.253: INFO: Deleting pod "simpletest.rc-9vdk5" in namespace "gc-6270"
  Apr 20 13:42:28.268: INFO: Deleting pod "simpletest.rc-9wxd7" in namespace "gc-6270"
  Apr 20 13:42:28.282: INFO: Deleting pod "simpletest.rc-b568t" in namespace "gc-6270"
  Apr 20 13:42:28.293: INFO: Deleting pod "simpletest.rc-b6bds" in namespace "gc-6270"
  Apr 20 13:42:28.309: INFO: Deleting pod "simpletest.rc-b8cbx" in namespace "gc-6270"
  Apr 20 13:42:28.328: INFO: Deleting pod "simpletest.rc-bjtjt" in namespace "gc-6270"
  Apr 20 13:42:28.346: INFO: Deleting pod "simpletest.rc-bk86d" in namespace "gc-6270"
  Apr 20 13:42:28.359: INFO: Deleting pod "simpletest.rc-c9sxh" in namespace "gc-6270"
  Apr 20 13:42:28.373: INFO: Deleting pod "simpletest.rc-cb8sm" in namespace "gc-6270"
  Apr 20 13:42:28.390: INFO: Deleting pod "simpletest.rc-cbj5k" in namespace "gc-6270"
  Apr 20 13:42:28.407: INFO: Deleting pod "simpletest.rc-cgqsf" in namespace "gc-6270"
  Apr 20 13:42:28.420: INFO: Deleting pod "simpletest.rc-czcr9" in namespace "gc-6270"
  Apr 20 13:42:28.442: INFO: Deleting pod "simpletest.rc-czksf" in namespace "gc-6270"
  Apr 20 13:42:28.458: INFO: Deleting pod "simpletest.rc-d8ffq" in namespace "gc-6270"
  Apr 20 13:42:28.477: INFO: Deleting pod "simpletest.rc-dbhwl" in namespace "gc-6270"
  Apr 20 13:42:28.488: INFO: Deleting pod "simpletest.rc-ddjsz" in namespace "gc-6270"
  Apr 20 13:42:28.515: INFO: Deleting pod "simpletest.rc-dh8rh" in namespace "gc-6270"
  Apr 20 13:42:28.534: INFO: Deleting pod "simpletest.rc-dnkjq" in namespace "gc-6270"
  Apr 20 13:42:28.552: INFO: Deleting pod "simpletest.rc-dqdms" in namespace "gc-6270"
  Apr 20 13:42:28.566: INFO: Deleting pod "simpletest.rc-drslr" in namespace "gc-6270"
  Apr 20 13:42:28.581: INFO: Deleting pod "simpletest.rc-drxgx" in namespace "gc-6270"
  Apr 20 13:42:28.603: INFO: Deleting pod "simpletest.rc-f5w97" in namespace "gc-6270"
  Apr 20 13:42:28.615: INFO: Deleting pod "simpletest.rc-f6f9c" in namespace "gc-6270"
  Apr 20 13:42:28.625: INFO: Deleting pod "simpletest.rc-fz2sn" in namespace "gc-6270"
  Apr 20 13:42:28.645: INFO: Deleting pod "simpletest.rc-g5pdx" in namespace "gc-6270"
  Apr 20 13:42:28.657: INFO: Deleting pod "simpletest.rc-g5wxt" in namespace "gc-6270"
  Apr 20 13:42:28.672: INFO: Deleting pod "simpletest.rc-g6p7k" in namespace "gc-6270"
  Apr 20 13:42:28.685: INFO: Deleting pod "simpletest.rc-gpdrx" in namespace "gc-6270"
  Apr 20 13:42:28.700: INFO: Deleting pod "simpletest.rc-gvnt7" in namespace "gc-6270"
  Apr 20 13:42:28.714: INFO: Deleting pod "simpletest.rc-hjkjc" in namespace "gc-6270"
  Apr 20 13:42:28.799: INFO: Deleting pod "simpletest.rc-hnbnj" in namespace "gc-6270"
  Apr 20 13:42:28.813: INFO: Deleting pod "simpletest.rc-j2dz4" in namespace "gc-6270"
  Apr 20 13:42:28.829: INFO: Deleting pod "simpletest.rc-j7jfp" in namespace "gc-6270"
  Apr 20 13:42:28.844: INFO: Deleting pod "simpletest.rc-j94hc" in namespace "gc-6270"
  Apr 20 13:42:28.859: INFO: Deleting pod "simpletest.rc-jkqnn" in namespace "gc-6270"
  Apr 20 13:42:28.875: INFO: Deleting pod "simpletest.rc-jrr6q" in namespace "gc-6270"
  Apr 20 13:42:28.890: INFO: Deleting pod "simpletest.rc-k6z6b" in namespace "gc-6270"
  Apr 20 13:42:28.903: INFO: Deleting pod "simpletest.rc-k84pv" in namespace "gc-6270"
  Apr 20 13:42:28.916: INFO: Deleting pod "simpletest.rc-kzwf2" in namespace "gc-6270"
  Apr 20 13:42:28.927: INFO: Deleting pod "simpletest.rc-lf7jt" in namespace "gc-6270"
  Apr 20 13:42:28.940: INFO: Deleting pod "simpletest.rc-m2dr9" in namespace "gc-6270"
  Apr 20 13:42:28.963: INFO: Deleting pod "simpletest.rc-m92jh" in namespace "gc-6270"
  Apr 20 13:42:28.975: INFO: Deleting pod "simpletest.rc-mp4zz" in namespace "gc-6270"
  Apr 20 13:42:28.994: INFO: Deleting pod "simpletest.rc-n2g85" in namespace "gc-6270"
  Apr 20 13:42:29.010: INFO: Deleting pod "simpletest.rc-ncxmm" in namespace "gc-6270"
  Apr 20 13:42:29.022: INFO: Deleting pod "simpletest.rc-pf44k" in namespace "gc-6270"
  Apr 20 13:42:29.037: INFO: Deleting pod "simpletest.rc-pmf9c" in namespace "gc-6270"
  Apr 20 13:42:29.052: INFO: Deleting pod "simpletest.rc-q2hnq" in namespace "gc-6270"
  Apr 20 13:42:29.066: INFO: Deleting pod "simpletest.rc-q552z" in namespace "gc-6270"
  Apr 20 13:42:29.091: INFO: Deleting pod "simpletest.rc-q6bzp" in namespace "gc-6270"
  Apr 20 13:42:29.149: INFO: Deleting pod "simpletest.rc-qdw6v" in namespace "gc-6270"
  Apr 20 13:42:29.187: INFO: Deleting pod "simpletest.rc-qn4lb" in namespace "gc-6270"
  E0420 13:42:29.187913      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:42:29.243: INFO: Deleting pod "simpletest.rc-qnqw5" in namespace "gc-6270"
  Apr 20 13:42:29.289: INFO: Deleting pod "simpletest.rc-r4whw" in namespace "gc-6270"
  Apr 20 13:42:29.339: INFO: Deleting pod "simpletest.rc-rttdl" in namespace "gc-6270"
  Apr 20 13:42:29.386: INFO: Deleting pod "simpletest.rc-rzpds" in namespace "gc-6270"
  Apr 20 13:42:29.447: INFO: Deleting pod "simpletest.rc-sjlsr" in namespace "gc-6270"
  Apr 20 13:42:29.488: INFO: Deleting pod "simpletest.rc-sp25q" in namespace "gc-6270"
  Apr 20 13:42:29.545: INFO: Deleting pod "simpletest.rc-t5pjg" in namespace "gc-6270"
  Apr 20 13:42:29.587: INFO: Deleting pod "simpletest.rc-thp7g" in namespace "gc-6270"
  Apr 20 13:42:29.648: INFO: Deleting pod "simpletest.rc-tn5g8" in namespace "gc-6270"
  Apr 20 13:42:29.694: INFO: Deleting pod "simpletest.rc-tnsgw" in namespace "gc-6270"
  Apr 20 13:42:29.740: INFO: Deleting pod "simpletest.rc-tv9bz" in namespace "gc-6270"
  Apr 20 13:42:29.793: INFO: Deleting pod "simpletest.rc-vj4p8" in namespace "gc-6270"
  Apr 20 13:42:29.836: INFO: Deleting pod "simpletest.rc-vjddk" in namespace "gc-6270"
  Apr 20 13:42:29.895: INFO: Deleting pod "simpletest.rc-vk5wf" in namespace "gc-6270"
  Apr 20 13:42:29.940: INFO: Deleting pod "simpletest.rc-vmtrm" in namespace "gc-6270"
  Apr 20 13:42:29.992: INFO: Deleting pod "simpletest.rc-wghk5" in namespace "gc-6270"
  Apr 20 13:42:30.044: INFO: Deleting pod "simpletest.rc-wgz65" in namespace "gc-6270"
  Apr 20 13:42:30.090: INFO: Deleting pod "simpletest.rc-wqqn2" in namespace "gc-6270"
  Apr 20 13:42:30.144: INFO: Deleting pod "simpletest.rc-wtc7n" in namespace "gc-6270"
  E0420 13:42:30.187835      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:42:30.191: INFO: Deleting pod "simpletest.rc-xvcqg" in namespace "gc-6270"
  Apr 20 13:42:30.240: INFO: Deleting pod "simpletest.rc-xvqcs" in namespace "gc-6270"
  Apr 20 13:42:30.290: INFO: Deleting pod "simpletest.rc-z5nxh" in namespace "gc-6270"
  Apr 20 13:42:30.338: INFO: Deleting pod "simpletest.rc-z6gv9" in namespace "gc-6270"
  Apr 20 13:42:30.393: INFO: Deleting pod "simpletest.rc-z77pf" in namespace "gc-6270"
  Apr 20 13:42:30.437: INFO: Deleting pod "simpletest.rc-zkqfn" in namespace "gc-6270"
  Apr 20 13:42:30.491: INFO: Deleting pod "simpletest.rc-zslhs" in namespace "gc-6270"
  Apr 20 13:42:30.542: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6270" for this suite. @ 04/20/24 13:42:30.579
• [43.771 seconds]
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 04/20/24 13:42:30.639
  Apr 20 13:42:30.640: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename sched-preemption @ 04/20/24 13:42:30.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:42:30.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:42:30.679
  Apr 20 13:42:30.705: INFO: Waiting up to 1m0s for all nodes to be ready
  E0420 13:42:31.189023      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:32.189405      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:33.190290      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:34.190556      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:35.191296      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:36.191388      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:37.191510      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:38.191575      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:39.192493      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:40.192574      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:41.192687      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:42.193021      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:43.193082      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:44.193185      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:45.194171      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:46.194846      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:47.195178      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:48.195765      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:49.195911      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:50.196551      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:51.197019      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:52.197118      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:53.197164      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:54.197342      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:55.198309      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:56.199321      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:57.200374      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:58.200575      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:42:59.200695      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:00.200779      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:01.201196      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:02.201285      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:03.202234      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:04.202340      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:05.202458      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:06.203411      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:07.203818      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:08.203915      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:09.204009      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:10.204110      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:11.204563      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:12.204838      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:13.205164      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:14.205492      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:15.206654      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:16.207659      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:17.207757      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:18.208539      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:19.208632      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:20.208816      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:21.208926      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:22.209465      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:23.210234      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:24.210498      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:25.210686      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:26.210799      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:27.211257      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:28.211406      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:29.212505      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:30.212732      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:43:30.712: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 04/20/24 13:43:30.716
  Apr 20 13:43:30.734: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Apr 20 13:43:30.740: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Apr 20 13:43:30.755: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Apr 20 13:43:30.763: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Apr 20 13:43:30.778: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Apr 20 13:43:30.784: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 04/20/24 13:43:30.784
  E0420 13:43:31.213172      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:32.213727      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 04/20/24 13:43:32.815
  E0420 13:43:33.213898      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:34.214054      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:35.217031      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:36.217785      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:43:36.954: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8753" for this suite. @ 04/20/24 13:43:36.96
• [66.332 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 04/20/24 13:43:36.971
  Apr 20 13:43:36.971: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 13:43:36.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:43:36.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:43:36.993
  STEP: Creating a ResourceQuota with best effort scope @ 04/20/24 13:43:36.996
  STEP: Ensuring ResourceQuota status is calculated @ 04/20/24 13:43:37.001
  E0420 13:43:37.218383      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:38.218432      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 04/20/24 13:43:39.006
  STEP: Ensuring ResourceQuota status is calculated @ 04/20/24 13:43:39.012
  E0420 13:43:39.218552      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:40.219104      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 04/20/24 13:43:41.018
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 04/20/24 13:43:41.031
  E0420 13:43:41.219144      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:42.219543      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 04/20/24 13:43:43.035
  E0420 13:43:43.220280      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:44.220611      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/20/24 13:43:45.04
  STEP: Ensuring resource quota status released the pod usage @ 04/20/24 13:43:45.057
  E0420 13:43:45.221195      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:46.221955      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 04/20/24 13:43:47.063
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 04/20/24 13:43:47.073
  E0420 13:43:47.222060      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:48.222205      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 04/20/24 13:43:49.078
  E0420 13:43:49.222988      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:50.223185      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/20/24 13:43:51.084
  STEP: Ensuring resource quota status released the pod usage @ 04/20/24 13:43:51.096
  E0420 13:43:51.223892      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:52.224566      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:43:53.101: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1953" for this suite. @ 04/20/24 13:43:53.106
• [16.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 04/20/24 13:43:53.114
  Apr 20 13:43:53.114: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename dns @ 04/20/24 13:43:53.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:43:53.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:43:53.132
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 04/20/24 13:43:53.136
  Apr 20 13:43:53.143: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-1705  b7236fc2-0755-43ff-9175-99633c9a8ec4 40409 0 2024-04-20 13:43:53 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-04-20 13:43:53 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-t9frz,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.47,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-t9frz,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E0420 13:43:53.225546      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:54.225674      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 04/20/24 13:43:55.155
  Apr 20 13:43:55.155: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-1705 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 13:43:55.155: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  Apr 20 13:43:55.156: INFO: ExecWithOptions: Clientset creation
  Apr 20 13:43:55.156: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-1705/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 04/20/24 13:43:55.214
  Apr 20 13:43:55.215: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-1705 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 13:43:55.215: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  Apr 20 13:43:55.216: INFO: ExecWithOptions: Clientset creation
  Apr 20 13:43:55.216: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-1705/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0420 13:43:55.226055      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:43:55.279: INFO: Deleting pod test-dns-nameservers...
  Apr 20 13:43:55.293: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1705" for this suite. @ 04/20/24 13:43:55.297
• [2.190 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:357
  STEP: Creating a kubernetes client @ 04/20/24 13:43:55.304
  Apr 20 13:43:55.304: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 13:43:55.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:43:55.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:43:55.321
  STEP: creating a replication controller @ 04/20/24 13:43:55.323
  Apr 20 13:43:55.324: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-7094 create -f -'
  Apr 20 13:43:55.403: INFO: stderr: ""
  Apr 20 13:43:55.403: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/20/24 13:43:55.403
  Apr 20 13:43:55.403: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-7094 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 20 13:43:55.449: INFO: stderr: ""
  Apr 20 13:43:55.449: INFO: stdout: "update-demo-nautilus-6mpcg update-demo-nautilus-hbfv5 "
  Apr 20 13:43:55.449: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-7094 get pods update-demo-nautilus-6mpcg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 13:43:55.487: INFO: stderr: ""
  Apr 20 13:43:55.487: INFO: stdout: ""
  Apr 20 13:43:55.487: INFO: update-demo-nautilus-6mpcg is created but not running
  E0420 13:43:56.226884      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:57.226979      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:58.227150      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:43:59.228021      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:00.228583      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:44:00.488: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-7094 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 20 13:44:00.533: INFO: stderr: ""
  Apr 20 13:44:00.533: INFO: stdout: "update-demo-nautilus-6mpcg update-demo-nautilus-hbfv5 "
  Apr 20 13:44:00.533: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-7094 get pods update-demo-nautilus-6mpcg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 13:44:00.576: INFO: stderr: ""
  Apr 20 13:44:00.576: INFO: stdout: "true"
  Apr 20 13:44:00.576: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-7094 get pods update-demo-nautilus-6mpcg -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 20 13:44:00.616: INFO: stderr: ""
  Apr 20 13:44:00.616: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 20 13:44:00.616: INFO: validating pod update-demo-nautilus-6mpcg
  Apr 20 13:44:00.623: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 20 13:44:00.623: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 20 13:44:00.623: INFO: update-demo-nautilus-6mpcg is verified up and running
  Apr 20 13:44:00.623: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-7094 get pods update-demo-nautilus-hbfv5 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 13:44:00.664: INFO: stderr: ""
  Apr 20 13:44:00.664: INFO: stdout: "true"
  Apr 20 13:44:00.664: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-7094 get pods update-demo-nautilus-hbfv5 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 20 13:44:00.704: INFO: stderr: ""
  Apr 20 13:44:00.704: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 20 13:44:00.704: INFO: validating pod update-demo-nautilus-hbfv5
  Apr 20 13:44:00.710: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 20 13:44:00.710: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 20 13:44:00.710: INFO: update-demo-nautilus-hbfv5 is verified up and running
  STEP: scaling down the replication controller @ 04/20/24 13:44:00.71
  Apr 20 13:44:00.711: INFO: scanned /root for discovery docs: <nil>
  Apr 20 13:44:00.711: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-7094 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0420 13:44:01.229292      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:44:01.768: INFO: stderr: ""
  Apr 20 13:44:01.768: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/20/24 13:44:01.768
  Apr 20 13:44:01.768: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-7094 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 20 13:44:01.814: INFO: stderr: ""
  Apr 20 13:44:01.814: INFO: stdout: "update-demo-nautilus-6mpcg update-demo-nautilus-hbfv5 "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 04/20/24 13:44:01.814
  E0420 13:44:02.229407      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:03.229483      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:04.229571      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:05.229677      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:06.230090      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:44:06.814: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-7094 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 20 13:44:06.857: INFO: stderr: ""
  Apr 20 13:44:06.857: INFO: stdout: "update-demo-nautilus-6mpcg "
  Apr 20 13:44:06.857: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-7094 get pods update-demo-nautilus-6mpcg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 13:44:06.898: INFO: stderr: ""
  Apr 20 13:44:06.898: INFO: stdout: "true"
  Apr 20 13:44:06.898: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-7094 get pods update-demo-nautilus-6mpcg -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 20 13:44:06.938: INFO: stderr: ""
  Apr 20 13:44:06.938: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 20 13:44:06.938: INFO: validating pod update-demo-nautilus-6mpcg
  Apr 20 13:44:06.943: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 20 13:44:06.943: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 20 13:44:06.943: INFO: update-demo-nautilus-6mpcg is verified up and running
  STEP: scaling up the replication controller @ 04/20/24 13:44:06.943
  Apr 20 13:44:06.944: INFO: scanned /root for discovery docs: <nil>
  Apr 20 13:44:06.944: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-7094 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0420 13:44:07.231119      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:44:08.003: INFO: stderr: ""
  Apr 20 13:44:08.003: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/20/24 13:44:08.003
  Apr 20 13:44:08.003: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-7094 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 20 13:44:08.046: INFO: stderr: ""
  Apr 20 13:44:08.046: INFO: stdout: "update-demo-nautilus-6mpcg update-demo-nautilus-mx88q "
  Apr 20 13:44:08.046: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-7094 get pods update-demo-nautilus-6mpcg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 13:44:08.086: INFO: stderr: ""
  Apr 20 13:44:08.086: INFO: stdout: "true"
  Apr 20 13:44:08.086: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-7094 get pods update-demo-nautilus-6mpcg -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 20 13:44:08.126: INFO: stderr: ""
  Apr 20 13:44:08.126: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 20 13:44:08.126: INFO: validating pod update-demo-nautilus-6mpcg
  Apr 20 13:44:08.131: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 20 13:44:08.131: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 20 13:44:08.131: INFO: update-demo-nautilus-6mpcg is verified up and running
  Apr 20 13:44:08.131: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-7094 get pods update-demo-nautilus-mx88q -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 13:44:08.172: INFO: stderr: ""
  Apr 20 13:44:08.172: INFO: stdout: "true"
  Apr 20 13:44:08.172: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-7094 get pods update-demo-nautilus-mx88q -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 20 13:44:08.211: INFO: stderr: ""
  Apr 20 13:44:08.211: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 20 13:44:08.211: INFO: validating pod update-demo-nautilus-mx88q
  Apr 20 13:44:08.215: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 20 13:44:08.215: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 20 13:44:08.215: INFO: update-demo-nautilus-mx88q is verified up and running
  STEP: using delete to clean up resources @ 04/20/24 13:44:08.215
  Apr 20 13:44:08.215: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-7094 delete --grace-period=0 --force -f -'
  E0420 13:44:08.231380      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:44:08.258: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 20 13:44:08.258: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Apr 20 13:44:08.258: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-7094 get rc,svc -l name=update-demo --no-headers'
  Apr 20 13:44:08.313: INFO: stderr: "No resources found in kubectl-7094 namespace.\n"
  Apr 20 13:44:08.313: INFO: stdout: ""
  Apr 20 13:44:08.313: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-7094 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Apr 20 13:44:08.357: INFO: stderr: ""
  Apr 20 13:44:08.357: INFO: stdout: ""
  Apr 20 13:44:08.357: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7094" for this suite. @ 04/20/24 13:44:08.362
• [13.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 04/20/24 13:44:08.371
  Apr 20 13:44:08.371: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename sysctl @ 04/20/24 13:44:08.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:44:08.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:44:08.389
  STEP: Creating a pod with one valid and two invalid sysctls @ 04/20/24 13:44:08.392
  Apr 20 13:44:08.396: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-2033" for this suite. @ 04/20/24 13:44:08.401
• [0.038 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 04/20/24 13:44:08.409
  Apr 20 13:44:08.409: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/20/24 13:44:08.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:44:08.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:44:08.426
  Apr 20 13:44:08.430: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  Apr 20 13:44:08.988: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3551" for this suite. @ 04/20/24 13:44:08.994
• [0.593 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 04/20/24 13:44:09.003
  Apr 20 13:44:09.003: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 13:44:09.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:44:09.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:44:09.019
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 04/20/24 13:44:09.022
  E0420 13:44:09.232277      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:10.232352      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 13:44:11.041
  Apr 20 13:44:11.045: INFO: Trying to get logs from node ip-172-31-41-198 pod pod-4b1e4808-4fc5-4ba0-a880-f119bba8f81e container test-container: <nil>
  STEP: delete the pod @ 04/20/24 13:44:11.063
  Apr 20 13:44:11.081: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3347" for this suite. @ 04/20/24 13:44:11.085
• [2.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 04/20/24 13:44:11.092
  Apr 20 13:44:11.092: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename projected @ 04/20/24 13:44:11.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:44:11.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:44:11.109
  STEP: Creating configMap with name projected-configmap-test-volume-a285b393-381d-49a9-95d4-317ec45f820d @ 04/20/24 13:44:11.112
  STEP: Creating a pod to test consume configMaps @ 04/20/24 13:44:11.116
  E0420 13:44:11.232880      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:12.232978      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 13:44:13.136
  Apr 20 13:44:13.141: INFO: Trying to get logs from node ip-172-31-41-198 pod pod-projected-configmaps-7798c3d5-e97b-49ec-a6d3-4143526efebf container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 13:44:13.148
  Apr 20 13:44:13.166: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5444" for this suite. @ 04/20/24 13:44:13.17
• [2.086 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 04/20/24 13:44:13.178
  Apr 20 13:44:13.178: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename crd-watch @ 04/20/24 13:44:13.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:44:13.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:44:13.195
  Apr 20 13:44:13.198: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  E0420 13:44:13.233835      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:14.234067      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:15.234153      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 04/20/24 13:44:15.74
  Apr 20 13:44:15.745: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-20T13:44:15Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-20T13:44:15Z]] name:name1 resourceVersion:40695 uid:71ed17f0-5205-4133-a639-962a2a82eb48] num:map[num1:9223372036854775807 num2:1000000]]}
  E0420 13:44:16.234581      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:17.234686      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:18.234880      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:19.234966      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:20.235643      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:21.235732      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:22.235836      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:23.236766      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:24.237124      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:25.237649      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 04/20/24 13:44:25.747
  Apr 20 13:44:25.753: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-20T13:44:25Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-20T13:44:25Z]] name:name2 resourceVersion:40736 uid:bfd965cd-2d6c-4b55-b459-cb0e90012059] num:map[num1:9223372036854775807 num2:1000000]]}
  E0420 13:44:26.238348      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:27.238429      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:28.239169      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:29.239230      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:30.239439      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:31.239513      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:32.239594      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:33.240597      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:34.240786      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:35.241210      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 04/20/24 13:44:35.753
  Apr 20 13:44:35.760: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-20T13:44:15Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-20T13:44:35Z]] name:name1 resourceVersion:40757 uid:71ed17f0-5205-4133-a639-962a2a82eb48] num:map[num1:9223372036854775807 num2:1000000]]}
  E0420 13:44:36.241261      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:37.241358      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:38.241419      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:39.241589      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:40.241787      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:41.241885      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:42.241988      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:43.242108      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:44.242610      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:45.242707      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 04/20/24 13:44:45.761
  Apr 20 13:44:45.768: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-20T13:44:25Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-20T13:44:45Z]] name:name2 resourceVersion:40777 uid:bfd965cd-2d6c-4b55-b459-cb0e90012059] num:map[num1:9223372036854775807 num2:1000000]]}
  E0420 13:44:46.243442      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:47.243501      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:48.244547      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:49.244651      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:50.244758      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:51.244911      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:52.245205      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:53.245340      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:54.245515      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:55.246440      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 04/20/24 13:44:55.769
  Apr 20 13:44:55.777: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-20T13:44:15Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-20T13:44:35Z]] name:name1 resourceVersion:40797 uid:71ed17f0-5205-4133-a639-962a2a82eb48] num:map[num1:9223372036854775807 num2:1000000]]}
  E0420 13:44:56.247248      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:57.247478      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:58.247569      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:44:59.247672      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:00.248574      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:01.248745      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:02.249059      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:03.249178      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:04.249350      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:05.249618      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 04/20/24 13:45:05.778
  Apr 20 13:45:05.786: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-20T13:44:25Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-20T13:44:45Z]] name:name2 resourceVersion:40817 uid:bfd965cd-2d6c-4b55-b459-cb0e90012059] num:map[num1:9223372036854775807 num2:1000000]]}
  E0420 13:45:06.250639      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:07.251080      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:08.251301      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:09.251482      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:10.252550      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:11.253060      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:12.253156      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:13.253381      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:14.253573      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:15.253752      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:16.254791      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:45:16.303: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-4777" for this suite. @ 04/20/24 13:45:16.308
• [63.138 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 04/20/24 13:45:16.316
  Apr 20 13:45:16.316: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename pods @ 04/20/24 13:45:16.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:45:16.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:45:16.336
  E0420 13:45:17.255515      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:18.255613      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:19.255705      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:20.255784      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:21.255904      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:22.256015      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 13:45:22.402
  Apr 20 13:45:22.406: INFO: Trying to get logs from node ip-172-31-41-198 pod client-envvars-31756d67-fb38-42b6-a370-a6ca5d80091a container env3cont: <nil>
  STEP: delete the pod @ 04/20/24 13:45:22.413
  Apr 20 13:45:22.431: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-951" for this suite. @ 04/20/24 13:45:22.435
• [6.127 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 04/20/24 13:45:22.443
  Apr 20 13:45:22.443: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 13:45:22.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:45:22.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:45:22.462
  STEP: Creating the pod @ 04/20/24 13:45:22.465
  E0420 13:45:23.256575      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:24.256798      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:45:25.022: INFO: Successfully updated pod "labelsupdateb4096fe6-092b-466a-8e98-0373252341fa"
  E0420 13:45:25.256885      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:26.257057      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:27.258113      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:28.258315      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:45:29.048: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7387" for this suite. @ 04/20/24 13:45:29.052
• [6.617 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 04/20/24 13:45:29.06
  Apr 20 13:45:29.060: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename endpointslice @ 04/20/24 13:45:29.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:45:29.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:45:29.079
  Apr 20 13:45:29.092: INFO: Endpoints addresses: [172.31.45.254 172.31.9.171] , ports: [6443]
  Apr 20 13:45:29.093: INFO: EndpointSlices addresses: [172.31.45.254 172.31.9.171] , ports: [6443]
  Apr 20 13:45:29.093: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4383" for this suite. @ 04/20/24 13:45:29.097
• [0.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 04/20/24 13:45:29.105
  Apr 20 13:45:29.105: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename daemonsets @ 04/20/24 13:45:29.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:45:29.119
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:45:29.122
  STEP: Creating simple DaemonSet "daemon-set" @ 04/20/24 13:45:29.149
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/20/24 13:45:29.155
  Apr 20 13:45:29.159: INFO: DaemonSet pods can't tolerate node ip-172-31-45-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:45:29.159: INFO: DaemonSet pods can't tolerate node ip-172-31-9-171 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:45:29.162: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 13:45:29.162: INFO: Node ip-172-31-27-26 is running 0 daemon pod, expected 1
  E0420 13:45:29.258903      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:45:30.159: INFO: DaemonSet pods can't tolerate node ip-172-31-45-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:45:30.159: INFO: DaemonSet pods can't tolerate node ip-172-31-9-171 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:45:30.163: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 20 13:45:30.163: INFO: Node ip-172-31-27-26 is running 0 daemon pod, expected 1
  E0420 13:45:30.259961      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:45:31.160: INFO: DaemonSet pods can't tolerate node ip-172-31-45-254 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:45:31.160: INFO: DaemonSet pods can't tolerate node ip-172-31-9-171 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Apr 20 13:45:31.165: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 20 13:45:31.165: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 04/20/24 13:45:31.169
  Apr 20 13:45:31.173: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 04/20/24 13:45:31.173
  Apr 20 13:45:31.183: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 04/20/24 13:45:31.183
  Apr 20 13:45:31.185: INFO: Observed &DaemonSet event: ADDED
  Apr 20 13:45:31.185: INFO: Observed &DaemonSet event: MODIFIED
  Apr 20 13:45:31.185: INFO: Observed &DaemonSet event: MODIFIED
  Apr 20 13:45:31.185: INFO: Observed &DaemonSet event: MODIFIED
  Apr 20 13:45:31.185: INFO: Observed &DaemonSet event: MODIFIED
  Apr 20 13:45:31.185: INFO: Found daemon set daemon-set in namespace daemonsets-4505 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Apr 20 13:45:31.185: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 04/20/24 13:45:31.185
  STEP: watching for the daemon set status to be patched @ 04/20/24 13:45:31.193
  Apr 20 13:45:31.195: INFO: Observed &DaemonSet event: ADDED
  Apr 20 13:45:31.195: INFO: Observed &DaemonSet event: MODIFIED
  Apr 20 13:45:31.195: INFO: Observed &DaemonSet event: MODIFIED
  Apr 20 13:45:31.195: INFO: Observed &DaemonSet event: MODIFIED
  Apr 20 13:45:31.195: INFO: Observed &DaemonSet event: MODIFIED
  Apr 20 13:45:31.195: INFO: Observed daemon set daemon-set in namespace daemonsets-4505 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Apr 20 13:45:31.196: INFO: Observed &DaemonSet event: MODIFIED
  Apr 20 13:45:31.196: INFO: Found daemon set daemon-set in namespace daemonsets-4505 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Apr 20 13:45:31.196: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 04/20/24 13:45:31.199
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4505, will wait for the garbage collector to delete the pods @ 04/20/24 13:45:31.199
  E0420 13:45:31.260947      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:45:31.264: INFO: Deleting DaemonSet.extensions daemon-set took: 8.048922ms
  Apr 20 13:45:31.364: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.340502ms
  E0420 13:45:32.261565      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:45:32.769: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 13:45:32.769: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 20 13:45:32.772: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"41048"},"items":null}

  Apr 20 13:45:32.776: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"41048"},"items":null}

  Apr 20 13:45:32.790: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4505" for this suite. @ 04/20/24 13:45:32.794
• [3.697 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 04/20/24 13:45:32.803
  Apr 20 13:45:32.803: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename emptydir-wrapper @ 04/20/24 13:45:32.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:45:32.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:45:32.823
  E0420 13:45:33.261718      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:34.262420      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 04/20/24 13:45:34.859
  STEP: Cleaning up the configmap @ 04/20/24 13:45:34.868
  STEP: Cleaning up the pod @ 04/20/24 13:45:34.875
  Apr 20 13:45:34.891: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-2443" for this suite. @ 04/20/24 13:45:34.896
• [2.101 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 04/20/24 13:45:34.904
  Apr 20 13:45:34.904: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename svcaccounts @ 04/20/24 13:45:34.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:45:34.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:45:34.923
  E0420 13:45:35.262814      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:36.262895      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 04/20/24 13:45:36.957
  Apr 20 13:45:36.957: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1230 pod-service-account-99c684c3-d3ae-484c-a54b-77d731cd6820 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 04/20/24 13:45:37.051
  Apr 20 13:45:37.051: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1230 pod-service-account-99c684c3-d3ae-484c-a54b-77d731cd6820 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 04/20/24 13:45:37.13
  Apr 20 13:45:37.130: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1230 pod-service-account-99c684c3-d3ae-484c-a54b-77d731cd6820 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Apr 20 13:45:37.231: INFO: Got root ca configmap in namespace "svcaccounts-1230"
  Apr 20 13:45:37.233: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1230" for this suite. @ 04/20/24 13:45:37.237
• [2.340 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:572
  STEP: Creating a kubernetes client @ 04/20/24 13:45:37.245
  Apr 20 13:45:37.245: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename job @ 04/20/24 13:45:37.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:45:37.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:45:37.262
  E0420 13:45:37.263344      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a job @ 04/20/24 13:45:37.265
  STEP: Ensuring job reaches completions @ 04/20/24 13:45:37.272
  E0420 13:45:38.263511      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:39.263615      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:40.264119      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:41.264591      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:42.265302      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:43.265326      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:44.265588      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:45.265697      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:46.266242      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:47.266339      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:45:47.277: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8382" for this suite. @ 04/20/24 13:45:47.281
• [10.044 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 04/20/24 13:45:47.289
  Apr 20 13:45:47.289: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename gc @ 04/20/24 13:45:47.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:45:47.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:45:47.307
  STEP: create the rc1 @ 04/20/24 13:45:47.314
  STEP: create the rc2 @ 04/20/24 13:45:47.321
  E0420 13:45:48.267246      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:49.269517      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:50.271758      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:51.274549      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:52.275277      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:53.276305      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 04/20/24 13:45:53.331
  STEP: delete the rc simpletest-rc-to-be-deleted @ 04/20/24 13:45:53.742
  STEP: wait for the rc to be deleted @ 04/20/24 13:45:53.752
  E0420 13:45:54.277189      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:55.277292      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:56.277336      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:57.277449      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:45:58.278311      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:45:58.764: INFO: 70 pods remaining
  Apr 20 13:45:58.764: INFO: 70 pods has nil DeletionTimestamp
  Apr 20 13:45:58.764: INFO: 
  E0420 13:45:59.278993      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:00.279098      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:01.286115      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:02.280657      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:03.280758      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 04/20/24 13:46:03.764
  W0420 13:46:03.770358      20 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Apr 20 13:46:03.770: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 20 13:46:03.770: INFO: Deleting pod "simpletest-rc-to-be-deleted-24ghp" in namespace "gc-7446"
  Apr 20 13:46:03.785: INFO: Deleting pod "simpletest-rc-to-be-deleted-27smf" in namespace "gc-7446"
  Apr 20 13:46:03.803: INFO: Deleting pod "simpletest-rc-to-be-deleted-2brdc" in namespace "gc-7446"
  Apr 20 13:46:03.817: INFO: Deleting pod "simpletest-rc-to-be-deleted-2h2f4" in namespace "gc-7446"
  Apr 20 13:46:03.831: INFO: Deleting pod "simpletest-rc-to-be-deleted-5kq2v" in namespace "gc-7446"
  Apr 20 13:46:03.846: INFO: Deleting pod "simpletest-rc-to-be-deleted-5xlcl" in namespace "gc-7446"
  Apr 20 13:46:03.857: INFO: Deleting pod "simpletest-rc-to-be-deleted-6b6hx" in namespace "gc-7446"
  Apr 20 13:46:03.873: INFO: Deleting pod "simpletest-rc-to-be-deleted-6jgzq" in namespace "gc-7446"
  Apr 20 13:46:03.886: INFO: Deleting pod "simpletest-rc-to-be-deleted-6sh95" in namespace "gc-7446"
  Apr 20 13:46:03.899: INFO: Deleting pod "simpletest-rc-to-be-deleted-6tx9x" in namespace "gc-7446"
  Apr 20 13:46:03.917: INFO: Deleting pod "simpletest-rc-to-be-deleted-772gp" in namespace "gc-7446"
  Apr 20 13:46:03.933: INFO: Deleting pod "simpletest-rc-to-be-deleted-77k6q" in namespace "gc-7446"
  Apr 20 13:46:03.948: INFO: Deleting pod "simpletest-rc-to-be-deleted-77n4r" in namespace "gc-7446"
  Apr 20 13:46:03.963: INFO: Deleting pod "simpletest-rc-to-be-deleted-7cw6v" in namespace "gc-7446"
  Apr 20 13:46:03.977: INFO: Deleting pod "simpletest-rc-to-be-deleted-7ht2m" in namespace "gc-7446"
  Apr 20 13:46:03.989: INFO: Deleting pod "simpletest-rc-to-be-deleted-7lkpv" in namespace "gc-7446"
  Apr 20 13:46:04.003: INFO: Deleting pod "simpletest-rc-to-be-deleted-7qk6c" in namespace "gc-7446"
  Apr 20 13:46:04.018: INFO: Deleting pod "simpletest-rc-to-be-deleted-7r4w2" in namespace "gc-7446"
  Apr 20 13:46:04.042: INFO: Deleting pod "simpletest-rc-to-be-deleted-869md" in namespace "gc-7446"
  Apr 20 13:46:04.055: INFO: Deleting pod "simpletest-rc-to-be-deleted-8bqsk" in namespace "gc-7446"
  Apr 20 13:46:04.076: INFO: Deleting pod "simpletest-rc-to-be-deleted-8jptv" in namespace "gc-7446"
  Apr 20 13:46:04.096: INFO: Deleting pod "simpletest-rc-to-be-deleted-967fj" in namespace "gc-7446"
  Apr 20 13:46:04.117: INFO: Deleting pod "simpletest-rc-to-be-deleted-9fm2d" in namespace "gc-7446"
  Apr 20 13:46:04.129: INFO: Deleting pod "simpletest-rc-to-be-deleted-9p5kk" in namespace "gc-7446"
  Apr 20 13:46:04.148: INFO: Deleting pod "simpletest-rc-to-be-deleted-b6fr2" in namespace "gc-7446"
  Apr 20 13:46:04.164: INFO: Deleting pod "simpletest-rc-to-be-deleted-b8rmb" in namespace "gc-7446"
  Apr 20 13:46:04.181: INFO: Deleting pod "simpletest-rc-to-be-deleted-bcn8w" in namespace "gc-7446"
  Apr 20 13:46:04.193: INFO: Deleting pod "simpletest-rc-to-be-deleted-d29wd" in namespace "gc-7446"
  Apr 20 13:46:04.213: INFO: Deleting pod "simpletest-rc-to-be-deleted-dmjdx" in namespace "gc-7446"
  Apr 20 13:46:04.235: INFO: Deleting pod "simpletest-rc-to-be-deleted-dvwqx" in namespace "gc-7446"
  Apr 20 13:46:04.251: INFO: Deleting pod "simpletest-rc-to-be-deleted-dw684" in namespace "gc-7446"
  Apr 20 13:46:04.273: INFO: Deleting pod "simpletest-rc-to-be-deleted-f6bm2" in namespace "gc-7446"
  E0420 13:46:04.282548      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:46:04.289: INFO: Deleting pod "simpletest-rc-to-be-deleted-g58wq" in namespace "gc-7446"
  Apr 20 13:46:04.304: INFO: Deleting pod "simpletest-rc-to-be-deleted-g8qnd" in namespace "gc-7446"
  Apr 20 13:46:04.318: INFO: Deleting pod "simpletest-rc-to-be-deleted-gb7rj" in namespace "gc-7446"
  Apr 20 13:46:04.339: INFO: Deleting pod "simpletest-rc-to-be-deleted-ggjd7" in namespace "gc-7446"
  Apr 20 13:46:04.358: INFO: Deleting pod "simpletest-rc-to-be-deleted-ghdnj" in namespace "gc-7446"
  Apr 20 13:46:04.369: INFO: Deleting pod "simpletest-rc-to-be-deleted-gpnwt" in namespace "gc-7446"
  Apr 20 13:46:04.383: INFO: Deleting pod "simpletest-rc-to-be-deleted-gtrl9" in namespace "gc-7446"
  Apr 20 13:46:04.397: INFO: Deleting pod "simpletest-rc-to-be-deleted-gvj2j" in namespace "gc-7446"
  Apr 20 13:46:04.409: INFO: Deleting pod "simpletest-rc-to-be-deleted-gxbn8" in namespace "gc-7446"
  Apr 20 13:46:04.427: INFO: Deleting pod "simpletest-rc-to-be-deleted-h7hw4" in namespace "gc-7446"
  Apr 20 13:46:04.441: INFO: Deleting pod "simpletest-rc-to-be-deleted-htkfm" in namespace "gc-7446"
  Apr 20 13:46:04.458: INFO: Deleting pod "simpletest-rc-to-be-deleted-j26zr" in namespace "gc-7446"
  Apr 20 13:46:04.483: INFO: Deleting pod "simpletest-rc-to-be-deleted-j5gtl" in namespace "gc-7446"
  Apr 20 13:46:04.503: INFO: Deleting pod "simpletest-rc-to-be-deleted-j6bzl" in namespace "gc-7446"
  Apr 20 13:46:04.516: INFO: Deleting pod "simpletest-rc-to-be-deleted-jcbd7" in namespace "gc-7446"
  Apr 20 13:46:04.530: INFO: Deleting pod "simpletest-rc-to-be-deleted-jnt9f" in namespace "gc-7446"
  Apr 20 13:46:04.552: INFO: Deleting pod "simpletest-rc-to-be-deleted-jwjjm" in namespace "gc-7446"
  Apr 20 13:46:04.567: INFO: Deleting pod "simpletest-rc-to-be-deleted-k4jhv" in namespace "gc-7446"
  Apr 20 13:46:04.591: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7446" for this suite. @ 04/20/24 13:46:04.599
• [17.325 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 04/20/24 13:46:04.614
  Apr 20 13:46:04.614: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename replication-controller @ 04/20/24 13:46:04.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:46:04.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:46:04.635
  STEP: Creating ReplicationController "e2e-rc-f4c7r" @ 04/20/24 13:46:04.639
  Apr 20 13:46:04.646: INFO: Get Replication Controller "e2e-rc-f4c7r" to confirm replicas
  E0420 13:46:05.282688      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:46:05.646: INFO: Get Replication Controller "e2e-rc-f4c7r" to confirm replicas
  Apr 20 13:46:05.655: INFO: Found 1 replicas for "e2e-rc-f4c7r" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-f4c7r" @ 04/20/24 13:46:05.655
  STEP: Updating a scale subresource @ 04/20/24 13:46:05.659
  STEP: Verifying replicas where modified for replication controller "e2e-rc-f4c7r" @ 04/20/24 13:46:05.666
  Apr 20 13:46:05.666: INFO: Get Replication Controller "e2e-rc-f4c7r" to confirm replicas
  E0420 13:46:06.283456      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:46:06.667: INFO: Get Replication Controller "e2e-rc-f4c7r" to confirm replicas
  Apr 20 13:46:06.670: INFO: Found 2 replicas for "e2e-rc-f4c7r" replication controller
  Apr 20 13:46:06.670: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7160" for this suite. @ 04/20/24 13:46:06.674
• [2.066 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 04/20/24 13:46:06.681
  Apr 20 13:46:06.681: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename pods @ 04/20/24 13:46:06.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:46:06.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:46:06.7
  STEP: creating the pod @ 04/20/24 13:46:06.703
  STEP: submitting the pod to kubernetes @ 04/20/24 13:46:06.703
  E0420 13:46:07.283925      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:08.284014      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 04/20/24 13:46:08.733
  STEP: updating the pod @ 04/20/24 13:46:08.737
  Apr 20 13:46:09.255: INFO: Successfully updated pod "pod-update-7d13ea5f-cc60-42a5-9e05-ba94366107d8"
  STEP: verifying the updated pod is in kubernetes @ 04/20/24 13:46:09.261
  Apr 20 13:46:09.265: INFO: Pod update OK
  Apr 20 13:46:09.265: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3115" for this suite. @ 04/20/24 13:46:09.27
• [2.597 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 04/20/24 13:46:09.277
  Apr 20 13:46:09.277: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename webhook @ 04/20/24 13:46:09.278
  E0420 13:46:09.284590      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:46:09.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:46:09.295
  STEP: Setting up server cert @ 04/20/24 13:46:09.317
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 13:46:09.593
  STEP: Deploying the webhook pod @ 04/20/24 13:46:09.602
  STEP: Wait for the deployment to be ready @ 04/20/24 13:46:09.615
  Apr 20 13:46:09.624: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0420 13:46:10.284721      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:11.285127      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 13:46:11.635
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 13:46:11.649
  E0420 13:46:12.285472      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:46:12.650: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 04/20/24 13:46:12.659
  STEP: create a namespace for the webhook @ 04/20/24 13:46:12.673
  STEP: create a configmap should be unconditionally rejected by the webhook @ 04/20/24 13:46:12.686
  Apr 20 13:46:12.757: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4374" for this suite. @ 04/20/24 13:46:12.763
  STEP: Destroying namespace "webhook-markers-1355" for this suite. @ 04/20/24 13:46:12.77
  STEP: Destroying namespace "fail-closed-namespace-4093" for this suite. @ 04/20/24 13:46:12.779
• [3.509 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 04/20/24 13:46:12.787
  Apr 20 13:46:12.787: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename container-runtime @ 04/20/24 13:46:12.788
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:46:12.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:46:12.807
  STEP: create the container @ 04/20/24 13:46:12.81
  W0420 13:46:12.818259      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/20/24 13:46:12.818
  E0420 13:46:13.285560      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:14.286313      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:15.286555      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 04/20/24 13:46:15.84
  STEP: the container should be terminated @ 04/20/24 13:46:15.844
  STEP: the termination message should be set @ 04/20/24 13:46:15.844
  Apr 20 13:46:15.844: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 04/20/24 13:46:15.844
  Apr 20 13:46:15.863: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-315" for this suite. @ 04/20/24 13:46:15.867
• [3.086 seconds]
------------------------------
SSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 04/20/24 13:46:15.873
  Apr 20 13:46:15.873: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename podtemplate @ 04/20/24 13:46:15.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:46:15.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:46:15.893
  STEP: Create a pod template @ 04/20/24 13:46:15.895
  STEP: Replace a pod template @ 04/20/24 13:46:15.902
  Apr 20 13:46:15.910: INFO: Found updated podtemplate annotation: "true"

  Apr 20 13:46:15.910: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-9006" for this suite. @ 04/20/24 13:46:15.914
• [0.047 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 04/20/24 13:46:15.921
  Apr 20 13:46:15.921: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename discovery @ 04/20/24 13:46:15.921
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:46:15.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:46:15.94
  STEP: Setting up server cert @ 04/20/24 13:46:15.944
  STEP: Requesting APIResourceList from "/api/v1" @ 04/20/24 13:46:16.106
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 04/20/24 13:46:16.107
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 04/20/24 13:46:16.109
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 04/20/24 13:46:16.11
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 04/20/24 13:46:16.111
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 04/20/24 13:46:16.113
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 04/20/24 13:46:16.114
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 04/20/24 13:46:16.115
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 04/20/24 13:46:16.116
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 04/20/24 13:46:16.117
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 04/20/24 13:46:16.119
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 04/20/24 13:46:16.12
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 04/20/24 13:46:16.121
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 04/20/24 13:46:16.122
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 04/20/24 13:46:16.123
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 04/20/24 13:46:16.125
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 04/20/24 13:46:16.126
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 04/20/24 13:46:16.127
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 04/20/24 13:46:16.128
  Apr 20 13:46:16.129: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-8145" for this suite. @ 04/20/24 13:46:16.134
• [0.220 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1031
  STEP: Creating a kubernetes client @ 04/20/24 13:46:16.141
  Apr 20 13:46:16.141: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename statefulset @ 04/20/24 13:46:16.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:46:16.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:46:16.163
  STEP: Creating service test in namespace statefulset-5870 @ 04/20/24 13:46:16.166
  STEP: Creating statefulset ss in namespace statefulset-5870 @ 04/20/24 13:46:16.181
  Apr 20 13:46:16.190: INFO: Found 0 stateful pods, waiting for 1
  E0420 13:46:16.287278      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:17.287517      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:18.287594      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:19.287694      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:20.287812      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:21.288569      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:22.289399      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:23.289590      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:24.289800      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:25.289890      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:46:26.191: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 04/20/24 13:46:26.198
  STEP: Getting /status @ 04/20/24 13:46:26.207
  Apr 20 13:46:26.211: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 04/20/24 13:46:26.211
  Apr 20 13:46:26.223: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 04/20/24 13:46:26.223
  Apr 20 13:46:26.225: INFO: Observed &StatefulSet event: ADDED
  Apr 20 13:46:26.225: INFO: Found Statefulset ss in namespace statefulset-5870 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 20 13:46:26.225: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 04/20/24 13:46:26.225
  Apr 20 13:46:26.225: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Apr 20 13:46:26.233: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 04/20/24 13:46:26.233
  Apr 20 13:46:26.235: INFO: Observed &StatefulSet event: ADDED
  Apr 20 13:46:26.235: INFO: Observed Statefulset ss in namespace statefulset-5870 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 20 13:46:26.235: INFO: Observed &StatefulSet event: MODIFIED
  Apr 20 13:46:26.235: INFO: Deleting all statefulset in ns statefulset-5870
  Apr 20 13:46:26.239: INFO: Scaling statefulset ss to 0
  E0420 13:46:26.290288      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:27.290623      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:28.290846      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:29.290951      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:30.291207      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:31.291324      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:32.291520      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:33.291677      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:34.292666      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:35.293315      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:46:36.253: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 20 13:46:36.258: INFO: Deleting statefulset ss
  Apr 20 13:46:36.272: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5870" for this suite. @ 04/20/24 13:46:36.277
• [20.143 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:641
  STEP: Creating a kubernetes client @ 04/20/24 13:46:36.285
  Apr 20 13:46:36.285: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename statefulset @ 04/20/24 13:46:36.285
  E0420 13:46:36.293932      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:46:36.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:46:36.303
  STEP: Creating service test in namespace statefulset-7931 @ 04/20/24 13:46:36.306
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 04/20/24 13:46:36.311
  STEP: Creating stateful set ss in namespace statefulset-7931 @ 04/20/24 13:46:36.318
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-7931 @ 04/20/24 13:46:36.325
  Apr 20 13:46:36.332: INFO: Found 0 stateful pods, waiting for 1
  E0420 13:46:37.294246      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:38.294926      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:39.295125      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:40.295426      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:41.295527      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:42.295634      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:43.295724      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:44.295833      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:45.295899      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:46.295989      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:46:46.330: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 04/20/24 13:46:46.331
  Apr 20 13:46:46.335: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=statefulset-7931 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 20 13:46:46.445: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 20 13:46:46.445: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 20 13:46:46.445: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 20 13:46:46.450: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0420 13:46:47.296107      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:48.296200      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:49.296554      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:50.296655      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:51.296769      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:52.296878      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:53.296961      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:54.297142      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:55.297367      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:46:56.298416      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:46:56.450: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Apr 20 13:46:56.450: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Apr 20 13:46:56.467: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999811s
  E0420 13:46:57.298757      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:46:57.473: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.995944658s
  E0420 13:46:58.299491      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:46:58.478: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.99023871s
  E0420 13:46:59.299566      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:46:59.484: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.98508451s
  E0420 13:47:00.299671      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:47:00.490: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.978995914s
  E0420 13:47:01.300588      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:47:01.495: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.972916804s
  E0420 13:47:02.300739      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:47:02.501: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.967946976s
  E0420 13:47:03.301457      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:47:03.507: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.962222968s
  E0420 13:47:04.302107      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:47:04.512: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.956589692s
  E0420 13:47:05.302335      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:47:05.518: INFO: Verifying statefulset ss doesn't scale past 1 for another 951.406373ms
  E0420 13:47:06.302945      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-7931 @ 04/20/24 13:47:06.518
  Apr 20 13:47:06.523: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=statefulset-7931 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 20 13:47:06.611: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 20 13:47:06.611: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 20 13:47:06.611: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 20 13:47:06.615: INFO: Found 1 stateful pods, waiting for 3
  E0420 13:47:07.303402      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:47:08.303513      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:47:09.304580      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:47:10.304659      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:47:11.304742      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:47:12.304842      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:47:13.305245      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:47:14.306135      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:47:15.306207      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:47:16.307178      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:47:16.616: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 13:47:16.616: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 13:47:16.616: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 04/20/24 13:47:16.616
  STEP: Scale down will halt with unhealthy stateful pod @ 04/20/24 13:47:16.616
  Apr 20 13:47:16.624: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=statefulset-7931 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 20 13:47:16.715: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 20 13:47:16.715: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 20 13:47:16.715: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 20 13:47:16.715: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=statefulset-7931 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 20 13:47:16.816: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 20 13:47:16.816: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 20 13:47:16.816: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 20 13:47:16.816: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=statefulset-7931 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 20 13:47:16.911: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 20 13:47:16.911: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 20 13:47:16.911: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 20 13:47:16.911: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Apr 20 13:47:16.915: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0420 13:47:17.307530      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:47:18.307638      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:47:19.307713      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:47:20.307794      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:47:21.307884      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:47:22.307997      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:47:23.308090      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:47:24.308558      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:47:25.308652      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:47:26.309451      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:47:26.920: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Apr 20 13:47:26.920: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Apr 20 13:47:26.920: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Apr 20 13:47:26.934: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999796s
  E0420 13:47:27.309648      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:47:27.938: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.99631212s
  E0420 13:47:28.309846      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:47:28.944: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.991460785s
  E0420 13:47:29.310793      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:47:29.949: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.986281949s
  E0420 13:47:30.311554      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:47:30.954: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.981488718s
  E0420 13:47:31.312335      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:47:31.959: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.976585321s
  E0420 13:47:32.312505      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:47:32.963: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.971394157s
  E0420 13:47:33.313239      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:47:33.969: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.966241031s
  E0420 13:47:34.313350      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:47:34.975: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.960601677s
  E0420 13:47:35.313569      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:47:35.980: INFO: Verifying statefulset ss doesn't scale past 3 for another 954.708983ms
  E0420 13:47:36.314435      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-7931 @ 04/20/24 13:47:36.981
  Apr 20 13:47:36.987: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=statefulset-7931 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 20 13:47:37.079: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 20 13:47:37.079: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 20 13:47:37.079: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 20 13:47:37.079: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=statefulset-7931 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 20 13:47:37.177: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 20 13:47:37.177: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 20 13:47:37.177: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 20 13:47:37.177: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=statefulset-7931 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 20 13:47:37.268: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 20 13:47:37.268: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 20 13:47:37.268: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 20 13:47:37.268: INFO: Scaling statefulset ss to 0
  E0420 13:47:37.314712      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:47:38.315062      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:47:39.316032      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:47:40.316374      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:47:41.316792      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:47:42.316910      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:47:43.316991      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:47:44.317084      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:47:45.317169      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:47:46.317418      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 04/20/24 13:47:47.282
  Apr 20 13:47:47.282: INFO: Deleting all statefulset in ns statefulset-7931
  Apr 20 13:47:47.286: INFO: Scaling statefulset ss to 0
  Apr 20 13:47:47.298: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 20 13:47:47.302: INFO: Deleting statefulset ss
  Apr 20 13:47:47.317: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0420 13:47:47.317372      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "statefulset-7931" for this suite. @ 04/20/24 13:47:47.32
• [71.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 04/20/24 13:47:47.328
  Apr 20 13:47:47.328: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename dns @ 04/20/24 13:47:47.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:47:47.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:47:47.351
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4476.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-4476.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 04/20/24 13:47:47.353
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4476.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-4476.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 04/20/24 13:47:47.353
  STEP: creating a pod to probe /etc/hosts @ 04/20/24 13:47:47.353
  STEP: submitting the pod to kubernetes @ 04/20/24 13:47:47.353
  E0420 13:47:48.318173      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:47:49.318382      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/20/24 13:47:49.378
  STEP: looking for the results for each expected name from probers @ 04/20/24 13:47:49.381
  Apr 20 13:47:49.399: INFO: DNS probes using dns-4476/dns-test-f171a88c-9dbf-4b70-9bda-9f3178421c0f succeeded

  STEP: deleting the pod @ 04/20/24 13:47:49.399
  Apr 20 13:47:49.416: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4476" for this suite. @ 04/20/24 13:47:49.42
• [2.101 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 04/20/24 13:47:49.43
  Apr 20 13:47:49.430: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename pod-network-test @ 04/20/24 13:47:49.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:47:49.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:47:49.449
  STEP: Performing setup for networking test in namespace pod-network-test-135 @ 04/20/24 13:47:49.453
  STEP: creating a selector @ 04/20/24 13:47:49.453
  STEP: Creating the service pods in kubernetes @ 04/20/24 13:47:49.453
  Apr 20 13:47:49.453: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0420 13:47:50.318515      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:47:51.318614      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:47:52.318711      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:47:53.318945      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:47:54.319127      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:47:55.319239      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:47:56.320057      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:47:57.320154      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:47:58.320245      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:47:59.320347      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:00.320430      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:01.320523      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:02.320644      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:03.320740      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:04.321258      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:05.321442      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:06.322387      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:07.323096      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:08.323165      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:09.323592      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:10.323680      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:11.323775      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 04/20/24 13:48:11.57
  E0420 13:48:12.324767      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:13.324840      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:48:13.602: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Apr 20 13:48:13.602: INFO: Going to poll 192.168.161.36 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Apr 20 13:48:13.606: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.161.36 8081 | grep -v '^\s*$'] Namespace:pod-network-test-135 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 13:48:13.606: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  Apr 20 13:48:13.607: INFO: ExecWithOptions: Clientset creation
  Apr 20 13:48:13.607: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-135/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.161.36+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0420 13:48:14.325224      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:48:14.662: INFO: Found all 1 expected endpoints: [netserver-0]
  Apr 20 13:48:14.662: INFO: Going to poll 192.168.213.230 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Apr 20 13:48:14.667: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.213.230 8081 | grep -v '^\s*$'] Namespace:pod-network-test-135 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 13:48:14.667: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  Apr 20 13:48:14.667: INFO: ExecWithOptions: Clientset creation
  Apr 20 13:48:14.667: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-135/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.213.230+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0420 13:48:15.325571      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:48:15.713: INFO: Found all 1 expected endpoints: [netserver-1]
  Apr 20 13:48:15.713: INFO: Going to poll 192.168.144.104 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Apr 20 13:48:15.718: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.144.104 8081 | grep -v '^\s*$'] Namespace:pod-network-test-135 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 13:48:15.718: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  Apr 20 13:48:15.718: INFO: ExecWithOptions: Clientset creation
  Apr 20 13:48:15.718: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-135/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.144.104+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0420 13:48:16.326359      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:48:16.773: INFO: Found all 1 expected endpoints: [netserver-2]
  Apr 20 13:48:16.773: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-135" for this suite. @ 04/20/24 13:48:16.777
• [27.356 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:344
  STEP: Creating a kubernetes client @ 04/20/24 13:48:16.786
  Apr 20 13:48:16.786: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 13:48:16.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:48:16.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:48:16.806
  STEP: creating a replication controller @ 04/20/24 13:48:16.809
  Apr 20 13:48:16.809: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-7627 create -f -'
  Apr 20 13:48:16.886: INFO: stderr: ""
  Apr 20 13:48:16.886: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/20/24 13:48:16.886
  Apr 20 13:48:16.886: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-7627 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 20 13:48:16.930: INFO: stderr: ""
  Apr 20 13:48:16.930: INFO: stdout: "update-demo-nautilus-2x8gd update-demo-nautilus-fhxmm "
  Apr 20 13:48:16.930: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-7627 get pods update-demo-nautilus-2x8gd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 13:48:16.971: INFO: stderr: ""
  Apr 20 13:48:16.971: INFO: stdout: ""
  Apr 20 13:48:16.971: INFO: update-demo-nautilus-2x8gd is created but not running
  E0420 13:48:17.326639      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:18.326836      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:19.327051      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:20.327278      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:21.327506      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:48:21.971: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-7627 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 20 13:48:22.014: INFO: stderr: ""
  Apr 20 13:48:22.014: INFO: stdout: "update-demo-nautilus-2x8gd update-demo-nautilus-fhxmm "
  Apr 20 13:48:22.014: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-7627 get pods update-demo-nautilus-2x8gd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 13:48:22.054: INFO: stderr: ""
  Apr 20 13:48:22.054: INFO: stdout: "true"
  Apr 20 13:48:22.054: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-7627 get pods update-demo-nautilus-2x8gd -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 20 13:48:22.113: INFO: stderr: ""
  Apr 20 13:48:22.113: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 20 13:48:22.113: INFO: validating pod update-demo-nautilus-2x8gd
  Apr 20 13:48:22.118: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 20 13:48:22.118: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 20 13:48:22.118: INFO: update-demo-nautilus-2x8gd is verified up and running
  Apr 20 13:48:22.118: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-7627 get pods update-demo-nautilus-fhxmm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 13:48:22.179: INFO: stderr: ""
  Apr 20 13:48:22.179: INFO: stdout: "true"
  Apr 20 13:48:22.179: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-7627 get pods update-demo-nautilus-fhxmm -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 20 13:48:22.251: INFO: stderr: ""
  Apr 20 13:48:22.251: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 20 13:48:22.251: INFO: validating pod update-demo-nautilus-fhxmm
  Apr 20 13:48:22.257: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 20 13:48:22.257: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 20 13:48:22.257: INFO: update-demo-nautilus-fhxmm is verified up and running
  STEP: using delete to clean up resources @ 04/20/24 13:48:22.257
  Apr 20 13:48:22.257: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-7627 delete --grace-period=0 --force -f -'
  E0420 13:48:22.329384      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:48:22.355: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 20 13:48:22.355: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Apr 20 13:48:22.355: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-7627 get rc,svc -l name=update-demo --no-headers'
  Apr 20 13:48:22.418: INFO: stderr: "No resources found in kubectl-7627 namespace.\n"
  Apr 20 13:48:22.418: INFO: stdout: ""
  Apr 20 13:48:22.418: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=kubectl-7627 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Apr 20 13:48:22.488: INFO: stderr: ""
  Apr 20 13:48:22.489: INFO: stdout: ""
  Apr 20 13:48:22.489: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7627" for this suite. @ 04/20/24 13:48:22.494
• [5.718 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 04/20/24 13:48:22.504
  Apr 20 13:48:22.504: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename field-validation @ 04/20/24 13:48:22.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:48:22.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:48:22.526
  Apr 20 13:48:22.529: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  E0420 13:48:23.330045      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:24.330839      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0420 13:48:25.067593      20 warnings.go:70] unknown field "alpha"
  W0420 13:48:25.067610      20 warnings.go:70] unknown field "beta"
  W0420 13:48:25.067613      20 warnings.go:70] unknown field "delta"
  W0420 13:48:25.067616      20 warnings.go:70] unknown field "epsilon"
  W0420 13:48:25.067619      20 warnings.go:70] unknown field "gamma"
  E0420 13:48:25.331471      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:48:25.615: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-422" for this suite. @ 04/20/24 13:48:25.619
• [3.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 04/20/24 13:48:25.63
  Apr 20 13:48:25.630: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename cronjob @ 04/20/24 13:48:25.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:48:25.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:48:25.651
  STEP: Creating a cronjob @ 04/20/24 13:48:25.655
  STEP: Ensuring more than one job is running at a time @ 04/20/24 13:48:25.663
  E0420 13:48:26.332177      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:27.332278      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:28.332372      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:29.332913      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:30.333203      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:31.333331      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:32.333425      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:33.334478      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:34.334597      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:35.334830      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:36.335001      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:37.335102      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:38.335242      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:39.335321      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:40.335516      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:41.335591      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:42.335683      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:43.335795      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:44.336560      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:45.336986      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:46.337088      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:47.337187      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:48.337305      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:49.337519      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:50.337608      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:51.337861      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:52.337964      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:53.338638      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:54.339457      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:55.339557      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:56.339648      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:57.339751      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:58.339857      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:48:59.339947      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:00.340049      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:01.340130      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:02.340249      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:03.340358      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:04.340573      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:05.340704      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:06.341510      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:07.341824      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:08.341932      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:09.342929      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:10.343501      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:11.343605      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:12.344611      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:13.344804      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:14.344910      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:15.344993      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:16.345745      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:17.345851      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:18.346629      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:19.346835      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:20.347780      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:21.348590      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:22.348689      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:23.348787      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:24.348881      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:25.349424      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:26.349515      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:27.350211      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:28.350298      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:29.350404      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:30.351425      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:31.351514      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:32.351620      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:33.351717      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:34.351815      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:35.351913      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:36.352004      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:37.352086      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:38.352200      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:39.352586      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:40.353616      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:41.353711      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:42.353938      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:43.354067      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:44.354889      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:45.355042      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:46.356071      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:47.356154      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:48.356688      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:49.357132      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:50.357232      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:51.357380      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:52.357484      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:53.357555      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:54.358465      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:55.358587      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:56.358635      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:57.358802      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:58.359314      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:49:59.359515      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:00.359587      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:01.359701      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 04/20/24 13:50:01.669
  STEP: Removing cronjob @ 04/20/24 13:50:01.673
  Apr 20 13:50:01.681: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-933" for this suite. @ 04/20/24 13:50:01.685
• [96.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 04/20/24 13:50:01.693
  Apr 20 13:50:01.693: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 13:50:01.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:50:01.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:50:01.718
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 04/20/24 13:50:01.721
  E0420 13:50:02.360521      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:03.360635      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:04.361480      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:05.361697      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 13:50:05.748
  Apr 20 13:50:05.752: INFO: Trying to get logs from node ip-172-31-81-0 pod pod-c6c3130f-fe9e-4d55-bb6b-09594749f79d container test-container: <nil>
  STEP: delete the pod @ 04/20/24 13:50:05.764
  Apr 20 13:50:05.783: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3424" for this suite. @ 04/20/24 13:50:05.787
• [4.112 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 04/20/24 13:50:05.804
  Apr 20 13:50:05.805: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename subpath @ 04/20/24 13:50:05.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:50:05.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:50:05.823
  STEP: Setting up data @ 04/20/24 13:50:05.826
  STEP: Creating pod pod-subpath-test-configmap-dv69 @ 04/20/24 13:50:05.837
  STEP: Creating a pod to test atomic-volume-subpath @ 04/20/24 13:50:05.837
  E0420 13:50:06.362226      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:07.362292      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:08.362385      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:09.362743      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:10.362575      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:11.362660      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:12.363197      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:13.363297      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:14.363489      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:15.363598      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:16.364237      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:17.364515      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:18.365228      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:19.365521      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:20.365565      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:21.366628      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:22.367427      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:23.367491      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:24.368154      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:25.368560      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:26.369475      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:27.369771      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:28.370434      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:29.370644      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 13:50:29.913
  Apr 20 13:50:29.917: INFO: Trying to get logs from node ip-172-31-81-0 pod pod-subpath-test-configmap-dv69 container test-container-subpath-configmap-dv69: <nil>
  STEP: delete the pod @ 04/20/24 13:50:29.931
  STEP: Deleting pod pod-subpath-test-configmap-dv69 @ 04/20/24 13:50:29.946
  Apr 20 13:50:29.946: INFO: Deleting pod "pod-subpath-test-configmap-dv69" in namespace "subpath-3516"
  Apr 20 13:50:29.950: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3516" for this suite. @ 04/20/24 13:50:29.956
• [24.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 04/20/24 13:50:29.963
  Apr 20 13:50:29.963: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 13:50:29.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:50:29.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:50:29.982
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 04/20/24 13:50:29.985
  E0420 13:50:30.370728      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:31.370937      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:32.371087      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:33.372098      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 13:50:34.009
  Apr 20 13:50:34.014: INFO: Trying to get logs from node ip-172-31-81-0 pod pod-a336cecb-a1be-423e-9ac5-bacdbe732315 container test-container: <nil>
  STEP: delete the pod @ 04/20/24 13:50:34.022
  Apr 20 13:50:34.041: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2078" for this suite. @ 04/20/24 13:50:34.045
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 04/20/24 13:50:34.052
  Apr 20 13:50:34.052: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename watch @ 04/20/24 13:50:34.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:50:34.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:50:34.069
  STEP: creating a watch on configmaps with a certain label @ 04/20/24 13:50:34.072
  STEP: creating a new configmap @ 04/20/24 13:50:34.075
  STEP: modifying the configmap once @ 04/20/24 13:50:34.08
  STEP: changing the label value of the configmap @ 04/20/24 13:50:34.09
  STEP: Expecting to observe a delete notification for the watched object @ 04/20/24 13:50:34.098
  Apr 20 13:50:34.098: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3194  e8706e15-9c24-4ea9-8fff-bb8d9c71856a 45384 0 2024-04-20 13:50:34 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-20 13:50:34 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 13:50:34.098: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3194  e8706e15-9c24-4ea9-8fff-bb8d9c71856a 45385 0 2024-04-20 13:50:34 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-20 13:50:34 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 13:50:34.098: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3194  e8706e15-9c24-4ea9-8fff-bb8d9c71856a 45386 0 2024-04-20 13:50:34 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-20 13:50:34 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 04/20/24 13:50:34.098
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 04/20/24 13:50:34.106
  E0420 13:50:34.372993      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:35.373082      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:36.374122      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:37.374490      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:38.374684      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:39.374859      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:40.375120      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:41.375216      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:42.375509      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:43.376613      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 04/20/24 13:50:44.107
  STEP: modifying the configmap a third time @ 04/20/24 13:50:44.117
  STEP: deleting the configmap @ 04/20/24 13:50:44.125
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 04/20/24 13:50:44.131
  Apr 20 13:50:44.131: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3194  e8706e15-9c24-4ea9-8fff-bb8d9c71856a 45429 0 2024-04-20 13:50:34 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-20 13:50:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 13:50:44.132: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3194  e8706e15-9c24-4ea9-8fff-bb8d9c71856a 45430 0 2024-04-20 13:50:34 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-20 13:50:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 13:50:44.132: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3194  e8706e15-9c24-4ea9-8fff-bb8d9c71856a 45431 0 2024-04-20 13:50:34 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-20 13:50:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 13:50:44.132: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3194" for this suite. @ 04/20/24 13:50:44.136
• [10.091 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:334
  STEP: Creating a kubernetes client @ 04/20/24 13:50:44.143
  Apr 20 13:50:44.143: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename sched-pred @ 04/20/24 13:50:44.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:50:44.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:50:44.161
  Apr 20 13:50:44.164: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Apr 20 13:50:44.171: INFO: Waiting for terminating namespaces to be deleted...
  Apr 20 13:50:44.175: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-27-26 before test
  Apr 20 13:50:44.180: INFO: nginx-ingress-controller-kubernetes-worker-q29js from ingress-nginx-kubernetes-worker started at 2024-04-20 11:58:09 +0000 UTC (1 container statuses recorded)
  Apr 20 13:50:44.180: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 1
  Apr 20 13:50:44.180: INFO: calico-node-sm5jg from kube-system started at 2024-04-20 12:12:05 +0000 UTC (1 container statuses recorded)
  Apr 20 13:50:44.180: INFO: 	Container calico-node ready: true, restart count 0
  Apr 20 13:50:44.180: INFO: coredns-bddfd76d7-cmhz4 from kube-system started at 2024-04-20 11:58:09 +0000 UTC (1 container statuses recorded)
  Apr 20 13:50:44.180: INFO: 	Container coredns ready: true, restart count 0
  Apr 20 13:50:44.180: INFO: kube-state-metrics-6f48cdd76-xv4p5 from kube-system started at 2024-04-20 11:58:09 +0000 UTC (1 container statuses recorded)
  Apr 20 13:50:44.180: INFO: 	Container kube-state-metrics ready: true, restart count 2
  Apr 20 13:50:44.180: INFO: metrics-server-v0.6.3-69d7fbfdf8-rs74s from kube-system started at 2024-04-20 11:58:09 +0000 UTC (2 container statuses recorded)
  Apr 20 13:50:44.180: INFO: 	Container metrics-server ready: true, restart count 2
  Apr 20 13:50:44.180: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Apr 20 13:50:44.180: INFO: dashboard-metrics-scraper-5dd7cb5fc-fxbxd from kubernetes-dashboard started at 2024-04-20 11:58:09 +0000 UTC (1 container statuses recorded)
  Apr 20 13:50:44.180: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Apr 20 13:50:44.180: INFO: kubernetes-dashboard-7b899cb9d9-szd7n from kubernetes-dashboard started at 2024-04-20 11:58:09 +0000 UTC (1 container statuses recorded)
  Apr 20 13:50:44.180: INFO: 	Container kubernetes-dashboard ready: true, restart count 3
  Apr 20 13:50:44.180: INFO: sonobuoy-systemd-logs-daemon-set-6cab97477919492d-zm76r from sonobuoy started at 2024-04-20 12:15:05 +0000 UTC (2 container statuses recorded)
  Apr 20 13:50:44.180: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 13:50:44.180: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 20 13:50:44.180: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-41-198 before test
  Apr 20 13:50:44.186: INFO: nginx-ingress-controller-kubernetes-worker-xxlfw from ingress-nginx-kubernetes-worker started at 2024-04-20 13:29:07 +0000 UTC (1 container statuses recorded)
  Apr 20 13:50:44.186: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Apr 20 13:50:44.186: INFO: calico-node-w7qjq from kube-system started at 2024-04-20 12:11:55 +0000 UTC (1 container statuses recorded)
  Apr 20 13:50:44.186: INFO: 	Container calico-node ready: true, restart count 0
  Apr 20 13:50:44.186: INFO: sonobuoy from sonobuoy started at 2024-04-20 12:15:03 +0000 UTC (1 container statuses recorded)
  Apr 20 13:50:44.186: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Apr 20 13:50:44.186: INFO: sonobuoy-systemd-logs-daemon-set-6cab97477919492d-6r9kd from sonobuoy started at 2024-04-20 12:15:05 +0000 UTC (2 container statuses recorded)
  Apr 20 13:50:44.186: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 13:50:44.186: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 20 13:50:44.186: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-81-0 before test
  Apr 20 13:50:44.192: INFO: nginx-ingress-controller-kubernetes-worker-7l4n2 from ingress-nginx-kubernetes-worker started at 2024-04-20 12:11:39 +0000 UTC (1 container statuses recorded)
  Apr 20 13:50:44.192: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Apr 20 13:50:44.192: INFO: calico-node-r8pwr from kube-system started at 2024-04-20 12:11:13 +0000 UTC (1 container statuses recorded)
  Apr 20 13:50:44.192: INFO: 	Container calico-node ready: true, restart count 0
  Apr 20 13:50:44.192: INFO: sonobuoy-e2e-job-b1821af8da4b44dc from sonobuoy started at 2024-04-20 12:15:05 +0000 UTC (2 container statuses recorded)
  Apr 20 13:50:44.192: INFO: 	Container e2e ready: true, restart count 0
  Apr 20 13:50:44.192: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 13:50:44.192: INFO: sonobuoy-systemd-logs-daemon-set-6cab97477919492d-qpl6s from sonobuoy started at 2024-04-20 12:15:05 +0000 UTC (2 container statuses recorded)
  Apr 20 13:50:44.192: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 13:50:44.192: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-27-26 @ 04/20/24 13:50:44.207
  STEP: verifying the node has the label node ip-172-31-41-198 @ 04/20/24 13:50:44.219
  STEP: verifying the node has the label node ip-172-31-81-0 @ 04/20/24 13:50:44.232
  Apr 20 13:50:44.243: INFO: Pod nginx-ingress-controller-kubernetes-worker-7l4n2 requesting resource cpu=0m on Node ip-172-31-81-0
  Apr 20 13:50:44.243: INFO: Pod nginx-ingress-controller-kubernetes-worker-q29js requesting resource cpu=0m on Node ip-172-31-27-26
  Apr 20 13:50:44.243: INFO: Pod nginx-ingress-controller-kubernetes-worker-xxlfw requesting resource cpu=0m on Node ip-172-31-41-198
  Apr 20 13:50:44.243: INFO: Pod calico-node-r8pwr requesting resource cpu=250m on Node ip-172-31-81-0
  Apr 20 13:50:44.243: INFO: Pod calico-node-sm5jg requesting resource cpu=250m on Node ip-172-31-27-26
  Apr 20 13:50:44.243: INFO: Pod calico-node-w7qjq requesting resource cpu=250m on Node ip-172-31-41-198
  Apr 20 13:50:44.243: INFO: Pod coredns-bddfd76d7-cmhz4 requesting resource cpu=100m on Node ip-172-31-27-26
  Apr 20 13:50:44.243: INFO: Pod kube-state-metrics-6f48cdd76-xv4p5 requesting resource cpu=0m on Node ip-172-31-27-26
  Apr 20 13:50:44.243: INFO: Pod metrics-server-v0.6.3-69d7fbfdf8-rs74s requesting resource cpu=5m on Node ip-172-31-27-26
  Apr 20 13:50:44.243: INFO: Pod dashboard-metrics-scraper-5dd7cb5fc-fxbxd requesting resource cpu=0m on Node ip-172-31-27-26
  Apr 20 13:50:44.243: INFO: Pod kubernetes-dashboard-7b899cb9d9-szd7n requesting resource cpu=0m on Node ip-172-31-27-26
  Apr 20 13:50:44.243: INFO: Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-41-198
  Apr 20 13:50:44.243: INFO: Pod sonobuoy-e2e-job-b1821af8da4b44dc requesting resource cpu=0m on Node ip-172-31-81-0
  Apr 20 13:50:44.243: INFO: Pod sonobuoy-systemd-logs-daemon-set-6cab97477919492d-6r9kd requesting resource cpu=0m on Node ip-172-31-41-198
  Apr 20 13:50:44.243: INFO: Pod sonobuoy-systemd-logs-daemon-set-6cab97477919492d-qpl6s requesting resource cpu=0m on Node ip-172-31-81-0
  Apr 20 13:50:44.243: INFO: Pod sonobuoy-systemd-logs-daemon-set-6cab97477919492d-zm76r requesting resource cpu=0m on Node ip-172-31-27-26
  STEP: Starting Pods to consume most of the cluster CPU. @ 04/20/24 13:50:44.243
  Apr 20 13:50:44.243: INFO: Creating a pod which consumes cpu=1151m on Node ip-172-31-27-26
  Apr 20 13:50:44.251: INFO: Creating a pod which consumes cpu=1225m on Node ip-172-31-41-198
  Apr 20 13:50:44.259: INFO: Creating a pod which consumes cpu=1225m on Node ip-172-31-81-0
  E0420 13:50:44.377663      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:45.377863      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 04/20/24 13:50:46.287
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-02870b6d-b138-4a34-9bed-4fbb7cf0ec66.17c80142b786c062], Reason = [Scheduled], Message = [Successfully assigned sched-pred-9098/filler-pod-02870b6d-b138-4a34-9bed-4fbb7cf0ec66 to ip-172-31-81-0] @ 04/20/24 13:50:46.29
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-02870b6d-b138-4a34-9bed-4fbb7cf0ec66.17c80142d5de1b67], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 04/20/24 13:50:46.29
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-02870b6d-b138-4a34-9bed-4fbb7cf0ec66.17c80142d7157e3e], Reason = [Created], Message = [Created container filler-pod-02870b6d-b138-4a34-9bed-4fbb7cf0ec66] @ 04/20/24 13:50:46.29
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-02870b6d-b138-4a34-9bed-4fbb7cf0ec66.17c80142da7d8de4], Reason = [Started], Message = [Started container filler-pod-02870b6d-b138-4a34-9bed-4fbb7cf0ec66] @ 04/20/24 13:50:46.29
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-05681f78-a2ea-4289-8b4c-88ac49d74f65.17c80142b7140549], Reason = [Scheduled], Message = [Successfully assigned sched-pred-9098/filler-pod-05681f78-a2ea-4289-8b4c-88ac49d74f65 to ip-172-31-41-198] @ 04/20/24 13:50:46.291
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-05681f78-a2ea-4289-8b4c-88ac49d74f65.17c80142d5928fa9], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 04/20/24 13:50:46.291
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-05681f78-a2ea-4289-8b4c-88ac49d74f65.17c80142d6817d1e], Reason = [Created], Message = [Created container filler-pod-05681f78-a2ea-4289-8b4c-88ac49d74f65] @ 04/20/24 13:50:46.291
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-05681f78-a2ea-4289-8b4c-88ac49d74f65.17c80142d935b74d], Reason = [Started], Message = [Started container filler-pod-05681f78-a2ea-4289-8b4c-88ac49d74f65] @ 04/20/24 13:50:46.291
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-210c9a1c-20c3-4e08-92d8-d471a1415e23.17c80142b68a0eb3], Reason = [Scheduled], Message = [Successfully assigned sched-pred-9098/filler-pod-210c9a1c-20c3-4e08-92d8-d471a1415e23 to ip-172-31-27-26] @ 04/20/24 13:50:46.291
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-210c9a1c-20c3-4e08-92d8-d471a1415e23.17c80142d52c1d37], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 04/20/24 13:50:46.291
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-210c9a1c-20c3-4e08-92d8-d471a1415e23.17c80142d669b1a6], Reason = [Created], Message = [Created container filler-pod-210c9a1c-20c3-4e08-92d8-d471a1415e23] @ 04/20/24 13:50:46.291
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-210c9a1c-20c3-4e08-92d8-d471a1415e23.17c80142d95564dc], Reason = [Started], Message = [Started container filler-pod-210c9a1c-20c3-4e08-92d8-d471a1415e23] @ 04/20/24 13:50:46.291
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17c801433038720b], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.] @ 04/20/24 13:50:46.303
  E0420 13:50:46.378144      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label node off the node ip-172-31-41-198 @ 04/20/24 13:50:47.303
  STEP: verifying the node doesn't have the label node @ 04/20/24 13:50:47.316
  STEP: removing the label node off the node ip-172-31-81-0 @ 04/20/24 13:50:47.319
  STEP: verifying the node doesn't have the label node @ 04/20/24 13:50:47.334
  STEP: removing the label node off the node ip-172-31-27-26 @ 04/20/24 13:50:47.338
  STEP: verifying the node doesn't have the label node @ 04/20/24 13:50:47.35
  Apr 20 13:50:47.354: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-9098" for this suite. @ 04/20/24 13:50:47.358
• [3.222 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:530
  STEP: Creating a kubernetes client @ 04/20/24 13:50:47.365
  Apr 20 13:50:47.365: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename security-context-test @ 04/20/24 13:50:47.366
  E0420 13:50:47.378406      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:50:47.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:50:47.384
  E0420 13:50:48.378578      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:49.378904      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:50.378965      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:51.379593      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:50:51.428: INFO: Got logs for pod "busybox-privileged-false-3d994b86-9285-4715-a705-a7f86bc5f0a6": "ip: RTNETLINK answers: Operation not permitted\n"
  Apr 20 13:50:51.428: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6825" for this suite. @ 04/20/24 13:50:51.432
• [4.074 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 04/20/24 13:50:51.44
  Apr 20 13:50:51.440: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename runtimeclass @ 04/20/24 13:50:51.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:50:51.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:50:51.462
  Apr 20 13:50:51.493: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1016" for this suite. @ 04/20/24 13:50:51.497
• [0.066 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 04/20/24 13:50:51.506
  Apr 20 13:50:51.506: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename certificates @ 04/20/24 13:50:51.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:50:51.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:50:51.526
  STEP: getting /apis @ 04/20/24 13:50:51.779
  STEP: getting /apis/certificates.k8s.io @ 04/20/24 13:50:51.783
  STEP: getting /apis/certificates.k8s.io/v1 @ 04/20/24 13:50:51.784
  STEP: creating @ 04/20/24 13:50:51.785
  STEP: getting @ 04/20/24 13:50:51.803
  STEP: listing @ 04/20/24 13:50:51.806
  STEP: watching @ 04/20/24 13:50:51.81
  Apr 20 13:50:51.810: INFO: starting watch
  STEP: patching @ 04/20/24 13:50:51.811
  STEP: updating @ 04/20/24 13:50:51.816
  Apr 20 13:50:51.823: INFO: waiting for watch events with expected annotations
  Apr 20 13:50:51.823: INFO: saw patched and updated annotations
  STEP: getting /approval @ 04/20/24 13:50:51.823
  STEP: patching /approval @ 04/20/24 13:50:51.826
  STEP: updating /approval @ 04/20/24 13:50:51.833
  STEP: getting /status @ 04/20/24 13:50:51.838
  STEP: patching /status @ 04/20/24 13:50:51.842
  STEP: updating /status @ 04/20/24 13:50:51.849
  STEP: deleting @ 04/20/24 13:50:51.857
  STEP: deleting a collection @ 04/20/24 13:50:51.87
  Apr 20 13:50:51.887: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-208" for this suite. @ 04/20/24 13:50:51.891
• [0.392 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 04/20/24 13:50:51.898
  Apr 20 13:50:51.898: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename secrets @ 04/20/24 13:50:51.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:50:51.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:50:51.916
  STEP: Creating secret with name secret-test-44659966-6259-4234-a5a1-772090dcf4b5 @ 04/20/24 13:50:51.919
  STEP: Creating a pod to test consume secrets @ 04/20/24 13:50:51.924
  E0420 13:50:52.384404      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:53.381859      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:54.382773      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:55.382883      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 13:50:55.951
  Apr 20 13:50:55.955: INFO: Trying to get logs from node ip-172-31-81-0 pod pod-secrets-ea2a7eab-aaed-4995-8e01-4bbd402f1064 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 13:50:55.962
  Apr 20 13:50:55.983: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5795" for this suite. @ 04/20/24 13:50:55.988
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 04/20/24 13:50:55.996
  Apr 20 13:50:55.996: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 13:50:55.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:50:56.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:50:56.017
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 04/20/24 13:50:56.021
  E0420 13:50:56.383569      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:57.383703      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 13:50:58.04
  Apr 20 13:50:58.044: INFO: Trying to get logs from node ip-172-31-41-198 pod pod-05f19d6b-3987-4562-bd09-ca6856feab33 container test-container: <nil>
  STEP: delete the pod @ 04/20/24 13:50:58.051
  Apr 20 13:50:58.070: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2778" for this suite. @ 04/20/24 13:50:58.074
• [2.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 04/20/24 13:50:58.081
  Apr 20 13:50:58.081: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename webhook @ 04/20/24 13:50:58.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:50:58.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:50:58.099
  STEP: Setting up server cert @ 04/20/24 13:50:58.125
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 13:50:58.308
  STEP: Deploying the webhook pod @ 04/20/24 13:50:58.318
  STEP: Wait for the deployment to be ready @ 04/20/24 13:50:58.33
  Apr 20 13:50:58.338: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0420 13:50:58.384600      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:50:59.384731      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 13:51:00.351
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 13:51:00.366
  E0420 13:51:00.385206      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:51:01.367: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  E0420 13:51:01.385251      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Listing all of the created validation webhooks @ 04/20/24 13:51:01.446
  STEP: Creating a configMap that should be mutated @ 04/20/24 13:51:01.456
  STEP: Deleting the collection of validation webhooks @ 04/20/24 13:51:01.476
  STEP: Creating a configMap that should not be mutated @ 04/20/24 13:51:01.532
  Apr 20 13:51:01.591: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2990" for this suite. @ 04/20/24 13:51:01.596
  STEP: Destroying namespace "webhook-markers-14" for this suite. @ 04/20/24 13:51:01.604
• [3.530 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 04/20/24 13:51:01.612
  Apr 20 13:51:01.612: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/20/24 13:51:01.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:51:01.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:51:01.63
  Apr 20 13:51:01.634: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  E0420 13:51:02.385356      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/20/24 13:51:02.927
  Apr 20 13:51:02.927: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=crd-publish-openapi-5890 --namespace=crd-publish-openapi-5890 create -f -'
  E0420 13:51:03.385780      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:04.386678      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:51:04.994: INFO: stderr: ""
  Apr 20 13:51:04.994: INFO: stdout: "e2e-test-crd-publish-openapi-8511-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Apr 20 13:51:04.995: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=crd-publish-openapi-5890 --namespace=crd-publish-openapi-5890 delete e2e-test-crd-publish-openapi-8511-crds test-cr'
  Apr 20 13:51:05.043: INFO: stderr: ""
  Apr 20 13:51:05.043: INFO: stdout: "e2e-test-crd-publish-openapi-8511-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Apr 20 13:51:05.044: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=crd-publish-openapi-5890 --namespace=crd-publish-openapi-5890 apply -f -'
  Apr 20 13:51:05.093: INFO: stderr: ""
  Apr 20 13:51:05.093: INFO: stdout: "e2e-test-crd-publish-openapi-8511-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Apr 20 13:51:05.093: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=crd-publish-openapi-5890 --namespace=crd-publish-openapi-5890 delete e2e-test-crd-publish-openapi-8511-crds test-cr'
  Apr 20 13:51:05.141: INFO: stderr: ""
  Apr 20 13:51:05.141: INFO: stdout: "e2e-test-crd-publish-openapi-8511-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 04/20/24 13:51:05.141
  Apr 20 13:51:05.141: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2965924158 --namespace=crd-publish-openapi-5890 explain e2e-test-crd-publish-openapi-8511-crds'
  Apr 20 13:51:05.190: INFO: stderr: ""
  Apr 20 13:51:05.190: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-8511-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0420 13:51:05.386742      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:06.387409      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:51:06.394: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5890" for this suite. @ 04/20/24 13:51:06.401
• [4.796 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 04/20/24 13:51:06.409
  Apr 20 13:51:06.409: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename projected @ 04/20/24 13:51:06.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:51:06.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:51:06.432
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 13:51:06.435
  E0420 13:51:07.388320      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:08.389261      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:09.389885      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:10.390126      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 13:51:10.457
  Apr 20 13:51:10.461: INFO: Trying to get logs from node ip-172-31-41-198 pod downwardapi-volume-39eef34f-5f79-4977-a8f1-b237969d6e96 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 13:51:10.472
  Apr 20 13:51:10.488: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2623" for this suite. @ 04/20/24 13:51:10.491
• [4.092 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 04/20/24 13:51:10.501
  Apr 20 13:51:10.501: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename chunking @ 04/20/24 13:51:10.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 13:51:10.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 13:51:10.518
  STEP: creating a large number of resources @ 04/20/24 13:51:10.521
  E0420 13:51:11.390479      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:12.391093      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:13.392061      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:14.392630      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:15.393601      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:16.394527      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:17.394661      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:18.394856      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:19.395014      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:20.396046      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:21.397030      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:22.397313      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:23.397595      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:24.398554      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:25.399457      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:26.399465      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:27.399705      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 04/20/24 13:51:28.208
  Apr 20 13:51:28.256: INFO: Retrieved 40/40 results with rv 46341 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 04/20/24 13:51:28.256
  E0420 13:51:28.400185      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:29.400483      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:30.400562      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:31.400665      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:32.401031      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:33.401637      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:34.401727      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:35.401827      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:36.402230      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:37.402398      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:38.402546      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:39.403500      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:40.404559      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:41.404836      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:42.404963      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:43.405031      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:44.405113      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:45.405202      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:46.405287      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:47.405466      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:51:48.261: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 13:51:48.405546      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:49.405668      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:50.406612      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:51.406905      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:52.407418      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:53.407486      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:54.408561      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:55.409433      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:56.410453      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:57.410557      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:58.410734      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:51:59.410845      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:00.410995      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:01.411222      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:02.411475      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:03.411573      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:04.412545      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:05.412722      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:06.412818      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:07.413158      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:52:08.262: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 13:52:08.413586      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:09.413689      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:10.413876      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:11.414534      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:12.414989      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:13.415084      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:14.415215      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:15.415419      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:16.415634      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:17.416563      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:18.416648      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:19.417078      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:20.417162      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:21.417323      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:22.417406      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:23.418014      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:24.418161      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:25.418340      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:26.418564      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:27.418943      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:52:28.262: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 13:52:28.419843      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:29.420565      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:30.420663      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:31.421640      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:32.421747      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:33.421954      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:34.422171      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:35.422350      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:36.422629      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:37.422803      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:38.423001      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:39.423113      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:40.423198      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:41.423663      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:42.424572      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:43.425635      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:44.425760      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:45.426694      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:46.427122      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:47.427334      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:52:48.263: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 13:52:48.428379      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:49.428577      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:50.428643      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:51.429669      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:52.429771      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:53.430256      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:54.430345      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:55.430752      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:56.430794      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:57.430902      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:58.431087      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:52:59.431299      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:00.431490      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:01.431645      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:02.432560      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:03.432812      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:04.433101      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:05.433190      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:06.433397      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:07.433820      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:53:08.262: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 13:53:08.434330      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:09.435365      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:10.435478      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:11.435684      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:12.435796      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:13.435940      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:14.436093      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:15.436173      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:16.436532      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:17.436627      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:18.436732      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:19.436885      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:20.437048      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:21.438003      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:22.438118      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:23.438473      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:24.438659      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:25.438752      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:26.439281      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:27.439472      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:53:28.262: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 13:53:28.440170      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:29.440266      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:30.440633      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:31.441693      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:32.441794      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:33.441956      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:34.442221      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:35.442322      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:36.442728      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:37.442883      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:38.443057      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:39.443132      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:40.443429      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:41.443613      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:42.443712      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:43.444612      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:44.444797      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:45.444985      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:46.445400      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:47.445748      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:53:48.261: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 13:53:48.445891      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:49.446031      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:50.446133      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:51.446659      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:52.446864      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:53.447051      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:54.447224      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:55.447278      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:56.447619      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:57.448685      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:58.448886      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:53:59.449278      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:00.449389      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:01.449760      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:02.450414      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:03.450515      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:04.450629      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:05.450822      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:06.451626      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:07.452547      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:54:08.262: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 13:54:08.453507      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:09.453602      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:10.453929      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:11.454021      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:12.454241      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:13.454436      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:14.454657      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:15.455636      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:16.456162      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:17.456249      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:18.456346      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:19.456528      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:20.456856      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:21.457785      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:22.457973      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:23.458185      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:24.458384      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:25.458571      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:26.458809      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:27.458942      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:54:28.263: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 13:54:28.459045      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:29.459158      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:30.459393      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:31.459644      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:32.460567      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:33.460826      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:34.461019      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:35.461213      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:36.461532      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:37.461646      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:38.461845      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:39.462038      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:40.462501      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:41.462685      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:42.462880      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:43.463066      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:44.463186      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:45.463446      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:46.463657      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:47.464574      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:54:48.262: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 13:54:48.465307      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:49.465415      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:50.465590      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:51.466719      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:52.466894      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:53.467467      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:54.467496      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:55.467568      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:56.467607      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:57.467684      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:58.468550      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:54:59.468739      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:00.468897      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:01.469656      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:02.470003      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:03.470272      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:04.470378      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:05.471320      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:06.471762      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:07.471616      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:55:08.263: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 13:55:08.472536      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:09.472713      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:10.472901      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:11.473115      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:12.473219      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:13.473408      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:14.473559      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:15.473763      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:16.474334      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:17.474411      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:18.475324      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:19.475490      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:20.476590      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:21.477654      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:22.477749      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:23.477900      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:24.478014      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:25.478954      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:26.479672      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:27.480588      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:55:28.262: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 13:55:28.480704      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:29.480829      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:30.480920      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:31.481708      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:32.481962      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:33.482162      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:34.482256      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:35.482470      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:36.482510      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:37.482683      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:38.482880      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:39.483102      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:40.483306      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:41.483669      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:42.483770      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:43.484628      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:44.485613      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:45.486449      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:46.486803      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:47.486871      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:55:48.262: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 13:55:48.487746      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:49.488542      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:50.488707      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:51.489680      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:52.489848      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:53.490020      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:54.490219      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:55.490440      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:56.491261      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:57.491471      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:58.491522      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:55:59.491547      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:00.491560      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:01.491636      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:02.492581      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:03.492678      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:04.493672      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:05.493777      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:06.494309      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:07.494548      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:56:08.262: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 13:56:08.495000      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:09.495109      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:10.495205      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:11.495904      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:12.495996      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:13.497032      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:14.497120      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:15.497229      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:16.497602      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:17.498601      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:18.498780      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:19.499047      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:20.499270      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:21.499547      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:22.499664      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:23.500567      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:24.500770      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:25.500950      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:26.501554      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:27.502460      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:56:28.261: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 13:56:28.502811      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:29.503218      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:30.504224      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:31.504549      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:32.504756      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:33.504837      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:34.505013      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:35.505151      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:36.505478      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:37.505585      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:38.505677      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:39.505793      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:40.506469      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:41.506700      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:42.506789      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:43.506862      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:44.507012      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:45.507129      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:46.507485      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:47.508567      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:56:48.262: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 13:56:48.508845      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:49.509034      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:50.509137      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:51.509687      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:52.509917      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:53.510014      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:54.510119      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:55.510327      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:56.510577      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:57.510686      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:58.510816      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:56:59.511158      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:00.511265      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:01.511707      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:02.512545      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:03.512638      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:04.512735      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:05.512927      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:06.513423      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:07.513333      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:57:08.261: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 13:57:08.514274      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:09.514489      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:10.515374      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:11.515683      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:12.515801      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:13.516580      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:14.517178      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:15.517808      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:16.518472      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:17.518705      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:18.518881      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:19.519057      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:20.519151      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:21.519596      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:22.520555      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:23.520647      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:24.520824      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:25.521009      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:26.521288      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:27.521467      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:57:28.262: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 13:57:28.521701      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:29.521898      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:30.522030      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:31.522683      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:32.522837      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:33.523041      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:34.523157      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:35.523325      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:36.523453      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:37.523568      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:38.524573      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:39.524752      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:40.525244      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:41.525579      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:42.525778      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:43.525958      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:44.526049      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:45.527090      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:46.527337      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:47.527475      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:57:48.261: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 13:57:48.527807      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:49.528560      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:50.528721      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:51.529802      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:52.529919      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:53.530580      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:54.531205      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:55.531309      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:56.531626      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:57.531719      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:58.532589      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:57:59.532755      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:00.533519      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:01.533722      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:02.533823      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:03.534023      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:04.534669      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:05.534808      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:06.534892      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:07.535868      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:58:08.262: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 13:58:08.536544      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:09.536651      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:10.536923      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:11.537033      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:12.537204      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:13.537323      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:14.537481      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:15.538029      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:16.538546      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:17.538725      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:18.539243      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:19.539372      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:20.539544      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:21.539636      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:22.539730      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:23.540546      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:24.540725      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:25.540878      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:26.541266      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:27.541425      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:58:28.262: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 13:58:28.542363      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:29.542540      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:30.542646      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:31.542803      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:32.542916      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:33.543004      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:34.543552      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:35.543660      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:36.544715      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:37.544898      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:38.544993      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:39.545105      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:40.545187      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:41.545280      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:42.545907      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:43.546006      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:44.546126      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:45.546277      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:46.546323      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:47.546420      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:58:48.262: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 13:58:48.547171      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:49.547282      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:50.547489      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:51.547571      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:52.548556      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:53.548647      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:54.548753      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:55.548927      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:56.549304      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:57.549465      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:58.549725      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:58:59.549785      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:00.549971      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:01.550157      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:02.550294      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:03.550495      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:04.550662      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:05.550849      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:06.551191      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:07.551075      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:59:08.262: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 13:59:08.551696      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:09.551791      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:10.552545      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:11.552634      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:12.553610      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:13.553711      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:14.553895      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:15.554088      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:16.554617      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:17.555374      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:18.555479      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:19.555608      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:20.555670      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:21.556735      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:22.557210      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:23.557384      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:24.557604      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:25.558068      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:26.559200      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:27.559294      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:59:28.262: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 13:59:28.559481      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:29.560545      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:30.560716      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:31.561803      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:32.561900      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:33.562839      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:34.563054      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:35.563271      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:36.563588      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:37.564552      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:38.565484      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:39.565587      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:40.565652      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:41.566611      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:42.566711      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:43.566991      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:44.567201      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:45.567432      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:46.567739      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:47.567829      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 13:59:48.262: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 13:59:48.568536      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:49.568729      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:50.568823      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:51.569795      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:52.570004      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:53.570186      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:54.570382      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:55.570480      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:56.570733      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:57.570922      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:58.571193      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 13:59:59.571412      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:00.571481      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:01.571782      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:02.571858      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:03.572553      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:04.572731      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:05.572872      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:06.573317      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:07.573425      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:00:08.262: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 14:00:08.573849      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:09.573945      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:10.574202      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:11.574672      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:12.574857      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:13.575474      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:14.575521      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:15.576544      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:16.576677      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:17.576876      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:18.577089      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:19.577721      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:20.577894      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:21.578868      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:22.578974      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:23.579069      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:24.579762      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:25.579948      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:26.580381      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:27.580571      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:00:28.261: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 14:00:28.580745      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:29.580925      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:30.581113      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:31.581742      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:32.582025      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:33.582259      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:34.582347      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:35.583458      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:36.583796      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:37.584635      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:38.584836      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:39.585547      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:40.585641      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:41.585731      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:42.585811      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:43.586476      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:44.586654      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:45.586735      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:46.587288      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:47.587478      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:00:48.261: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 14:00:48.588113      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:49.588213      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:50.588306      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:51.588508      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:52.588615      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:53.588705      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:54.588796      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:55.588895      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:56.589288      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:57.589446      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:58.589657      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:00:59.589772      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:00.589951      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:01.590783      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:02.590974      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:03.591465      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:04.591596      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:05.592553      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:06.592924      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:07.592946      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:01:08.262: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDYzNDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 14:01:08.593148      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:09.593336      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:10.593649      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:11.594745      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:12.594858      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:13.595311      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:14.595477      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:15.595593      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:16.595683      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:17.596542      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:18.597090      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:19.597205      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:20.597427      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:21.597764      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:22.598041      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:23.598317      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:24.598518      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:25.598755      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:26.599414      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:27.599534      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:01:28.261: INFO: got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  Apr 20 14:01:28.261: INFO: Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 04/20/24 14:01:28.261
  STEP: retrieving all remaining pages @ 04/20/24 14:01:28.265
  Apr 20 14:01:28.269: INFO: Retrieved 40/40 results with rv 47480 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0ODAsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  Apr 20 14:01:28.272: INFO: Retrieved 40/40 results with rv 47480 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0ODAsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  Apr 20 14:01:28.276: INFO: Retrieved 40/40 results with rv 47480 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0ODAsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  Apr 20 14:01:28.279: INFO: Retrieved 40/40 results with rv 47480 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0ODAsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  Apr 20 14:01:28.283: INFO: Retrieved 40/40 results with rv 47480 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0ODAsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  Apr 20 14:01:28.286: INFO: Retrieved 40/40 results with rv 47480 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0ODAsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  Apr 20 14:01:28.290: INFO: Retrieved 40/40 results with rv 47480 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0ODAsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  Apr 20 14:01:28.293: INFO: Retrieved 40/40 results with rv 47480 and continue 
  Apr 20 14:01:28.293: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-644" for this suite. @ 04/20/24 14:01:28.296
• [617.801 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 04/20/24 14:01:28.302
  Apr 20 14:01:28.302: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename namespaces @ 04/20/24 14:01:28.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:01:28.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:01:28.332
  STEP: Creating namespace "e2e-ns-lppfv" @ 04/20/24 14:01:28.334
  Apr 20 14:01:28.349: INFO: Namespace "e2e-ns-lppfv-7281" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-lppfv-7281" @ 04/20/24 14:01:28.349
  Apr 20 14:01:28.356: INFO: Namespace "e2e-ns-lppfv-7281" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-lppfv-7281" @ 04/20/24 14:01:28.356
  Apr 20 14:01:28.363: INFO: Namespace "e2e-ns-lppfv-7281" has []v1.FinalizerName{"kubernetes"}
  Apr 20 14:01:28.363: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9204" for this suite. @ 04/20/24 14:01:28.367
  STEP: Destroying namespace "e2e-ns-lppfv-7281" for this suite. @ 04/20/24 14:01:28.373
• [0.078 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 04/20/24 14:01:28.38
  Apr 20 14:01:28.380: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:01:28.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:01:28.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:01:28.398
  STEP: Creating configMap with name projected-configmap-test-volume-e632d75b-5473-4b70-baa2-0a68c497724c @ 04/20/24 14:01:28.401
  STEP: Creating a pod to test consume configMaps @ 04/20/24 14:01:28.405
  E0420 14:01:28.599641      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:29.599858      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:30.600769      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:31.601813      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:01:32.425
  Apr 20 14:01:32.429: INFO: Trying to get logs from node ip-172-31-41-198 pod pod-projected-configmaps-64b22fed-da39-45e3-97d3-819ca7d50ebd container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 14:01:32.446
  Apr 20 14:01:32.465: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2459" for this suite. @ 04/20/24 14:01:32.468
• [4.095 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 04/20/24 14:01:32.475
  Apr 20 14:01:32.475: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename pod-network-test @ 04/20/24 14:01:32.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:01:32.492
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:01:32.494
  STEP: Performing setup for networking test in namespace pod-network-test-5176 @ 04/20/24 14:01:32.497
  STEP: creating a selector @ 04/20/24 14:01:32.497
  STEP: Creating the service pods in kubernetes @ 04/20/24 14:01:32.497
  Apr 20 14:01:32.497: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0420 14:01:32.602280      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:33.602399      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:34.602919      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:35.603186      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:36.604169      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:37.604591      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:38.605421      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:39.605515      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:40.605729      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:41.605752      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:42.606645      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:43.606756      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:44.607792      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:45.607899      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:46.608067      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:47.608152      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:48.608405      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:49.608526      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:50.609204      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:51.609595      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:52.610008      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:53.610073      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 04/20/24 14:01:54.595
  E0420 14:01:54.610861      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:55.611084      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:56.611440      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:01:56.615: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Apr 20 14:01:56.615: INFO: Breadth first check of 192.168.161.28 on host 172.31.27.26...
  Apr 20 14:01:56.619: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.213.210:9080/dial?request=hostname&protocol=http&host=192.168.161.28&port=8083&tries=1'] Namespace:pod-network-test-5176 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 14:01:56.619: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  Apr 20 14:01:56.619: INFO: ExecWithOptions: Clientset creation
  Apr 20 14:01:56.619: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5176/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.213.210%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.161.28%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 20 14:01:56.679: INFO: Waiting for responses: map[]
  Apr 20 14:01:56.679: INFO: reached 192.168.161.28 after 0/1 tries
  Apr 20 14:01:56.679: INFO: Breadth first check of 192.168.213.209 on host 172.31.41.198...
  Apr 20 14:01:56.683: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.213.210:9080/dial?request=hostname&protocol=http&host=192.168.213.209&port=8083&tries=1'] Namespace:pod-network-test-5176 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 14:01:56.683: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  Apr 20 14:01:56.683: INFO: ExecWithOptions: Clientset creation
  Apr 20 14:01:56.683: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5176/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.213.210%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.213.209%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 20 14:01:56.728: INFO: Waiting for responses: map[]
  Apr 20 14:01:56.728: INFO: reached 192.168.213.209 after 0/1 tries
  Apr 20 14:01:56.728: INFO: Breadth first check of 192.168.144.103 on host 172.31.81.0...
  Apr 20 14:01:56.732: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.213.210:9080/dial?request=hostname&protocol=http&host=192.168.144.103&port=8083&tries=1'] Namespace:pod-network-test-5176 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 14:01:56.732: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  Apr 20 14:01:56.732: INFO: ExecWithOptions: Clientset creation
  Apr 20 14:01:56.732: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5176/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.213.210%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.144.103%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 20 14:01:56.790: INFO: Waiting for responses: map[]
  Apr 20 14:01:56.790: INFO: reached 192.168.144.103 after 0/1 tries
  Apr 20 14:01:56.791: INFO: Going to retry 0 out of 3 pods....
  Apr 20 14:01:56.791: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5176" for this suite. @ 04/20/24 14:01:56.794
• [24.325 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 04/20/24 14:01:56.801
  Apr 20 14:01:56.801: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 14:01:56.802
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:01:56.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:01:56.822
  E0420 14:01:57.611680      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:58.612576      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:01:59.612685      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:00.612769      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:01.613766      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:02.613869      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:03.613987      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:04.614304      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:05.614425      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:06.615412      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:07.615514      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:08.615673      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:09.615722      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:10.615818      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:11.616830      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:12.616943      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:13.617088      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 04/20/24 14:02:13.829
  E0420 14:02:14.617519      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:15.618329      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:16.618941      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:17.619097      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:18.619518      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/20/24 14:02:18.834
  STEP: Ensuring resource quota status is calculated @ 04/20/24 14:02:18.839
  E0420 14:02:19.620435      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:20.620528      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 04/20/24 14:02:20.844
  STEP: Ensuring resource quota status captures configMap creation @ 04/20/24 14:02:20.854
  E0420 14:02:21.620640      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:22.621632      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 04/20/24 14:02:22.859
  STEP: Ensuring resource quota status released usage @ 04/20/24 14:02:22.867
  E0420 14:02:23.622283      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:24.622366      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:02:24.871: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2026" for this suite. @ 04/20/24 14:02:24.874
• [28.081 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 04/20/24 14:02:24.882
  Apr 20 14:02:24.882: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 14:02:24.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:02:24.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:02:24.906
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 14:02:24.908
  E0420 14:02:25.622483      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:26.622658      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:27.622996      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:28.623205      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:02:28.933
  Apr 20 14:02:28.936: INFO: Trying to get logs from node ip-172-31-41-198 pod downwardapi-volume-92e086df-b426-49a1-b02c-654a17391cb3 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 14:02:28.942
  Apr 20 14:02:28.958: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2963" for this suite. @ 04/20/24 14:02:28.961
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 04/20/24 14:02:28.969
  Apr 20 14:02:28.969: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename secrets @ 04/20/24 14:02:28.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:02:28.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:02:28.987
  STEP: Creating secret with name secret-test-map-1963fa81-ba87-4467-8f87-7f6aa8aff81c @ 04/20/24 14:02:28.99
  STEP: Creating a pod to test consume secrets @ 04/20/24 14:02:28.995
  E0420 14:02:29.623247      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:30.623500      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:31.624593      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:32.624661      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:02:33.014
  Apr 20 14:02:33.017: INFO: Trying to get logs from node ip-172-31-41-198 pod pod-secrets-985f5824-01f6-4203-9c70-59be02e76e12 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 14:02:33.024
  Apr 20 14:02:33.040: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6136" for this suite. @ 04/20/24 14:02:33.043
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 04/20/24 14:02:33.054
  Apr 20 14:02:33.054: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename emptydir-wrapper @ 04/20/24 14:02:33.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:02:33.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:02:33.075
  STEP: Creating 50 configmaps @ 04/20/24 14:02:33.078
  STEP: Creating RC which spawns configmap-volume pods @ 04/20/24 14:02:33.31
  Apr 20 14:02:33.438: INFO: Pod name wrapped-volume-race-af59d547-a764-4ee2-9be9-71928ec0f379: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/20/24 14:02:33.438
  E0420 14:02:33.624772      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:34.624872      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 04/20/24 14:02:35.483
  Apr 20 14:02:35.501: INFO: Pod name wrapped-volume-race-9ce46578-c376-41b2-8e19-35e508e413bc: Found 0 pods out of 5
  E0420 14:02:35.625510      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:36.625579      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:37.625686      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:38.625795      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:39.625859      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:02:40.508: INFO: Pod name wrapped-volume-race-9ce46578-c376-41b2-8e19-35e508e413bc: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/20/24 14:02:40.508
  STEP: Creating RC which spawns configmap-volume pods @ 04/20/24 14:02:40.528
  Apr 20 14:02:40.541: INFO: Pod name wrapped-volume-race-44550456-6c4b-4f1b-86a6-2649a525bd94: Found 0 pods out of 5
  E0420 14:02:40.626280      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:41.626664      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:42.626855      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:43.627084      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:44.627173      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:02:45.548: INFO: Pod name wrapped-volume-race-44550456-6c4b-4f1b-86a6-2649a525bd94: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/20/24 14:02:45.548
  STEP: deleting ReplicationController wrapped-volume-race-44550456-6c4b-4f1b-86a6-2649a525bd94 in namespace emptydir-wrapper-3102, will wait for the garbage collector to delete the pods @ 04/20/24 14:02:45.563
  Apr 20 14:02:45.624: INFO: Deleting ReplicationController wrapped-volume-race-44550456-6c4b-4f1b-86a6-2649a525bd94 took: 6.75187ms
  E0420 14:02:45.627343      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:02:45.724: INFO: Terminating ReplicationController wrapped-volume-race-44550456-6c4b-4f1b-86a6-2649a525bd94 pods took: 100.708596ms
  E0420 14:02:46.627430      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:47.628477      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-9ce46578-c376-41b2-8e19-35e508e413bc in namespace emptydir-wrapper-3102, will wait for the garbage collector to delete the pods @ 04/20/24 14:02:47.725
  Apr 20 14:02:47.788: INFO: Deleting ReplicationController wrapped-volume-race-9ce46578-c376-41b2-8e19-35e508e413bc took: 8.34821ms
  Apr 20 14:02:47.889: INFO: Terminating ReplicationController wrapped-volume-race-9ce46578-c376-41b2-8e19-35e508e413bc pods took: 100.446254ms
  E0420 14:02:48.629146      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-af59d547-a764-4ee2-9be9-71928ec0f379 in namespace emptydir-wrapper-3102, will wait for the garbage collector to delete the pods @ 04/20/24 14:02:49.589
  E0420 14:02:49.629969      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:02:49.651: INFO: Deleting ReplicationController wrapped-volume-race-af59d547-a764-4ee2-9be9-71928ec0f379 took: 6.295911ms
  Apr 20 14:02:49.753: INFO: Terminating ReplicationController wrapped-volume-race-af59d547-a764-4ee2-9be9-71928ec0f379 pods took: 101.795714ms
  E0420 14:02:50.630754      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 04/20/24 14:02:50.854
  Apr 20 14:02:51.115: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-3102" for this suite. @ 04/20/24 14:02:51.118
• [18.070 seconds]
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 04/20/24 14:02:51.125
  Apr 20 14:02:51.125: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename events @ 04/20/24 14:02:51.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:02:51.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:02:51.147
  STEP: creating a test event @ 04/20/24 14:02:51.149
  STEP: listing all events in all namespaces @ 04/20/24 14:02:51.153
  STEP: patching the test event @ 04/20/24 14:02:51.157
  STEP: fetching the test event @ 04/20/24 14:02:51.163
  STEP: updating the test event @ 04/20/24 14:02:51.166
  STEP: getting the test event @ 04/20/24 14:02:51.174
  STEP: deleting the test event @ 04/20/24 14:02:51.177
  STEP: listing all events in all namespaces @ 04/20/24 14:02:51.183
  Apr 20 14:02:51.187: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7269" for this suite. @ 04/20/24 14:02:51.191
• [0.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 04/20/24 14:02:51.196
  Apr 20 14:02:51.196: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename cronjob @ 04/20/24 14:02:51.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:02:51.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:02:51.218
  STEP: Creating a ReplaceConcurrent cronjob @ 04/20/24 14:02:51.22
  STEP: Ensuring a job is scheduled @ 04/20/24 14:02:51.225
  E0420 14:02:51.630924      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:52.631133      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:53.631696      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:54.632581      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:55.632683      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:56.632784      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:57.633635      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:58.633880      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:02:59.634737      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:00.634929      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 04/20/24 14:03:01.229
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 04/20/24 14:03:01.233
  STEP: Ensuring the job is replaced with a new one @ 04/20/24 14:03:01.236
  E0420 14:03:01.635900      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:02.636003      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:03.636565      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:04.636685      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:05.636911      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:06.637314      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:07.637533      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:08.638125      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:09.638595      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:10.638763      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:11.638827      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:12.639004      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:13.639643      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:14.639745      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:15.640187      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:16.640806      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:17.641698      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:18.641867      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:19.641897      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:20.642262      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:21.642693      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:22.642822      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:23.643703      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:24.643796      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:25.644178      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:26.644588      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:27.645241      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:28.645439      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:29.645879      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:30.645984      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:31.646592      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:32.646841      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:33.647588      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:34.647706      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:35.648051      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:36.648540      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:37.649585      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:38.649945      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:39.650292      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:40.650457      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:41.650977      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:42.651070      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:43.651486      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:44.651520      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:45.651552      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:46.651646      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:47.651963      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:48.652062      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:49.652148      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:50.653129      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:51.653346      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:52.653942      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:53.654346      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:54.654874      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:55.655749      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:56.656634      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:57.657115      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:58.657278      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:03:59.657853      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:04:00.658023      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 04/20/24 14:04:01.24
  Apr 20 14:04:01.247: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1482" for this suite. @ 04/20/24 14:04:01.25
• [70.061 seconds]
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 04/20/24 14:04:01.257
  Apr 20 14:04:01.257: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename csi-storageclass @ 04/20/24 14:04:01.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:04:01.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:04:01.277
  STEP: Creating a StorageClass @ 04/20/24 14:04:01.28
  STEP: Get StorageClass "e2e-dww8m" @ 04/20/24 14:04:01.285
  STEP: Patching the StorageClass "e2e-dww8m" @ 04/20/24 14:04:01.288
  STEP: Delete StorageClass "e2e-dww8m" @ 04/20/24 14:04:01.293
  STEP: Confirm deletion of StorageClass "e2e-dww8m" @ 04/20/24 14:04:01.3
  STEP: Create a replacement StorageClass @ 04/20/24 14:04:01.303
  STEP: Updating StorageClass "e2e-v2-72j45" @ 04/20/24 14:04:01.307
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-72j45=updated" @ 04/20/24 14:04:01.314
  STEP: Deleting StorageClass "e2e-v2-72j45" via DeleteCollection @ 04/20/24 14:04:01.316
  STEP: Confirm deletion of StorageClass "e2e-v2-72j45" @ 04/20/24 14:04:01.324
  Apr 20 14:04:01.327: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-361" for this suite. @ 04/20/24 14:04:01.33
• [0.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 04/20/24 14:04:01.336
  Apr 20 14:04:01.336: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 14:04:01.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:04:01.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:04:01.359
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 14:04:01.362
  E0420 14:04:01.658997      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:04:02.659018      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:04:03.659116      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:04:04.659223      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:04:05.381
  Apr 20 14:04:05.385: INFO: Trying to get logs from node ip-172-31-81-0 pod downwardapi-volume-54095229-a36c-48ab-bacb-b744a100649b container client-container: <nil>
  STEP: delete the pod @ 04/20/24 14:04:05.4
  Apr 20 14:04:05.416: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1361" for this suite. @ 04/20/24 14:04:05.421
• [4.092 seconds]
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:627
  STEP: Creating a kubernetes client @ 04/20/24 14:04:05.428
  Apr 20 14:04:05.428: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename job @ 04/20/24 14:04:05.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:04:05.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:04:05.454
  STEP: Creating a job @ 04/20/24 14:04:05.456
  STEP: Ensuring active pods == parallelism @ 04/20/24 14:04:05.461
  E0420 14:04:05.660223      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:04:06.660540      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete a job @ 04/20/24 14:04:07.465
  STEP: deleting Job.batch foo in namespace job-4240, will wait for the garbage collector to delete the pods @ 04/20/24 14:04:07.465
  Apr 20 14:04:07.529: INFO: Deleting Job.batch foo took: 9.624523ms
  Apr 20 14:04:07.629: INFO: Terminating Job.batch foo pods took: 100.501689ms
  E0420 14:04:07.660971      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 04/20/24 14:04:08.63
  Apr 20 14:04:08.634: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4240" for this suite. @ 04/20/24 14:04:08.638
• [3.216 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:558
  STEP: Creating a kubernetes client @ 04/20/24 14:04:08.644
  Apr 20 14:04:08.644: INFO: >>> kubeConfig: /tmp/kubeconfig-2965924158
  STEP: Building a namespace api object, basename ingress @ 04/20/24 14:04:08.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:04:08.66
  E0420 14:04:08.660928      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:04:08.663
  STEP: getting /apis @ 04/20/24 14:04:08.665
  STEP: getting /apis/networking.k8s.io @ 04/20/24 14:04:08.668
  STEP: getting /apis/networking.k8s.iov1 @ 04/20/24 14:04:08.669
  STEP: creating @ 04/20/24 14:04:08.67
  STEP: getting @ 04/20/24 14:04:08.689
  STEP: listing @ 04/20/24 14:04:08.692
  STEP: watching @ 04/20/24 14:04:08.697
  Apr 20 14:04:08.697: INFO: starting watch
  STEP: cluster-wide listing @ 04/20/24 14:04:08.698
  STEP: cluster-wide watching @ 04/20/24 14:04:08.701
  Apr 20 14:04:08.701: INFO: starting watch
  STEP: patching @ 04/20/24 14:04:08.702
  STEP: updating @ 04/20/24 14:04:08.708
  Apr 20 14:04:08.718: INFO: waiting for watch events with expected annotations
  Apr 20 14:04:08.719: INFO: saw patched and updated annotations
  STEP: patching /status @ 04/20/24 14:04:08.719
  STEP: updating /status @ 04/20/24 14:04:08.724
  STEP: get /status @ 04/20/24 14:04:08.735
  STEP: deleting @ 04/20/24 14:04:08.739
  STEP: deleting a collection @ 04/20/24 14:04:08.759
  Apr 20 14:04:08.774: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-6518" for this suite. @ 04/20/24 14:04:08.779
• [0.142 seconds]
------------------------------
SSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:88
  Apr 20 14:04:08.787: INFO: Running AfterSuite actions on node 1
  Apr 20 14:04:08.787: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:621
[ReportAfterSuite] PASSED [0.040 seconds]
------------------------------

Ran 388 of 7407 Specs in 6532.184 seconds
SUCCESS! -- 388 Passed | 0 Failed | 0 Pending | 7019 Skipped
PASS

Ginkgo ran 1 suite in 1h48m52.927056948s
Test Suite Passed
